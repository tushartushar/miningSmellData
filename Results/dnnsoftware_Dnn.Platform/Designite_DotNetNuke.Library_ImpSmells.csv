Implementation smell,Namespace,Class,File,Method,Description
Long Method,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,BuildCrossTabDataSet,The method has 125 lines of code.
Long Method,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,LocalizeModuleInternal,The method has 111 lines of code.
Long Method,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,UpdateModule,The method has 156 lines of code.
Long Method,DotNetNuke.Entities.Modules,ModuleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleInfo.cs,GetProperty,The method has 307 lines of code.
Long Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortalInternal,The method has 239 lines of code.
Long Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,EnsureRequiredEventLogTypesExist,The method has 120 lines of code.
Long Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParsePortalSettings,The method has 126 lines of code.
Long Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseTemplateInternal,The method has 133 lines of code.
Long Method,DotNetNuke.Entities.Portals,PortalSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettings.cs,GetProperty,The method has 205 lines of code.
Long Method,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUserSettings,The method has 175 lines of code.
Long Method,DotNetNuke.Entities.Users,UserInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserInfo.cs,GetProperty,The method has 107 lines of code.
Long Method,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,DeserializeTab,The method has 128 lines of code.
Long Method,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,SerializeTab,The method has 226 lines of code.
Long Method,DotNetNuke.Entities.Tabs,TabInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabInfo.cs,GetProperty,The method has 158 lines of code.
Long Method,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyAlias,The method has 131 lines of code.
Long Method,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyQueryString,The method has 145 lines of code.
Long Method,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The method has 335 lines of code.
Long Method,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The method has 549 lines of code.
Long Method,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,Handle404OrException,The method has 418 lines of code.
Long Method,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForTabExternalForwardOrRedirect,The method has 184 lines of code.
Long Method,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IdentifyPortalAlias,The method has 281 lines of code.
Long Method,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The method has 314 lines of code.
Long Method,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,The method has 104 lines of code.
Long Method,DotNetNuke.Entities.Urls,ExtensionUrlProviderController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProviderController.cs,TransformFriendlyUrlPath,The method has 135 lines of code.
Long Method,DotNetNuke.Entities.Urls,RedirectController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectController.cs,CheckForParameterRedirect,The method has 263 lines of code.
Long Method,DotNetNuke.Entities.Urls,RedirectTokens,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectTokens.cs,DetermineRedirectReasonAndAction,The method has 112 lines of code.
Long Method,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,CheckIfPortalAlias,The method has 179 lines of code.
Long Method,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,GetTabFromDictionary,The method has 360 lines of code.
Long Method,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,RewriteParameters,The method has 161 lines of code.
Long Method,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,RewriteParameters,The method has 117 lines of code.
Long Method,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddCustomRedirectsToDictionary,The method has 205 lines of code.
Long Method,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddTabToTabDict,The method has 296 lines of code.
Long Method,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddToTabDict,The method has 144 lines of code.
Long Method,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,BuildTabDictionary,The method has 250 lines of code.
Long Method,DotNetNuke.Entities.Urls,TabPathHelper,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabPathController.cs,GetTabPath,The method has 127 lines of code.
Long Method,DotNetNuke.Framework,PageBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\PageBase.cs,ProcessControl,The method has 117 lines of code.
Long Method,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,UpdateUserRole,The method has 107 lines of code.
Long Method,DotNetNuke.Security.Roles,RoleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleInfo.cs,ReadXml,The method has 133 lines of code.
Long Method,DotNetNuke.Services.Exceptions,BasePortalException,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\BasePortalException.cs,InitializePrivateVariables,The method has 134 lines of code.
Long Method,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,AddFile,The method has 164 lines of code.
Long Method,DotNetNuke.Services.FileSystem,FileServerHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileServerHandler.cs,ProcessRequest,The method has 185 lines of code.
Long Method,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The method has 290 lines of code.
Long Method,DotNetNuke.Services.GeneratedImage,ImageHandlerInternal,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageHandlerInternal.cs,HandleImageRequest,The method has 176 lines of code.
Long Method,DotNetNuke.Services.Installer.Installers,PackageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\PackageInstaller.cs,ReadManifest,The method has 182 lines of code.
Long Method,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,ParsePackage,The method has 129 lines of code.
Long Method,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The method has 117 lines of code.
Long Method,DotNetNuke.Services.Log.EventLog,EventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\EventLogController.cs,AddLog,The method has 102 lines of code.
Long Method,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The method has 112 lines of code.
Long Method,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The method has 129 lines of code.
Long Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion500,The method has 107 lines of code.
Long Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The method has 143 lines of code.
Long Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The method has 126 lines of code.
Long Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion710,The method has 107 lines of code.
Long Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddPortal,The method has 118 lines of code.
Long Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeApplication,The method has 196 lines of code.
Long Method,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,SetInstallConfig,The method has 141 lines of code.
Long Method,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,GetInstallConfig,The method has 140 lines of code.
Long Method,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,SaveJournalItem,The method has 109 lines of code.
Long Method,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,UpdateJournalItem,The method has 110 lines of code.
Long Method,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,Start,The method has 142 lines of code.
Long Method,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,WorkCompleted,The method has 107 lines of code.
Long Method,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,StopScheduleInProgress,The method has 119 lines of code.
Long Method,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ProcessLegacyLanguages,The method has 107 lines of code.
Long Method,DotNetNuke.Services.Installer.Writers,LanguagePackWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguagePackWriter.cs,ReadLegacyManifest,The method has 350 lines of code.
Long Method,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMailInternal,The method has 126 lines of code.
Long Method,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,SendMails,The method has 161 lines of code.
Long Method,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallDatabaseStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallDatabaseStep.cs,Execute,The method has 125 lines of code.
Long Method,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,ProcessRequest,The method has 102 lines of code.
Long Method,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddNewModule,The method has 132 lines of code.
Long Method,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,LoadActions,The method has 210 lines of code.
Long Method,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,AssignControlProperties,The method has 327 lines of code.
Long Method,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,UploadLegacySkin,The method has 134 lines of code.
Long Method,DotNetNuke.UI.Skins,ObjectParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,ObjectMatchHandler,The method has 115 lines of code.
Long Method,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,ShowRequiredFields,The method has 113 lines of code.
Long Method,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,OnLoad,The method has 133 lines of code.
Long Method,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,DoRenderTypes,The method has 118 lines of code.
Long Method,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,DoRenderTypeControls,The method has 210 lines of code.
Long Method,DotNetNuke.UI.WebControls,CollectionEditorInfoAdapter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Adapters\CollectionEditorInfoAdapter.cs,GetEditorInfo,The method has 129 lines of code.
Long Method,DotNetNuke.UI.WebControls,StandardEditorInfoAdapter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Adapters\StandardEditorInfoAdapter.cs,GetEditorInfo,The method has 108 lines of code.
Long Method,DotNetNuke.UI.WebControls,PropertyEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\PropertyEditorControl.cs,CreateEditor,The method has 124 lines of code.
Complex Method,DotNetNuke.Common,NavigationManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\NavigationManager.cs,NavigateURL,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,BuildCrossTabDataSet,Cyclomatic complexity of the method is 17
Complex Method,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,GetFileList,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,FormatAddress,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,FormatVersion,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,ImportUrl,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,LinkClick,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,CheckVersion,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,LogEnd,Cyclomatic complexity of the method is 17
Complex Method,DotNetNuke.Common.Utilities,CBO,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\CBO.cs,HydrateObject,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Common.Utilities,CBO,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\CBO.cs,CloneObject,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Common.Utilities,HtmlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\HtmlUtils.cs,WriteHeader,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Common.Utilities,ImageUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\ImageUtils.cs,CreateImage,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Common.Utilities,Null,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Null.cs,SetNull,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Common.Utilities,Null,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Null.cs,SetNull,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Common.Utilities,Null,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Null.cs,GetNull,Cyclomatic complexity of the method is 23
Complex Method,DotNetNuke.Common.Utilities,Null,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Null.cs,IsNull,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,ValidReturnUrl,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Common.Utilities,XmlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\XmlUtils.cs,XPathLiteral,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,AddContent,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,DeserializeModulePermissions,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,LocalizeModuleInternal,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,CopyModule,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,InitialModulePermission,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,UpdateModule,Cyclomatic complexity of the method is 15
Complex Method,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,DeserializeModule,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,SerializeModule,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,SaveDesktopModule,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Modules,DesktopModuleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleInfo.cs,ReadXml,Cyclomatic complexity of the method is 21
Complex Method,DotNetNuke.Entities.Modules,DesktopModuleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleInfo.cs,WriteXml,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Modules,PageInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleInfo.cs,ReadXml,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Entities.Modules,ModuleControlInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleControlInfo.cs,ReadXml,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Entities.Modules,ModuleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleInfo.cs,Fill,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Modules,ModuleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleInfo.cs,GetProperty,Cyclomatic complexity of the method is 64
Complex Method,DotNetNuke.Entities.Modules,UserModuleBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\UserModuleBase.cs,CompleteUserCreation,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Modules.Settings,SettingsRepository<T>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Settings\SettingsRepository.cs,DeserializeProperty,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Entities.Portals,PortalAliasExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasExtensions.cs,GetAliasByPortalIdAndSettings,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Portals,PortalAliasController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasController.cs,GetPortalAliasInternal,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Portals,PortalAliasInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasInfo.cs,ReadXml,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortalInternal,Cyclomatic complexity of the method is 18
Complex Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseFolderPermissions,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseProfileDefinitions,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParsePortalDesktopModules,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParsePortalSettings,Cyclomatic complexity of the method is 28
Complex Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseRoleGroups,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseTab,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseTabs,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseTemplateInternal,Cyclomatic complexity of the method is 19
Complex Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetPortal,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,MapLocalizedSpecialPages,Cyclomatic complexity of the method is 21
Complex Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,DeletePortal,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetActivePortalLanguage,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Portals,PortalSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettings.cs,GetProperty,Cyclomatic complexity of the method is 42
Complex Method,DotNetNuke.Entities.Users,MembershipPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Membership\MembershipPropertyAccess.cs,GetProperty,Cyclomatic complexity of the method is 19
Complex Method,DotNetNuke.Entities.Users,ProfilePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Profile\ProfilePropertyAccess.cs,CheckAccessLevel,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Users,ProfilePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Profile\ProfilePropertyAccess.cs,GetRichValue,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUserSettings,Cyclomatic complexity of the method is 39
Complex Method,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUserCreateStatus,Cyclomatic complexity of the method is 16
Complex Method,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUserSettings,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,ValidateUser,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Entities.Users,UserInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserInfo.cs,GetProperty,Cyclomatic complexity of the method is 26
Complex Method,DotNetNuke.Entities,EventManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\EventManager.cs,EventManager,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Common.Internal,GlobalsImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Internal\GlobalsImpl.cs,GetDomainName,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Entities.Host,IPFilterController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\IPFilter\IPFilterController.cs,CanIPStillAccess,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,CreateLocalizedCopyInternal,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,DeserializeTabPermissions,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,AddMissingLanguages,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,DeserializePanes,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,DeserializeTab,Cyclomatic complexity of the method is 18
Complex Method,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,GetPortalTabs,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,SerializeTab,Cyclomatic complexity of the method is 29
Complex Method,DotNetNuke.Entities.Tabs,TabInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabInfo.cs,GetProperty,Cyclomatic complexity of the method is 32
Complex Method,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,ForceDeleteVersion,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,DeterminePageNameAndExtension,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyAlias,Cyclomatic complexity of the method is 21
Complex Method,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyQueryString,Cyclomatic complexity of the method is 24
Complex Method,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,Cyclomatic complexity of the method is 34
Complex Method,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,OutputFriendlyUrlMessages,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,RemoveExcludedPartsOfPath,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,Cyclomatic complexity of the method is 63
Complex Method,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ShowDebugData,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,Handle404OrException,Cyclomatic complexity of the method is 55
Complex Method,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForTabExternalForwardOrRedirect,Cyclomatic complexity of the method is 27
Complex Method,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForSecureRedirect,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IsPortalAliasIncorrect,Cyclomatic complexity of the method is 18
Complex Method,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ConfigurePortalAliasRedirect,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IdentifyPortalAlias,Cyclomatic complexity of the method is 40
Complex Method,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,Cyclomatic complexity of the method is 39
Complex Method,DotNetNuke.Entities.Urls,BasicFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\BasicFriendlyUrlProvider.cs,GetFriendlyAlias,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Entities.Urls,BasicFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\BasicFriendlyUrlProvider.cs,GetFriendlyQueryString,Cyclomatic complexity of the method is 15
Complex Method,DotNetNuke.Entities.Urls,BasicFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\BasicFriendlyUrlProvider.cs,FriendlyUrl,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,FindFriendlyUrlParmsConfigFilePath,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,GetProvidersForTabAndPortal,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,StoreListOfTabsWithProviders,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,StoreModuleProvidersForPortal,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,GetPortal,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,RemovedPageIndexCallBack,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Entities.Urls,CustomUrlDictController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CustomUrlDictController.cs,BuildUrlDictionary,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Entities.Urls,ExtensionUrlProviderController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProviderController.cs,CheckForAlwaysCallProviders,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Urls,ExtensionUrlProviderController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProviderController.cs,TransformFriendlyUrlPath,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Entities.Urls,ExtensionUrlProviderController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProviderController.cs,LogModuleProviderExceptionInRequest,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Entities.Urls,FriendlyUrlPathController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlPathController.cs,SplitUserIdFromFriendlyUrlPath,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Entities.Urls,FriendlyUrlPathController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlPathController.cs,CheckParameterRegexReplacement,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Urls,FriendlyUrlPathController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlPathController.cs,CheckUserProfileReplacement,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Entities.Urls,FriendlyUrlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlController.cs,CleanNameForUrl,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Entities.Urls,FriendlyUrlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlController.cs,GetBrowserType,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Urls,FriendlyUrlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlController.cs,ValidateUrl,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Urls,RedirectController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectController.cs,CheckForParameterRedirect,Cyclomatic complexity of the method is 35
Complex Method,DotNetNuke.Entities.Urls,RedirectTokens,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectTokens.cs,GetRedirectReasonRewriteToken,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Urls,RedirectTokens,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectTokens.cs,AddRedirectReasonToRewritePath,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Urls,RedirectTokens,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectTokens.cs,DetermineRedirectReasonAndAction,Cyclomatic complexity of the method is 16
Complex Method,DotNetNuke.Entities.Urls,RedirectTokens,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectTokens.cs,GetActionFromRewritePath,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,AddQueryStringToRewritePath,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,CheckIfPortalAlias,Cyclomatic complexity of the method is 20
Complex Method,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,CheckTabPath,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,GetTabFromDictionary,Cyclomatic complexity of the method is 40
Complex Method,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,IdentifyByPhysicalResource,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,IdentifyByRegEx,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,RewriteParameters,Cyclomatic complexity of the method is 24
Complex Method,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,RewriteParameters,Cyclomatic complexity of the method is 18
Complex Method,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddCustomRedirectsToDictionary,Cyclomatic complexity of the method is 17
Complex Method,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddTabToTabDict,Cyclomatic complexity of the method is 24
Complex Method,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddToTabDict,Cyclomatic complexity of the method is 19
Complex Method,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,BuildPortalAliasesDictionary,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,BuildTabDictionary,Cyclomatic complexity of the method is 25
Complex Method,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,FetchTabDictionary,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,GetPortalAliasByPortal,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Urls,TabPathHelper,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabPathController.cs,GetTabPath,Cyclomatic complexity of the method is 15
Complex Method,DotNetNuke.Entities.Urls,TabPathHelper,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabPathController.cs,IsTabHomePage,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Urls,XmlHelpers,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\XmlHelpers.cs,TabIdsFromAttributes,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,RegisterScript,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Framework.JavaScriptLibraries,JavaScriptLibrary,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScriptLibrary.cs,ReadXml,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Framework,PageBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\PageBase.cs,LocalizeControl,Cyclomatic complexity of the method is 15
Complex Method,DotNetNuke.Framework,PageBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\PageBase.cs,ProcessControl,Cyclomatic complexity of the method is 21
Complex Method,DotNetNuke.Framework,SecurityPolicy,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\SecurityPolicy.cs,HasPermissions,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,InputFilter,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,SignIn,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,SignOut,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,IsDenied,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,CreateMemberhipUser,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,FillUserInfo,Cyclomatic complexity of the method is 15
Complex Method,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,CreateUser,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,UserLogin,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Security.Permissions,PermissionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionController.cs,RemapPermission,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Security.Permissions,PermissionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionProvider.cs,SaveFolderPermissions,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Security.Permissions,PermissionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionProvider.cs,HasModuleAccess,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Security.Profile,DNNProfileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Profile\DNNProfileProvider.cs,GetUserProfile,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,UpdateUserRole,Cyclomatic complexity of the method is 15
Complex Method,DotNetNuke.Security.Roles,RoleGroupInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleGroupInfo.cs,ReadXml,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Security.Roles,RoleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleInfo.cs,Fill,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Security.Roles,RoleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleInfo.cs,GetProperty,Cyclomatic complexity of the method is 26
Complex Method,DotNetNuke.Security.Roles,RoleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleInfo.cs,ReadXml,Cyclomatic complexity of the method is 35
Complex Method,DotNetNuke.Security.Roles,RoleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleInfo.cs,WriteXml,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,AuthorizeV1,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,AuthenticateUser,Cyclomatic complexity of the method is 16
Complex Method,DotNetNuke.Services.Connections,DynamicJsonObject,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Connections\DynamicJsonConverter.cs,ToString,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Services.Exceptions,Exceptions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\Exceptions.cs,ProcessModuleLoadException,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,GetImageFormat,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,OrientationToFlipType,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,AddFile,Cyclomatic complexity of the method is 15
Complex Method,DotNetNuke.Services.FileSystem,FileServerHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileServerHandler.cs,ProcessRequest,Cyclomatic complexity of the method is 24
Complex Method,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,DeleteFolderRecursive,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,AddUserFolder,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.GeneratedImage,IPCount,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\IPCount.cs,CheckIp,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,Cyclomatic complexity of the method is 45
Complex Method,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,ReadSettings,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Services.GeneratedImage,ImageHandlerInternal,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageHandlerInternal.cs,HandleImageRequest,Cyclomatic complexity of the method is 25
Complex Method,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageBrightnessTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageBrightnessTransform.cs,ProcessImage,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,ProcessImage,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.GeneratedImage.ImageQuantization,PaletteQuantizer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageQuantization\PaletteQuantizer.cs,QuantizePixel,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.ImprovementsProgram,BeaconService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ImprovementsProgram\BeaconService.cs,GetBeaconQuery,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Services.Installer.Dependencies,DependencyFactory,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Dependencies\DependencyFactory.cs,GetDependency,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Installer.Installers,ComponentInstallerBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ComponentInstallerBase.cs,ReadEventMessageNode,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Services.Installer.Installers,FileInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\FileInstaller.cs,ReadManifestItem,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Installer.Installers,InstallerFactory,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\InstallerFactory.cs,GetInstaller,Cyclomatic complexity of the method is 20
Complex Method,DotNetNuke.Services.Installer.Installers,ModuleInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ModuleInstaller.cs,DeleteModule,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Services.Installer.Installers,ModuleInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ModuleInstaller.cs,Commit,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Services.Installer.Installers,ModuleInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ModuleInstaller.cs,ReadManifest,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Installer.Installers,PackageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\PackageInstaller.cs,ReadManifest,Cyclomatic complexity of the method is 32
Complex Method,DotNetNuke.Services.Installer.Installers,ScriptInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ScriptInstaller.cs,Install,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Services.Installer.Installers,SkinInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\SkinInstaller.cs,Install,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,DeleteExtensionPackage,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,CanDeletePackage,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,ParsePackage,Cyclomatic complexity of the method is 24
Complex Method,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,SaveString,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,GetResourceFileCallBack,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,GetResourceFileName,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,TryGetStringInternal,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,TryGetFromResourceFile,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,LocalizeDataControlField,Cyclomatic complexity of the method is 20
Complex Method,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,Cyclomatic complexity of the method is 36
Complex Method,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,LocalizeDataGrid,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,RemoveLanguageFromPortal,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Services.Localization,LocalizationExpressionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationExpressionBuilder.cs,GetLocalizedResource,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Log.EventLog,EventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\EventLogController.cs,AddLog,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Services.Log.EventLog,LogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogController.cs,AddLog,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Log.EventLog,LogInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogInfo.cs,ReadXml,Cyclomatic complexity of the method is 18
Complex Method,DotNetNuke.Services.Search.Controllers,ModuleResultController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\ModuleResultController.cs,HasViewPermission,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Search.Controllers,UserResultController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\UserResultController.cs,HasViewPermission,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Search.Controllers,UserResultController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\UserResultController.cs,HasSocialReplationship,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,GetResults,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,GetSort,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,ApplySearchTypeIdFilter,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,FillTagsValues,Cyclomatic complexity of the method is 32
Complex Method,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,GetSnippet,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,RephraseSearchText,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,FixLastWord,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,SynonymTermsCallBack,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,EnsurePortalDefaultsAreSet,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Search.Internals,SearchSecurityTrimmer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchSecurityTrimmer.cs,PrepareScoreDocs,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentInternal,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,DeleteSearchDocumentInternal,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,Cyclomatic complexity of the method is 26
Complex Method,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,StripTagsRetainAttributes,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Services.Search,UserIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\UserIndexer.cs,FindModifiedUsers,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,Cyclomatic complexity of the method is 28
Complex Method,DotNetNuke.Services.Tokens,JavaScriptPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\JavaScriptPropertyAccess.cs,ProcessToken,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Services.Tokens,ArrayListPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\ArrayListPropertyAccesss.cs,GetProperty,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Tokens,CulturePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\CulturePropertyAccess.cs,GetProperty,Cyclomatic complexity of the method is 16
Complex Method,DotNetNuke.Services.Tokens,DateTimePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\DateTimePropertyAccess.cs,GetProperty,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Tokens,TokenReplace,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\TokenReplace.cs,TokenReplace,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddDefaultModuleIcons,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion500,Cyclomatic complexity of the method is 21
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion550,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion612,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion710,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion720,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion722,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateChildPortalsDefaultPage,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddPortal,Cyclomatic complexity of the method is 17
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetUpgradeScripts,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InitialiseHostSettings,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallDNN,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallPackage,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ParsePackagesFromApplicationPath,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeApplication,Cyclomatic complexity of the method is 49
Complex Method,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeIndicator,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,GetConnectionFromWebConfig,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,SetInstallConfig,Cyclomatic complexity of the method is 20
Complex Method,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,GetInstallConfig,Cyclomatic complexity of the method is 22
Complex Method,DotNetNuke.Services.Cache,CachingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cache\CachingProvider.cs,ClearCacheInternal,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,PrepareSecuritySet,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,SaveJournalItem,Cyclomatic complexity of the method is 15
Complex Method,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,UpdateJournalItem,Cyclomatic complexity of the method is 15
Complex Method,DotNetNuke.Services.Journal,JournalItem,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalItem.cs,GetProperty,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Services.Localization.Internal,LocalizationImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Internal\LocalizationImpl.cs,BestCultureCodeBasedOnBrowserLanguages,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,FireEvents,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,LogWhyTaskNotRun,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,LoadQueueFromTimer,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,Start,Cyclomatic complexity of the method is 16
Complex Method,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,WorkCompleted,Cyclomatic complexity of the method is 17
Complex Method,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,WorkErrored,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,StopScheduleInProgress,Cyclomatic complexity of the method is 17
Complex Method,DotNetNuke.Services.Sitemap,CoreSitemapProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\CoreSitemapProvider.cs,GetPageUrl,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Sitemap,SitemapBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\SitemapBuilder.cs,BuildSiteMap,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,ReplyMessage,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,SendNotification,Cyclomatic complexity of the method is 18
Complex Method,DotNetNuke.Entities.Modules.Definitions,ModuleDefinitionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Definitions\ModuleDefinitionController.cs,SaveModuleDefinition,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Entities.Modules.Definitions,ModuleDefinitionInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Definitions\ModuleDefinitionInfo.cs,ReadXml,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Entities.Modules.Definitions,ModuleDefinitionValidator,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Definitions\ModuleDefinitionValidator.cs,GetModuleDefinitionVersion,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,LoadViewState,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,BindUsersGrid,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Analytics,GoogleAnalyticsEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Analytics\GoogleAnalyticsEngine.cs,RenderScript,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,IsRedirectAllowedForTheSession,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,GetRedirectUrl,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,GetFullSiteUrl,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,GetMobileSiteUrl,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,GetRedirectUrlFromRule,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,DoesCapabilityMatchWithRule,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Installer,InstallerInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\InstallerInfo.cs,ReadZipStream,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Services.Installer,InstallFile,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\InstallFile.cs,ParseFileName,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ParsePackageName,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ProcessLegacyLanguages,Cyclomatic complexity of the method is 16
Complex Method,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,GetExternalRequest,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Services.Installer,XmlMerge,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\XmlMerge.cs,ProcessNode,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Services.Installer,XmlMerge,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\XmlMerge.cs,ProcessNodes,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Services.Installer,XmlMerge,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\XmlMerge.cs,UpdateNode,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Installer,XmlMerge,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\XmlMerge.cs,UpdateConfigs,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Installer.Writers,LanguagePackWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguagePackWriter.cs,ReadLegacyManifest,Cyclomatic complexity of the method is 87
Complex Method,DotNetNuke.Services.Installer.Writers,LanguagePackWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguagePackWriter.cs,ParseFiles,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Installer.Writers,ModulePackageWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\ModulePackageWriter.cs,ReadLegacyManifest,Cyclomatic complexity of the method is 15
Complex Method,DotNetNuke.Services.Installer.Writers,PackageWriterBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\PackageWriterBase.cs,ParseProjectFile,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Services.Installer.Writers,PackageWriterBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\PackageWriterBase.cs,WriteManifest,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Services.Installer.Writers,PackageWriterFactory,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\PackageWriterFactory.cs,GetWriter,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMailInternal,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,SendMails,Cyclomatic complexity of the method is 16
Complex Method,DotNetNuke.Services.Syndication,RssHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Syndication\RssHandler.cs,PopulateChannel,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Services.Upgrade.InternalController.Steps,SynchConnectionStringStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\SynchConnectionStringStep.cs,Execute,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallDatabaseStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallDatabaseStep.cs,Execute,Cyclomatic complexity of the method is 15
Complex Method,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallSiteStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallSiteStep.cs,CreateSite,Cyclomatic complexity of the method is 16
Complex Method,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,ProcessRequest,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Services.UserProfile,UserProfilePageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePageHandler.cs,ProcessRequest,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.Services.Users,PurgeDeletedUsers,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Users\PurgeDeletedUsers.cs,DoWork,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,ProcessAction,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddNewModule,Cyclomatic complexity of the method is 17
Complex Method,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,AddChildActions,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,AddNode,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,ProcessTab,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.UI.Modules,ModuleHost,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleHost.cs,RestoreCachedClientResourceRegistrations,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,LoadActions,Cyclomatic complexity of the method is 32
Complex Method,DotNetNuke.UI.Modules.Html5,ModuleContextPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\Html5\ModuleContextPropertyAccess.cs,GetProperty,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.UI.Skins.Controls,LanguagePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\LanguageTokenReplace.cs,GetProperty,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.UI.Skins.Controls,LanguagePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\LanguageTokenReplace.cs,GetQsParams,Cyclomatic complexity of the method is 17
Complex Method,DotNetNuke.UI.Skins.Controls,LanguagePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\LanguageTokenReplace.cs,NewUrl,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.UI.Skins.Controls,SkinsEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\SkinsEditControl.cs,RenderEditMode,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,GetNavigationNodes,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,AssignControlProperties,Cyclomatic complexity of the method is 78
Complex Method,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,LoadModuleContainer,Cyclomatic complexity of the method is 15
Complex Method,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,InjectModule,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,ProcessPane,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,ProcessMasterModules,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,GetSkin,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,SetSkin,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,UploadLegacySkin,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.UI.Skins,ControlParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,TokenMatchHandler,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.UI.Skins,ObjectParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,ObjectMatchHandler,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,ShowRequiredFields,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,OnLoad,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.UI.UserControls,Help,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Help.cs,OnLoad,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.UI.UserControls,LabelControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\LabelControl.cs,OnPreRender,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,DoChangeURL,Cyclomatic complexity of the method is 15
Complex Method,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,DoRenderTypes,Cyclomatic complexity of the method is 23
Complex Method,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,DoRenderTypeControls,Cyclomatic complexity of the method is 29
Complex Method,DotNetNuke.UI.UserControls,URLTrackingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLTrackingControl.cs,OnLoad,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,Cyclomatic complexity of the method is 17
Complex Method,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,MinMaxContentVisibile,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,Render,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.UI.WebControls,ImageCommandColumnTemplate,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DataGrids\ImageCommandColumnTemplate.cs,InstantiateIn,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,BindPageNumbers,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.UI.WebControls,CollectionEditorInfoAdapter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Adapters\CollectionEditorInfoAdapter.cs,GetEditorInfo,Cyclomatic complexity of the method is 19
Complex Method,DotNetNuke.UI.WebControls,StandardEditorInfoAdapter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Adapters\StandardEditorInfoAdapter.cs,GetEditorInfo,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.UI.WebControls,DateTimeEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DateTimeEditControl.cs,LoadDateControls,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.UI.WebControls,DNNListEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNListEditControl.cs,RenderEditMode,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.UI.WebControls,FieldEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\FieldEditorControl.cs,BuildDiv,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.UI.WebControls,FieldEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\FieldEditorControl.cs,BuildTable,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.UI.WebControls,FieldEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\FieldEditorControl.cs,CreateEditor,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.UI.WebControls,ProfileEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\ProfileEditorControl.cs,CreateEditor,Cyclomatic complexity of the method is 10
Complex Method,DotNetNuke.UI.WebControls,PropertyEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\PropertyEditorControl.cs,CreateEditor,Cyclomatic complexity of the method is 22
Complex Method,DotNetNuke.UI.WebControls.Internal,PermissionTriState,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DataGrids\PermissionTriState.cs,Render,Cyclomatic complexity of the method is 8
Long Parameter List,DotNetNuke.Common,NavigationManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\NavigationManager.cs,NavigateURL,The method has 5 parameters. Parameters: tabID' isSuperTab' settings' controlKey' additionalParameters
Long Parameter List,DotNetNuke.Common,NavigationManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\NavigationManager.cs,NavigateURL,The method has 6 parameters. Parameters: tabID' isSuperTab' settings' controlKey' language' additionalParameters
Long Parameter List,DotNetNuke.Common,NavigationManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\NavigationManager.cs,NavigateURL,The method has 7 parameters. Parameters: tabID' isSuperTab' settings' controlKey' language' pageName' additionalParameters
Long Parameter List,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,BuildCrossTabDataSet,The method has 9 parameters. Parameters: DataSetName' result' FixedColumns' VariableColumns' KeyColumn' FieldColumn' FieldTypeColumn' StringValueColumn' NumericValueColumn
Long Parameter List,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,BuildCrossTabDataSet,The method has 10 parameters. Parameters: DataSetName' result' FixedColumns' VariableColumns' KeyColumn' FieldColumn' FieldTypeColumn' StringValueColumn' NumericValueColumn' Culture
Long Parameter List,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,GetFileList,The method has 5 parameters. Parameters: PortalId' strExtensions' NoneSpecified' Folder' includeHidden
Long Parameter List,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,FormatAddress,The method has 6 parameters. Parameters: Unit' Street' City' Region' Country' PostalCode
Long Parameter List,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CreateRSS,The method has 7 parameters. Parameters: dr' TitleField' URLField' CreatedDateField' SyndicateField' DomainName' FileName
Long Parameter List,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,NavigateURL,The method has 5 parameters. Parameters: tabID' isSuperTab' settings' controlKey' additionalParameters
Long Parameter List,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,NavigateURL,The method has 6 parameters. Parameters: tabID' isSuperTab' settings' controlKey' language' additionalParameters
Long Parameter List,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,NavigateURL,The method has 7 parameters. Parameters: tabID' isSuperTab' settings' controlKey' language' pageName' additionalParameters
Long Parameter List,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,LinkClick,The method has 5 parameters. Parameters: Link' TabID' ModuleID' TrackClicks' ContentType
Long Parameter List,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,LinkClick,The method has 5 parameters. Parameters: Link' TabID' ModuleID' TrackClicks' ForceDownload
Long Parameter List,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,LinkClick,The method has 8 parameters. Parameters: Link' TabID' ModuleID' TrackClicks' ForceDownload' PortalId' EnableUrlLanguage' portalGuid
Long Parameter List,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,SetCache,The method has 5 parameters. Parameters: CacheKey' objObject' objDependency' AbsoluteExpiration' SlidingExpiration
Long Parameter List,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,SetCache,The method has 7 parameters. Parameters: CacheKey' objObject' objDependency' AbsoluteExpiration' SlidingExpiration' Priority' OnRemoveCallback
Long Parameter List,DotNetNuke.Common.Utilities,FileSystemUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\FileSystemUtils.cs,CreateFile,The method has 7 parameters. Parameters: folder' fileName' contentType' fileContent' unzip' overwrite' checkPermissions
Long Parameter List,DotNetNuke.Common.Utilities,UrlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlController.cs,UpdateUrl,The method has 7 parameters. Parameters: PortalID' Url' UrlType' LogActivity' TrackClicks' ModuleID' NewWindow
Long Parameter List,DotNetNuke.Common.Utilities,UrlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlController.cs,UpdateUrl,The method has 10 parameters. Parameters: PortalID' Url' UrlType' Clicks' LastClick' CreatedDate' LogActivity' TrackClicks' ModuleID' NewWindow
Long Parameter List,DotNetNuke.Common.Utilities,UrlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlController.cs,GetUrlLog,The method has 5 parameters. Parameters: PortalID' Url' ModuleId' StartDate' EndDate
Long Parameter List,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,PopUpUrl,The method has 5 parameters. Parameters: url' control' portalSettings' onClickEvent' responseRedirect
Long Parameter List,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,PopUpUrl,The method has 7 parameters. Parameters: url' control' portalSettings' onClickEvent' responseRedirect' windowHeight' windowWidth
Long Parameter List,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,PopUpUrl,The method has 6 parameters. Parameters: url' portalSettings' onClickEvent' responseRedirect' windowHeight' windowWidth
Long Parameter List,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,PopUpUrl,The method has 9 parameters. Parameters: url' control' portalSettings' onClickEvent' responseRedirect' windowHeight' windowWidth' refresh' closingUrl
Long Parameter List,DotNetNuke.Common.Utilities,XmlExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\XmlExtensions.cs,AddElement,The method has 6 parameters. Parameters: node' elementName' elementValue' useCData' namespaceUri' namespaceAbbr
Long Parameter List,DotNetNuke.Common.Utilities,XmlExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\XmlExtensions.cs,AddAttribute,The method has 5 parameters. Parameters: node' attributeName' attributeValue' namespaceUri' namespaceAbbr
Long Parameter List,DotNetNuke.Common.Utilities,XmlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\XmlUtils.cs,AppendElement,The method has 5 parameters. Parameters: objDoc' objNode' attName' attValue' includeIfEmpty
Long Parameter List,DotNetNuke.Common.Utilities,XmlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\XmlUtils.cs,AppendElement,The method has 6 parameters. Parameters: objDoc' objNode' attName' attValue' includeIfEmpty' cdata
Long Parameter List,DotNetNuke.Common.Utilities,XmlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\XmlUtils.cs,SerializeHashtable,The method has 6 parameters. Parameters: hashtable' xmlDocument' rootNode' elementName' keyField' valueField
Long Parameter List,DotNetNuke.Data,DatabaseConnectionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DatabaseConnectionProvider.cs,ExecuteNonQuery,The method has 5 parameters. Parameters: connectionString' commandType' commandTimeout' procedure' commandParameters
Long Parameter List,DotNetNuke.Data,DatabaseConnectionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DatabaseConnectionProvider.cs,ExecuteReader,The method has 5 parameters. Parameters: connectionString' commandType' commandTimeout' procedureName' commandParameters
Long Parameter List,DotNetNuke.Data,DatabaseConnectionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DatabaseConnectionProvider.cs,ExecuteScalar,The method has 5 parameters. Parameters: connectionString' commandType' commandTimeout' procedureName' commandParameters
Long Parameter List,DotNetNuke.Data,DatabaseConnectionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DatabaseConnectionProvider.cs,BulkInsert,The method has 5 parameters. Parameters: connectionString' commandTimeout' procedureName' tableParameterName' dataTable
Long Parameter List,DotNetNuke.Data,DatabaseConnectionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DatabaseConnectionProvider.cs,BulkInsert,The method has 6 parameters. Parameters: connectionString' commandTimeout' procedureName' tableParameterName' dataTable' commandParameters
Long Parameter List,DotNetNuke.Data,SqlDatabaseConnectionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDatabaseConnectionProvider.cs,ExecuteNonQuery,The method has 5 parameters. Parameters: connectionString' commandType' commandTimeout' procedure' commandParameters
Long Parameter List,DotNetNuke.Data,SqlDatabaseConnectionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDatabaseConnectionProvider.cs,ExecuteReader,The method has 5 parameters. Parameters: connectionString' commandType' commandTimeout' procedureName' commandParameters
Long Parameter List,DotNetNuke.Data,SqlDatabaseConnectionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDatabaseConnectionProvider.cs,ExecuteScalar,The method has 5 parameters. Parameters: connectionString' commandType' commandTimeout' procedureName' commandParameters
Long Parameter List,DotNetNuke.Data,SqlDatabaseConnectionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDatabaseConnectionProvider.cs,BulkInsert,The method has 5 parameters. Parameters: connectionString' commandTimeout' procedureName' tableParameterName' dataTable
Long Parameter List,DotNetNuke.Data,SqlDatabaseConnectionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDatabaseConnectionProvider.cs,BulkInsert,The method has 6 parameters. Parameters: connectionString' commandTimeout' procedureName' tableParameterName' dataTable' commandParameters
Long Parameter List,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,BulkInsert,The method has 5 parameters. Parameters: procedureName' tableParameterName' dataTable' timeoutSec' commandParameters
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,BulkInsert,The method has 5 parameters. Parameters: procedureName' tableParameterName' dataTable' timeoutSec' commandParameters
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateDatabaseVersionIncrement,The method has 5 parameters. Parameters: Major' Minor' Build' Increment' AppName
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateServer,The method has 5 parameters. Parameters: serverId' url' uniqueId' enabled' group
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateServerActivity,The method has 6 parameters. Parameters: serverName' iisAppName' createdDate' lastActivityDate' pingFailureCount' enabled
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,CreatePortal,The method has 11 parameters. Parameters: portalname' currency' ExpiryDate' HostFee' HostSpace' PageQuota' UserQuota' SiteLogHistory' HomeDirectory' CultureCode' CreatedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdatePortalInfo,The method has 35 parameters. Parameters: portalId' portalGroupId' portalName' logoFile' footerText' expiryDate' userRegistration' bannerAdvertising' currency' administratorId' hostFee' hostSpace' pageQuota' userQuota' paymentProcessor' processorUserId' processorPassword' description' keyWords' backgroundFile' siteLogHistory' splashTabId' homeTabId' loginTabId' registerTabId' userTabId' searchTabId' custom404TabId' custom500TabId' termsTabId' privacyTabId' defaultLanguage' homeDirectory' lastModifiedByUserID' cultureCode
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdatePortalSetting,The method has 6 parameters. Parameters: portalId' settingName' settingValue' userId' cultureCode' isSecure
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdatePortalSetup,The method has 16 parameters. Parameters: portalId' administratorId' administratorRoleId' registeredRoleId' splashTabId' homeTabId' loginTabId' registerTabId' userTabId' searchTabId' custom404TabId' custom500TabId' termsTabId' privacyTabId' adminTabId' cultureCode
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,SaveTabUrl,The method has 10 parameters. Parameters: tabId' seqNum' portalAliasId' portalAliasUsage' url' queryString' cultureCode' httpStatus' isSystem' modifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,SaveTabVersion,The method has 7 parameters. Parameters: tabVersionId' tabId' timeStamp' version' isPublished' createdByUserID' modifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,SaveTabVersionDetail,The method has 9 parameters. Parameters: tabVersionDetailId' tabVersionId' moduleId' moduleVersion' paneName' moduleOrder' action' createdByUserID' modifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateTab,The method has 29 parameters. Parameters: tabId' contentItemId' portalId' versionGuid' defaultLanguageGuid' localizedVersionGuid' tabName' isVisible' disableLink' parentId' iconFile' iconFileLarge' title' description' keyWords' isDeleted' url' skinSrc' containerSrc' startDate' endDate' refreshInterval' pageHeadText' isSecure' permanentRedirect' siteMapPriority' lastModifiedByuserID' cultureCode' IsSystem
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddModule,The method has 11 parameters. Parameters: contentItemId' portalId' moduleDefId' allTabs' startDate' endDate' inheritViewPermissions' isShareable' isShareableViewOnly' isDeleted' createdByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddTabModule,The method has 28 parameters. Parameters: TabId' ModuleId' ModuleTitle' Header' Footer' ModuleOrder' PaneName' CacheTime' CacheMethod' Alignment' Color' Border' IconFile' Visibility' ContainerSrc' DisplayTitle' DisplayPrint' DisplaySyndicate' IsWebSlice' WebSliceTitle' WebSliceExpiryDate' WebSliceTTL' UniqueId' VersionGuid' DefaultLanguageGuid' LocalizedVersionGuid' CultureCode' createdByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,MoveTabModule,The method has 5 parameters. Parameters: fromTabId' moduleId' toTabId' toPaneName' lastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateModule,The method has 11 parameters. Parameters: moduleId' moduleDefId' contentItemId' allTabs' startDate' endDate' inheritViewPermissions' isShareable' isShareableViewOnly' isDeleted' lastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateTabModule,The method has 28 parameters. Parameters: TabModuleId' TabId' ModuleId' ModuleTitle' Header' Footer' ModuleOrder' PaneName' CacheTime' CacheMethod' Alignment' Color' Border' IconFile' Visibility' ContainerSrc' DisplayTitle' DisplayPrint' DisplaySyndicate' IsWebSlice' WebSliceTitle' WebSliceExpiryDate' WebSliceTTL' VersionGuid' DefaultLanguageGuid' LocalizedVersionGuid' CultureCode' lastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddDesktopModule,The method has 18 parameters. Parameters: packageID' moduleName' folderName' friendlyName' description' version' isPremium' isAdmin' businessControllerClass' supportedFeatures' shareable' compatibleVersions' dependencies' permissions' contentItemId' createdByUserID' adminPage' hostPage
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateDesktopModule,The method has 19 parameters. Parameters: desktopModuleId' packageID' moduleName' folderName' friendlyName' description' version' isPremium' isAdmin' businessControllerClass' supportedFeatures' shareable' compatibleVersions' dependencies' permissions' contentItemId' lastModifiedByUserID' adminpage' hostpage
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddModuleDefinition,The method has 5 parameters. Parameters: desktopModuleId' friendlyName' definitionName' defaultCacheTime' createdByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateModuleDefinition,The method has 5 parameters. Parameters: moduleDefId' friendlyName' definitionName' defaultCacheTime' lastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddModuleControl,The method has 11 parameters. Parameters: moduleDefId' controlKey' controlTitle' controlSrc' iconFile' controlType' viewOrder' helpUrl' supportsPartialRendering' supportsPopUps' createdByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateModuleControl,The method has 12 parameters. Parameters: moduleControlId' moduleDefId' controlKey' controlTitle' controlSrc' iconFile' controlType' viewOrder' helpUrl' supportsPartialRendering' supportsPopUps' lastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddFolder,The method has 14 parameters. Parameters: portalId' uniqueId' versionGuid' folderPath' mappedPath' storageLocation' isProtected' isCached' lastUpdated' createdByUserId' folderMappingId' isVersioned' workflowId' parentId
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateFolder,The method has 14 parameters. Parameters: portalId' versionGuid' folderId' folderPath' storageLocation' mappedPath' isProtected' isCached' lastUpdated' lastModifiedByUserID' folderMappingID' isVersioned' workflowID' parentID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddFile,The method has 20 parameters. Parameters: portalId' uniqueId' versionGuid' fileName' extension' size' width' height' contentType' folder' folderId' createdByUserID' hash' lastModificationTime' title' description' startDate' endDate' enablePublishPeriod' contentItemId
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateFile,The method has 18 parameters. Parameters: fileId' versionGuid' fileName' extension' size' width' height' contentType' folderId' lastModifiedByUserID' hash' lastModificationTime' title' description' startDate' endDate' enablePublishPeriod' contentItemId
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddPermission,The method has 5 parameters. Parameters: permissionCode' moduleDefID' permissionKey' permissionName' createdByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdatePermission,The method has 6 parameters. Parameters: permissionID' permissionCode' moduleDefID' permissionKey' permissionName' lastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddModulePermission,The method has 7 parameters. Parameters: moduleId' portalId' permissionId' roleId' allowAccess' userId' createdByUserId
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateModulePermission,The method has 8 parameters. Parameters: modulePermissionId' moduleId' portalId' permissionId' roleId' allowAccess' userId' lastModifiedByUserId
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddTabPermission,The method has 6 parameters. Parameters: tabId' permissionId' roleID' allowAccess' userId' createdByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateTabPermission,The method has 7 parameters. Parameters: tabPermissionId' tabId' permissionId' roleID' allowAccess' userId' lastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddFolderPermission,The method has 6 parameters. Parameters: folderId' permissionId' roleID' allowAccess' userId' createdByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateFolderPermission,The method has 7 parameters. Parameters: FolderPermissionID' FolderID' PermissionID' roleID' AllowAccess' UserID' lastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddDesktopModulePermission,The method has 6 parameters. Parameters: portalDesktopModuleID' permissionID' roleID' allowAccess' userID' createdByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateDesktopModulePermission,The method has 7 parameters. Parameters: desktopModulePermissionID' portalDesktopModuleID' permissionID' roleID' allowAccess' userID' lastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddRole,The method has 18 parameters. Parameters: portalId' roleGroupId' roleName' description' serviceFee' billingPeriod' billingFrequency' trialFee' trialPeriod' trialFrequency' isPublic' autoAssignment' rsvpCode' iconFile' createdByUserID' status' securityMode' isSystemRole
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateRole,The method has 18 parameters. Parameters: roleId' roleGroupId' roleName' description' serviceFee' billingPeriod' billingFrequency' trialFee' trialPeriod' trialFrequency' isPublic' autoAssignment' rsvpCode' iconFile' lastModifiedByUserID' status' securityMode' isSystemRole
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddUser,The method has 11 parameters. Parameters: portalID' username' firstName' lastName' affiliateId' isSuperUser' email' displayName' updatePassword' isApproved' createdByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,GetAllUsers,The method has 5 parameters. Parameters: portalID' pageIndex' pageSize' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,GetUsersAdvancedSearch,The method has 12 parameters. Parameters: portalId' userId' filterUserId' fitlerRoleId' relationTypeId' isAdmin' pageIndex' pageSize' sortColumn' sortAscending' propertyNames' propertyValues
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,GetUsersBasicSearch,The method has 7 parameters. Parameters: portalId' pageIndex' pageSize' sortColumn' sortAscending' propertyName' propertyValue
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,GetUsersByEmail,The method has 6 parameters. Parameters: portalID' email' pageIndex' pageSize' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,GetUsersByProfileProperty,The method has 7 parameters. Parameters: portalID' propertyName' propertyValue' pageIndex' pageSize' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,GetUsersByUsername,The method has 6 parameters. Parameters: portalID' username' pageIndex' pageSize' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,GetUsersByDisplayname,The method has 6 parameters. Parameters: portalId' name' pageIndex' pageSize' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateUser,The method has 16 parameters. Parameters: userId' portalID' firstName' lastName' isSuperUser' email' displayName' vanityUrl' updatePassword' isApproved' refreshRoles' lastIpAddress' passwordResetToken' passwordResetExpiration' isDeleted' lastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddUserRole,The method has 8 parameters. Parameters: portalId' userId' roleId' status' isOwner' effectiveDate' expiryDate' createdByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateUserRole,The method has 6 parameters. Parameters: userRoleId' status' isOwner' effectiveDate' expiryDate' lastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddPropertyDefinition,The method has 14 parameters. Parameters: portalId' moduleDefId' dataType' defaultValue' propertyCategory' propertyName' readOnly' required' validationExpression' viewOrder' visible' length' defaultVisibility' createdByUserId
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateProfileProperty,The method has 7 parameters. Parameters: profileId' userId' propertyDefinitionID' propertyValue' visibility' extendedVisibility' lastUpdatedDate
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdatePropertyDefinition,The method has 13 parameters. Parameters: propertyDefinitionId' dataType' defaultValue' propertyCategory' propertyName' readOnly' required' validation' viewOrder' visible' length' defaultVisibility' lastModifiedByUserId
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddSkinControl,The method has 5 parameters. Parameters: packageID' ControlKey' ControlSrc' SupportsPartialRendering' CreatedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateSkinControl,The method has 6 parameters. Parameters: skinControlID' packageID' ControlKey' ControlSrc' SupportsPartialRendering' LastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddSkinPackage,The method has 5 parameters. Parameters: packageID' portalID' skinName' skinType' createdByUserId
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateSkinPackage,The method has 6 parameters. Parameters: skinPackageID' packageID' portalID' skinName' skinType' LastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddUrlTracking,The method has 7 parameters. Parameters: PortalID' Url' UrlType' LogActivity' TrackClicks' ModuleID' NewWindow
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateUrlTracking,The method has 6 parameters. Parameters: PortalID' Url' LogActivity' TrackClicks' ModuleID' NewWindow
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddListEntry,The method has 11 parameters. Parameters: ListName' Value' Text' ParentID' Level' EnableSortOrder' DefinitionID' Description' PortalID' SystemList' CreatedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateListEntry,The method has 5 parameters. Parameters: EntryID' Value' Text' Description' LastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddPortalAlias,The method has 7 parameters. Parameters: PortalID' HTTPAlias' cultureCode' skin' browserType' isPrimary' createdByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdatePortalAliasInfo,The method has 8 parameters. Parameters: PortalAliasID' PortalID' HTTPAlias' cultureCode' skin' browserType' isPrimary' lastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddEventMessage,The method has 12 parameters. Parameters: eventName' priority' processorType' processorCommand' body' sender' subscriberId' authorizedRoles' exceptionMessage' sentDate' expirationDate' attributes
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddAuthentication,The method has 7 parameters. Parameters: packageID' authenticationType' isEnabled' settingsControlSrc' loginControlSrc' logoffControlSrc' CreatedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateAuthentication,The method has 8 parameters. Parameters: authenticationID' packageID' authenticationType' isEnabled' settingsControlSrc' loginControlSrc' logoffControlSrc' LastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddPackage,The method has 17 parameters. Parameters: portalID' name' friendlyName' description' type' version' license' manifest' owner' organization' url' email' releaseNotes' isSystemPackage' createdByUserID' folderName' iconFile
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdatePackage,The method has 17 parameters. Parameters: packageID' portalID' friendlyName' description' type' version' license' manifest' owner' organization' url' email' releaseNotes' isSystemPackage' lastModifiedByUserID' folderName' iconFile
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateLanguage,The method has 5 parameters. Parameters: languageID' cultureCode' cultureName' fallbackCulture' LastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateLanguagePack,The method has 5 parameters. Parameters: languagePackID' packageID' languageID' dependentPackageID' LastModifiedByUserID
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddPasswordHistory,The method has 5 parameters. Parameters: userId' password' passwordHistory' passwordsRetained' daysRetained
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,SavePreviewProfile,The method has 8 parameters. Parameters: id' portalId' name' width' height' userAgent' sortOrder' userId
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,SaveRedirection,The method has 11 parameters. Parameters: id' portalId' name' type' sortOrder' sourceTabId' includeChildTabs' targetType' targetValue' enabled' userId
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddLog,The method has 12 parameters. Parameters: logGUID' logTypeKey' logUserID' logUserName' logPortalID' logPortalName' logCreateDate' logServerName' logProperties' logConfigID' exception' notificationActive
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddLogType,The method has 5 parameters. Parameters: logTypeKey' logTypeFriendlyName' logTypeDescription' logTypeCSSClass' logTypeOwner
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddLogTypeConfigInfo,The method has 10 parameters. Parameters: loggingIsActive' logTypeKey' logTypePortalID' keepMostRecent' emailNotificationIsActive' threshold' notificationThresholdTime' notificationThresholdTimeType' mailFromAddress' mailToAddress
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateLogType,The method has 5 parameters. Parameters: logTypeKey' logTypeFriendlyName' logTypeDescription' logTypeCSSClass' logTypeOwner
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateLogTypeConfigInfo,The method has 11 parameters. Parameters: id' loggingIsActive' logTypeKey' logTypePortalID' keepMostRecent' emailNotificationIsActive' threshold' notificationThresholdTime' notificationThresholdTimeType' mailFromAddress' mailToAddress
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddSchedule,The method has 14 parameters. Parameters: TypeFullName' TimeLapse' TimeLapseMeasurement' RetryTimeLapse' RetryTimeLapseMeasurement' RetainHistoryNum' AttachToEvent' CatchUpEnabled' Enabled' ObjectDependencies' Servers' CreatedByUserID' FriendlyName' ScheduleStartDate
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateSchedule,The method has 15 parameters. Parameters: ScheduleID' TypeFullName' TimeLapse' TimeLapseMeasurement' RetryTimeLapse' RetryTimeLapseMeasurement' RetainHistoryNum' AttachToEvent' CatchUpEnabled' Enabled' ObjectDependencies' Servers' LastModifiedByUserID' FriendlyName' ScheduleStartDate
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateScheduleHistory,The method has 5 parameters. Parameters: ScheduleHistoryID' EndDate' Succeeded' LogNotes' NextStart
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddExtensionUrlProvider,The method has 9 parameters. Parameters: providerId' desktopModuleId' providerName' providerType' settingsControlSrc' isActive' rewriteAllUrls' redirectAllUrls' replaceAllUrls
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateIPFilter,The method has 5 parameters. Parameters: ipFilterid' ipAddress' subnetMask' ruleType' lastModifiedByUserId
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddFileVersion,The method has 21 parameters. Parameters: fileId' uniqueId' versionGuid' fileName' extension' size' width' height' contentType' folder' folderId' userId' hash' lastModificationTime' title' enablePublishPeriod' startDate' endDate' contentItemID' published' content
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddContentWorkflowStatePermission,The method has 6 parameters. Parameters: stateId' permissionId' roleId' allowAccess' userId' createdByUserId
Long Parameter List,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateContentWorkflowStatePermission,The method has 7 parameters. Parameters: workflowStatePermissionId' stateId' permissionId' roleId' allowAccess' userId' lastModifiedByUserId
Long Parameter List,DotNetNuke.Data.PetaPoco,FluentMapperExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\PetaPoco\FluentMapperExtensions.cs,Property,The method has 5 parameters. Parameters: mapper' action' column' primaryKey' readOnly
Long Parameter List,DotNetNuke.Data.PetaPoco,FluentMapperExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\PetaPoco\FluentMapperExtensions.cs,Property,The method has 6 parameters. Parameters: mapper' action' column' fromDbConverter' primaryKey' readOnly
Long Parameter List,DotNetNuke.Data.PetaPoco,FluentMapperExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\PetaPoco\FluentMapperExtensions.cs,Property,The method has 7 parameters. Parameters: mapper' action' column' fromDbConverter' toDbConverter' primaryKey' readOnly
Long Parameter List,DotNetNuke.Data.PetaPoco,PetaPocoHelper,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\PetaPoco\PetaPocoHelper.cs,ExecuteNonQuery,The method has 5 parameters. Parameters: connectionString' type' timeoutSec' sql' args
Long Parameter List,DotNetNuke.Data.PetaPoco,PetaPocoHelper,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\PetaPoco\PetaPocoHelper.cs,BulkInsert,The method has 5 parameters. Parameters: connectionString' timeoutSec' procedureName' tableParameterName' dataTable
Long Parameter List,DotNetNuke.Data.PetaPoco,PetaPocoHelper,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\PetaPoco\PetaPocoHelper.cs,BulkInsert,The method has 5 parameters. Parameters: connectionString' procedureName' tableParameterName' dataTable' args
Long Parameter List,DotNetNuke.Data.PetaPoco,PetaPocoHelper,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\PetaPoco\PetaPocoHelper.cs,BulkInsert,The method has 6 parameters. Parameters: connectionString' procedureName' tableParameterName' dataTable' timeoutSec' args
Long Parameter List,DotNetNuke.Data.PetaPoco,PetaPocoHelper,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\PetaPoco\PetaPocoHelper.cs,ExecuteReader,The method has 5 parameters. Parameters: connectionString' type' timeoutSec' sql' args
Long Parameter List,DotNetNuke.Data.PetaPoco,PetaPocoHelper,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\PetaPoco\PetaPocoHelper.cs,ExecuteScalar,The method has 5 parameters. Parameters: connectionString' type' timeoutSec' sql' args
Long Parameter List,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,AddModulePermission,The method has 5 parameters. Parameters: module' portalId' roleName' permission' permissionKey
Long Parameter List,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,AddModulePermission,The method has 5 parameters. Parameters: module' permission' roleId' userId' allowAccess
Long Parameter List,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,DeserializeModule,The method has 5 parameters. Parameters: nodeModule' nodePane' portalId' tabId' moduleDefId
Long Parameter List,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,DeleteAllModules,The method has 6 parameters. Parameters: moduleId' tabId' fromTabs' softDelete' includeCurrent' deleteBaseModule
Long Parameter List,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,DeserializeModule,The method has 6 parameters. Parameters: nodeModule' nodePane' portalId' tabId' mergeTabs' hModules
Long Parameter List,DotNetNuke.Entities.Modules,IModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\IModuleController.cs,DeleteAllModules,The method has 6 parameters. Parameters: moduleId' tabId' fromTabs' softDelete' includeCurrent' deleteBaseModule
Long Parameter List,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,AddDesktopModulePageToPortal,The method has 5 parameters. Parameters: desktopModule' pageName' portalId' createdNewPage' addedNewModule
Long Parameter List,DotNetNuke.Entities.Modules,ModuleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleInfo.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' currentScope' propertyNotFound
Long Parameter List,DotNetNuke.Entities.Portals,PortalAliasExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasExtensions.cs,GetAliasByPortalIdAndSettings,The method has 5 parameters. Parameters: aliases' portalId' result' cultureCode' settings
Long Parameter List,DotNetNuke.Entities.Portals,PortalAliasExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasExtensions.cs,GetAliasByPortalIdAndSettings,The method has 5 parameters. Parameters: aliases' portalId' requestedAlias' cultureCode' settings
Long Parameter List,DotNetNuke.Entities.Portals,PortalAliasExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasExtensions.cs,GetAliasByPortalIdAndSettings,The method has 5 parameters. Parameters: aliases' portalId' result' cultureCode' browserType
Long Parameter List,DotNetNuke.Entities.Portals,PortalAliasExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasExtensions.cs,GetSettingsByPortalIdAndAlias,The method has 6 parameters. Parameters: aliases' portalId' alias' culture' browserType' skin
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreateDefaultPortalRoles,The method has 6 parameters. Parameters: portalId' administratorId' administratorRoleId' registeredRoleId' subscriberRoleId' unverifiedRoleId
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortalInternal,The method has 12 parameters. Parameters: portalId' portalName' adminUser' description' keyWords' template' homeDirectory' portalAlias' serverPath' childPath' isChildPortal' message
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreateRole,The method has 11 parameters. Parameters: portalId' roleName' description' serviceFee' billingPeriod' billingFrequency' trialFee' trialPeriod' trialFrequency' isPublic' isAuto
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseTab,The method has 7 parameters. Parameters: nodeTab' portalId' isAdminTemplate' mergeTabs' hModules' hTabs' isNewPortal
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseTabs,The method has 5 parameters. Parameters: nodeTabs' portalId' isAdminTemplate' mergeTabs' isNewPortal
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseTemplateInternal,The method has 6 parameters. Parameters: portalId' templatePath' templateFile' administratorId' mergeTabs' isNewPortal
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseTemplateInternal,The method has 7 parameters. Parameters: portalId' templatePath' templateFile' administratorId' mergeTabs' isNewPortal' localeCollection
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,UpdatePortalSettingInternal,The method has 6 parameters. Parameters: portalID' settingName' settingValue' clearCache' cultureCode' isSecure
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,UpdatePortalSetup,The method has 16 parameters. Parameters: portalId' administratorId' administratorRoleId' registeredRoleId' splashTabId' homeTabId' loginTabId' registerTabId' userTabId' searchTabId' custom404TabId' custom500TabId' termsTabId' privacyTabId' adminTabId' cultureCode
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortal,The method has 10 parameters. Parameters: portalName' adminUserId' description' keyWords' template' homeDirectory' portalAlias' serverPath' childPath' isChildPortal
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortal,The method has 10 parameters. Parameters: portalName' adminUser' description' keyWords' template' homeDirectory' portalAlias' serverPath' childPath' isChildPortal
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseTemplate,The method has 5 parameters. Parameters: portalId' template' administratorId' mergeTabs' isNewPortal
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,UpdatePortalSetting,The method has 5 parameters. Parameters: portalID' settingName' settingValue' clearCache' cultureCode
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,UpdatePortalSetting,The method has 6 parameters. Parameters: portalID' settingName' settingValue' clearCache' cultureCode' isSecure
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,UpdatePortalSetting,The method has 5 parameters. Parameters: portalID' settingName' settingValue' clearCache' cultureCode
Long Parameter List,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,UpdatePortalSetting,The method has 6 parameters. Parameters: portalID' settingName' settingValue' clearCache' cultureCode' isSecure
Long Parameter List,DotNetNuke.Entities.Portals,IPortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\IPortalController.cs,CreatePortal,The method has 10 parameters. Parameters: portalName' adminUserId' description' keyWords' template' homeDirectory' portalAlias' serverPath' childPath' isChildPortal
Long Parameter List,DotNetNuke.Entities.Portals,IPortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\IPortalController.cs,CreatePortal,The method has 10 parameters. Parameters: portalName' adminUser' description' keyWords' template' homeDirectory' portalAlias' serverPath' childPath' isChildPortal
Long Parameter List,DotNetNuke.Entities.Portals,IPortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\IPortalController.cs,ParseTemplate,The method has 5 parameters. Parameters: portalId' template' administratorId' mergeTabs' isNewPortal
Long Parameter List,DotNetNuke.Entities.Portals,IPortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\IPortalController.cs,UpdatePortalSetting,The method has 5 parameters. Parameters: portalID' settingName' settingValue' clearCache' cultureCode
Long Parameter List,DotNetNuke.Entities.Portals,IPortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\IPortalController.cs,UpdatePortalSetting,The method has 6 parameters. Parameters: portalID' settingName' settingValue' clearCache' cultureCode' isSecure
Long Parameter List,DotNetNuke.Entities.Portals,PortalGroupController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalGroupController.cs,OnUserAddedToSiteGroup,The method has 5 parameters. Parameters: callback' portal' currentUser' totalUsers' currentUserNumber
Long Parameter List,DotNetNuke.Entities.Portals,PortalSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettings.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' accessLevel' propertyNotFound
Long Parameter List,DotNetNuke.Entities.Users,IUserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\IUserController.cs,GetUsersAdvancedSearch,The method has 12 parameters. Parameters: portalId' userId' filterUserId' filterRoleId' relationTypeId' isAdmin' pageIndex' pageSize' sortColumn' sortAscending' propertyNames' propertyValues
Long Parameter List,DotNetNuke.Entities.Users,IUserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\IUserController.cs,GetUsersBasicSearch,The method has 7 parameters. Parameters: portalId' pageIndex' pageSize' sortColumn' sortAscending' propertyName' propertyValue
Long Parameter List,DotNetNuke.Entities.Users,MembershipPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Membership\MembershipPropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' AccessingUser' CurrentScope' PropertyNotFound
Long Parameter List,DotNetNuke.Entities.Users,ProfilePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Profile\ProfilePropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' currentScope' propertyNotFound
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,AddEventLog,The method has 6 parameters. Parameters: portalId' username' userId' portalName' ip' loginStatus
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersAdvancedSearch,The method has 12 parameters. Parameters: portalId' userId' filterUserId' filterRoleId' relationTypeId' isAdmin' pageIndex' pageSize' sortColumn' sortAscending' propertyNames' propertyValues
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersBasicSearch,The method has 7 parameters. Parameters: portalId' pageIndex' pageSize' sortColumn' sortAscending' propertyName' propertyValue
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,ChangePasswordByToken,The method has 6 parameters. Parameters: portalid' username' newPassword' answer' resetToken' errorMessage
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsers,The method has 6 parameters. Parameters: portalId' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersByEmail,The method has 5 parameters. Parameters: portalId' emailToMatch' pageIndex' pageSize' totalRecords
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersByEmail,The method has 7 parameters. Parameters: portalId' emailToMatch' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersByProfileProperty,The method has 6 parameters. Parameters: portalId' propertyName' propertyValue' pageIndex' pageSize' totalRecords
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersByProfileProperty,The method has 8 parameters. Parameters: portalId' propertyName' propertyValue' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersByUserName,The method has 5 parameters. Parameters: portalId' userNameToMatch' pageIndex' pageSize' totalRecords
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersByUserName,The method has 7 parameters. Parameters: portalId' userNameToMatch' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersByDisplayName,The method has 7 parameters. Parameters: portalId' nameToMatch' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,UpdateUser,The method has 5 parameters. Parameters: portalId' user' loggedAction' sendNotification' clearCache
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,UserLogin,The method has 8 parameters. Parameters: portalId' username' password' verificationCode' portalName' ip' loginStatus' createPersistentCookie
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,UserLogin,The method has 5 parameters. Parameters: portalId' user' portalName' ip' createPersistentCookie
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,ValidateUser,The method has 7 parameters. Parameters: portalId' username' password' verificationCode' portalName' ip' loginStatus
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,ValidateUser,The method has 8 parameters. Parameters: portalId' username' password' authType' verificationCode' portalName' ip' loginStatus
Long Parameter List,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetProfileAvatarAbsoluteUrl,The method has 5 parameters. Parameters: portalId' user' width' height' showSuperUsers
Long Parameter List,DotNetNuke.Entities.Users,UserInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserInfo.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' currentScope' propertyNotFound
Long Parameter List,DotNetNuke.Entities.Modules.Actions,ModuleAction,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Actions\ModuleAction.cs,ModuleAction,The method has 5 parameters. Parameters: id' title' cmdName' cmdArg' icon
Long Parameter List,DotNetNuke.Entities.Modules.Actions,ModuleAction,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Actions\ModuleAction.cs,ModuleAction,The method has 6 parameters. Parameters: id' title' cmdName' cmdArg' icon' url
Long Parameter List,DotNetNuke.Entities.Modules.Actions,ModuleAction,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Actions\ModuleAction.cs,ModuleAction,The method has 7 parameters. Parameters: id' title' cmdName' cmdArg' icon' url' clientScript
Long Parameter List,DotNetNuke.Entities.Modules.Actions,ModuleAction,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Actions\ModuleAction.cs,ModuleAction,The method has 8 parameters. Parameters: id' title' cmdName' cmdArg' icon' url' clientScript' useActionEvent
Long Parameter List,DotNetNuke.Entities.Modules.Actions,ModuleAction,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Actions\ModuleAction.cs,ModuleAction,The method has 9 parameters. Parameters: id' title' cmdName' cmdArg' icon' url' clientScript' useActionEvent' secure
Long Parameter List,DotNetNuke.Entities.Modules.Actions,ModuleAction,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Actions\ModuleAction.cs,ModuleAction,The method has 10 parameters. Parameters: id' title' cmdName' cmdArg' icon' url' clientScript' useActionEvent' secure' visible
Long Parameter List,DotNetNuke.Entities.Modules.Actions,ModuleAction,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Actions\ModuleAction.cs,ModuleAction,The method has 11 parameters. Parameters: id' title' cmdName' cmdArg' icon' url' clientScript' useActionEvent' secure' visible' newWindow
Long Parameter List,DotNetNuke.Entities.Modules.Actions,ModuleActionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Actions\ModuleActionCollection.cs,Add,The method has 10 parameters. Parameters: ID' Title' CmdName' CmdArg' Icon' Url' UseActionEvent' Secure' Visible' NewWindow
Long Parameter List,DotNetNuke.Entities.Modules.Actions,ModuleActionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Actions\ModuleActionCollection.cs,Add,The method has 11 parameters. Parameters: ID' Title' CmdName' CmdArg' Icon' Url' ClientScript' UseActionEvent' Secure' Visible' NewWindow
Long Parameter List,DotNetNuke.Common.Internal,GlobalsImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Internal\GlobalsImpl.cs,LinkClick,The method has 8 parameters. Parameters: link' tabID' moduleID' trackClicks' forceDownload' portalId' enableUrlLanguage' portalGuid
Long Parameter List,DotNetNuke.Common.Internal,GlobalsImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Internal\GlobalsImpl.cs,NavigateURL,The method has 5 parameters. Parameters: tabID' isSuperTab' settings' controlKey' additionalParameters
Long Parameter List,DotNetNuke.Common.Internal,GlobalsImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Internal\GlobalsImpl.cs,NavigateURL,The method has 6 parameters. Parameters: tabID' isSuperTab' settings' controlKey' language' additionalParameters
Long Parameter List,DotNetNuke.Common.Internal,GlobalsImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Internal\GlobalsImpl.cs,NavigateURL,The method has 7 parameters. Parameters: tabID' isSuperTab' settings' controlKey' language' pageName' additionalParameters
Long Parameter List,DotNetNuke.Common.Internal,IGlobals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Internal\IGlobals.cs,LinkClick,The method has 8 parameters. Parameters: Link' TabID' ModuleID' TrackClicks' ForceDownload' PortalId' EnableUrlLanguage' portalGuid
Long Parameter List,DotNetNuke.Common.Internal,IGlobals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Internal\IGlobals.cs,NavigateURL,The method has 5 parameters. Parameters: tabID' isSuperTab' settings' controlKey' additionalParameters
Long Parameter List,DotNetNuke.Common.Internal,IGlobals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Internal\IGlobals.cs,NavigateURL,The method has 6 parameters. Parameters: tabID' isSuperTab' settings' controlKey' language' additionalParameters
Long Parameter List,DotNetNuke.Common.Internal,IGlobals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Internal\IGlobals.cs,NavigateURL,The method has 7 parameters. Parameters: tabID' isSuperTab' settings' controlKey' language' pageName' additionalParameters
Long Parameter List,DotNetNuke.Common.Utilities.Internal,RetryableAction,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\RetryableAction.cs,RetryableAction,The method has 5 parameters. Parameters: action' description' maxRetries' delay' delayMultiplier
Long Parameter List,DotNetNuke.Entities.Content.Workflow,IWorkflowLogger,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\IWorkflowLogger.cs,AddWorkflowLog,The method has 5 parameters. Parameters: contentItemId' workflowId' type' comment' userId
Long Parameter List,DotNetNuke.Entities.Content.Workflow,IWorkflowLogger,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\IWorkflowLogger.cs,AddWorkflowLog,The method has 5 parameters. Parameters: contentItemId' workflowId' action' comment' userId
Long Parameter List,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,SendNotificationToAuthor,The method has 5 parameters. Parameters: stateTransaction' state' workflow' contentItem' workflowActionType
Long Parameter List,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,SendNotificationToWorkflowStarter,The method has 5 parameters. Parameters: stateTransaction' workflow' contentItem' starterUserId' workflowActionType
Long Parameter List,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,SendNotificationsToReviewers,The method has 5 parameters. Parameters: contentItem' state' stateTransaction' workflowActionType' portalSettings
Long Parameter List,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,AddWorkflowLog,The method has 5 parameters. Parameters: contentItem' state' logType' userId' userComment
Long Parameter List,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,TryAddWorkflowLog,The method has 5 parameters. Parameters: contentItem' state' logType' userId' userComment
Long Parameter List,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,ReplaceNotificationTokens,The method has 6 parameters. Parameters: text' workflow' item' state' userId' comment
Long Parameter List,DotNetNuke.Entities.Content.Workflow,WorkflowLogger,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowLogger.cs,AddWorkflowLog,The method has 6 parameters. Parameters: contentItemId' workflowId' type' action' comment' userId
Long Parameter List,DotNetNuke.Entities.Content.Workflow,WorkflowLogger,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowLogger.cs,AddWorkflowLog,The method has 5 parameters. Parameters: contentItemId' workflowId' type' comment' userId
Long Parameter List,DotNetNuke.Entities.Content.Workflow,WorkflowLogger,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowLogger.cs,AddWorkflowLog,The method has 5 parameters. Parameters: contentItemId' workflowId' action' comment' userId
Long Parameter List,DotNetNuke.Entities.Host,HostPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Host\HostPropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' AccessingUser' CurrentScope' PropertyNotFound
Long Parameter List,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinition,The method has 7 parameters. Parameters: portalId' category' name' strType' length' defaultVisibility' types
Long Parameter List,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinition,The method has 8 parameters. Parameters: portalId' category' name' type' length' viewOrder' defaultVisibility' types
Long Parameter List,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,CreateLocalizedCopyInternal,The method has 5 parameters. Parameters: originalTab' locale' allTabsModulesFromDefault' clearCache' insertAfterOriginal
Long Parameter List,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,DeserializePanes,The method has 5 parameters. Parameters: nodePanes' portalId' tabId' mergeTabs' hModules
Long Parameter List,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,DeserializeTab,The method has 7 parameters. Parameters: tabNode' tab' tabs' portalId' isAdminTemplate' mergeTabs' modules
Long Parameter List,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,GetPortalTabs,The method has 6 parameters. Parameters: portalId' excludeTabId' includeNoneSpecified' includeHidden' includeDeleted' includeURL
Long Parameter List,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,GetPortalTabs,The method has 9 parameters. Parameters: portalId' excludeTabId' includeNoneSpecified' noneSpecifiedText' includeHidden' includeDeleted' includeURL' checkViewPermisison' checkEditPermission
Long Parameter List,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,GetPortalTabs,The method has 9 parameters. Parameters: tabs' excludeTabId' includeNoneSpecified' noneSpecifiedText' includeHidden' includeDeleted' includeURL' checkViewPermisison' checkEditPermission
Long Parameter List,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,GetPortalTabs,The method has 10 parameters. Parameters: tabs' excludeTabId' includeNoneSpecified' noneSpecifiedText' includeHidden' includeDeleted' includeURL' checkViewPermisison' checkEditPermission' includeDeletedChildren
Long Parameter List,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,SerializeTab,The method has 5 parameters. Parameters: tabXml' tabs' tab' portal' includeContent
Long Parameter List,DotNetNuke.Entities.Tabs,TabInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabInfo.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' currentScope' propertyNotFound
Long Parameter List,DotNetNuke.Entities.Tabs.TabVersions,TabVersionTracker,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionTracker.cs,CreateNewTabVersionDetailObjectFromModule,The method has 6 parameters. Parameters: tabVersionId' moduleId' paneName' moduleOrder' moduleVersion' action
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,BaseFriendlyUrl,The method has 5 parameters. Parameters: tab' path' pageName' httpAlias' settings
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImprovedFriendlyUrl,The method has 7 parameters. Parameters: tab' path' pageName' httpAlias' ignoreCustomRedirects' settings' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImprovedFriendlyUrlWithMessages,The method has 8 parameters. Parameters: tab' path' pageName' httpAlias' ignoreCustomRedirects' settings' messages' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,CreateFriendlyUrl,The method has 12 parameters. Parameters: portalAlias' newTabPath' newPath' pageAndExtension' newPageName' qs' langParms' messages' builtInUrl' changeToSiteRoot' dropLangParms' isHomePage
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,FriendlyUrlInternal,The method has 5 parameters. Parameters: tab' path' pageName' portalAlias' portalSettings
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyAlias,The method has 6 parameters. Parameters: path' httpAlias' portalId' settings' portalSettings' cultureSpecificAlias
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrl,The method has 8 parameters. Parameters: tab' friendlyPath' pageName' portalSettings' ignoreCustomRedirects' cultureSpecificAlias' settings' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The method has 9 parameters. Parameters: tab' friendlyPath' pageName' portalSettings' ignoreCustomRedirects' settings' messages' cultureSpecificAlias' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,OutputFriendlyUrlMessages,The method has 6 parameters. Parameters: tab' path' method' messages' resultUrl' settings
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessTestRequestWithContext,The method has 5 parameters. Parameters: context' requestUri' useFriendlyUrls' result' settings
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,GetPortalAlias,The method has 5 parameters. Parameters: settings' requestUrl' redirectAlias' isPrimaryAlias' wrongAlias
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The method has 7 parameters. Parameters: context' requestUri' useFriendlyUrls' result' settings' allowSettingsChange' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,Handle404OrException,The method has 6 parameters. Parameters: settings' context' ex' result' transfer' showDebug
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForTabExternalForwardOrRedirect,The method has 5 parameters. Parameters: context' result' response' settings' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForSecureRedirect,The method has 5 parameters. Parameters: portalSettings' requestUri' result' queryStringCol' settings
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IsPortalAliasIncorrect,The method has 8 parameters. Parameters: context' request' requestUri' result' queryStringCol' settings' parentTraceId' httpAlias
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ConfigurePortalAliasRedirect,The method has 6 parameters. Parameters: result' wrongAlias' rightAlias' ignoreCustomAliasTabs' internalAliases' settings
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ConfigurePortalAliasRedirect,The method has 7 parameters. Parameters: result' wrongAlias' rightAlias' ignoreCustomAliasTabs' redirectReason' internalAliases' settings
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IdentifyPortalAlias,The method has 7 parameters. Parameters: context' request' requestUri' result' queryStringCol' settings' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRewrite,The method has 8 parameters. Parameters: fullUrl' querystring' result' useFriendlyUrls' queryStringCol' settings' isPhysicalResource' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The method has 7 parameters. Parameters: requestUri' fullUrl' queryStringCol' result' requestType' settings' portalHomeTabId
Long Parameter List,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckFor301RedirectExclusion,The method has 5 parameters. Parameters: tabId' portalId' checkBaseUrls' tab' settings
Long Parameter List,DotNetNuke.Entities.Urls,BasicFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\BasicFriendlyUrlProvider.cs,FriendlyUrl,The method has 5 parameters. Parameters: tab' path' pageName' portalAlias' portalSettings
Long Parameter List,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,SetPageCache,The method has 5 parameters. Parameters: key' value' dependency' settings' callback
Long Parameter List,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,GetProvidersForTabAndPortal,The method has 5 parameters. Parameters: tabId' portalId' settings' noSuchProvider' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,StoreFriendlyUrlIndexInCache,The method has 5 parameters. Parameters: urlDict' urlPortals' customAliasTabs' settings' reason
Long Parameter List,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,The method has 5 parameters. Parameters: actions' fileName' portalId' portalSpecific' messages
Long Parameter List,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,The method has 5 parameters. Parameters: actions' fileName' portalId' portalSpecific' messages
Long Parameter List,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,The method has 5 parameters. Parameters: actions' fileName' portalId' portalSpecific' messages
Long Parameter List,DotNetNuke.Entities.Urls,CustomUrlDictController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CustomUrlDictController.cs,AddEntryToDictionary,The method has 5 parameters. Parameters: existingTabs' portalId' tab' cultureKey' url
Long Parameter List,DotNetNuke.Entities.Urls,CustomUrlDictController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CustomUrlDictController.cs,FetchCustomUrlDictionary,The method has 6 parameters. Parameters: portalId' forceRebuild' bypassCache' settings' customAliasForTabs' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,ExtensionUrlProviderController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProviderController.cs,CheckForRedirect,The method has 7 parameters. Parameters: requestUri' result' queryStringCol' settings' location' messages' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,ExtensionUrlProviderController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProviderController.cs,GetUrlFromExtensionUrlProviders,The method has 10 parameters. Parameters: portalId' tab' settings' friendlyUrlPath' cultureCode' endingPageName' changedPath' changeToSiteRoot' messages' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,ExtensionUrlProviderController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProviderController.cs,TransformFriendlyUrlPath,The method has 10 parameters. Parameters: newUrl' tabKeyVal' urlParms' isSiteRootMatch' result' settings' rewrittenUrl' newAction' messages' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,ExtensionUrlProviderController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProviderController.cs,LogModuleProviderExceptionInRequest,The method has 5 parameters. Parameters: ex' status' provider' result' messages
Long Parameter List,DotNetNuke.Entities.Urls,FriendlyUrlPathController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlPathController.cs,SplitUserIdFromFriendlyUrlPath,The method has 5 parameters. Parameters: urlPath' parmName' otherParametersPath' rawUserId' remainingPath
Long Parameter List,DotNetNuke.Entities.Urls,FriendlyUrlPathController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlPathController.cs,CheckParameterRegexReplacement,The method has 8 parameters. Parameters: parameterPath' tab' settings' portalId' replacedPath' messages' changeToSiteRoot' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,FriendlyUrlPathController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlPathController.cs,CheckUserProfileReplacement,The method has 10 parameters. Parameters: newPath' tab' portalSettings' settings' options' changedPath' changeToSiteRoot' allowOtherParameters' meessages' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,ExtensionUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProvider.cs,ChangeFriendlyUrl,The method has 7 parameters. Parameters: tab' friendlyUrlPath' options' cultureCode' endingPageName' useDnnPagePath' messages
Long Parameter List,DotNetNuke.Entities.Urls,ExtensionUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProvider.cs,CheckForRedirect,The method has 8 parameters. Parameters: tabId' portalid' httpAlias' requestUri' queryStringCol' options' redirectLocation' messages
Long Parameter List,DotNetNuke.Entities.Urls,ExtensionUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProvider.cs,TransformFriendlyUrlToQueryString,The method has 9 parameters. Parameters: urlParms' tabId' portalId' options' cultureCode' portalAlias' messages' status' location
Long Parameter List,DotNetNuke.Entities.Urls,RedirectController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectController.cs,CheckForModuleProviderRedirect,The method has 5 parameters. Parameters: requestUri' result' queryStringCol' settings' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,RedirectController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectController.cs,GetTabRedirectUrl,The method has 6 parameters. Parameters: tab' settings' cleanPath' result' permRedirect' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,RedirectTokens,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectTokens.cs,DetermineRedirectReasonAndAction,The method has 7 parameters. Parameters: rewrittenUrl' result' wasParms' settings' newUrl' reason' action
Long Parameter List,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,CheckIfPortalAlias,The method has 5 parameters. Parameters: url' querystringCol' result' settings' tabDict
Long Parameter List,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,CheckTabPath,The method has 5 parameters. Parameters: tabKeyVal' result' settings' tabDict' newUrl
Long Parameter List,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,RewriteParametersFromModuleProvider,The method has 10 parameters. Parameters: newUrl' tabKeyVal' urlParms' isSiteRootMatch' result' settings' rewriteParms' newAction' messages' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,AddSkinToRewritePath,The method has 5 parameters. Parameters: tabId' portalId' rewritePath' skin' message
Long Parameter List,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,GetTabFromDictionary,The method has 5 parameters. Parameters: url' querystringCol' settings' result' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,IdentifyByPhysicalResource,The method has 9 parameters. Parameters: physicalPath' fullUrl' queryStringCol' result' useFriendlyUrls' settings' isPhysicalResource' checkFurtherForRewrite' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,IdentifyByRegEx,The method has 6 parameters. Parameters: absoluteUri' queryString' applicationPath' result' settings' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,IdentifyByTabPathEx,The method has 6 parameters. Parameters: absoluteUri' queryString' result' queryStringCol' settings' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,RewriteParameters,The method has 7 parameters. Parameters: newUrl' tabKeyVal' urlParms' result' langParms' settings' cultureCode
Long Parameter List,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,RewriteParameters,The method has 7 parameters. Parameters: newUrl' tabKeyVal' urlParms' isSiteRoot' urlAction' rewriteParms' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddCustomRedirectsToDictionary,The method has 11 parameters. Parameters: tabIndex' dupCheck' httpAlias' tab' settings' options' rewritePath' tabPathDepth' customHttpAliasesUsed' isDeleted' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddPermanentRedirectToDictionary,The method has 9 parameters. Parameters: tabIndex' dupCheck' httpAlias' tab' tabPath' rewritePath' tabPathDepth' checkForDupUrls' isDeleted
Long Parameter List,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddSiteRootRedirects,The method has 6 parameters. Parameters: pathSizes' tabIndex' chosenAliases' hasSiteRootRedirect' dupCheck' usingHttpAliases
Long Parameter List,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddStandardPagesToDict,The method has 5 parameters. Parameters: tabIndex' dupCheck' httpAlias' portalId' cultureCode
Long Parameter List,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddTabToTabDict,The method has 14 parameters. Parameters: tabIndex' dupCheck' httpAlias' aliasCulture' customHttpAlias' thisPortal' tabPath' customAliasesUsed' tab' settings' options' homeTabId' homePageSkins' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddToTabDict,The method has 10 parameters. Parameters: tabIndex' dupCheckDict' httpAlias' tabPath' rewrittenPath' tabId' keyDupAction' tabPathDepth' checkForDupUrls' isDeleted
Long Parameter List,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,BuildTabDictionary,The method has 7 parameters. Parameters: pathSizes' settings' buildPortalId' tabIndex' homePageSkins' portalTabPathDictionary' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,ManageCustomAliases,The method has 6 parameters. Parameters: tabCulture' thisPortal' tab' httpAliases' customHttpAliasesUsed' customAliasUsed
Long Parameter List,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,FetchTabDictionary,The method has 9 parameters. Parameters: portalId' minTabPathDepth' maxTabPathDepth' minAliasPathDepth' maxAliasPathDepth' settings' forceRebuild' bypassCache' parentTraceId
Long Parameter List,DotNetNuke.Entities.Urls,TabPathHelper,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabPathController.cs,GetTabPath,The method has 13 parameters. Parameters: tab' settings' options' ignoreCustomRedirects' homePageSiteRoot' isHomeTab' cultureCode' isDefaultCultureCode' hasPath' dropLangParms' customHttpAlias' isCustomPath' parentTraceId
Long Parameter List,DotNetNuke.Framework,Reflection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\Reflection.cs,CreateObject,The method has 5 parameters. Parameters: ObjectProviderType' ObjectProviderName' ObjectNamespace' ObjectAssemblyName' UseCache
Long Parameter List,DotNetNuke.Framework,Reflection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\Reflection.cs,CreateObject,The method has 6 parameters. Parameters: ObjectProviderType' ObjectProviderName' ObjectNamespace' ObjectAssemblyName' UseCache' fixAssemblyName
Long Parameter List,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,ValidateLogin,The method has 7 parameters. Parameters: username' authType' user' loginStatus' password' bValid' portalId
Long Parameter List,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,GetUsers,The method has 6 parameters. Parameters: portalId' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,GetUsersAdvancedSearch,The method has 12 parameters. Parameters: portalId' userId' filterUserId' filterRoleId' relationshipTypeId' isAdmin' pageIndex' pageSize' sortColumn' sortAscending' propertyNames' propertyValues
Long Parameter List,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,GetUsersBasicSearch,The method has 7 parameters. Parameters: portalId' pageIndex' pageSize' sortColumn' sortAscending' propertyName' propertyValue
Long Parameter List,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,GetUsersByEmail,The method has 5 parameters. Parameters: portalId' emailToMatch' pageIndex' pageSize' totalRecords
Long Parameter List,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,GetUsersByEmail,The method has 7 parameters. Parameters: portalId' emailToMatch' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,GetUsersByUserName,The method has 5 parameters. Parameters: portalId' userNameToMatch' pageIndex' pageSize' totalRecords
Long Parameter List,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,GetUsersByUserName,The method has 7 parameters. Parameters: portalId' userNameToMatch' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,GetUsersByDisplayName,The method has 7 parameters. Parameters: portalId' nameToMatch' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,GetUsersByProfileProperty,The method has 6 parameters. Parameters: portalId' propertyName' propertyValue' pageIndex' pageSize' totalRecords
Long Parameter List,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,GetUsersByProfileProperty,The method has 8 parameters. Parameters: portalId' propertyName' propertyValue' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,UserLogin,The method has 5 parameters. Parameters: portalId' username' password' verificationCode' loginStatus
Long Parameter List,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,UserLogin,The method has 6 parameters. Parameters: portalId' username' password' authType' verificationCode' loginStatus
Long Parameter List,DotNetNuke.Security.Membership,MembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\MembershipProvider.cs,UserLogin,The method has 5 parameters. Parameters: portalId' username' password' verificationCode' loginStatus
Long Parameter List,DotNetNuke.Security.Membership,MembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\MembershipProvider.cs,UserLogin,The method has 6 parameters. Parameters: portalId' username' password' authType' verificationCode' loginStatus
Long Parameter List,DotNetNuke.Security.Membership,MembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\MembershipProvider.cs,GetUsersByEmail,The method has 5 parameters. Parameters: portalId' emailToMatch' pageIndex' pageSize' totalRecords
Long Parameter List,DotNetNuke.Security.Membership,MembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\MembershipProvider.cs,GetUsersByUserName,The method has 5 parameters. Parameters: portalId' userNameToMatch' pageIndex' pageSize' totalRecords
Long Parameter List,DotNetNuke.Security.Membership,MembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\MembershipProvider.cs,GetUsersByProfileProperty,The method has 6 parameters. Parameters: portalId' propertyName' propertyValue' pageIndex' pageSize' totalRecords
Long Parameter List,DotNetNuke.Security.Membership,MembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\MembershipProvider.cs,GetUsers,The method has 6 parameters. Parameters: portalId' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Security.Membership,MembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\MembershipProvider.cs,GetUsersByEmail,The method has 7 parameters. Parameters: portalId' emailToMatch' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Security.Membership,MembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\MembershipProvider.cs,GetUsersByUserName,The method has 7 parameters. Parameters: portalId' userNameToMatch' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Security.Membership,MembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\MembershipProvider.cs,GetUsersByDisplayName,The method has 7 parameters. Parameters: portalId' nameToMatch' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Security.Membership,MembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\MembershipProvider.cs,GetUsersByProfileProperty,The method has 8 parameters. Parameters: portalId' propertyName' propertyValue' pageIndex' pageSize' totalRecords' includeDeleted' superUsersOnly
Long Parameter List,DotNetNuke.Security.Membership,MembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\MembershipProvider.cs,GetUsersAdvancedSearch,The method has 12 parameters. Parameters: portalId' userId' filterUserId' filterRoleId' relationTypeId' isAdmin' pageIndex' pageSize' sortColumn' sortAscending' propertyNames' propertyValues
Long Parameter List,DotNetNuke.Security.Membership,MembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\MembershipProvider.cs,GetUsersBasicSearch,The method has 7 parameters. Parameters: portalId' pageIndex' pageSize' sortColumn' sortAscending' propertyName' propertyValue
Long Parameter List,DotNetNuke.Security.Roles,IRoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\IRoleController.cs,AddUserRole,The method has 7 parameters. Parameters: portalId' userId' roleId' status' isOwner' effectiveDate' expiryDate
Long Parameter List,DotNetNuke.Security.Roles,IRoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\IRoleController.cs,UpdateUserRole,The method has 6 parameters. Parameters: portalId' userId' roleId' status' isOwner' cancel
Long Parameter List,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,AddUserRole,The method has 7 parameters. Parameters: portalId' userId' roleId' status' isOwner' effectiveDate' expiryDate
Long Parameter List,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,UpdateUserRole,The method has 6 parameters. Parameters: portalId' userId' roleId' status' isOwner' cancel
Long Parameter List,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,AddUserRole,The method has 8 parameters. Parameters: user' role' portalSettings' status' effectiveDate' expiryDate' notifyUser' isOwner
Long Parameter List,DotNetNuke.Security.Roles,RoleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleInfo.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' accessLevel' propertyNotFound
Long Parameter List,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,GetFolderContent,The method has 5 parameters. Parameters: folderId' startIndex' numItems' sortExpression' subfolderFilter
Long Parameter List,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,SearchFolderContent,The method has 6 parameters. Parameters: folderId' pattern' startIndex' numItems' sortExpression' subfolderFilter
Long Parameter List,DotNetNuke.Services.Assets,IAssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\IAssetManager.cs,GetFolderContent,The method has 5 parameters. Parameters: folderId' startIndex' numItems' sortExpression' subfolderFilter
Long Parameter List,DotNetNuke.Services.Assets,IAssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\IAssetManager.cs,SearchFolderContent,The method has 6 parameters. Parameters: folderId' pattern' startIndex' numItems' sortExpression' subfolderFilter
Long Parameter List,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,GenerateSignatureBase,The method has 9 parameters. Parameters: url' token' callbackurl' oauthVerifier' httpMethod' timeStamp' nonce' normalizedUrl' requestParameters
Long Parameter List,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,AuthenticateUser,The method has 5 parameters. Parameters: user' settings' IPAddress' addCustomProperties' onAuthenticated
Long Parameter List,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,GenerateSignature,The method has 10 parameters. Parameters: url' token' tokenSecret' callbackurl' oauthVerifier' httpMethod' timeStamp' nonce' normalizedUrl' requestParameters
Long Parameter List,DotNetNuke.Services.FileSystem,FileVersionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileVersionController.cs,AddFileVersion,The method has 5 parameters. Parameters: file' userId' published' removeOldestVersions' content
Long Parameter List,DotNetNuke.Services.FileSystem,IFileVersionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\IFileVersionController.cs,AddFileVersion,The method has 5 parameters. Parameters: file' userId' published' removeOldestVersions' content
Long Parameter List,DotNetNuke.Services.FileSystem,IFileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\IFileManager.cs,AddFile,The method has 6 parameters. Parameters: folder' fileName' fileContent' overwrite' checkPermissions' contentType
Long Parameter List,DotNetNuke.Services.FileSystem,IFileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\IFileManager.cs,AddFile,The method has 7 parameters. Parameters: folder' fileName' fileContent' overwrite' checkPermissions' contentType' createdByUserID
Long Parameter List,DotNetNuke.Services.FileSystem,IFileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\IFileManager.cs,AddFile,The method has 8 parameters. Parameters: folder' fileName' fileContent' overwrite' checkPermissions' ignoreWhiteList' contentType' createdByUserID
Long Parameter List,DotNetNuke.Services.FileSystem,FileInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileInfo.cs,FileInfo,The method has 11 parameters. Parameters: portalId' filename' extension' filesize' width' height' contentType' folder' folderId' storageLocation' cached
Long Parameter List,DotNetNuke.Services.FileSystem,FileInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileInfo.cs,FileInfo,The method has 12 parameters. Parameters: portalId' filename' extension' filesize' width' height' contentType' folder' folderId' storageLocation' cached' hash
Long Parameter List,DotNetNuke.Services.FileSystem,FileInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileInfo.cs,FileInfo,The method has 14 parameters. Parameters: uniqueId' versionGuid' portalId' filename' extension' filesize' width' height' contentType' folder' folderId' storageLocation' cached' hash
Long Parameter List,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,AddFile,The method has 6 parameters. Parameters: folder' fileName' fileContent' overwrite' checkPermissions' contentType
Long Parameter List,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,AddFile,The method has 7 parameters. Parameters: folder' fileName' fileContent' overwrite' checkPermissions' contentType' createdByUserID
Long Parameter List,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,AddFile,The method has 8 parameters. Parameters: folder' fileName' fileContent' overwrite' checkPermissions' ignoreWhiteList' contentType' createdByUserID
Long Parameter List,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,NotifyFileAddingEvents,The method has 5 parameters. Parameters: folder' createdByUserID' fileExists' folderWorkflow' file
Long Parameter List,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,CheckFileWritingRestrictions,The method has 5 parameters. Parameters: folder' fileName' fileContent' oldFile' createdByUserId
Long Parameter List,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,UpdateWhileApproving,The method has 5 parameters. Parameters: folder' createdByUserID' file' oldFile' content
Long Parameter List,DotNetNuke.Services.GeneratedImage.ImageQuantization,Quantizer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageQuantization\Quantizer.cs,SecondPass,The method has 5 parameters. Parameters: sourceData' output' width' height' bounds
Long Parameter List,DotNetNuke.Services.Installer.Installers,AssemblyInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\AssemblyInstaller.cs,GetXmlMergeDoc,The method has 5 parameters. Parameters: xmlMergePath' name' publicKeyToken' oldVersion' newVersion
Long Parameter List,DotNetNuke.Services.Installer.Installers,AssemblyInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\AssemblyInstaller.cs,ReplaceInAttributeValue,The method has 5 parameters. Parameters: parentNode' namespaceManager' xpath' oldValue' newValue
Long Parameter List,DotNetNuke.Services.Localization,ILocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\ILocalizationProvider.cs,GetString,The method has 5 parameters. Parameters: key' resourceFileRoot' language' portalSettings' disableShowMissingKeys
Long Parameter List,DotNetNuke.Services.Localization,ILocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\ILocalizationProvider.cs,SaveString,The method has 8 parameters. Parameters: key' value' resourceFileRoot' language' portalSettings' resourceType' addFile' addKey
Long Parameter List,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,GetString,The method has 5 parameters. Parameters: key' resourceFileRoot' language' portalSettings' disableShowMissingKeys
Long Parameter List,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,SaveString,The method has 8 parameters. Parameters: key' value' resourceFileRoot' language' portalSettings' resourceType' createFile' createKey
Long Parameter List,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,TryGetFromResourceFile,The method has 7 parameters. Parameters: key' resourceFile' userLanguage' fallbackLanguage' defaultLanguage' portalID' resourceValue
Long Parameter List,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,TryGetStringInternal,The method has 5 parameters. Parameters: key' userLanguage' resourceFile' portalSettings' resourceValue
Long Parameter List,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,TryGetFromResourceFile,The method has 5 parameters. Parameters: key' resourceFile' portalID' resourceType' resourceValue
Long Parameter List,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,GetString,The method has 5 parameters. Parameters: key' resourceFileRoot' portalSettings' language' disableShowMissingKeys
Long Parameter List,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,GetSystemMessage,The method has 5 parameters. Parameters: portalSettings' messageName' userInfo' resourceFile' custom
Long Parameter List,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,GetSystemMessage,The method has 6 parameters. Parameters: strLanguage' portalSettings' messageName' userInfo' resourceFile' custom
Long Parameter List,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,GetSystemMessage,The method has 8 parameters. Parameters: strLanguage' portalSettings' messageName' userInfo' resourceFile' custom' customCaption' accessingUserID
Long Parameter List,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,GetSystemMessage,The method has 9 parameters. Parameters: strLanguage' portalSettings' messageName' userInfo' resourceFile' customArray' customDictionary' customCaption' accessingUserID
Long Parameter List,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,LoadCultureDropDownList,The method has 5 parameters. Parameters: list' displayType' selectedValue' filter' host
Long Parameter List,DotNetNuke.Services.Log.EventLog,ILogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\ILogController.cs,GetLogs,The method has 5 parameters. Parameters: portalID' logType' pageSize' pageIndex' totalRecords
Long Parameter List,DotNetNuke.Services.Log.EventLog,DBLoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\DBLoggingProvider.cs,AddLogType,The method has 5 parameters. Parameters: logTypeKey' logTypeFriendlyName' logTypeDescription' logTypeCSSClass' logTypeOwner
Long Parameter List,DotNetNuke.Services.Log.EventLog,DBLoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\DBLoggingProvider.cs,AddLogTypeConfigInfo,The method has 12 parameters. Parameters: id' loggingIsActive' logTypeKey' logTypePortalID' keepMostRecent' logFileName' emailNotificationIsActive' threshold' thresholdTime' thresholdTimeType' mailFromAddress' mailToAddress
Long Parameter List,DotNetNuke.Services.Log.EventLog,DBLoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\DBLoggingProvider.cs,GetLogs,The method has 5 parameters. Parameters: portalID' logType' pageSize' pageIndex' totalRecords
Long Parameter List,DotNetNuke.Services.Log.EventLog,DBLoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\DBLoggingProvider.cs,UpdateLogType,The method has 5 parameters. Parameters: logTypeKey' logTypeFriendlyName' logTypeDescription' logTypeCSSClass' logTypeOwner
Long Parameter List,DotNetNuke.Services.Log.EventLog,DBLoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\DBLoggingProvider.cs,UpdateLogTypeConfigInfo,The method has 12 parameters. Parameters: id' loggingIsActive' logTypeKey' logTypePortalID' keepMostRecent' logFileName' emailNotificationIsActive' threshold' thresholdTime' thresholdTimeType' mailFromAddress' mailToAddress
Long Parameter List,DotNetNuke.Services.Log.EventLog,IEventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\IEventLogController.cs,AddLog,The method has 5 parameters. Parameters: propertyName' propertyValue' portalSettings' userID' logType
Long Parameter List,DotNetNuke.Services.Log.EventLog,IEventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\IEventLogController.cs,AddLog,The method has 5 parameters. Parameters: propertyName' propertyValue' portalSettings' userID' logType
Long Parameter List,DotNetNuke.Services.Log.EventLog,IEventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\IEventLogController.cs,AddLog,The method has 5 parameters. Parameters: properties' portalSettings' userID' logTypeKey' bypassBuffering
Long Parameter List,DotNetNuke.Services.Log.EventLog,IEventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\IEventLogController.cs,AddLog,The method has 5 parameters. Parameters: businessObject' portalSettings' userID' userName' logType
Long Parameter List,DotNetNuke.Services.Log.EventLog,IEventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\IEventLogController.cs,AddLog,The method has 5 parameters. Parameters: businessObject' portalSettings' userID' userName' logType
Long Parameter List,DotNetNuke.Services.Log.EventLog,EventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\EventLogController.cs,AddLog,The method has 5 parameters. Parameters: propertyName' propertyValue' portalSettings' userID' logType
Long Parameter List,DotNetNuke.Services.Log.EventLog,EventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\EventLogController.cs,AddLog,The method has 5 parameters. Parameters: propertyName' propertyValue' portalSettings' userID' logType
Long Parameter List,DotNetNuke.Services.Log.EventLog,EventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\EventLogController.cs,AddLog,The method has 5 parameters. Parameters: properties' portalSettings' userID' logTypeKey' bypassBuffering
Long Parameter List,DotNetNuke.Services.Log.EventLog,EventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\EventLogController.cs,AddLog,The method has 5 parameters. Parameters: businessObject' portalSettings' userID' userName' logType
Long Parameter List,DotNetNuke.Services.Log.EventLog,EventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\EventLogController.cs,AddLog,The method has 5 parameters. Parameters: businessObject' portalSettings' userID' userName' logType
Long Parameter List,DotNetNuke.Services.Log.EventLog,EventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\EventLogController.cs,GetLogs,The method has 5 parameters. Parameters: portalID' logType' pageSize' pageIndex' totalRecords
Long Parameter List,DotNetNuke.Services.Log.EventLog,EventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\EventLogController.cs,AddSettingLog,The method has 6 parameters. Parameters: logTypeKey' idFieldName' idValue' settingName' settingValue' userId
Long Parameter List,DotNetNuke.Services.Log.EventLog,LogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogController.cs,GetLogs,The method has 5 parameters. Parameters: portalID' logType' pageSize' pageIndex' totalRecords
Long Parameter List,DotNetNuke.Services.Log.EventLog,LoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LoggingProvider.cs,AddLogType,The method has 5 parameters. Parameters: logTypeKey' logTypeFriendlyName' logTypeDescription' logTypeCSSClass' logTypeOwner
Long Parameter List,DotNetNuke.Services.Log.EventLog,LoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LoggingProvider.cs,AddLogTypeConfigInfo,The method has 12 parameters. Parameters: id' loggingIsActive' logTypeKey' logTypePortalID' keepMostRecent' logFileName' emailNotificationIsActive' threshold' notificationThresholdTime' notificationThresholdTimeType' mailFromAddress' mailToAddress
Long Parameter List,DotNetNuke.Services.Log.EventLog,LoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LoggingProvider.cs,GetLogs,The method has 5 parameters. Parameters: portalID' logType' pageSize' pageIndex' totalRecords
Long Parameter List,DotNetNuke.Services.Log.EventLog,LoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LoggingProvider.cs,UpdateLogType,The method has 5 parameters. Parameters: logTypeKey' logTypeFriendlyName' logTypeDescription' logTypeCSSClass' logTypeOwner
Long Parameter List,DotNetNuke.Services.Log.EventLog,LoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LoggingProvider.cs,UpdateLogTypeConfigInfo,The method has 12 parameters. Parameters: id' loggingIsActive' logTypeKey' logTypePortalID' keepMostRecent' logFileName' emailNotificationIsActive' threshold' notificationThresholdTime' notificationThresholdTimeType' mailFromAddress' mailToAddress
Long Parameter List,DotNetNuke.Services.OutputCache.Providers,DatabaseProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\DatabaseProvider.cs,GetResponseFilter,The method has 5 parameters. Parameters: tabId' maxVaryByCount' responseFilter' cacheKey' cacheDuration
Long Parameter List,DotNetNuke.Services.OutputCache.Providers,DatabaseResponseFilter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\DatabaseResponseFilter.cs,DatabaseResponseFilter,The method has 5 parameters. Parameters: itemId' maxVaryByCount' filterChain' cacheKey' cacheDuration
Long Parameter List,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,GetResponseFilter,The method has 5 parameters. Parameters: tabId' maxVaryByCount' responseFilter' cacheKey' cacheDuration
Long Parameter List,DotNetNuke.Services.OutputCache.Providers,FileResponseFilter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileResponseFilter.cs,FileResponseFilter,The method has 5 parameters. Parameters: itemId' maxVaryByCount' filterChain' cacheKey' cacheDuration
Long Parameter List,DotNetNuke.Services.OutputCache.Providers,MemoryProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\MemoryProvider.cs,GetResponseFilter,The method has 5 parameters. Parameters: tabId' maxVaryByCount' responseFilter' cacheKey' cacheDuration
Long Parameter List,DotNetNuke.Services.OutputCache.Providers,MemoryResponseFilter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\MemoryResponseFilter.cs,MemoryResponseFilter,The method has 5 parameters. Parameters: itemId' maxVaryByCount' filterChain' cacheKey' cacheDuration
Long Parameter List,DotNetNuke.Services.Search.Internals,ISearchHelper,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\ISearchHelper.cs,UpdateSynonymsGroup,The method has 5 parameters. Parameters: synonymsGroupId' synonymsTags' portalId' cultureCode' duplicateWord
Long Parameter List,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,UpdateSynonymsGroup,The method has 5 parameters. Parameters: synonymsGroupId' synonymsTags' portalId' cultureCode' duplicateWord
Long Parameter List,DotNetNuke.Services.Search.Internals,LuceneControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneControllerImpl.cs,GetHighlightedText,The method has 6 parameters. Parameters: highlighter' fieldQuery' searcher' match' tag' length
Long Parameter List,DotNetNuke.Services.Search,UserIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\UserIndexer.cs,FindModifiedUsers,The method has 6 parameters. Parameters: portalId' startDateLocal' searchDocuments' profileDefinitions' indexedUsers' startUserId
Long Parameter List,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The method has 5 parameters. Parameters: message' roles' users' fileIDs' sender
Long Parameter List,DotNetNuke.Services.Social.Messaging,IMessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\IMessagingController.cs,SendMessage,The method has 5 parameters. Parameters: message' roles' users' fileIDs' sender
Long Parameter List,DotNetNuke.Services.Social.Subscriptions.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Subscriptions\Data\DataService.cs,AddSubscription,The method has 8 parameters. Parameters: userId' portalId' subscriptionTypeId' objectKey' description' moduleId' tabId' objectData
Long Parameter List,DotNetNuke.Services.Social.Subscriptions.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Subscriptions\Data\DataService.cs,IsSubscribed,The method has 6 parameters. Parameters: portalId' userId' subscriptionTypeId' objectKey' moduleId' tabId
Long Parameter List,DotNetNuke.Services.Social.Subscriptions.Data,IDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Subscriptions\Data\IDataService.cs,AddSubscription,The method has 8 parameters. Parameters: userId' portalId' subscriptionTypeId' objectKey' description' moduleId' tabId' objectData
Long Parameter List,DotNetNuke.Services.Social.Subscriptions.Data,IDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Subscriptions\Data\IDataService.cs,IsSubscribed,The method has 6 parameters. Parameters: portalId' userId' subscriptionTypeId' objectKey' moduleId' tabId
Long Parameter List,DotNetNuke.Services.Tokens,AntiForgeryTokenPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\AntiForgeryTokenPropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' accessLevel' propertyNotFound
Long Parameter List,DotNetNuke.Services.Tokens,JsonPropertyAccess<TModel>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\JsonPropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' accessLevel' propertyNotFound
Long Parameter List,DotNetNuke.Services.Tokens,ArrayListPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\ArrayListPropertyAccesss.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' AccessingUser' AccessLevel' PropertyNotFound
Long Parameter List,DotNetNuke.Services.Tokens,CulturePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\CulturePropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' AccessingUser' AccessLevel' PropertyNotFound
Long Parameter List,DotNetNuke.Services.Tokens,DataRowPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\DataRowPropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' AccessingUser' AccessLevel' PropertyNotFound
Long Parameter List,DotNetNuke.Services.Tokens,DateTimePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\DateTimePropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' AccessingUser' AccessLevel' PropertyNotFound
Long Parameter List,DotNetNuke.Services.Tokens,DictionaryPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\DictionaryPropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' AccessingUser' AccessLevel' PropertyNotFound
Long Parameter List,DotNetNuke.Services.Tokens,EmptyPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\EmptyPropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' AccessingUser' AccessLevel' PropertyNotFound
Long Parameter List,DotNetNuke.Services.Tokens,IPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\IPropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' accessLevel' propertyNotFound
Long Parameter List,DotNetNuke.Services.Tokens,PropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\PropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' AccessingUser' AccessLevel' PropertyNotFound
Long Parameter List,DotNetNuke.Services.Tokens,PropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\PropertyAccess.cs,GetObjectProperty,The method has 5 parameters. Parameters: objObject' strPropertyName' strFormat' formatProvider' PropertyNotFound
Long Parameter List,DotNetNuke.Services.Tokens,TicksPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\TicksPropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' AccessingUser' AccessLevel' PropertyNotFound
Long Parameter List,DotNetNuke.Services.Tokens,TokenReplace,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\TokenReplace.cs,TokenReplace,The method has 5 parameters. Parameters: accessLevel' language' portalSettings' user' moduleID
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddAdminPages,The method has 8 parameters. Parameters: tabName' description' tabIconFile' tabIconFileLarge' isVisible' moduleDefId' moduleTitle' moduleIconFile
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleControl,The method has 8 parameters. Parameters: moduleDefId' controlKey' controlTitle' controlSrc' iconFile' controlType' viewOrder' helpURL
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleControl,The method has 9 parameters. Parameters: moduleDefId' controlKey' controlTitle' controlSrc' iconFile' controlType' viewOrder' helpURL' supportsPartialRendering
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleDefinition,The method has 5 parameters. Parameters: desktopModuleName' description' moduleDefinitionName' premium' admin
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleDefinition,The method has 7 parameters. Parameters: desktopModuleName' description' moduleDefinitionName' businessControllerClass' isPortable' premium' admin
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddPage,The method has 8 parameters. Parameters: parentTab' tabName' description' tabIconFile' tabIconFileLarge' isVisible' permissions' isAdmin
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddPage,The method has 9 parameters. Parameters: portalId' parentId' tabName' description' tabIconFile' tabIconFileLarge' isVisible' permissions' isAdmin
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddAdminPages,The method has 9 parameters. Parameters: tabName' description' tabIconFile' tabIconFileLarge' isVisible' moduleDefId' moduleTitle' moduleIconFile' inheritPermissions
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddAdminPage,The method has 6 parameters. Parameters: portal' tabName' description' tabIconFile' tabIconFileLarge' isVisible
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddHostPage,The method has 5 parameters. Parameters: tabName' description' tabIconFile' tabIconFileLarge' isVisible
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleControl,The method has 7 parameters. Parameters: moduleDefId' controlKey' controlTitle' controlSrc' iconFile' controlType' viewOrder
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleToPage,The method has 5 parameters. Parameters: page' moduleDefId' moduleTitle' moduleIconFile' inheritPermissions
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleToPage,The method has 7 parameters. Parameters: page' moduleDefId' moduleTitle' moduleIconFile' inheritPermissions' displayTitle' paneName
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleToPage,The method has 6 parameters. Parameters: tabPath' portalId' moduleDefId' moduleTitle' moduleIconFile' inheritPermissions
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleToPages,The method has 5 parameters. Parameters: tabPath' moduleDefId' moduleTitle' moduleIconFile' inheritPermissions
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,CreateUserInfo,The method has 5 parameters. Parameters: firstName' lastName' userName' password' email
Long Parameter List,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeIndicator,The method has 6 parameters. Parameters: version' packageType' packageName' culture' isLocal' isSecureConnection
Long Parameter List,DotNetNuke.Services.Cache,FBCachingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cache\FBCachingProvider.cs,Insert,The method has 7 parameters. Parameters: cacheKey' itemToCache' dependency' absoluteExpiration' slidingExpiration' priority' onRemoveCallback
Long Parameter List,DotNetNuke.Services.Cache,CachingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cache\CachingProvider.cs,Insert,The method has 5 parameters. Parameters: cacheKey' itemToCache' dependency' absoluteExpiration' slidingExpiration
Long Parameter List,DotNetNuke.Services.Cache,CachingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cache\CachingProvider.cs,Insert,The method has 7 parameters. Parameters: cacheKey' itemToCache' dependency' absoluteExpiration' slidingExpiration' priority' onRemoveCallback
Long Parameter List,DotNetNuke.Services.Journal,CommentInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\CommentInfo.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' accessLevel' propertyNotFound
Long Parameter List,DotNetNuke.Services.Journal,IJournalDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\IJournalDataService.cs,Journal_ListForSummary,The method has 5 parameters. Parameters: portalId' moduleId' currentUserId' rowIndex' maxRows
Long Parameter List,DotNetNuke.Services.Journal,IJournalDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\IJournalDataService.cs,Journal_ListForProfile,The method has 6 parameters. Parameters: portalId' moduleId' currentUserId' profileId' rowIndex' maxRows
Long Parameter List,DotNetNuke.Services.Journal,IJournalDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\IJournalDataService.cs,Journal_ListForGroup,The method has 6 parameters. Parameters: portalId' moduleId' currentUserId' groupId' rowIndex' maxRows
Long Parameter List,DotNetNuke.Services.Journal,IJournalDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\IJournalDataService.cs,Journal_Get,The method has 6 parameters. Parameters: portalId' currentUserId' journalId' includeAllItems' isDeleted' securityCheck
Long Parameter List,DotNetNuke.Services.Journal,IJournalDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\IJournalDataService.cs,Journal_Save,The method has 14 parameters. Parameters: portalId' currentUserId' profileId' groupId' journalId' journalTypeId' title' summary' body' itemData' xml' objectKey' accessKey' securitySet
Long Parameter List,DotNetNuke.Services.Journal,IJournalDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\IJournalDataService.cs,Journal_Save,The method has 16 parameters. Parameters: portalId' currentUserId' profileId' groupId' journalId' journalTypeId' title' summary' body' itemData' xml' objectKey' accessKey' securitySet' commentsHidden' commentsDisabled
Long Parameter List,DotNetNuke.Services.Journal,IJournalDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\IJournalDataService.cs,Journal_Update,The method has 14 parameters. Parameters: portalId' currentUserId' profileId' groupId' journalId' journalTypeId' title' summary' body' itemData' xml' objectKey' accessKey' securitySet
Long Parameter List,DotNetNuke.Services.Journal,IJournalDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\IJournalDataService.cs,Journal_Update,The method has 16 parameters. Parameters: portalId' currentUserId' profileId' groupId' journalId' journalTypeId' title' summary' body' itemData' xml' objectKey' accessKey' securitySet' commentsHidden' commentsDisabled
Long Parameter List,DotNetNuke.Services.Journal,IJournalDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\IJournalDataService.cs,Journal_Comment_Save,The method has 6 parameters. Parameters: journalId' commentId' userId' comment' xml' dateUpdated
Long Parameter List,DotNetNuke.Services.Journal,IJournalDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\IJournalDataService.cs,Journal_Types_Save,The method has 10 parameters. Parameters: journalTypeId' journalType' icon' portalId' isEnabled' appliesToProfile' appliesToGroup' appliesToStream' options' supportsNotify
Long Parameter List,DotNetNuke.Services.Journal,JournalDataServiceImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\JournalDataServiceImpl.cs,Journal_ListForSummary,The method has 5 parameters. Parameters: portalId' moduleId' currentUserId' rowIndex' maxRows
Long Parameter List,DotNetNuke.Services.Journal,JournalDataServiceImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\JournalDataServiceImpl.cs,Journal_ListForProfile,The method has 6 parameters. Parameters: portalId' moduleId' currentUserId' profileId' rowIndex' maxRows
Long Parameter List,DotNetNuke.Services.Journal,JournalDataServiceImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\JournalDataServiceImpl.cs,Journal_ListForGroup,The method has 6 parameters. Parameters: portalId' moduleId' currentUserId' groupId' rowIndex' maxRows
Long Parameter List,DotNetNuke.Services.Journal,JournalDataServiceImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\JournalDataServiceImpl.cs,Journal_Get,The method has 6 parameters. Parameters: portalId' currentUserId' journalId' includeAllItems' isDeleted' securityCheck
Long Parameter List,DotNetNuke.Services.Journal,JournalDataServiceImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\JournalDataServiceImpl.cs,Journal_Save,The method has 14 parameters. Parameters: portalId' currentUserId' profileId' groupId' journalId' journalTypeId' title' summary' body' itemData' xml' objectKey' accessKey' securitySet
Long Parameter List,DotNetNuke.Services.Journal,JournalDataServiceImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\JournalDataServiceImpl.cs,Journal_Save,The method has 16 parameters. Parameters: portalId' currentUserId' profileId' groupId' journalId' journalTypeId' title' summary' body' itemData' xml' objectKey' accessKey' securitySet' commentsDisabled' commentsHidden
Long Parameter List,DotNetNuke.Services.Journal,JournalDataServiceImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\JournalDataServiceImpl.cs,Journal_Update,The method has 14 parameters. Parameters: portalId' currentUserId' profileId' groupId' journalId' journalTypeId' title' summary' body' itemData' xml' objectKey' accessKey' securitySet
Long Parameter List,DotNetNuke.Services.Journal,JournalDataServiceImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\JournalDataServiceImpl.cs,Journal_Update,The method has 16 parameters. Parameters: portalId' currentUserId' profileId' groupId' journalId' journalTypeId' title' summary' body' itemData' xml' objectKey' accessKey' securitySet' commentsDisabled' commentsHidden
Long Parameter List,DotNetNuke.Services.Journal,JournalDataServiceImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\JournalDataServiceImpl.cs,Journal_Comment_Save,The method has 6 parameters. Parameters: journalId' commentId' userId' comment' xml' dateUpdated
Long Parameter List,DotNetNuke.Services.Journal,JournalDataServiceImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\JournalDataServiceImpl.cs,Journal_Types_Save,The method has 10 parameters. Parameters: journalTypeId' journalType' icon' portalId' isEnabled' appliesToProfile' appliesToGroup' appliesToStream' options' supportsNotify
Long Parameter List,DotNetNuke.Services.Journal,IJournalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\IJournalController.cs,GetJournalItem,The method has 5 parameters. Parameters: portalId' userId' journalId' includeAllItems' isDeleted
Long Parameter List,DotNetNuke.Services.Journal,IJournalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\IJournalController.cs,GetJournalItem,The method has 6 parameters. Parameters: portalId' userId' journalId' includeAllItems' isDeleted' securityCheck
Long Parameter List,DotNetNuke.Services.Journal,ItemData,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\ItemData.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' accessLevel' propertyNotFound
Long Parameter List,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,GetJournalItem,The method has 5 parameters. Parameters: portalId' currentUserId' journalId' includeAllItems' isDeleted
Long Parameter List,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,GetJournalItem,The method has 6 parameters. Parameters: portalId' currentUserId' journalId' includeAllItems' isDeleted' securityCheck
Long Parameter List,DotNetNuke.Services.Journal,JournalEntity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalEntity.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' accessLevel' propertyNotFound
Long Parameter List,DotNetNuke.Services.Journal,JournalItem,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalItem.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' accessLevel' propertyNotFound
Long Parameter List,DotNetNuke.Services.Journal.Internal,IInternalJournalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Internal\IInternalJournalController.cs,GetJournalItemsByProfile,The method has 6 parameters. Parameters: portalId' moduleId' userID' profileId' currentIndex' rows
Long Parameter List,DotNetNuke.Services.Journal.Internal,IInternalJournalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Internal\IInternalJournalController.cs,GetJournalItemsByGroup,The method has 6 parameters. Parameters: portalId' moduleId' userID' socialGroupId' currentIndex' rows
Long Parameter List,DotNetNuke.Services.Journal.Internal,IInternalJournalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Internal\IInternalJournalController.cs,GetJournalItems,The method has 5 parameters. Parameters: portalId' moduleId' userID' currentIndex' rows
Long Parameter List,DotNetNuke.Services.Journal.Internal,InternalJournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Internal\InternalJournalControllerImpl.cs,GetJournalItemsByProfile,The method has 6 parameters. Parameters: portalId' moduleId' currentUserId' profileId' rowIndex' maxRows
Long Parameter List,DotNetNuke.Services.Journal.Internal,InternalJournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Internal\InternalJournalControllerImpl.cs,GetJournalItemsByGroup,The method has 6 parameters. Parameters: portalId' moduleId' currentUserId' groupId' rowIndex' maxRows
Long Parameter List,DotNetNuke.Services.Journal.Internal,InternalJournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Internal\InternalJournalControllerImpl.cs,GetJournalItems,The method has 5 parameters. Parameters: portalId' moduleId' currentUserId' rowIndex' maxRows
Long Parameter List,DotNetNuke.Services.Scheduling,SchedulingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\SchedulingController.cs,AddSchedule,The method has 13 parameters. Parameters: TypeFullName' TimeLapse' TimeLapseMeasurement' RetryTimeLapse' RetryTimeLapseMeasurement' RetainHistoryNum' AttachToEvent' CatchUpEnabled' Enabled' ObjectDependencies' Servers' FriendlyName' ScheduleStartDate
Long Parameter List,DotNetNuke.Services.Scheduling,SchedulingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\SchedulingController.cs,UpdateSchedule,The method has 13 parameters. Parameters: ScheduleID' TypeFullName' TimeLapse' TimeLapseMeasurement' RetryTimeLapse' RetryTimeLapseMeasurement' RetainHistoryNum' AttachToEvent' CatchUpEnabled' Enabled' ObjectDependencies' Servers' FriendlyName
Long Parameter List,DotNetNuke.Services.Social.Messaging.Internal,IInternalMessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\IInternalMessagingController.cs,GetInbox,The method has 7 parameters. Parameters: userId' afterMessageId' numberOfRecords' sortColumn' ascending' readStatus' archivedStatus
Long Parameter List,DotNetNuke.Services.Social.Messaging.Internal,IInternalMessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\IInternalMessagingController.cs,GetInbox,The method has 5 parameters. Parameters: userId' afterMessageId' numberOfRecords' sortColumn' sortAscending
Long Parameter List,DotNetNuke.Services.Social.Messaging.Internal,IInternalMessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\IInternalMessagingController.cs,GetSentbox,The method has 7 parameters. Parameters: userId' afterMessageId' numberOfRecords' sortColumn' ascending' readStatus' archivedStatus
Long Parameter List,DotNetNuke.Services.Social.Messaging.Internal,IInternalMessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\IInternalMessagingController.cs,GetSentbox,The method has 5 parameters. Parameters: userId' afterMessageId' numberOfRecords' sortColumn' sortAscending
Long Parameter List,DotNetNuke.Services.Social.Messaging.Internal,IInternalMessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\IInternalMessagingController.cs,GetMessageThread,The method has 7 parameters. Parameters: conversationId' userId' afterMessageId' numberOfRecords' sortColumn' ascending' totalRecords
Long Parameter List,DotNetNuke.Services.Social.Messaging.Internal,IInternalMessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\IInternalMessagingController.cs,GetMessageThread,The method has 5 parameters. Parameters: conversationId' userId' afterMessageId' numberOfRecords' totalRecords
Long Parameter List,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetInbox,The method has 5 parameters. Parameters: userId' afterMessageId' numberOfRecords' sortColumn' sortAscending
Long Parameter List,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetInbox,The method has 7 parameters. Parameters: userId' afterMessageId' numberOfRecords' sortColumn' sortAscending' readStatus' archivedStatus
Long Parameter List,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetMessageThread,The method has 5 parameters. Parameters: conversationId' userId' afterMessageId' numberOfRecords' totalRecords
Long Parameter List,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetMessageThread,The method has 7 parameters. Parameters: conversationId' userId' afterMessageId' numberOfRecords' sortColumn' sortAscending' totalRecords
Long Parameter List,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetSentbox,The method has 5 parameters. Parameters: userId' afterMessageId' numberOfRecords' sortColumn' sortAscending
Long Parameter List,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetSentbox,The method has 7 parameters. Parameters: userId' afterMessageId' numberOfRecords' sortColumn' sortAscending' readStatus' archivedStatus
Long Parameter List,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,HandleFrequencyDigest,The method has 5 parameters. Parameters: dateToCompare' settingKeyLastRunDate' frequency' schedulerInstance' remainingMessages
Long Parameter List,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,CreateMessageReply,The method has 6 parameters. Parameters: conversationId' portalId' body' senderUserId' fromName' createUpdateUserId
Long Parameter List,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,GetInBoxView,The method has 9 parameters. Parameters: userId' portalId' afterMessageId' numberOfRecords' sortColumn' sortAscending' readStatus' archivedStatus' sentStatus
Long Parameter List,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,GetSentBoxView,The method has 6 parameters. Parameters: userId' portalId' afterMessageId' numberOfRecords' sortColumn' sortAscending
Long Parameter List,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,GetArchiveBoxView,The method has 6 parameters. Parameters: userId' portalId' afterMessageId' numberOfRecords' sortColumn' sortAscending
Long Parameter List,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,GetMessageThread,The method has 7 parameters. Parameters: conversationId' userId' afterMessageId' numberOfRecords' sortColumn' sortAscending' totalRecords
Long Parameter List,DotNetNuke.Services.Social.Messaging.Data,IDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\IDataService.cs,GetInBoxView,The method has 9 parameters. Parameters: userId' portalId' afterMessageId' numberOfRecords' sortColumn' sortAscending' readStatus' archivedStatus' sentStatus
Long Parameter List,DotNetNuke.Services.Social.Messaging.Data,IDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\IDataService.cs,GetSentBoxView,The method has 6 parameters. Parameters: userId' portalId' afterMessageId' numberOfRecords' sortColumn' sortAscending
Long Parameter List,DotNetNuke.Services.Social.Messaging.Data,IDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\IDataService.cs,GetArchiveBoxView,The method has 6 parameters. Parameters: userId' portalId' afterMessageId' numberOfRecords' sortColumn' sortAscending
Long Parameter List,DotNetNuke.Services.Social.Messaging.Data,IDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\IDataService.cs,GetMessageThread,The method has 7 parameters. Parameters: conversationId' userId' afterMessageId' numberOfRecords' sortColumn' sortAscending' totalRecords
Long Parameter List,DotNetNuke.Services.Social.Messaging.Data,IDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\IDataService.cs,CreateMessageReply,The method has 6 parameters. Parameters: conversationId' portalId' body' senderUserId' from' createUpdateUserId
Long Parameter List,DotNetNuke.Security.Permissions.Controls,DesktopModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\DesktopModulePermissionsGrid.cs,AddPermission,The method has 6 parameters. Parameters: permission' roleId' roleName' userId' displayName' allowAccess
Long Parameter List,DotNetNuke.Security.Permissions.Controls,FolderPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\FolderPermissionsGrid.cs,AddPermission,The method has 6 parameters. Parameters: permission' roleId' roleName' userId' displayName' allowAccess
Long Parameter List,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,AddPermission,The method has 6 parameters. Parameters: permission' roleId' roleName' userId' displayName' allowAccess
Long Parameter List,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,AddPermission,The method has 6 parameters. Parameters: permission' roleId' roleName' userId' displayName' allowAccess
Long Parameter List,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,BuildKey,The method has 5 parameters. Parameters: allowAccess' permissionId' objectPermissionId' roleId' roleName
Long Parameter List,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,BuildKey,The method has 7 parameters. Parameters: allowAccess' permissionId' objectPermissionId' roleId' roleName' userID' displayName
Long Parameter List,DotNetNuke.Security.Permissions.Controls,TabPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\TabPermissionsGrid.cs,AddPermission,The method has 6 parameters. Parameters: permission' roleId' roleName' userId' displayName' allowAccess
Long Parameter List,DotNetNuke.Services.Social.Notifications.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\Data\DataService.cs,CreateNotificationType,The method has 6 parameters. Parameters: name' description' timeToLive' desktopModuleId' createUpdateUserId' isTask
Long Parameter List,DotNetNuke.Services.Social.Notifications.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\Data\DataService.cs,AddNotificationTypeAction,The method has 6 parameters. Parameters: notificationTypeId' nameResourceKey' descriptionResourceKey' confirmResourceKey' apiCall' createdByUserId
Long Parameter List,DotNetNuke.Services.Social.Notifications.Data,IDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\Data\IDataService.cs,CreateNotificationType,The method has 6 parameters. Parameters: name' description' timeToLive' desktopModuleId' createUpdateUserId' isTask
Long Parameter List,DotNetNuke.Services.Social.Notifications.Data,IDataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\Data\IDataService.cs,AddNotificationTypeAction,The method has 6 parameters. Parameters: notificationTypeId' nameResourceKey' descriptionResourceKey' confirmResourceKey' apiCall' createdByUserId
Long Parameter List,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,CreateSkinManifest,The method has 5 parameters. Parameters: writer' skinFolder' skinType' tempInstallFolder' subFolder
Long Parameter List,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,ValidateNode,The method has 5 parameters. Parameters: propValue' isRequired' log' logmessage' defaultValue
Long Parameter List,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,ReadAttribute,The method has 6 parameters. Parameters: nav' attributeName' isRequired' log' logmessage' defaultValue
Long Parameter List,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,ReadElement,The method has 6 parameters. Parameters: nav' elementName' isRequired' log' logmessage' defaultValue
Long Parameter List,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,GetExternalRequest,The method has 11 parameters. Parameters: URL' Data' Username' Password' Domain' ProxyAddress' ProxyPort' DoPOST' UserAgent' Referer' Filename
Long Parameter List,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,GetExternalRequest,The method has 12 parameters. Parameters: URL' Data' Username' Password' Domain' ProxyAddress' ProxyPort' DoPOST' UserAgent' Referer' Filename' requestTimeout
Long Parameter List,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,GetExternalRequest,The method has 13 parameters. Parameters: URL' Data' Username' Password' Domain' ProxyAddress' ProxyPort' ProxyUsername' ProxyPassword' DoPOST' UserAgent' Referer' Filename
Long Parameter List,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,GetExternalRequest,The method has 14 parameters. Parameters: URL' Data' Username' Password' Domain' ProxyAddress' ProxyPort' ProxyUsername' ProxyPassword' DoPOST' UserAgent' Referer' Filename' requestTimeout
Long Parameter List,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMailInternal,The method has 12 parameters. Parameters: mailMessage' subject' body' priority' bodyFormat' bodyEncoding' attachments' smtpServer' smtpAuthentication' smtpUsername' smtpPassword' smtpEnableSSL
Long Parameter List,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendEmail,The method has 5 parameters. Parameters: fromAddress' senderAddress' toAddress' subject' body
Long Parameter List,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendEmail,The method has 6 parameters. Parameters: fromAddress' senderAddress' toAddress' subject' body' attachments
Long Parameter List,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,The method has 11 parameters. Parameters: mailFrom' mailTo' bcc' subject' body' attachment' bodyType' smtpServer' smtpAuthentication' smtpUsername' smtpPassword
Long Parameter List,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,The method has 14 parameters. Parameters: mailFrom' mailTo' cc' bcc' priority' subject' bodyFormat' bodyEncoding' body' attachment' smtpServer' smtpAuthentication' smtpUsername' smtpPassword
Long Parameter List,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,The method has 15 parameters. Parameters: mailFrom' mailTo' cc' bcc' priority' subject' bodyFormat' bodyEncoding' body' attachment' smtpServer' smtpAuthentication' smtpUsername' smtpPassword' smtpEnableSSL
Long Parameter List,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,The method has 15 parameters. Parameters: mailFrom' mailTo' cc' bcc' priority' subject' bodyFormat' bodyEncoding' body' attachments' smtpServer' smtpAuthentication' smtpUsername' smtpPassword' smtpEnableSSL
Long Parameter List,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,The method has 16 parameters. Parameters: mailFrom' mailTo' cc' bcc' replyTo' priority' subject' bodyFormat' bodyEncoding' body' attachments' smtpServer' smtpAuthentication' smtpUsername' smtpPassword' smtpEnableSSL
Long Parameter List,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,The method has 16 parameters. Parameters: mailFrom' mailTo' cc' bcc' replyTo' priority' subject' bodyFormat' bodyEncoding' body' attachments' smtpServer' smtpAuthentication' smtpUsername' smtpPassword' smtpEnableSSL
Long Parameter List,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,The method has 17 parameters. Parameters: mailFrom' mailSender' mailTo' cc' bcc' replyTo' priority' subject' bodyFormat' bodyEncoding' body' attachments' smtpServer' smtpAuthentication' smtpUsername' smtpPassword' smtpEnableSSL
Long Parameter List,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,SendTokenizedBulkEmail,The method has 5 parameters. Parameters: addressedRoles' addressedUsers' removeDuplicates' subject' body
Long Parameter List,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,SendConfirmationMail,The method has 7 parameters. Parameters: numRecipients' numMessages' numErrors' subject' startedAt' mailErrors' recipientList
Long Parameter List,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,SetSMTPServer,The method has 5 parameters. Parameters: smtpServer' smtpAuthentication' smtpUsername' smtpPassword' smtpEnableSSL
Long Parameter List,DotNetNuke.Services.OutputCache,OutputCachingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\OutputCachingProvider.cs,GetResponseFilter,The method has 5 parameters. Parameters: tabId' maxVaryByCount' responseFilter' cacheKey' cacheDuration
Long Parameter List,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddModulePermission,The method has 5 parameters. Parameters: objModule' permission' roleId' userId' allowAccess
Long Parameter List,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddExistingModule,The method has 5 parameters. Parameters: moduleId' tabId' paneName' position' align
Long Parameter List,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddNewModule,The method has 6 parameters. Parameters: title' desktopModuleId' paneName' position' permissionType' align
Long Parameter List,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,AddChildActions,The method has 5 parameters. Parameters: parentAction' parentNode' rootNode' actionControl' intDepth
Long Parameter List,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,AddNode,The method has 6 parameters. Parameters: objTab' objNodes' objBreadCrumbs' objPortalSettings' eToolTips' nodesLookup
Long Parameter List,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,IsTabPending,The method has 7 parameters. Parameters: objTab' objParentNode' objRootNode' intDepth' objBreadCrumbs' intLastBreadCrumbId' blnPOD
Long Parameter List,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,ProcessTab,The method has 10 parameters. Parameters: objRootNode' objTab' objTabLookup' objBreadCrumbs' intLastBreadCrumbId' eToolTips' intStartTabId' intDepth' intNavNodeOptions' nodesLookup
Long Parameter List,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,GetNavigationNodes,The method has 5 parameters. Parameters: strNamespace' eToolTips' intStartTabId' intDepth' intNavNodeOptions
Long Parameter List,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,GetNavigationNodes,The method has 5 parameters. Parameters: objRootNode' eToolTips' intStartTabId' intDepth' intNavNodeOptions
Long Parameter List,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,NavigateUrl,The method has 5 parameters. Parameters: tabID' controlKey' pageName' pageRedirect' additionalParameters
Long Parameter List,DotNetNuke.UI.Modules.Html5,ModuleContextPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\Html5\ModuleContextPropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' accessLevel' propertyNotFound
Long Parameter List,DotNetNuke.UI.Modules.Html5,RequestPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\Html5\RequestPropertyAccess.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' accessingUser' accessLevel' propertyNotFound
Long Parameter List,DotNetNuke.UI.Skins.Controls,LanguagePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\LanguageTokenReplace.cs,GetProperty,The method has 6 parameters. Parameters: propertyName' format' formatProvider' AccessingUser' CurrentScope' PropertyNotFound
Long Parameter List,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,AddModuleMessage,The method has 5 parameters. Parameters: control' heading' message' moduleMessageType' iconSrc
Long Parameter List,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,AddPageMessage,The method has 5 parameters. Parameters: control' heading' message' moduleMessageType' iconSrc
Long Parameter List,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,The method has 5 parameters. Parameters: objButton' objContent' intModuleId' blnDefaultMin' ePersistanceType
Long Parameter List,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,The method has 6 parameters. Parameters: objButton' objContent' blnDefaultMin' strMinIconLoc' strMaxIconLoc' ePersistanceType
Long Parameter List,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,The method has 7 parameters. Parameters: objButton' objContent' intModuleId' blnDefaultMin' strMinIconLoc' strMaxIconLoc' ePersistanceType
Long Parameter List,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,The method has 8 parameters. Parameters: objButton' objContent' blnDefaultMin' strMinIconLoc' strMaxIconLoc' ePersistanceType' strPersonalizationNamingCtr' strPersonalizationKey
Long Parameter List,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,The method has 8 parameters. Parameters: objButton' objContent' intModuleId' blnDefaultMin' strMinIconLoc' strMaxIconLoc' ePersistanceType' intAnimationFrames
Long Parameter List,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,The method has 10 parameters. Parameters: objButton' objContent' intModuleId' blnDefaultMin' strMinIconLoc' strMaxIconLoc' ePersistanceType' intAnimationFrames' strPersonalizationNamingCtr' strPersonalizationKey
Long Parameter List,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,MinMaxContentVisibile,The method has 5 parameters. Parameters: objButton' intModuleId' blnDefaultMin' ePersistanceType' value
Long Parameter List,DotNetNuke.UI.WebControls,VisibilityControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\VisibilityControl.cs,RenderCheckboxItem,The method has 5 parameters. Parameters: writer' prefix' value' text' selected
Long Parameter List,DotNetNuke.UI.WebControls.Internal,PermissionTriState,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DataGrids\PermissionTriState.cs,LookupScriptValues,The method has 8 parameters. Parameters: ctl' grantImagePath' denyImagePath' nullImagePath' lockImagePath' grantAltText' denyAltText' nullAltText
Long Identifier,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,,The length of the parameter glbAllowControlPanelToDetermineVisibility is 41.
Long Identifier,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,ProcessHttpModule,The length of the parameter checkOmitFromRewriteProcessing is 30.
Long Identifier,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetMaxUploadSize,The length of the parameter DefaultMaxAllowedContentLength is 30.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter TabVersionDetailsCachePriority is 30.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter AuthenticationServicesCacheKey is 30.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter AuthenticationServicesCachePriority is 35.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter AuthenticationServicesCacheTimeOut is 34.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter DesktopModulePermissionCacheKey is 31.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter DesktopModulePermissionCachePriority is 36.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter DesktopModulePermissionCacheTimeOut is 35.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter PortalDesktopModuleCachePriority is 32.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter PortalDesktopModuleCacheTimeOut is 31.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter PublishedTabModuleCachePriority is 31.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter PublishedTabModuleCacheTimeOut is 30.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter SharedModulesByPortalCacheTimeOut is 33.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter SharedModulesByPortalCachePriority is 34.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter SharedModulesWithPortalCacheKey is 31.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter SharedModulesWithPortalCacheTimeOut is 35.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter SharedModulesWithPortalCachePriority is 36.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter ProfileDefinitionsCacheTimeOut is 30.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter UserNotificationsConversationCountCacheKey is 42.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter UserNotificationsCountCacheKey is 30.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter UserPersonalizationCacheTimeout is 31.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter UserPersonalizationCachePriority is 32.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter ResourceFileLookupDictionaryCacheKey is 36.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter ResourceFileLookupDictionaryCachePriority is 41.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter ResourceFileLookupDictionaryTimeOut is 35.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter SpaModulesContentHtmlFileCacheKey is 33.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter SpaModulesHtmlFileCachePriority is 31.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter RelationshipTypesCachePriority is 30.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter RelationshipByPortalIDCacheKey is 30.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter RelationshipByPortalIDCachePriority is 35.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter RelationshipByPortalIDCacheTimeOut is 34.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter NotificationTypesCachePriority is 30.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter NotificationTypeActionsCacheKey is 31.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter NotificationTypeActionsByNameCacheKey is 37.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter NotificationTypeActionsPriority is 31.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter NotificationTypeActionsTimeOut is 30.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter SubscriptionTypesCachePriority is 30.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter JavaScriptLibrariesCachePriority is 32.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter JavaScriptLibrariesCacheTimeout is 31.
Long Identifier,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,,The length of the parameter UserIdListToClearDiskImageCacheKey is 34.
Long Identifier,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,,The length of the parameter HttpContextKeyPortalSettingsDictionary is 38.
Long Identifier,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,,The length of the parameter ContentWorkflowNotificationType is 31.
Long Identifier,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,,The length of the parameter ContentWorkflowNotificationNoActionType is 39.
Long Identifier,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,,The length of the parameter ContentWorkflowNotificatioStartWorkflowType is 43.
Long Identifier,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,,The length of the parameter _workflowStatePermissionsRepository is 35.
Long Identifier,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,,The length of the parameter _workflowStatePermissionsRepository is 35.
Long Identifier,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,,The length of the parameter PortalModuleProvidersForTabKey is 30.
Long Identifier,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,,The length of the parameter PortalModuleProvidersAllTabsKey is 31.
Long Identifier,DotNetNuke.Entities.Urls,FriendlyUrlSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlSettings.cs,,The length of the parameter DoNotRedirectHttpsUrlRegexSetting is 33.
Long Identifier,DotNetNuke.Entities.Urls,FriendlyUrlSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlSettings.cs,,The length of the parameter PreventLowerCaseUrlRegexSetting is 31.
Long Identifier,DotNetNuke.Entities.Urls,FriendlyUrlSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlSettings.cs,,The length of the parameter DoNotUseFriendlyUrlRegexSetting is 31.
Long Identifier,DotNetNuke.Entities.Urls,FriendlyUrlSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlSettings.cs,,The length of the parameter UrlsWithNoExtensionRegexSetting is 31.
Long Identifier,DotNetNuke.Entities.Urls,FriendlyUrlSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlSettings.cs,,The length of the parameter UsePortalDefaultLanguageSetting is 31.
Long Identifier,DotNetNuke.Entities.Urls,FriendlyUrlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlController.cs,,The length of the parameter DisableMobileRedirectCookieName is 31.
Long Identifier,DotNetNuke.Entities.Urls,FriendlyUrlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlController.cs,,The length of the parameter DisableRedirectPresistCookieName is 32.
Long Identifier,DotNetNuke.Entities.Urls,FriendlyUrlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlController.cs,,The length of the parameter DisableMobileRedirectQueryStringName is 36.
Long Identifier,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddCustomRedirectsToDictionary,The length of the parameter wrongAliasRedirectedRewritePath is 31.
Long Identifier,DotNetNuke.Security.Permissions,DesktopModulePermissionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\DesktopModulePermissionCollection.cs,CompareTo,The length of the parameter objDesktopModulePermissionCollection is 36.
Long Identifier,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,,The length of the parameter UserHasNoPermissionToBrowseFolderDefaultMessage is 47.
Long Identifier,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,,The length of the parameter FolderFileNameIsReservedDefaultMessage is 38.
Long Identifier,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,,The length of the parameter UserHasNoPermissionToEditFileDefaultMessage is 43.
Long Identifier,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,,The length of the parameter UserHasNoPermissionToEditFolderDefaultMessage is 45.
Long Identifier,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,,The length of the parameter FolderAlreadyExistsDefultMessage is 32.
Long Identifier,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,,The length of the parameter UserHasNoPermissionToAddDefaultMessage is 38.
Long Identifier,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,,The length of the parameter InvalidMappedPathDefaultMessage is 31.
Long Identifier,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,,The length of the parameter FolderAlreadyExistsDefaultMessage is 33.
Long Identifier,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,,The length of the parameter FolderFileNameHasInvalidcharactersDefaultMessage is 48.
Long Identifier,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,AreThereFolderMappingsRequiringNetworkConnectivity,The length of the parameter folderMappingsRequiringNetworkConnectivity is 42.
Long Identifier,DotNetNuke.Services.Installer.Installers,UrlProviderInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\UrlProviderInstaller.cs,,The length of the parameter _installedExtensionUrlProvider is 30.
Long Identifier,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,,The length of the parameter ResourceFileRelativePathWithoutExt is 34.
Long Identifier,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,,The length of the parameter DefaultMessagingThrottlingInterval is 34.
Long Identifier,DotNetNuke.Services.Social.Subscriptions,SubscriptionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Subscriptions\SubscriptionController.cs,,The length of the parameter subscriptionSecurityController is 30.
Long Identifier,DotNetNuke.Services.Tokens,BaseTokenReplace,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\BaseTokenReplace.cs,,The length of the parameter TokenReplaceCacheKeyObjectless is 30.
Long Identifier,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,,The length of the parameter FipsCompilanceAssembliesCheckedKey is 34.
Long Identifier,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,,The length of the parameter FipsCompilanceAssembliesFolder is 30.
Long Identifier,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,,The length of the parameter DefaultMessagingThrottlingInterval is 34.
Long Identifier,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,GetNotificationTypeAction,The length of the parameter notificationTypeActionCacheKey is 30.
Long Identifier,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,GetNotificationTypeAction,The length of the parameter notificationTypeActionCacheKey is 30.
Long Identifier,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,,The length of the parameter _InheritViewPermissionsFromTab is 30.
Long Identifier,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,,The length of the parameter DisableMobileRedirectCookieName is 31.
Long Identifier,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,,The length of the parameter DisableRedirectPresistCookieName is 32.
Long Identifier,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,,The length of the parameter DisableMobileRedirectQueryStringName is 36.
Long Identifier,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,,The length of the parameter ASSEMBLY_RemovedBindingRedirect is 31.
Long Identifier,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,,The length of the parameter AUTHENTICATION_LoginSrcMissing is 30.
Long Identifier,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,,The length of the parameter AUTHENTICATION_SettingsSrcMissing is 33.
Long Identifier,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,,The length of the parameter DASHBOARD_LocalResourcesMissing is 31.
Long Identifier,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddNewModule,The length of the parameter arrSystemModuleViewPermissions is 30.
Long Identifier,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,,The length of the parameter m_strCSSLeftSeparatorBreadCrumb is 31.
Long Identifier,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,,The length of the parameter m_strCSSLeftSeparatorSelection is 30.
Long Identifier,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,,The length of the parameter m_strCSSRightSeparatorBreadCrumb is 32.
Long Identifier,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,,The length of the parameter m_strCSSRightSeparatorSelection is 31.
Long Identifier,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,,The length of the parameter m_strIndicateChildImageExpandedRoot is 35.
Long Identifier,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,,The length of the parameter m_strIndicateChildImageExpandedSub is 34.
Long Identifier,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,,The length of the parameter m_strNodeLeftHTMLBreadCrumbRoot is 31.
Long Identifier,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,,The length of the parameter m_strNodeLeftHTMLBreadCrumbSub is 30.
Long Identifier,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,,The length of the parameter m_strNodeRightHTMLBreadCrumbRoot is 32.
Long Identifier,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,,The length of the parameter m_strNodeRightHTMLBreadCrumbSub is 31.
Long Identifier,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,,The length of the parameter m_strSeparatorLeftHTMLBreadCrumb is 32.
Long Identifier,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,,The length of the parameter m_strSeparatorRightHTMLBreadCrumb is 33.
Long Identifier,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,,The length of the parameter m_strStyleSelectionBorderColor is 30.
Long Identifier,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,,The length of the parameter m_objEnabledClientPersonalizationKeys is 37.
Long Statement,DotNetNuke.Common,NavigationManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\NavigationManager.cs,NavigateURL,The length of the statement  "                url = additionalParameters.Where(parameter => !string.IsNullOrEmpty(parameter)).Aggregate(url' (current' parameter) => current + ("&" + parameter)); " is 148.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,Redirect,The length of the statement  "                //we are ignoreing this error simply because there is no graceful way to redirect the user' wihtout the threadabort exception. " is 126.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,IncrementalVersionExists,The length of the statement  "                    var incrementalcount = Directory.GetFiles(providerpath' Upgrade.GetStringVersion(version) + ".*." + Upgrade.DefaultProvider).Length; " is 132.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,IsInstalled,The length of the statement  "            bool isInstalled =  (!IsInstallationURL()) && ((installationdatefactor + dataproviderfactor + htmlmodulefactor + portaldirectoryfactor + localexecutionfactor) >= c_PassingScore); " is 178.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,BuildCrossTabDataSet,The length of the statement  "            return BuildCrossTabDataSet(DataSetName' result' FixedColumns' VariableColumns' KeyColumn' FieldColumn' FieldTypeColumn' StringValueColumn' NumericValueColumn' CultureInfo.CurrentCulture); " is 188.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,GetApplicationName,The length of the statement  "            if (HttpContext.Current.Items["ApplicationName"] == null || String.IsNullOrEmpty(HttpContext.Current.Items["ApplicationName"].ToString())) " is 138.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,UpdateDataBaseVersion,The length of the statement  "            DataProvider.Instance().UpdateDatabaseVersion(version.Major' version.Minor' version.Build' DotNetNukeContext.Current.Application.Name); " is 135.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,UpdateDataBaseVersionIncrement,The length of the statement  "           DataProvider.Instance().UpdateDatabaseVersionIncrement(version.Major' version.Minor' version.Build' increment' DotNetNukeContext.Current.Application.Name); " is 155.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,FormatVersion,The length of the statement  "            string strVersion = version.Major.ToString("00") + "." + version.Minor.ToString("00") + "." + version.Build.ToString("00"); " is 123.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,IsAdminControl,The length of the statement  "            return (!string.IsNullOrEmpty(HttpContext.Current.Request.QueryString["mid"])) || (!string.IsNullOrEmpty(HttpContext.Current.Request.QueryString["ctl"])); " is 154.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,IsLayoutMode,The length of the statement  "            return (TabPermissionController.CanAddContentToPage() && PortalController.Instance.GetCurrentPortalSettings().UserMode == PortalSettings.Mode.Layout); " is 150.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CreateRSS,The length of the statement  "            var strRelativePath = DomainName + FileName.Substring(FileName.IndexOf("\\Portals"' StringComparison.InvariantCultureIgnoreCase)).Replace("\\"' "/"); " is 149.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CreateRSS,The length of the statement  "                        strRSS.AppendLine("  <description>" + _portalSettings.PortalName + " " + GetMediumDate(dr[CreatedDateField].ToString()) + "</description>"); " is 140.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CreateRSS,The length of the statement  "                strRSS.Append("<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>" + Environment.NewLine + "<rss version=\"0.91\">" + Environment.NewLine + "  <channel>" + Environment.NewLine + "  <title>" + " is 188.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CreateRSS,The length of the statement  "                         _portalSettings.PortalName + "</title>" + Environment.NewLine + "  <link>" + DomainName + "</link>" + Environment.NewLine + "  <description>" + " is 143.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CreateRSS,The length of the statement  "                         _portalSettings.PortalName + "</description>" + Environment.NewLine + "  <language>en-us</language>" + Environment.NewLine + "  <copyright>" + " is 142.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CreateRSS,The length of the statement  "                         (!string.IsNullOrEmpty(_portalSettings.FooterText) ? _portalSettings.FooterText.Replace("[year]"' DateTime.Now.Year.ToString()) : string.Empty) + " is 145.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CreateRSS,The length of the statement  "                         "</copyright>" + Environment.NewLine + "  <webMaster>" + _portalSettings.Email + "</webMaster>" + Environment.NewLine + strRSS + "   </channel>" + Environment.NewLine + " is 168.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CreateValidClass,The length of the statement  "            var validClassLookupDictionary = CBO.GetCachedObject<SharedDictionary<string' string>>(new CacheItemArgs("ValidClassLookup"' 200' CacheItemPriority.NotRemovable)' " is 162.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CreateValidID,The length of the statement  "            var validIDLookupDictionary = CBO.GetCachedObject<SharedDictionary<string' string>>(new CacheItemArgs("ValidIDLookup"' 200' CacheItemPriority.NotRemovable)' " is 156.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CreateValidID,The length of the statement  "                        // '... letters' digits ([0-9])' hyphens ("-")' underscores ("_")' colons (":")' and periods (".")' are valid identifiers " is 121.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,AddHTTP,The length of the statement  "                if (strURL.IndexOf("mailto:") == -1 && strURL.IndexOf("://") == -1 && strURL.IndexOf("~") == -1 && strURL.IndexOf("\\\\") == -1) " is 128.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,AddHTTP,The length of the statement  "                    strURL = ((HttpContext.Current != null && UrlUtils.IsSecureConnectionOrSslOffload(HttpContext.Current.Request)) ? "https://" : "http://") + strURL; " is 147.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,GetURLType,The length of the statement  "            if (URL.ToLowerInvariant().StartsWith("mailto:") == false && URL.IndexOf("://") == -1 && URL.StartsWith("~") == false && URL.StartsWith("\\\\") == false && URL.StartsWith("/") == false) " is 185.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,LoginURL,The length of the statement  "                    string strMessage = string.Format("error={0}"' Localization.GetString("NoLoginControl"' Localization.GlobalResourceFile)); " is 122.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,UserProfileURL,The length of the statement  "            strURL = DependencyProvider.GetRequiredService<INavigationManager>().NavigateURL(portalSettings.UserTabId' ""' string.Format("userId={0}"' userId)); " is 148.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,NavigateURL,The length of the statement  "            return DependencyProvider.GetRequiredService<INavigationManager>().NavigateURL(tabID' controlKey' additionalParameters); " is 120.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,NavigateURL,The length of the statement  "            return DependencyProvider.GetRequiredService<INavigationManager>().NavigateURL(tabID' settings' controlKey' additionalParameters); " is 130.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,NavigateURL,The length of the statement  "            return DependencyProvider.GetRequiredService<INavigationManager>().NavigateURL(tabID' isSuperTab' settings' controlKey' additionalParameters); " is 142.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,NavigateURL,The length of the statement  "            return DependencyProvider.GetRequiredService<INavigationManager>().NavigateURL(tabID' isSuperTab' settings' controlKey' language' additionalParameters); " is 152.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,NavigateURL,The length of the statement  "            return DependencyProvider.GetRequiredService<INavigationManager>().NavigateURL(tabID' isSuperTab' settings' controlKey' language' pageName' additionalParameters); " is 162.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,LinkClick,The length of the statement  "            return LinkClick(Link' TabID' ModuleID' TrackClicks' ForceDownload' _portalSettings.PortalId' _portalSettings.EnableUrlLanguage' _portalSettings.GUID.ToString()); " is 162.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,LinkClick,The length of the statement  "                    strLink = ApplicationPath + "/LinkClick.aspx?fileticket=" + UrlUtils.EncryptParameter(UrlUtils.GetParameterValue(Link)' portalGuid); " is 132.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,GetHelpText,The length of the statement  "                string LocalResourceFile = objModuleControl.ControlSrc.Replace(FileName' Localization.LocalResourceDirectory + "/" + FileName); " is 127.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,UserProfilePicFormattedUrl,The length of the statement  "                                      !HttpContext.Current.Request.Url.IsDefaultPort && !avatarUrl.Contains(":") ? ":" + HttpContext.Current.Request.Url.Port : string.Empty); " is 136.
Long Statement,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,GetFileList,The length of the statement  "                if (strExtensions.IndexOf(strExtension' StringComparison.InvariantCultureIgnoreCase) != -1 || string.IsNullOrEmpty(strExtensions)) " is 130.
Long Statement,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,CheckVersion,The length of the statement  "                        Logger.Info("UnderConstruction page was shown because application needs to be installed' and both the AutoUpgrade and UseWizard AppSettings in web.config are false. Use /install/install.aspx?mode=install to install application. "); " is 231.
Long Statement,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,CheckVersion,The length of the statement  "                        Logger.Info("UnderConstruction page was shown because application needs to be upgraded' and both the AutoUpgrade and UseInstallWizard AppSettings in web.config are false. Use /install/install.aspx?mode=upgrade to upgrade application. "); " is 237.
Long Statement,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,CheckVersion,The length of the statement  "                        Logger.Error("UnderConstruction page was shown because we cannot ascertain the application was ever installed' and there is no working database connection. Check database connectivity before continuing. "); " is 206.
Long Statement,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,CheckVersion,The length of the statement  "                                Logger.Error("The connection to the database has failed' the application is not installed yet' and both AutoUpgrade and UseInstallWizard are not set in web.config' a 500 error page will be shown to visitors"); " is 209.
Long Statement,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,CheckVersion,The length of the statement  "                                Logger.Error("The connection to the database has failed' however' the application is already completely installed' a 500 error page will be shown to visitors"); " is 160.
Long Statement,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,CreateUnderConstructionPage,The length of the statement  "                    File.Copy(server.MapPath("~/Install/UnderConstruction.template.htm")' server.MapPath("~/Install/UnderConstruction.htm")); " is 121.
Long Statement,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,LogEnd,The length of the statement  "                        shutdownDetail = "The AppDomain shut down because of a change to the App_GlobalResources folder or files contained in it."; " is 123.
Long Statement,DotNetNuke.Common,Requires,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Requires.cs,IsTypeOf,The length of the statement  "                throw new ArgumentException(Localization.GetExceptionMessage("ValueMustBeOfType"' "The argument '{0}' must be of type '{1}'."' argName' typeof (T).FullName)); " is 158.
Long Statement,DotNetNuke.Common,Requires,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Requires.cs,NotNegative,The length of the statement  "                throw new ArgumentOutOfRangeException(argName' Localization.GetExceptionMessage("ValueCannotBeNegative"' "The argument '{0}' cannot be negative."' argName)); " is 157.
Long Statement,DotNetNuke.Common,Requires,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Requires.cs,NotNullOrEmpty,The length of the statement  "                throw new ArgumentException(Localization.GetExceptionMessage("ArgumentCannotBeNullOrEmpty"' "The argument '{0}' cannot be null or empty."' argName)' argName); " is 158.
Long Statement,DotNetNuke.Common,Requires,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Requires.cs,NotNullOrHasNoWhiteSpace,The length of the statement  "                throw new ArgumentException(Localization.GetExceptionMessage("ArgumentCannotBeNullOrEmpty"' "The argument '{0}' cannot be null or empty."' argName)' argName); " is 158.
Long Statement,DotNetNuke.Common,Requires,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Requires.cs,PropertyNotNegative,The length of the statement  "                    Localization.GetExceptionMessage("PropertyCannotBeNegative"' "The property '{1}' in object '{0}' cannot be negative."' typeof(T).Name' propertyName)); " is 150.
Long Statement,DotNetNuke.Common,Requires,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Requires.cs,PropertyNotNegative,The length of the statement  "                                                      Localization.GetExceptionMessage("PropertyCannotBeNegative"' "The property '{1}' in object '{0}' cannot be negative."' argName' argProperty)); " is 142.
Long Statement,DotNetNuke.Common,Requires,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Requires.cs,PropertyNotNullOrEmpty,The length of the statement  "                throw new ArgumentException(propertyName' Localization.GetExceptionMessage("PropertyCannotBeNullOrEmpty"' "The property '{1}' in object '{0}' cannot be null or empty."' typeof(T).Name' propertyName)); " is 200.
Long Statement,DotNetNuke.Common,Requires,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Requires.cs,PropertyNotNullOrEmpty,The length of the statement  "                                            Localization.GetExceptionMessage("PropertyCannotBeNullOrEmpty"' "The property '{1}' in object '{0}' cannot be null or empty."' argName' argProperty)); " is 150.
Long Statement,DotNetNuke.Common,Requires,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Requires.cs,PropertyNotEqualTo,The length of the statement  "                throw new ArgumentException(argName' Localization.GetExceptionMessage("PropertyNotEqualTo"' "The property '{1}' in object '{0}' is invalid."' argName' argProperty)); " is 165.
Long Statement,DotNetNuke.Common.Utilities,RegexUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\RegexUtils.cs,GetCachedRegex,The length of the statement  "                cache.Insert(key' regex' (DNNCacheDependency)null' Cache.NoAbsoluteExpiration' TimeSpan.FromMinutes(10)' CacheItemPriority.BelowNormal' null); " is 142.
Long Statement,DotNetNuke.Common.Utilities,Calendar,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Calendar.cs,InvokePopupCal,The length of the statement  "                ScriptManager.RegisterClientScriptInclude(Field.Page' Field.Page.GetType()' "PopupCalendar.js"' ClientAPI.ScriptPath + "PopupCalendar.js"); " is 139.
Long Statement,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,BackupConfig,The length of the statement  "                    File.Copy(Globals.ApplicationMapPath + "\\web.config"' Globals.ApplicationMapPath + backupFolder + "web_old.config"' true); " is 123.
Long Statement,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetDecryptionkey,The length of the statement  "            MachineKeySection key = System.Configuration.ConfigurationManager.GetSection("system.web/machineKey") as MachineKeySection; " is 123.
Long Statement,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetMaxUploadSize,The length of the statement  "                var maxAllowedContentLength = XmlUtils.GetAttributeValueAsLong(httpNode.CreateNavigator()' "maxAllowedContentLength"' 30000000); " is 128.
Long Statement,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetRequestFilterSize,The length of the statement  "            var httpNode = configNav.SelectSingleNode("configuration//system.webServer//security//requestFiltering//requestLimits") ?? " is 122.
Long Statement,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetRequestFilterSize,The length of the statement  "                var maxAllowedContentLength = XmlUtils.GetAttributeValueAsLong(httpNode.CreateNavigator()' "maxAllowedContentLength"' 30000000); " is 128.
Long Statement,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetCustomErrorMode,The length of the statement  "            var customErrorsNav = configNav.SelectSingleNode("//configuration/system.web/customErrors|//configuration/location/system.web/customErrors"); " is 141.
Long Statement,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,SetCache,The length of the statement  "            SetCache(CacheKey' objObject' (DNNCacheDependency)null' Cache.NoAbsoluteExpiration' Cache.NoSlidingExpiration' CacheItemPriority.Normal' null); " is 143.
Long Statement,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,SetCache,The length of the statement  "            SetCache(CacheKey' objObject' objDependency' Cache.NoAbsoluteExpiration' Cache.NoSlidingExpiration' CacheItemPriority.Normal' null); " is 132.
Long Statement,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,SetCache,The length of the statement  "            SetCache(CacheKey' objObject' (DNNCacheDependency)null' AbsoluteExpiration' Cache.NoSlidingExpiration' CacheItemPriority.Normal' null); " is 135.
Long Statement,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,SetCache,The length of the statement  "            SetCache(CacheKey' objObject' (DNNCacheDependency)null' Cache.NoAbsoluteExpiration' SlidingExpiration' CacheItemPriority.Normal' null); " is 135.
Long Statement,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,SetCache,The length of the statement  "                CachingProvider.Instance().Insert(GetDnnCacheKey(CacheKey)' objObject' objDependency' AbsoluteExpiration' SlidingExpiration' Priority' OnRemoveCallback); " is 153.
Long Statement,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,GetDatabaseUtcTime,The length of the statement  "                if (DateTime.UtcNow >= _lastUpdateUtc + TimeSpan.FromMinutes(15) || !(TimeSpan.FromHours(-26) <= _driftUtc && _driftUtc <= TimeSpan.FromHours(26)) || _driftUtc == TimeSpan.MinValue) " is 181.
Long Statement,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,GetDatabaseLocalTime,The length of the statement  "                if (DateTime.UtcNow >= _lastUpdateLocal + TimeSpan.FromMinutes(15) || !(TimeSpan.FromHours(-26) <= _driftLocal && _driftLocal <= TimeSpan.FromHours(26)) || _driftLocal == TimeSpan.MinValue) " is 189.
Long Statement,DotNetNuke.Common.Utilities,FileSystemUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\FileSystemUtils.cs,CreateFile,The length of the statement  "                strMessage += "<br />" + string.Format(Localization.GetString("RestrictedFileType")' fileName' Host.AllowedExtensionWhitelist.ToDisplayString()); " is 145.
Long Statement,DotNetNuke.Common.Utilities,HtmlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\HtmlUtils.cs,WriteFeedback,The length of the statement  "                        strMessage += timeElapsed.ToString().Substring(0' timeElapsed.ToString().LastIndexOf("."' StringComparison.Ordinal) + 4) + " -"; " is 128.
Long Statement,DotNetNuke.Common.Utilities,HtmlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\HtmlUtils.cs,WriteHeader,The length of the statement  "                    File.Copy(HttpContext.Current.Server.MapPath("~/Install/Install.template.htm")' HttpContext.Current.Server.MapPath("~/Install/Install.htm")); " is 141.
Long Statement,DotNetNuke.Common.Utilities,HtmlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\HtmlUtils.cs,WriteSuccessError,The length of the statement  "            WriteFeedback(response' 0' bSuccess ? "<font color='green'>Success</font><br>" : "<font color='red'>Error!</font><br>"' false); " is 127.
Long Statement,DotNetNuke.Common.Utilities,HtmlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\HtmlUtils.cs,AbsoluteToRelativeUrls,The length of the statement  "                    html = exp.Replace(html' "$1" + portalAlias.Substring(portalAlias.IndexOf("/"' StringComparison.InvariantCultureIgnoreCase)) + "/$2"); " is 134.
Long Statement,DotNetNuke.Common.Utilities,ImageUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\ImageUtils.cs,NewImageSize,The length of the statement  "            decimal decScale = ((decimal)currentWidth / (decimal)newWidth) > ((decimal)currentHeight / (decimal)newHeight) ? Convert.ToDecimal((decimal)currentWidth / (decimal)newWidth) : Convert.ToDecimal((decimal)currentHeight / (decimal)newHeight); " is 239.
Long Statement,DotNetNuke.Common.Utilities,PathUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\PathUtils.cs,MapPath,The length of the statement  "                convertedPath = convertedPath.Length > 1 ? string.Concat(AddTrailingSlash(applicationMapPath)' convertedPath.Substring(1)) : applicationMapPath; " is 144.
Long Statement,DotNetNuke.Common.Utilities,StringExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\StringExtensions.cs,NormalizeString,The length of the statement  "                : Iso8859Encoding.GetString(Encoding.Convert(Encoding.UTF8' Iso8859Encoding' Encoding.UTF8.GetBytes(input))).ToLowerInvariant(); " is 128.
Long Statement,DotNetNuke.Common.Utilities,StringExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\StringExtensions.cs,ReplaceIgnoreCase,The length of the statement  "            if (string.IsNullOrEmpty(source) || string.IsNullOrEmpty(oldValue) || oldValue.Equals(newValue' System.StringComparison.OrdinalIgnoreCase)) " is 139.
Long Statement,DotNetNuke.Common.Utilities,UrlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlController.cs,GetUrlLog,The length of the statement  "                arrUrlLog = CBO.FillCollection(DataProvider.Instance().GetUrlLog(objUrlTracking.UrlTrackingID' StartDate' EndDate)' typeof (UrlLogInfo)); " is 137.
Long Statement,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,DecryptParameter,The length of the statement  "            //[DNN-8257] - Can't do URLEncode/URLDecode as it introduces issues on decryption (with / = %2f)' so we use a modifed Base64 " is 124.
Long Statement,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,EncryptParameter,The length of the statement  "            //[DNN-8257] - Can't do URLEncode/URLDecode as it introduces issues on decryption (with / = %2f)' so we use a modifed Base64 " is 124.
Long Statement,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,GetQSParamsForNavigateURL,The length of the statement  "                            if ((keys[i].Equals("portalid"' StringComparison.InvariantCultureIgnoreCase)) && Globals.GetPortalSettings().ActiveTab.IsSuperTab) " is 130.
Long Statement,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,OpenNewWindow,The length of the statement  "            page.ClientScript.RegisterStartupScript(type' "DotNetNuke.NewWindow"' string.Format("<script>window.open('{0}'''new')</script>"' url)); " is 135.
Long Statement,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,PopUpUrl,The length of the statement  "            return PopUpUrl(url' control' portalSettings' onClickEvent' responseRedirect' windowHeight' windowWidth' true' string.Empty); " is 125.
Long Statement,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,PopUpUrl,The length of the statement  "            return PopUpUrl(url' null' portalSettings' onClickEvent' responseRedirect' windowHeight' windowWidth' true' string.Empty); " is 122.
Long Statement,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,PopUpUrl,The length of the statement  "                    popUpUrl = "javascript:" + String.Format(popUpScriptFormat' popUpUrl' delimiter' onClickEvent.ToString().ToLowerInvariant()' windowHeight' windowWidth' refresh.ToString().ToLower()' closingUrl); " is 194.
Long Statement,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,ReplaceQSParam,The length of the statement  "                return Regex.Replace(url' "(.*)(&|\\?)(" + param + "=)([^&\\?]+)(.*)"' "$1$2$3" + newValue + "$5"' RegexOptions.IgnoreCase); " is 124.
Long Statement,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,StripQSParam,The length of the statement  "                return Regex.Replace(url' "(.*)(&|\\?)(" + param + "=)([^&\\?]+)([&\\?])?(.*)"' "$1$2$6"' RegexOptions.IgnoreCase).Replace("(.*)([&\\?]$)"' "$1"); " is 146.
Long Statement,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,ValidReturnUrl,The length of the statement  "                    if (!urlWithNoProtocol.StartsWith(portalSettings.PortalAlias.HTTPAlias + "/"' StringComparison.InvariantCultureIgnoreCase)) " is 123.
Long Statement,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,InPopUp,The length of the statement  "            return HttpContext.Current != null && HttpContext.Current.Request.Url.ToString().IndexOf("popUp=true"' StringComparison.OrdinalIgnoreCase) >= 0; " is 144.
Long Statement,DotNetNuke.Common.Utilities,SqlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\SqlUtils.cs,TranslateSQLException,The length of the statement  "                errorMessages.Append("<b>Index #:</b> " + i + "<br/>" + "<b>Source:</b> " + sqlError.Source + "<br/>" + "<b>Class:</b> " + sqlError.Class + "<br/>" + "<b>Number:</b> " + " is 169.
Long Statement,DotNetNuke.Common.Utilities,SqlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\SqlUtils.cs,TranslateSQLException,The length of the statement  "                                     sqlError.Number + "<br/>" + "<b>Procedure:</b> " + sqlError.Procedure + "<br/>" + "<b>Message:</b> " + filteredMessage + "<br/>"); " is 130.
Long Statement,DotNetNuke.Data,SqlDatabaseConnectionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDatabaseConnectionProvider.cs,ExecuteScalar,The length of the statement  "            return PetaPocoHelper.ExecuteScalar<T>(connectionString' commandType' commandTimeout' procedureName' commandParameters); " is 120.
Long Statement,DotNetNuke.Data,SqlDatabaseConnectionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDatabaseConnectionProvider.cs,BulkInsert,The length of the statement  "            PetaPocoHelper.BulkInsert(connectionString' procedureName' tableParameterName' dataTable' commandTimeout' commandParameters); " is 125.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,CanConnect,The length of the statement  "                _dbConnectionProvider.ExecuteReader(connectionString' CommandType.StoredProcedure' 0' owner + qualifier + "GetDatabaseVersion"); " is 128.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,ExecuteScriptInternal,The length of the statement  "                        exceptions += objException + Environment.NewLine + Environment.NewLine + sql + Environment.NewLine + Environment.NewLine; " is 121.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,GetConnectionStringUserID,The length of the statement  "            if (connectionStringUppercase.Contains("USER ID") || connectionStringUppercase.Contains("UID") || connectionStringUppercase.Contains("USER")) " is 141.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,GrantStoredProceduresPermission,The length of the statement  "                + "    where ( OBJECTPROPERTY(o.id' N'IsProcedure') = 1 or OBJECTPROPERTY(o.id' N'IsExtendedProc') = 1 or OBJECTPROPERTY(o.id' N'IsReplProc') = 1 ) " " is 149.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,GrantUserDefinedFunctionsPermission,The length of the statement  "                + "    declare sp_cursor cursor for select o.name as name' OBJECTPROPERTY(o.id' N'IsScalarFunction') as IsScalarFunction " " is 122.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,ExecuteUpgradedConnectionQuery,The length of the statement  "                exceptions += objException + Environment.NewLine + Environment.NewLine + sql + Environment.NewLine + Environment.NewLine; " is 121.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,ExecuteNonQuery,The length of the statement  "            _dbConnectionProvider.ExecuteNonQuery(ConnectionString' CommandType.StoredProcedure' 0' DatabaseOwner + ObjectQualifier + procedureName' commandParameters); " is 156.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,ExecuteNonQuery,The length of the statement  "            _dbConnectionProvider.ExecuteNonQuery(ConnectionString' CommandType.StoredProcedure' timeoutSec' DatabaseOwner + ObjectQualifier + procedureName' commandParameters); " is 165.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,BulkInsert,The length of the statement  "            _dbConnectionProvider.BulkInsert(ConnectionString' 0' DatabaseOwner + ObjectQualifier + procedureName' tableParameterName' dataTable); " is 134.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,BulkInsert,The length of the statement  "            _dbConnectionProvider.BulkInsert(ConnectionString' timeoutSec' DatabaseOwner + ObjectQualifier + procedureName' tableParameterName' dataTable); " is 143.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,BulkInsert,The length of the statement  "            _dbConnectionProvider.BulkInsert(ConnectionString' 0' DatabaseOwner + ObjectQualifier + procedureName' tableParameterName' dataTable' commandParameters); " is 153.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,BulkInsert,The length of the statement  "            _dbConnectionProvider.BulkInsert(ConnectionString' 0' DatabaseOwner + ObjectQualifier + procedureName' tableParameterName' dataTable' commandParameters); " is 153.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,ExecuteReader,The length of the statement  "            return _dbConnectionProvider.ExecuteReader(ConnectionString' CommandType.StoredProcedure' 0' DatabaseOwner + ObjectQualifier + procedureName' commandParameters); " is 161.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,ExecuteReader,The length of the statement  "            return _dbConnectionProvider.ExecuteReader(ConnectionString' CommandType.StoredProcedure' timeoutSec' DatabaseOwner + ObjectQualifier + procedureName' commandParameters); " is 170.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,ExecuteScalar,The length of the statement  "            return _dbConnectionProvider.ExecuteScalar<T>(ConnectionString' CommandType.StoredProcedure' 0' DatabaseOwner + ObjectQualifier + procedureName' commandParameters); " is 164.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,ExecuteScalar,The length of the statement  "            return _dbConnectionProvider.ExecuteScalar<T>(ConnectionString' CommandType.StoredProcedure' timeoutSec' DatabaseOwner + ObjectQualifier + procedureName' commandParameters); " is 173.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,ExecuteScript,The length of the statement  "            if (UpgradeConnectionString != ConnectionString || !DatabaseOwner.Trim().Equals("dbo."' StringComparison.InvariantCultureIgnoreCase)) " is 133.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,ExecuteScript,The length of the statement  "                    exceptions += objException + Environment.NewLine + Environment.NewLine + script + Environment.NewLine + Environment.NewLine; " is 124.
Long Statement,DotNetNuke.Data,SqlDataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\SqlDataProvider.cs,ExecuteScript,The length of the statement  "                    exceptions += objException + Environment.NewLine + Environment.NewLine + script + Environment.NewLine + Environment.NewLine; " is 124.
Long Statement,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateServerActivity,The length of the statement  "            return ExecuteScalar<int>("UpdateServerActivity"' serverName' iisAppName' createdDate' lastActivityDate' pingFailureCount' enabled); " is 132.
Long Statement,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,SaveTabUrl,The length of the statement  "            ExecuteNonQuery("SaveTabUrl"' tabId' seqNum' GetNull(portalAliasId)' portalAliasUsage' url' queryString' cultureCode' httpStatus' isSystem' modifiedByUserID); " is 158.
Long Statement,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,SaveTabVersion,The length of the statement  "            return ExecuteScalar<int>("SaveTabVersion"' tabVersionId' tabId' timeStamp' version' isPublished' createdByUserID' modifiedByUserID); " is 133.
Long Statement,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,SaveTabVersionDetail,The length of the statement  "            return ExecuteScalar<int>("SaveTabVersionDetail"' tabVersionDetailId' tabVersionId' moduleId' moduleVersion' paneName' moduleOrder' action' createdByUserID' modifiedByUserID); " is 175.
Long Statement,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddPermission,The length of the statement  "            return ExecuteScalar<int>("AddPermission"' moduleDefID' permissionCode' permissionKey' permissionName' createdByUserID); " is 120.
Long Statement,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdatePermission,The length of the statement  "            ExecuteNonQuery("UpdatePermission"' permissionID' permissionCode' moduleDefID' permissionKey' permissionName' lastModifiedByUserID); " is 132.
Long Statement,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddPortalAlias,The length of the statement  "            return ExecuteScalar<int>("AddPortalAlias"' PortalID' HTTPAlias' GetNull(cultureCode)' GetNull(skin)' GetNull(browserType)' isPrimary' createdByUserID); " is 152.
Long Statement,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdatePortalAliasInfo,The length of the statement  "            ExecuteNonQuery("UpdatePortalAlias"' PortalAliasID' PortalID' HTTPAlias' GetNull(cultureCode)' GetNull(skin)' GetNull(browserType)' isPrimary' lastModifiedByUserID); " is 165.
Long Statement,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddPasswordHistory,The length of the statement  "            ExecuteNonQuery("AddPasswordHistory"' GetNull(userId)' password' passwordHistory' passwordsRetained' daysRetained' GetNull(userId)); " is 132.
Long Statement,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateScheduleHistory,The length of the statement  "            ExecuteNonQuery("UpdateScheduleHistory"' ScheduleHistoryID' FixDate(EndDate)' GetNull(Succeeded)' LogNotes' FixDate(NextStart)); " is 128.
Long Statement,DotNetNuke.Data.PetaPoco,FluentMapperExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\PetaPoco\FluentMapperExtensions.cs,Property,The length of the statement  "            mapper.Mappings.Add(name' new FluentColumnMap(new ColumnInfo() { ColumnName = column' ResultColumn = readOnly }' fromDbConverter' toDbConverter)); " is 146.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,AddContent,The length of the statement  "                    object businessController = Reflection.CreateObject(module.DesktopModule.BusinessControllerClass' module.DesktopModule.BusinessControllerClass); " is 144.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,AddModuleInternal,The length of the statement  "                EventLogController.Instance.AddLog(module' PortalController.Instance.GetCurrentPortalSettings()' currentUser.UserID' ""' EventLogController.EventLogType.MODULE_CREATED); " is 169.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,AddModulePermission,The length of the statement  "            var perm = module.ModulePermissions.Where(tp => tp.RoleName == roleName && tp.PermissionKey == permissionKey).SingleOrDefault(); " is 128.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,GetModuleContent,The length of the statement  "                                object businessController = Reflection.CreateObject(module.DesktopModule.BusinessControllerClass' module.DesktopModule.BusinessControllerClass); " is 144.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,GetModuleDefinition,The length of the statement  "            var desktopModule = DesktopModuleController.GetDesktopModuleByModuleName(XmlUtils.GetNodeValue(nodeModule.CreateNavigator()' "definition")' Null.NullInteger); " is 158.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,GetModuleDefinition,The length of the statement  "                    foreach (ModuleDefinitionInfo md in ModuleDefinitionController.GetModuleDefinitionsByDesktopModuleID(desktopModule.DesktopModuleID).Values) " is 139.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,GetModuleDefinition,The length of the statement  "                    moduleDefinition = ModuleDefinitionController.GetModuleDefinitionByFriendlyName(friendlyName' desktopModule.DesktopModuleID); " is 125.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,LocalizeModuleInternal,The length of the statement  "                string translatorRoles = PortalController.GetPortalSetting(string.Format("DefaultTranslatorRoles-{0}"' sourceModule.CultureCode)' sourceModule.PortalID' "").TrimEnd(';'); " is 170.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,LocalizeModuleInternal,The length of the statement  "                        object businessController = Reflection.CreateObject(newModule.DesktopModule.BusinessControllerClass' newModule.DesktopModule.BusinessControllerClass); " is 150.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,HasModuleOrderOrPaneChanged,The length of the statement  "            return storedModuleInfo == null || storedModuleInfo.ModuleOrder != module.ModuleOrder || storedModuleInfo.PaneName != module.PaneName; " is 134.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,DeleteTabModuleInternal,The length of the statement  "                dataProvider.DeleteTabModule(moduleInfo.TabID' moduleInfo.ModuleID' softDelete' UserController.Instance.GetCurrentUserInfo().UserID); " is 133.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,CopyModule,The length of the statement  "            if (!String.IsNullOrEmpty(sourceModule.CultureCode) && sourceModule.CultureCode == portal.DefaultLanguage && destinationModule.CultureCode != sourceModule.CultureCode && " is 169.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,CopyModule,The length of the statement  "            else if (!String.IsNullOrEmpty(sourceModule.CultureCode) && sourceModule.CultureCode != portal.DefaultLanguage && destinationModule.CultureCode != sourceModule.CultureCode && " is 174.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,CopyModule,The length of the statement  "                    ModuleInfo defaultLanguageModule = GetModule(sourceModule.DefaultLanguageModule.ModuleID' destinationTab.DefaultLanguageTab.TabID' false); " is 138.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,DeleteModule,The length of the statement  "            EventLogController.Instance.AddLog("ModuleId"' moduleId.ToString(CultureInfo.InvariantCulture)' PortalController.Instance.GetCurrentPortalSettings()' " is 149.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,InitialModulePermission,The length of the statement  "            ArrayList systemModuleViewPermissions = permissionController.GetPermissionByCodeAndKey("SYSTEM_MODULE_DEFINITION"' "VIEW"); " is 123.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,InitialModulePermission,The length of the statement  "                ArrayList systemModulePermissions = permissionController.GetPermissionByCodeAndKey("SYSTEM_MODULE_DEFINITION"' tabPermission.PermissionKey); " is 140.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,InitialModulePermission,The length of the statement  "                    ModulePermissionInfo modulePermission = AddModulePermission(module' systemModulePermission' tabPermission.RoleID' tabPermission.UserID' tabPermission.AllowAccess); " is 163.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,InitialModulePermission,The length of the statement  "                        AddModulePermission(module' (PermissionInfo)systemModuleViewPermissions[0]' modulePermission.RoleID' modulePermission.UserID' true); " is 132.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,InitialModulePermission,The length of the statement  "                        AddModulePermission(module' customModulePermission' tabPermission.RoleID' tabPermission.UserID' tabPermission.AllowAccess); " is 123.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,MoveModule,The length of the statement  "            dataProvider.MoveTabModule(fromTabId' moduleId' toTabId' toPaneName' UserController.Instance.GetCurrentUserInfo().UserID); " is 122.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,UpdateModule,The length of the statement  "            EventLogController.Instance.AddLog(module' PortalController.Instance.GetCurrentPortalSettings()' currentUser.UserID' ""' EventLogController.EventLogType.MODULE_UPDATED); " is 169.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,UpdateModule,The length of the statement  "                EventLogController.Instance.AddLog(module' PortalController.Instance.GetCurrentPortalSettings()' currentUser.UserID' ""' EventLogController.EventLogType.TABMODULE_UPDATED); " is 172.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,UpdateModule,The length of the statement  "                            PortalController.UpdatePortalSetting(module.PortalID' "defaultmoduleid"' module.ModuleID.ToString(CultureInfo.InvariantCulture)); " is 129.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,UpdateModule,The length of the statement  "                            PortalController.UpdatePortalSetting(module.PortalID' "defaulttabid"' module.TabID.ToString(CultureInfo.InvariantCulture)); " is 123.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,UpdateModuleOrder,The length of the statement  "                TabChangeTracker.Instance.TrackModuleModification(GetModule(moduleId' tabId' true)' Null.NullInteger' UserController.Instance.GetCurrentUserInfo().UserID); " is 155.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,UpdateTranslationStatus,The length of the statement  "            DataProvider.Instance().UpdateTabModuleTranslationStatus(localizedModule.TabModuleID' localizedModule.LocalizedVersionGuid' UserController.Instance.GetCurrentUserInfo().UserID); " is 177.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,DeserializeModule,The length of the statement  "            ModuleInfo sourceModule = DeserializeModule(nodeModule' docPane.DocumentElement' portalId' tabId' moduleDefinition.ModuleDefID); " is 128.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,SerializeModule,The length of the statement  "                XmlUtils.SerializeHashtable(module.ModuleSettings' xmlModule' moduleNode' "modulesetting"' "settingname"' "settingvalue"); " is 122.
Long Statement,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,SerializeModule,The length of the statement  "                XmlUtils.SerializeHashtable(module.TabModuleSettings' xmlModule' moduleNode' "tabmodulesetting"' "settingname"' "settingvalue"); " is 128.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,GetDesktopModulesInternal,The length of the statement  "            var args = new CacheItemArgs(cacheKey' DataCache.DesktopModuleCacheTimeOut' DataCache.DesktopModuleCachePriority' portalID); " is 124.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,GetDesktopModulesCallBack,The length of the statement  "            return CBO.FillDictionary("DesktopModuleID"' DataProvider.GetDesktopModules()' new Dictionary<int' DesktopModuleInfo>()); " is 121.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,GetDesktopModulesByPortalCallBack,The length of the statement  "            return CBO.FillDictionary("DesktopModuleID"' DataProvider.GetDesktopModulesByPortal(portalId)' new Dictionary<int' DesktopModuleInfo>()); " is 137.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,GetPortalDesktopModulesByPortalIDCallBack,The length of the statement  "            return CBO.FillDictionary("PortalDesktopModuleID"' DataProvider.Instance().GetPortalDesktopModules(portalId' Null.NullInteger)' new Dictionary<int' PortalDesktopModuleInfo>()); " is 176.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,DeleteDesktopModule,The length of the statement  "                PackageController.Instance.DeleteExtensionPackage(PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.PackageID == desktopModule.PackageID)); " is 161.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,GetDesktopModuleByFriendlyName,The length of the statement  "            var module = (from kvp in GetDesktopModulesInternal(Null.NullInteger) where kvp.Value.FriendlyName == friendlyName select kvp.Value).FirstOrDefault(); " is 150.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,SaveDesktopModule,The length of the statement  "                EventLogController.Instance.AddLog(desktopModule' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.DESKTOPMODULE_CREATED); " is 216.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,SaveDesktopModule,The length of the statement  "                EventLogController.Instance.AddLog(desktopModule' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.DESKTOPMODULE_UPDATED); " is 216.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,SaveDesktopModule,The length of the statement  "                    var moduleDefinition = ModuleDefinitionController.GetModuleDefinitionByDefinitionName(definition.DefinitionName' desktopModuleID); " is 130.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,UpdateModuleInterfaces,The length of the statement  "            UpdateModuleInterfaces(ref desktopModuleInfo' (UserController.Instance.GetCurrentUserInfo() == null) ? "" : UserController.Instance.GetCurrentUserInfo().Username' true); " is 169.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,CheckInterfacesImplementation,The length of the statement  "            var controller = Reflection.CreateObject(desktopModuleInfo.BusinessControllerClass' desktopModuleInfo.BusinessControllerClass);    " is 127.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,AddDesktopModuleToPortal,The length of the statement  "                portalDesktopModuleID = DataProvider.Instance().AddPortalDesktopModule(portalId' desktopModuleId' UserController.Instance.GetCurrentUserInfo().UserID); " is 151.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,AddDesktopModuleToPortal,The length of the statement  "                            var desktopModulePermission = new DesktopModulePermissionInfo(permission) { RoleID = objPortal.AdministratorRoleId' AllowAccess = true' PortalDesktopModuleID = portalDesktopModuleID }; " is 184.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,GetPortalDesktopModule,The length of the statement  "            return CBO.FillObject<PortalDesktopModuleInfo>(DataProvider.Instance().GetPortalDesktopModules(portalId' desktopModuleId)); " is 123.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,GetPortalDesktopModulesByDesktopModuleID,The length of the statement  "            return CBO.FillDictionary<int' PortalDesktopModuleInfo>("PortalDesktopModuleID"' DataProvider.Instance().GetPortalDesktopModules(Null.NullInteger' desktopModuleId)); " is 165.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,GetPortalDesktopModulesByPortalID,The length of the statement  "                    new CacheItemArgs(cacheKey' DataCache.PortalDesktopModuleCacheTimeOut' DataCache.PortalDesktopModuleCachePriority' portalId)' GetPortalDesktopModulesByPortalIDCallBack); " is 169.
Long Statement,DotNetNuke.Entities.Modules,DesktopModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleController.cs,AddDesktopModuleToPage,The length of the statement  "            var moduleDefinitions = ModuleDefinitionController.GetModuleDefinitionsByDesktopModuleID(desktopModule.DesktopModuleID).Values; " is 127.
Long Statement,DotNetNuke.Entities.Modules,ModuleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleInfo.cs,GetEffectiveCacheMethod,The length of the statement  "                effectiveCacheMethod = (from provider in ModuleCachingProvider.GetProviderList() where provider.Value.Equals(defaultModuleCache) select provider.Key).SingleOrDefault(); " is 168.
Long Statement,DotNetNuke.Entities.Modules,ModuleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleInfo.cs,Initialize,The length of the statement  "            if (PortalSettings.Current.DefaultModuleId > Null.NullInteger && PortalSettings.Current.DefaultTabId > Null.NullInteger) " is 120.
Long Statement,DotNetNuke.Entities.Modules,ModuleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleInfo.cs,Initialize,The length of the statement  "                ModuleInfo objModule = ModuleController.Instance.GetModule(PortalSettings.Current.DefaultModuleId' PortalSettings.Current.DefaultTabId' true); " is 142.
Long Statement,DotNetNuke.Entities.Modules,PortalModuleBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\PortalModuleBase.cs,OnInit,The length of the statement  "                _tracelLogger.Debug($"PortalModuleBase.OnInit Start (TabId:{PortalSettings.ActiveTab.TabID}'ModuleId:{ModuleId}): {GetType()}"); " is 128.
Long Statement,DotNetNuke.Entities.Modules,PortalModuleBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\PortalModuleBase.cs,OnInit,The length of the statement  "                _tracelLogger.Debug($"PortalModuleBase.OnInit End (TabId:{PortalSettings.ActiveTab.TabID}'ModuleId:{ModuleId}): {GetType()}"); " is 126.
Long Statement,DotNetNuke.Entities.Modules,PortalModuleBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\PortalModuleBase.cs,OnLoad,The length of the statement  "                _tracelLogger.Debug($"PortalModuleBase.OnLoad Start (TabId:{PortalSettings.ActiveTab.TabID}'ModuleId:{ModuleId}): {GetType()}"); " is 128.
Long Statement,DotNetNuke.Entities.Modules,PortalModuleBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\PortalModuleBase.cs,OnLoad,The length of the statement  "                _tracelLogger.Debug($"PortalModuleBase.OnLoad End (TabId:{PortalSettings.ActiveTab.TabID}'ModuleId:{ModuleId}): {GetType()}"); " is 126.
Long Statement,DotNetNuke.Entities.Modules,PortalModuleBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\PortalModuleBase.cs,GetCacheFileName,The length of the statement  "            return PortalController.Instance.GetCurrentPortalSettings().HomeDirectoryMapPath + "Cache" + "\\" + Globals.CleanFileName(strCacheKey) + ".resources"; " is 150.
Long Statement,DotNetNuke.Entities.Modules,SkinControlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\SkinControlController.cs,DeleteSkinControl,The length of the statement  "            EventLogController.Instance.AddLog(skinControl' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.SKINCONTROL_DELETED); " is 212.
Long Statement,DotNetNuke.Entities.Modules,SkinControlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\SkinControlController.cs,SaveSkinControl,The length of the statement  "                EventLogController.Instance.AddLog(skinControl' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.SKINCONTROL_CREATED); " is 212.
Long Statement,DotNetNuke.Entities.Modules,SkinControlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\SkinControlController.cs,SaveSkinControl,The length of the statement  "                EventLogController.Instance.AddLog(skinControl' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.SKINCONTROL_UPDATED); " is 212.
Long Statement,DotNetNuke.Entities.Modules,UserModuleBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\UserModuleBase.cs,LookupCountry,The length of the statement  "                Context.Cache.Insert("GeoIPData"' CountryLookup.FileToMemory(Context.Server.MapPath(_GeoIPFile))' new CacheDependency(Context.Server.MapPath(_GeoIPFile))); " is 155.
Long Statement,DotNetNuke.Entities.Modules,UserModuleBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\UserModuleBase.cs,CompleteUserCreation,The length of the statement  "				//check the receive notification setting first' but if register type is Private' we will always send the notification email. " is 124.
Long Statement,DotNetNuke.Entities.Modules,UserModuleBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\UserModuleBase.cs,CompleteUserCreation,The length of the statement  "				if (PortalSettings.EnableRegisterNotification || PortalSettings.UserRegistration == (int)Globals.PortalRegistrationType.PrivateRegistration) " is 140.
Long Statement,DotNetNuke.Entities.Modules,UserModuleBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\UserModuleBase.cs,CompleteUserCreation,The length of the statement  "                        UserController.UserLogin(PortalSettings.PortalId' newUser.Username' newUser.Membership.Password' ""' PortalSettings.PortalName' ""' ref loginStatus' false); " is 156.
Long Statement,DotNetNuke.Entities.Modules,UserModuleBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\UserModuleBase.cs,CompleteUserCreation,The length of the statement  "                        UserController.UserLogin(PortalSettings.PortalId' newUser.Username' newUser.Membership.Password' ""' PortalSettings.PortalName' ""' ref loginStatus' false); " is 156.
Long Statement,DotNetNuke.Entities.Modules,UserModuleBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\UserModuleBase.cs,CompleteUserCreation,The length of the statement  "                    AddLocalizedModuleMessage(string.Format(Localization.GetString("SendMail.Error"' Localization.SharedResourceFile)' strMessage)' message' (!String.IsNullOrEmpty(strMessage))); " is 174.
Long Statement,DotNetNuke.Entities.Modules,UserModuleBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\UserModuleBase.cs,LocalizeNotificationText,The length of the statement  "            return Localization.GetSystemMessage(locale' portalSettings' text' user' Localization.GlobalResourceFile' null' ""' portalSettings.AdministratorId);             " is 148.
Long Statement,DotNetNuke.Entities.Modules.Settings,SettingsRepository<T>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Settings\SettingsRepository.cs,GetSettings,The length of the statement  "            return CBO.GetCachedObject<T>(new CacheItemArgs(CacheKey(moduleContext.TabModuleID)' 20' CacheItemPriority.AboveNormal' moduleContext)' Load' false);" is 149.
Long Statement,DotNetNuke.Entities.Modules.Settings,SettingsRepository<T>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Settings\SettingsRepository.cs,SaveSettings,The length of the statement  "                        settingValueAsString = (string)CallSerializerMethod(attribute.Serializer' property.PropertyType' settingValue' nameof(ISettingsSerializer<T>.Serialize));" is 153.
Long Statement,DotNetNuke.Entities.Modules.Settings,SettingsRepository<T>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Settings\SettingsRepository.cs,LoadMapping,The length of the statement  "                // Note that "caching" can also be accomplished with a static dictionary since the Attribute/Property mapping does not change unless the module is updated." is 155.
Long Statement,DotNetNuke.Entities.Modules.Settings,SettingsRepository<T>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Settings\SettingsRepository.cs,LoadMapping,The length of the statement  "                CachingProvider.Instance().Insert(cacheKey' mapping' (DNNCacheDependency)null' DateTime.Now.AddHours(2)' Cache.NoSlidingExpiration);" is 132.
Long Statement,DotNetNuke.Entities.Modules.Settings,SettingsRepository<T>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Settings\SettingsRepository.cs,CreateMapping,The length of the statement  "            var properties = type.GetProperties(BindingFlags.Instance | BindingFlags.Public | BindingFlags.GetProperty | BindingFlags.SetProperty);" is 135.
Long Statement,DotNetNuke.Entities.Modules.Settings,SettingsRepository<T>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Settings\SettingsRepository.cs,Load,The length of the statement  "                if (attribute is PortalSettingAttribute && PortalController.Instance.GetPortalSettings(ctlModule.PortalID).ContainsKey(mapping.FullParameterName))" is 146.
Long Statement,DotNetNuke.Entities.Modules.Settings,SettingsRepository<T>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Settings\SettingsRepository.cs,DeserializeProperty,The length of the statement  "                    var deserializedValue = CallSerializerMethod(attribute.Serializer' property.PropertyType' propertyValue' nameof(ISettingsSerializer<T>.Deserialize));" is 149.
Long Statement,DotNetNuke.Entities.Modules.Settings,SettingsRepository<T>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Settings\SettingsRepository.cs,DeserializeProperty,The length of the statement  "                        property.SetValue(settings' Enum.ToObject(propertyType' Convert.ToInt32(propertyValue' CultureInfo.InvariantCulture))' null);" is 125.
Long Statement,DotNetNuke.Entities.Modules.Settings,SettingsRepository<T>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Settings\SettingsRepository.cs,DeserializeProperty,The length of the statement  "                if (propertyType.IsAssignableFrom(typeof(TimeSpan)) && TimeSpan.TryParse(propertyValue' CultureInfo.InvariantCulture' out timeSpanValue))" is 137.
Long Statement,DotNetNuke.Entities.Modules.Settings,SettingsRepository<T>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Settings\SettingsRepository.cs,DeserializeProperty,The length of the statement  "                if (propertyType.IsAssignableFrom(typeof(DateTime)) && DateTime.TryParse(propertyValue' CultureInfo.InvariantCulture' DateTimeStyles.RoundtripKind' out dateTimeValue))" is 167.
Long Statement,DotNetNuke.Entities.Modules.Settings,SettingsRepository<T>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Settings\SettingsRepository.cs,DeserializeProperty,The length of the statement  "                throw new InvalidCastException(string.Format(CultureInfo.CurrentUICulture' "Could not cast {0} to property {1} of type {2}"'" is 124.
Long Statement,DotNetNuke.Entities.Portals,PortalAliasExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasExtensions.cs,GetAliasByPortalIdAndSettings,The length of the statement  "            //27138 : Redirect loop caused by duplicate primary aliases.  Changed to only check by browserType/Culture code which makes a primary alias " is 139.
Long Statement,DotNetNuke.Entities.Portals,PortalAliasExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasExtensions.cs,GetAliasByPortalIdAndSettings,The length of the statement  "                                            && (String.Compare(a.CultureCode' cultureCode' StringComparison.OrdinalIgnoreCase) == 0 || String.IsNullOrEmpty(a.CultureCode)) " is 127.
Long Statement,DotNetNuke.Entities.Portals,PortalAliasExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasExtensions.cs,GetAliasByPortalIdAndSettings,The length of the statement  "                foundAlias = aliasList.Where(a => (String.Compare(a.CultureCode' cultureCode' StringComparison.OrdinalIgnoreCase) == 0 || String.IsNullOrEmpty(a.CultureCode)) " is 158.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,GetActiveTab,The length of the statement  "                var tab = (from TabInfo t in portalTabs.AsList() where !t.IsDeleted && t.IsVisible && t.HasAVisibleVersion select t).FirstOrDefault(); " is 134.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,LoadPortal,The length of the statement  "            portalSettings.DefaultLanguage = Null.IsNull(portal.DefaultLanguage) ? Localization.SystemLocale : portal.DefaultLanguage; " is 122.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,LoadPortalSettings,The length of the statement  "            portalSettings.DefaultAdminContainer = settings.GetValueOrDefault("DefaultAdminContainer"' Host.Host.DefaultAdminContainer); " is 124.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,LoadPortalSettings,The length of the statement  "            portalSettings.DefaultModuleActionMenu = settings.GetValueOrDefault("DefaultModuleActionMenu"' "~/admin/Menus/ModuleActions/ModuleActions.ascx"); " is 145.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,LoadPortalSettings,The length of the statement  "            portalSettings.DefaultPortalContainer = settings.GetValueOrDefault("DefaultPortalContainer"' Host.Host.DefaultPortalContainer); " is 127.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,LoadPortalSettings,The length of the statement  "            portalSettings.EnableBrowserLanguage = settings.GetValueOrDefault("EnableBrowserLanguage"' Host.Host.EnableBrowserLanguage); " is 124.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,LoadPortalSettings,The length of the statement  "            portalSettings.SearchIncludeNumeric = settings.GetValueOrDefault("SearchIncludeNumeric"' Host.Host.SearchIncludeNumeric); " is 121.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,LoadPortalSettings,The length of the statement  "            portalSettings.SearchIncludedTagInfoFilter = settings.GetValueOrDefault("SearchIncludedTagInfoFilter"' Host.Host.SearchIncludedTagInfoFilter); " is 142.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,LoadPortalSettings,The length of the statement  "            portalSettings.SearchMaxWordlLength = settings.GetValueOrDefault("MaxSearchWordLength"' Host.Host.SearchMaxWordlLength); " is 120.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,LoadPortalSettings,The length of the statement  "            portalSettings.SearchMinWordlLength = settings.GetValueOrDefault("MinSearchWordLength"' Host.Host.SearchMinWordlLength); " is 120.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,UpdateSkinSettings,The length of the statement  "                    Host.Host.DefaultAdminSkin' portalSettings.CultureCode)) ? portalSettings.DefaultAdminSkin : PortalController.GetPortalSetting("DefaultAdminSkin"' portalSettings.PortalId' " is 171.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,UpdateSkinSettings,The length of the statement  "                activeTab.SkinSrc = String.IsNullOrEmpty(PortalController.GetPortalSetting("DefaultPortalSkin"' portalSettings.PortalId' " is 120.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,UpdateSkinSettings,The length of the statement  "                    Host.Host.DefaultPortalSkin' portalSettings.CultureCode)) ? portalSettings.DefaultPortalSkin : PortalController.GetPortalSetting("DefaultPortalSkin"' portalSettings.PortalId' " is 174.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,UpdateSkinSettings,The length of the statement  "                activeTab.ContainerSrc = String.IsNullOrEmpty(PortalController.GetPortalSetting("DefaultAdminContainer"' portalSettings.PortalId' " is 129.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,UpdateSkinSettings,The length of the statement  "                    Host.Host.DefaultAdminContainer' portalSettings.CultureCode)) ? portalSettings.DefaultAdminContainer : PortalController.GetPortalSetting("DefaultAdminContainer"' portalSettings.PortalId' " is 186.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,UpdateSkinSettings,The length of the statement  "                activeTab.ContainerSrc = String.IsNullOrEmpty(PortalController.GetPortalSetting("DefaultPortalContainer"' portalSettings.PortalId' " is 130.
Long Statement,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,UpdateSkinSettings,The length of the statement  "                    Host.Host.DefaultPortalContainer' portalSettings.CultureCode)) ? portalSettings.DefaultPortalContainer : PortalController.GetPortalSetting("DefaultPortalContainer"' portalSettings.PortalId' " is 189.
Long Statement,DotNetNuke.Entities.Portals,PortalAliasController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasController.cs,GetPortalAliasInternal,The length of the statement  "                    DataProvider.Instance().UpdatePortalAlias(httpAlias.ToLowerInvariant().Trim('/')' UserController.Instance.GetCurrentUserInfo().UserID); " is 135.
Long Statement,DotNetNuke.Entities.Portals,PortalAliasController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasController.cs,LogEvent,The length of the statement  "            EventLogController.Instance.AddLog(portalAlias' PortalController.Instance.GetCurrentPortalSettings()' userId' ""' logType); " is 123.
Long Statement,DotNetNuke.Entities.Portals,PortalAliasController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasController.cs,GetPortalAlias,The length of the statement  "            return GetPortalAliasesInternal().SingleOrDefault(pa => pa.Key.Equals(alias' StringComparison.InvariantCultureIgnoreCase) && pa.Value.PortalID == portalId).Value; " is 162.
Long Statement,DotNetNuke.Entities.Portals,PortalAliasInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasInfo.cs,ReadXml,The length of the statement  "                        BrowserType = type.Equals("mobile"' StringComparison.InvariantCultureIgnoreCase) ? BrowserTypes.Mobile : BrowserTypes.Normal; " is 125.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreateDefaultPortalRoles,The length of the statement  "                administratorRoleId = CreateRole(portalId' "Administrators"' "Administrators of this Website"' 0' 0' "M"' 0' 0' "N"' false' false); " is 131.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreateDefaultPortalRoles,The length of the statement  "                subscriberRoleId = CreateRole(portalId' "Subscribers"' "A public role for site subscriptions"' 0' 0' "M"' 0' 0' "N"' true' true); " is 129.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreateDefaultPortalRoles,The length of the statement  "            RoleController.Instance.AddUserRole(portalId' administratorId' administratorRoleId' RoleStatus.Approved' false' Null.NullDate' Null.NullDate); " is 142.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreateDefaultPortalRoles,The length of the statement  "            RoleController.Instance.AddUserRole(portalId' administratorId' registeredRoleId' RoleStatus.Approved' false' Null.NullDate' Null.NullDate); " is 139.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreateDefaultPortalRoles,The length of the statement  "            RoleController.Instance.AddUserRole(portalId' administratorId' subscriberRoleId' RoleStatus.Approved' false' Null.NullDate' Null.NullDate); " is 139.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortalInternal,The length of the statement  "            string mappedHomeDirectory = String.Format(Globals.ApplicationMapPath + "\\" + homeDirectory + "\\").Replace("/"' "\\"); " is 120.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortalInternal,The length of the statement  "                        ParseTemplateInternal(portalId' templatePath' templateFile' adminUser.UserID' PortalTemplateModuleAction.Replace' true' out newPortalLocales); " is 142.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortal,The length of the statement  "                    ? Convert.ToDateTime(Globals.GetMediumDate(DateTime.Now.AddDays(Host.Host.DemoPeriod).ToString(CultureInfo.InvariantCulture)))  " is 126.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortal,The length of the statement  "                EventLogController.Instance.AddLog("PortalName"' portalName' GetCurrentPortalSettingsInternal()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.PORTAL_CREATED); " is 198.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,DeletePortalInternal,The length of the statement  "            EventLogController.Instance.AddLog("PortalId"' portalId.ToString()' GetCurrentPortalSettingsInternal()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.PORTALINFO_DELETED); " is 209.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetPortalDictionaryCallback,The length of the statement  "                        portalDic[Convert.ToInt32(Null.SetNull(dr["TabID"]' intField))] = Convert.ToInt32(Null.SetNull(dr["PortalID"]' intField)); " is 122.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseFiles,The length of the statement  "                    //Initially' install files are on local system' then we need the Standard folder provider to read the content regardless the target folderprovider					 " is 146.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseFiles,The length of the statement  "				catch (InvalidFileExtensionException ex) //when the file is not allowed' we should not break parse process' but just log the error. " is 131.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,EnsureRequiredProvidersForFolderTypes,The length of the statement  "                ComponentFactory.InstallComponents(new ProviderInstaller("cryptography"' typeof(CryptographyProvider)' typeof(FipsCompilanceCryptographyProvider))); " is 148.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,EnsureFolderProviderRegistration,The length of the statement  "            var providerBusinessClassNode = webConfig.SelectSingleNode("configuration/dotnetnuke/folder/providers/add[@name='"+folderTypeConfig.Provider+"']"); " is 147.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,EnableBrowserLanguageInDefault,The length of the statement  "                    retValue = (setting.StartsWith("Y"' StringComparison.InvariantCultureIgnoreCase) || setting.Equals("TRUE"' StringComparison.InvariantCultureIgnoreCase)); " is 153.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,EnsureSettingValue,The length of the statement  "                settingNode.Value.Replace("{PortalId}"' (portalId != -1) ? portalId.ToString(CultureInfo.InvariantCulture) : "_default").Replace("{HostId}"' Host.Host.GUID); " is 157.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseEnabledLocales,The length of the statement  "                    locale = new Locale { Code = cultureCode' Fallback = Localization.SystemLocale' Text = CultureInfo.GetCultureInfo(cultureCode).NativeName }; " is 140.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParsePortalSettings,The length of the statement  "				UpdatePortalSetting(portalId' "DefaultPortalSkin"' XmlUtils.GetNodeValue(nodeSettings' "skinsrc"' "")' true' currentCulture); " is 125.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParsePortalSettings,The length of the statement  "				UpdatePortalSetting(portalId' "DefaultAdminSkin"' XmlUtils.GetNodeValue(nodeSettings' "skinsrcadmin"' "")' true' currentCulture); " is 129.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParsePortalSettings,The length of the statement  "				UpdatePortalSetting(portalId' "DefaultPortalContainer"' XmlUtils.GetNodeValue(nodeSettings' "containersrc"' "")' true' currentCulture); " is 135.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParsePortalSettings,The length of the statement  "				UpdatePortalSetting(portalId' "DefaultAdminContainer"' XmlUtils.GetNodeValue(nodeSettings' "containersrcadmin"' "")' true' currentCulture); " is 139.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParsePortalSettings,The length of the statement  "                UpdatePortalSetting(portalId' "CookieMoreLink"' XmlUtils.GetNodeValue(nodeSettings' "cookiemorelink"' "")' true' currentCulture); " is 129.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParsePortalSettings,The length of the statement  "                UpdatePortalSetting(portalId' "PortalAliasMapping"' XmlUtils.GetNodeValue(nodeSettings' "portalaliasmapping"' "CANONICALURL").ToUpperInvariant()); " is 146.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParsePortalSettings,The length of the statement  "                UpdatePortalSetting(portalId' "TimeZone"' XmlUtils.GetNodeValue(nodeSettings' "timezone"' Localization.SystemTimeZone)); " is 120.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParsePortalSettings,The length of the statement  "                UpdatePortalSetting(portalId' "ContentLocalizationEnabled"' XmlUtils.GetNodeValue(nodeSettings' "contentlocalizationenabled")); " is 127.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParsePortalSettings,The length of the statement  "                UpdatePortalSetting(portalId' "InjectModuleHyperLink"' XmlUtils.GetNodeValue(nodeSettings' "injectmodulehyperlink"' "")); " is 121.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParsePortalSettings,The length of the statement  "                UpdatePortalSetting(portalId' "AddCompatibleHttpHeader"' XmlUtils.GetNodeValue(nodeSettings' "addcompatiblehttpheader"' "")); " is 125.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseRoleGroups,The length of the statement  "            CreateDefaultPortalRoles(portalID' administratorId' ref administratorRoleId' ref registeredRoleId' ref subscriberRoleId' unverifiedRoleId); " is 139.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseRoles,The length of the statement  "            CreateDefaultPortalRoles(portalID' administratorId' ref administratorRoleId' ref registeredRoleId' ref subscriberRoleId' unverifiedRoleId); " is 139.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseTemplateInternal,The length of the statement  "            ParseTemplateInternal(portalId' templatePath' templateFile' administratorId' mergeTabs' isNewPortal' out localeCollection); " is 123.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseTemplateInternal,The length of the statement  "                    defaultLocale = new Locale { Code = portalInfo.DefaultLanguage' Fallback = Localization.SystemLocale' Text = CultureInfo.GetCultureInfo(portalInfo.DefaultLanguage).NativeName }; " is 177.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseTemplateInternal,The length of the statement  "                var folderMapping = FolderMappingsConfigController.Instance.GetFolderMapping(portalId' "Templates/") ?? defaultFolderMapping; " is 125.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseTemplateInternal,The length of the statement  "                var folderMapping = FolderMappingsConfigController.Instance.GetFolderMapping(portalId' "Users/") ?? defaultFolderMapping; " is 121.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,UpdatePortalInternal,The length of the statement  "            EventLogController.Instance.AddLog("PortalId"' portal.PortalID.ToString()' GetCurrentPortalSettingsInternal()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.PORTALINFO_UPDATED); " is 216.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,UpdatePortalSettingInternal,The length of the statement  "                DataProvider.Instance().UpdatePortalSetting(portalID' settingName' settingValue' UserController.Instance.GetCurrentUserInfo().UserID' cultureCode' isSecure); " is 157.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,UpdatePortalSettingInternal,The length of the statement  "                EventLogController.Instance.AddLog(settingName + ((cultureCode == Null.NullString) ? String.Empty : " (" + cultureCode + ")")' settingValue' GetCurrentPortalSettingsInternal()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.PORTAL_SETTING_UPDATED); " is 286.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,UpdatePortalSetup,The length of the statement  "            EventLogController.Instance.AddLog("PortalId"' portalId.ToString()' GetCurrentPortalSettingsInternal()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.PORTALINFO_UPDATED); " is 209.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortal,The length of the statement  "            //Log the portal if into http context' if exception occurred in next step' we can remove the portal which is not really created. " is 128.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortal,The length of the statement  "                    CreatePortalInternal(portalId' portalName' adminUser' description' keyWords' template' homeDirectory' portalAlias' serverPath' childPath' isChildPortal' ref message); " is 166.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortal,The length of the statement  "            //Log the portal if into http context' if exception occurred in next step' we can remove the portal which is not really created. " is 128.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortal,The length of the statement  "                    CreatePortalInternal(portalId' portalName' adminUser' description' keyWords' template' homeDirectory' portalAlias' serverPath' childPath' isChildPortal' ref message); " is 166.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetAvailablePortalTemplates,The length of the statement  "                var langs = languageFileNames.Where(x => GetTemplateName(x).Equals(currentFileName' StringComparison.InvariantCultureIgnoreCase)).Select(x => GetCultureCode(x)).Distinct().ToList(); " is 181.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetAvailablePortalTemplates,The length of the statement  "                    //DNN-6544 portal creation requires valid culture' if template has no culture defined' then use portal's default language. " is 122.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetAvailablePortalTemplates,The length of the statement  "                    var cultureCode = portalSettings != null ? GetPortalDefaultLanguage(portalSettings.PortalId) : Localization.SystemLocale; " is 121.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetPortalList,The length of the statement  "            return CBO.GetCachedObject<List<PortalInfo>>(new CacheItemArgs(cacheKey' DataCache.PortalCacheTimeOut' DataCache.PortalCachePriority' cultureCode)' " is 147.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ProcessResourceFileExplicit,The length of the statement  "                FileSystemUtils.UnzipResources(new ZipInputStream(new FileStream(resoureceFile' FileMode.Open' FileAccess.Read))' portalPath); " is 126.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetPortalFolder,The length of the statement  "            if (string.IsNullOrEmpty(Globals.ApplicationPath) || alias.IndexOf(appPath' StringComparison.InvariantCultureIgnoreCase) == Null.NullInteger) " is 141.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetPortalFolder,The length of the statement  "                return alias.Contains("/") ? alias.Substring(alias.IndexOf("/"' StringComparison.InvariantCultureIgnoreCase) + 1) : string.Empty; " is 129.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,DeletePortalFolder,The length of the statement  "            while (parentFolder != null && !parentFolder.FullName.Equals(serverPath.TrimEnd('\\')' StringComparison.InvariantCultureIgnoreCase)) " is 132.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetPortalDictionary,The length of the statement  "            return CBO.GetCachedObject<Dictionary<int' int>>(new CacheItemArgs(cacheKey' DataCache.PortalDictionaryTimeOut' DataCache.PortalDictionaryCachePriority)' GetPortalDictionaryCallback); " is 183.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetPortalsByName,The length of the statement  "            return CBO.FillCollection(DataProvider.Instance().GetPortalsByName(nameToMatch' pageIndex' pageSize)' ref type' ref totalRecords); " is 130.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,DeletePortalSetting,The length of the statement  "			EventLogController.Instance.AddLog("SettingName"' settingName + ((cultureCode == Null.NullString) ? String.Empty : " (" + cultureCode + ")")' GetCurrentPortalSettingsInternal()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.PORTAL_SETTING_DELETED); " is 287.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,DeletePortalSettings,The length of the statement  "			EventLogController.Instance.AddLog("PortalID"' portalID.ToString() + ((cultureCode == Null.NullString) ? String.Empty : " (" + cultureCode + ")")' GetCurrentPortalSettingsInternal()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.PORTAL_SETTING_DELETED); " is 292.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetPortalSettingAsBoolean,The length of the statement  "                    retValue = (setting.StartsWith("Y"' StringComparison.InvariantCultureIgnoreCase) || setting.Equals("TRUE"' StringComparison.InvariantCultureIgnoreCase)); " is 153.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetPortalSettingAsBoolean,The length of the statement  "					retValue = (setting.StartsWith("Y"' StringComparison.InvariantCultureIgnoreCase) || setting.Equals("TRUE"' StringComparison.InvariantCultureIgnoreCase)); " is 153.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetActivePortalLanguage,The length of the statement  "            if (portalID > Null.NullInteger && Globals.Status == Globals.UpgradeStatus.None && Localization.ActiveLanguagesByPortalID(portalID) == 1) " is 137.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetActivePortalLanguage,The length of the statement  "                    if (_PortalSettings != null && _PortalSettings.ActiveTab != null && !String.IsNullOrEmpty(_PortalSettings.ActiveTab.CultureCode)) " is 129.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,GetPortalDefaultLanguage,The length of the statement  "            return CBO.GetCachedObject<string>(new CacheItemArgs(cacheKey' DataCache.PortalCacheTimeOut' DataCache.PortalCachePriority' portalID)' GetPortalDefaultLanguageCallBack); " is 169.
Long Statement,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,IncrementCrmVersion,The length of the statement  "                UpdatePortalSetting(portalID' ClientResourceSettings.VersionKey' newVersion.ToString(CultureInfo.InvariantCulture)' true); " is 122.
Long Statement,DotNetNuke.Entities.Portals,PortalGroupController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalGroupController.cs,AddPortalToGroup,The length of the statement  "                        RoleController.Instance.AddUserRole(portalGroup.MasterPortalId' user.UserID' autoAssignRole.RoleID' RoleStatus.Approved' false' Null.NullDate' Null.NullDate); " is 158.
Long Statement,DotNetNuke.Entities.Portals,PortalGroupController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalGroupController.cs,AddPortalGroup,The length of the statement  "            portalGroup.PortalGroupId = _dataService.AddPortalGroup(portalGroup' UserController.Instance.GetCurrentUserInfo().UserID); " is 122.
Long Statement,DotNetNuke.Entities.Portals,PortalGroupController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalGroupController.cs,IsModuleShared,The length of the statement  "            return GetSharedModulesWithPortal(portal).Any(x => x.ModuleID == moduleId && !x.IsDeleted) || GetSharedModulesByPortal(portal).Any(x => x.ModuleID == moduleId && !x.IsDeleted); " is 176.
Long Statement,DotNetNuke.Entities.Portals,PortalSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettings.cs,GetProperty,The length of the statement  "                case "passwordreminderurl": //if regsiter page defined in portal settings' then get that page url' otherwise return home page. " is 126.
Long Statement,DotNetNuke.Entities.Users,UserRegistrationEmailNotifier,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserRegistrationEmailNotifier.cs,NotifyAdministrator,The length of the statement  "            //check the receive notification setting first' but if register type is Private' we will always send the notification email. " is 124.
Long Statement,DotNetNuke.Entities.Users,UserRegistrationEmailNotifier,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserRegistrationEmailNotifier.cs,NotifyAdministrator,The length of the statement  "            if (PortalSettings.Current.EnableRegisterNotification || PortalSettings.Current.UserRegistration == (int)Globals.PortalRegistrationType.PrivateRegistration) " is 156.
Long Statement,DotNetNuke.Entities.Users,UserEventHandlers,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserEventHandlers.cs,DeleteAllNewUnauthorizedUserRegistrationNotifications,The length of the statement  "            var notifications = NotificationsController.Instance.GetNotificationByContext(nt.NotificationTypeId' userId.ToString(CultureInfo.InvariantCulture)); " is 148.
Long Statement,DotNetNuke.Entities.Users,MembershipPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Membership\MembershipPropertyAccess.cs,GetProperty,The length of the statement  "                    && (propertyName.Equals("password"' StringComparison.InvariantCultureIgnoreCase) || propertyName.Equals("passwordanswer"' StringComparison.InvariantCultureIgnoreCase) || propertyName.Equals("passwordquestion"' StringComparison.InvariantCultureIgnoreCase)) " is 255.
Long Statement,DotNetNuke.Entities.Users,ProfilePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Profile\ProfilePropertyAccess.cs,GetRichValue,The length of the statement  "            if (!String.IsNullOrEmpty(property.PropertyValue) || DisplayDataType(property).Equals("image"' StringComparison.InvariantCultureIgnoreCase)) " is 140.
Long Statement,DotNetNuke.Entities.Users,ProfilePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Profile\ProfilePropertyAccess.cs,GetRichValue,The length of the statement  "                        result = PropertyAccess.FormatString(objSecurity.InputFilter(HttpUtility.HtmlDecode(property.PropertyValue)' PortalSecurity.FilterFlag.NoScripting)' formatString); " is 163.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,AddEventLog,The length of the statement  "                LogUserName = objSecurity.InputFilter(username' PortalSecurity.FilterFlag.NoScripting | PortalSecurity.FilterFlag.NoAngleBrackets | PortalSecurity.FilterFlag.NoMarkup)' " is 168.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,AutoAssignUsersToPortalRoles,The length of the statement  "            foreach (var role in RoleController.Instance.GetRoles(portalId' role => role.AutoAssignment && role.Status == RoleStatus.Approved)) " is 131.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,AutoAssignUsersToPortalRoles,The length of the statement  "                RoleController.Instance.AddUserRole(portalId' user.UserID' role.RoleID' RoleStatus.Approved' false' Null.NullDate' Null.NullDate); " is 130.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,AutoAssignUsersToRoles,The length of the statement  "                        RoleController.Instance.AddUserRole(portal.PortalID' user.UserID' role.RoleID' RoleStatus.Approved' false' Null.NullDate' Null.NullDate); " is 137.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,AutoAssignUsersToRoles,The length of the statement  "                if (!user.Membership.Approved && thisPortal.UserRegistration == (int)Globals.PortalRegistrationType.VerifiedRegistration) " is 121.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,AutoAssignUsersToRoles,The length of the statement  "                    RoleController.Instance.AddUserRole(portalId' user.UserID' role.RoleID' RoleStatus.Approved' false' Null.NullDate' Null.NullDate); " is 130.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUserByDisplayname,The length of the statement  "            return MembershipProvider.Instance().GetUserByDisplayName(PortalController.GetEffectivePortalId(portalId)' displayName); " is 120.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersAdvancedSearch,The length of the statement  "            return MembershipProvider.Instance().GetUsersAdvancedSearch(PortalController.GetEffectivePortalId(portalId)' userId' filterUserId' filterRoleId' relationTypeId' " is 160.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersBasicSearch,The length of the statement  "            return MembershipProvider.Instance().GetUsersBasicSearch(PortalController.GetEffectivePortalId(portalId)' pageIndex' pageSize' sortColumn' " is 138.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,IsValidUserName,The length of the statement  "            char[] unallowedAscii = HostController.Instance.GetString("UsernameUnallowedCharacters"' Globals.USERNAME_UNALLOWED_ASCII).ToCharArray(); " is 137.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,ChangePasswordQuestionAndAnswer,The length of the statement  "            EventLogController.Instance.AddLog(user' PortalController.Instance.GetCurrentPortalSettings()' GetCurrentUserInternal().UserID' ""' EventLogController.EventLogType.USER_UPDATED); " is 178.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,CreateUser,The length of the statement  "            //ensure valid GUID exists (covers case where password is randomly generated - has 24 hr validity as per other Admin user steps " is 127.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,CreateUser,The length of the statement  "                EventLogController.Instance.AddLog(user' PortalController.Instance.GetCurrentPortalSettings()' GetCurrentUserInternal().UserID' ""' EventLogController.EventLogType.USER_CREATED); " is 178.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,DeleteUser,The length of the statement  "            // If the HTTP Current Context is unavailable (e.g. when called from within a SchedulerClient) GetCurrentPortalSettings() returns null and the  " is 142.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,DeleteUser,The length of the statement  "                //Obtain PortalSettings from Current Context or from the users (original) portal if the HTTP Current Context is unavailable. " is 124.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,DeleteUser,The length of the statement  "                EventLogController.Instance.AddLog("Username"' user.Username' portalSettings' user.UserID' EventLogController.EventLogType.USER_DELETED); " is 137.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUnAuthorizedUsers,The length of the statement  "            return MembershipProvider.Instance().GetUnAuthorizedUsers(GetEffectivePortalId(portalId)' includeDeleted' superUsersOnly); " is 122.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUserCountByPortal,The length of the statement  "            return CBO.GetCachedObject<int>(new CacheItemArgs(cacheKey' DataCache.PortalUserCountCacheTimeOut' DataCache.PortalUserCountCachePriority' portalId)' GetUserCountByPortalCallBack); " is 180.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUserCreateStatus,The length of the statement  "                    strInvalidPassword = strInvalidPassword.Replace("[PasswordLength]"' MembershipProviderConfig.MinPasswordLength.ToString()); " is 123.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUserCreateStatus,The length of the statement  "                    strInvalidPassword = strInvalidPassword.Replace("[NoneAlphabet]"' MembershipProviderConfig.MinNonAlphanumericCharacters.ToString()); " is 132.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsers,The length of the statement  "            return MembershipProvider.Instance().GetUsers(GetEffectivePortalId(portalId)' pageIndex' pageSize' ref totalRecords' includeDeleted' superUsersOnly); " is 149.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersByEmail,The length of the statement  "            return MembershipProvider.Instance().GetUsersByEmail(GetEffectivePortalId(portalId)' emailToMatch' pageIndex' pageSize' ref totalRecords' includeDeleted' superUsersOnly); " is 170.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersByProfileProperty,The length of the statement  "            return GetUsersByProfileProperty(portalId' propertyName' propertyValue' pageIndex' pageSize' ref totalRecords' false' false); " is 125.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersByProfileProperty,The length of the statement  "            return MembershipProvider.Instance().GetUsersByProfileProperty(GetEffectivePortalId(portalId)' propertyName' propertyValue' pageIndex' pageSize' ref totalRecords' includeDeleted' superUsersOnly); " is 195.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersByUserName,The length of the statement  "            return MembershipProvider.Instance().GetUsersByUserName(GetEffectivePortalId(portalId)' userNameToMatch' pageIndex' pageSize' ref totalRecords' includeDeleted' superUsersOnly); " is 176.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUsersByDisplayName,The length of the statement  "            return MembershipProvider.Instance().GetUsersByDisplayName(GetEffectivePortalId(portalId)' nameToMatch' pageIndex' pageSize' ref totalRecords' includeDeleted' superUsersOnly); " is 175.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,RemoveUser,The length of the statement  "                EventLogController.Instance.AddLog("Username"' user.Username' portalSettings' user.UserID' EventLogController.EventLogType.USER_REMOVED); " is 137.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,RestoreUser,The length of the statement  "                EventLogController.Instance.AddLog("Username"' user.Username' portalSettings' user.UserID' EventLogController.EventLogType.USER_RESTORED); " is 138.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,UpdateUser,The length of the statement  "                EventLogController.Instance.AddLog(user' portalSettings' GetCurrentUserInternal().UserID' ""' EventLogController.EventLogType.USER_UPDATED); " is 140.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,UserLogin,The length of the statement  "            AddEventLog(portalId' user.Username' user.UserID' portalName' ip' user.IsSuperUser ? UserLoginStatus.LOGIN_SUPERUSER : UserLoginStatus.LOGIN_SUCCESS); " is 150.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,ValidateUser,The length of the statement  "            var user = MembershipProvider.Instance().UserLogin(GetEffectivePortalId(portalId)' username' password' authType' verificationCode' ref loginStatus); " is 148.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,ValidateUser,The length of the statement  "            if (loginStatus == UserLoginStatus.LOGIN_USERLOCKEDOUT || loginStatus == UserLoginStatus.LOGIN_FAILURE || loginStatus == UserLoginStatus.LOGIN_USERNOTAPPROVED) " is 159.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,ValidateUser,The length of the statement  "            if (validStatus == UserValidStatus.VALID && !(objUser.IsSuperUser || PortalSettings.Current.AdministratorId == objUser.UserID)) " is 127.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,VerifyUser,The length of the statement  "            var user = int.TryParse(userIdString' out userId) ? GetUserById(portalId' userId) : GetUserByMembershipUserKey(portalId' userIdString); " is 135.
Long Statement,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetProfileAvatarAbsoluteUrl,The length of the statement  "            var userId = user != null && user.UserID > 0 && !user.IsDeleted && (showSuperUsers || !user.IsSuperUser) ? user.UserID : 0; " is 123.
Long Statement,DotNetNuke.Entities.Users,UserInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserInfo.cs,LocalTime,The length of the statement  "            return TimeZoneInfo.ConvertTime(utcTime' TimeZoneInfo.Utc' PortalController.Instance.GetCurrentPortalSettings().TimeZone); " is 122.
Long Statement,DotNetNuke.Entities.Content,ContentController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\ContentController.cs,GetContentItem,The length of the statement  "                new CacheItemArgs(GetContentItemCacheKey(contentItemId)' DataCache.ContentItemsCacheTimeOut' DataCache.ContentItemsCachePriority)' " is 130.
Long Statement,DotNetNuke.Collections,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Collections\CollectionExtensions.cs,GetValueOrDefault,The length of the statement  "                Logger.ErrorFormat("Error loading portal setting: {0} Default value {1} was used instead"' key + ":" + dictionary[key]' defaultValue.ToString()); " is 145.
Long Statement,DotNetNuke.Collections,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Collections\CollectionExtensions.cs,ConvertValue,The length of the statement  "            return converter(value == null ? null : formattable == null ? value.ToString() : formattable.ToString(null' CultureInfo.InvariantCulture)); " is 139.
Long Statement,DotNetNuke.Collections,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Collections\CollectionExtensions.cs,ToDictionary,The length of the statement  "            return node.CreateNavigator().SelectChildren(XPathNodeType.Element).Cast<XPathNavigator>().ToDictionary(n => n.Name' n => n.Value); " is 131.
Long Statement,DotNetNuke.Entities.Modules.Actions,ModuleActionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Actions\ModuleActionCollection.cs,Add,The length of the statement  "            return Add(ID' Title' CmdName' string.Empty' string.Empty' string.Empty' false' SecurityAccessLevel.Anonymous' true' false); " is 124.
Long Statement,DotNetNuke.Entities.Modules.Actions,ModuleActionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Actions\ModuleActionCollection.cs,Add,The length of the statement  "            var ModAction = new ModuleAction(ID' Title' CmdName' CmdArg' Icon' Url' ClientScript' UseActionEvent' Secure' Visible' NewWindow); " is 130.
Long Statement,DotNetNuke.Common.Internal,GlobalsImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Internal\GlobalsImpl.cs,GetDomainName,The length of the statement  "                            if (url[queryIndex].LastIndexOf(".aspx"' StringComparison.OrdinalIgnoreCase) == (url[queryIndex].Length - (".aspx".Length)) || " is 126.
Long Statement,DotNetNuke.Common.Internal,GlobalsImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Internal\GlobalsImpl.cs,GetDomainName,The length of the statement  "                                url[queryIndex].LastIndexOf(".axd"' StringComparison.OrdinalIgnoreCase) == (url[queryIndex].Length - (".axd".Length)) || " is 120.
Long Statement,DotNetNuke.Common.Internal,GlobalsImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Internal\GlobalsImpl.cs,GetDomainName,The length of the statement  "                                url[queryIndex].LastIndexOf(".ashx"' StringComparison.OrdinalIgnoreCase) == (url[queryIndex].Length - (".ashx".Length))) " is 120.
Long Statement,DotNetNuke.Common.Internal,GlobalsImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Internal\GlobalsImpl.cs,NavigateURL,The length of the statement  "            return NavigationManager.NavigateURL(tabID' isSuperTab' settings' controlKey' language' pageName' additionalParameters); " is 120.
Long Statement,DotNetNuke.Common.Lists,ListController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\ListController.cs,GetListEntries,The length of the statement  "                c => CBO.FillCollection<ListEntryInfo>(DataProvider.Instance().GetListEntriesByListName(listName' String.Empty' portalId))); " is 124.
Long Statement,DotNetNuke.Common.Lists,ListController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\ListController.cs,AddListEntry,The length of the statement  "                EventLogController.Instance.AddLog(listEntry' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.LISTENTRY_CREATED); " is 208.
Long Statement,DotNetNuke.Common.Lists,ListController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\ListController.cs,AddListEntry,The length of the statement  "            if (Thread.CurrentThread.CurrentCulture.Name != Localization.SystemLocale && !NonLocalizedLists.Contains(listEntry.ListName)) " is 125.
Long Statement,DotNetNuke.Common.Lists,ListController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\ListController.cs,AddListEntry,The length of the statement  "					LocalizationProvider.Instance.SaveString(listEntry.Value + ".Text"' listEntry.TextNonLocalized' listEntry.ResourceFileRoot' Thread.CurrentThread.CurrentCulture.Name' PortalController.Instance.GetCurrentPortalSettings()' LocalizationProvider.CustomizedLocale.None' true' true); " is 276.
Long Statement,DotNetNuke.Common.Lists,ListController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\ListController.cs,AddListEntry,The length of the statement  "					LocalizationProvider.Instance.SaveString(listEntry.ParentKey + "." + listEntry.Value + ".Text"' listEntry.TextNonLocalized' listEntry.ResourceFileRoot' Thread.CurrentThread.CurrentCulture.Name' PortalController.Instance.GetCurrentPortalSettings()' LocalizationProvider.CustomizedLocale.None' true' true); " is 304.
Long Statement,DotNetNuke.Common.Lists,ListController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\ListController.cs,DeleteList,The length of the statement  "            EventLogController.Instance.AddLog("ListName"' listName' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.LISTENTRY_DELETED); " is 215.
Long Statement,DotNetNuke.Common.Lists,ListController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\ListController.cs,GetListInfoCollection,The length of the statement  "                if ((list.Name == listName || string.IsNullOrEmpty(listName)) && (list.ParentKey == parentKey || string.IsNullOrEmpty(parentKey)) && " is 132.
Long Statement,DotNetNuke.Common.Lists,ListController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\ListController.cs,UpdateListEntry,The length of the statement  "            if (Thread.CurrentThread.CurrentCulture.Name == Localization.SystemLocale || NonLocalizedLists.Contains(listEntry.ListName)) " is 124.
Long Statement,DotNetNuke.Common.Lists,ListController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\ListController.cs,UpdateListEntry,The length of the statement  "                DataProvider.Instance().UpdateListEntry(listEntry.EntryID' listEntry.Value' listEntry.TextNonLocalized' listEntry.Description' UserController.Instance.GetCurrentUserInfo().UserID); " is 180.
Long Statement,DotNetNuke.Common.Lists,ListController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\ListController.cs,UpdateListEntry,The length of the statement  "                var oldItem = GetListEntryInfo(listEntry.EntryID); // look up existing db record to be able to just update the value or description and not touch the en-US text value " is 166.
Long Statement,DotNetNuke.Common.Lists,ListController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\ListController.cs,UpdateListEntry,The length of the statement  "                DataProvider.Instance().UpdateListEntry(listEntry.EntryID' listEntry.Value' oldItem.TextNonLocalized' listEntry.Description' UserController.Instance.GetCurrentUserInfo().UserID); " is 178.
Long Statement,DotNetNuke.Common.Lists,ListController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\ListController.cs,UpdateListEntry,The length of the statement  "                    Thread.CurrentThread.CurrentCulture.Name' PortalController.Instance.GetCurrentPortalSettings()' LocalizationProvider.CustomizedLocale.None' true' true); " is 152.
Long Statement,DotNetNuke.Common.Lists,ListController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\ListController.cs,UpdateListEntry,The length of the statement  "            EventLogController.Instance.AddLog(listEntry' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.LISTENTRY_UPDATED); " is 208.
Long Statement,DotNetNuke.Entities.Content.Common,ContentExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Common\ContentExtensions.cs,GetChildTerms,The length of the statement  "            IQueryable<Term> terms = from term in ctl.GetTermsByVocabulary(vocabularyId) where term.ParentTermId == termId select term; " is 123.
Long Statement,DotNetNuke.Entities.Content.Taxonomy,ScopeTypeController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Taxonomy\ScopeTypeController.cs,GetScopeTypes,The length of the statement  "            return CBO.GetCachedObject<List<ScopeType>>(new CacheItemArgs(DataCache.ScopeTypesCacheKey' _CacheTimeOut)' GetScopeTypesCallBack).AsQueryable(); " is 145.
Long Statement,DotNetNuke.Entities.Content.Taxonomy,Term,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Taxonomy\Term.cs,GetTermPath,The length of the statement  "                Term parentTerm = (from t in ctl.GetTermsByVocabulary(VocabularyId) where t.TermId == ParentTermId select t).SingleOrDefault(); " is 127.
Long Statement,DotNetNuke.Entities.Content.Taxonomy,TermController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Taxonomy\TermController.cs,GetTermsByVocabulary,The length of the statement  "            return CBO.GetCachedObject<List<Term>>(new CacheItemArgs(string.Format(DataCache.TermCacheKey' vocabularyId)' _CacheTimeOut' _CachePriority' vocabularyId)' GetTermsCallBack).AsQueryable(); " is 188.
Long Statement,DotNetNuke.Entities.Content.Taxonomy,VocabularyController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Taxonomy\VocabularyController.cs,GetVocabularies,The length of the statement  "            return CBO.GetCachedObject<List<Vocabulary>>(new CacheItemArgs(DataCache.VocabularyCacheKey' _CacheTimeOut)' GetVocabulariesCallBack).AsQueryable(); " is 148.
Long Statement,DotNetNuke.Entities.Content.Workflow,SystemWorkflowManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\SystemWorkflowManager.cs,GetDirectPublishWorkflow,The length of the statement  "            return _workflowRepository.GetSystemWorkflows(portalId).SingleOrDefault(sw => sw.WorkflowKey == DirectPublishWorkflowKey); " is 122.
Long Statement,DotNetNuke.Entities.Content.Workflow,SystemWorkflowManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\SystemWorkflowManager.cs,GetContentApprovalWorkflow,The length of the statement  "            return _workflowRepository.GetSystemWorkflows(portalId).SingleOrDefault(sw => sw.WorkflowKey == ContentAprovalWorkflowKey); " is 123.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,DeleteWorkflowNotifications,The length of the statement  "            var notificationTypeId = _notificationsController.GetNotificationType(ContentWorkflowNotificationType).NotificationTypeId; " is 122.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,DeleteWorkflowNotifications,The length of the statement  "            notificationTypeId = _notificationsController.GetNotificationType(ContentWorkflowNotificatioStartWorkflowType).NotificationTypeId; " is 130.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,SendNotificationToAuthor,The length of the statement  "                    //Services.Exceptions.Exceptions.LogException(new WorkflowException(Localization.GetExceptionMessage("WorkflowAuthorNotFound"' "Author cannot be found. Notification won't be sent"))); " is 183.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,SendNotificationToAuthor,The length of the statement  "                var notification = GetNotification(GetWorkflowNotificationContext(contentItem' state)' stateTransaction' message' ContentWorkflowNotificationNoActionType); " is 155.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,SendNotificationToWorkflowStarter,The length of the statement  "                var notification = GetNotification( GetWorkflowNotificationContext(contentItem' workflow.FirstState)' stateTransaction' message' ContentWorkflowNotificatioStartWorkflowType); " is 174.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,SendNotificationsToReviewers,The length of the statement  "                var notification = GetNotification(GetWorkflowNotificationContext(contentItem' state)' stateTransaction' message' ContentWorkflowNotificationType); " is 147.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,SendNotificationsToReviewers,The length of the statement  "                _notificationsController.SendNotification(notification' portalSettings.PortalId' reviewers.Roles.ToList()' reviewers.Users.ToList()); " is 133.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,StartWorkflow,The length of the statement  "                throw new WorkflowInvalidOperationException(Localization.GetExceptionMessage("WorkflowAlreadyStarted"' "Workflow cannot get started for this Content Item. It already has a started workflow.")); " is 193.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,StartWorkflow,The length of the statement  "            if (workflow.WorkflowID != _systemWorkflowManager.GetDirectPublishWorkflow(workflow.PortalID).WorkflowID) //This notification is not sent in Direct Publish WF " is 158.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,StartWorkflow,The length of the statement  "                SendNotificationToWorkflowStarter(initialTransaction' workflow' contentItem' userId' WorkflowActionTypes.StartWorkflow);                 " is 120.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,CompleteState,The length of the statement  "                throw new WorkflowInvalidOperationException(Localization.GetExceptionMessage("WorkflowSystemWorkflowStateCannotComplete"' "System workflow state cannot be completed.")); " is 169.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,CompleteState,The length of the statement  "            if (!isFirstState && !_workflowSecurity.HasStateReviewerPermission(workflow.PortalID' stateTransaction.UserId' contentItem.StateID)) " is 132.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,CompleteState,The length of the statement  "                throw new WorkflowSecurityException(Localization.GetExceptionMessage("UserCannotReviewWorkflowState"' "User cannot review the workflow state")); " is 144.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,CompleteState,The length of the statement  "            SendNotificationsToReviewers(contentItem' nextState' stateTransaction' WorkflowActionTypes.CompleteState' new PortalSettings(workflow.PortalID)); " is 145.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,DiscardState,The length of the statement  "                throw new WorkflowInvalidOperationException(Localization.GetExceptionMessage("WorkflowCannotDiscard"' "Cannot discard on last workflow state"));  " is 144.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,DiscardState,The length of the statement  "            if (!isFirstState && !_workflowSecurity.HasStateReviewerPermission(workflow.PortalID' stateTransaction.UserId' contentItem.StateID)) " is 132.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,DiscardState,The length of the statement  "                throw new WorkflowSecurityException(Localization.GetExceptionMessage("UserCannotReviewWorkflowState"' "User cannot review the workflow state")); " is 144.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,DiscardState,The length of the statement  "                SendNotificationsToReviewers(contentItem' previousState' stateTransaction' WorkflowActionTypes.DiscardState' new PortalSettings(workflow.PortalID)); " is 148.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,DiscardWorkflow,The length of the statement  "            SendNotificationToAuthor(stateTransaction' workflow.LastState' workflow' contentItem' WorkflowActionTypes.DiscardWorkflow); " is 123.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowEngine.cs,CompleteWorkflow,The length of the statement  "            SendNotificationToAuthor(stateTransaction' workflow.LastState' workflow' contentItem' WorkflowActionTypes.CompleteWorkflow); " is 124.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,AddWorkflowState,The length of the statement  "                throw new WorkflowInvalidOperationException(Localization.GetString("WorkflowNewStateCannotBeAddedToSystemWorkflows"' Localization.ExceptionsResourceFile)); " is 155.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,DeleteWorkflowState,The length of the statement  "                throw new WorkflowInvalidOperationException(Localization.GetString("WorkflowSystemWorkflowStateCannotBeDeleted"' Localization.ExceptionsResourceFile)); " is 151.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,DeleteWorkflowState,The length of the statement  "                throw new WorkflowInvalidOperationException(Localization.GetString("WorkflowStateInUsageException"' Localization.ExceptionsResourceFile)); " is 138.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,DeleteWorkflowState,The length of the statement  "                rep.Update("SET [Order] = [Order] - 1 WHERE WorkflowID = @0 AND [Order] > @1"' stateToDelete.WorkflowID' stateToDelete.Order); " is 126.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,MoveWorkflowStateDown,The length of the statement  "                throw new WorkflowInvalidOperationException(Localization.GetString("WorkflowStateCannotBeMoved"' Localization.ExceptionsResourceFile)); " is 135.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,MoveWorkflowStateDown,The length of the statement  "                    throw new WorkflowInvalidOperationException(Localization.GetString("WorkflowStateCannotBeMoved"' Localization.ExceptionsResourceFile)); " is 135.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,MoveWorkflowStateDown,The length of the statement  "                throw new WorkflowInvalidOperationException(Localization.GetString("WorkflowStateCannotBeMoved"' Localization.ExceptionsResourceFile)); " is 135.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,MoveWorkflowStateUp,The length of the statement  "                throw new WorkflowInvalidOperationException(Localization.GetString("WorkflowStateCannotBeMoved"' Localization.ExceptionsResourceFile)); " is 135.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,MoveWorkflowStateUp,The length of the statement  "                    throw new WorkflowInvalidOperationException(Localization.GetString("WorkflowStateCannotBeMoved"' Localization.ExceptionsResourceFile)); " is 135.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,MoveWorkflowStateUp,The length of the statement  "                throw new WorkflowInvalidOperationException(Localization.GetString("WorkflowStateCannotBeMoved"' Localization.ExceptionsResourceFile)); " is 135.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,MoveState,The length of the statement  "                throw new WorkflowInvalidOperationException(Localization.GetString("WorkflowStateCannotBeMoved"' Localization.ExceptionsResourceFile)); " is 135.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,MoveState,The length of the statement  "                throw new WorkflowInvalidOperationException(Localization.GetString("WorkflowStateCannotBeMoved"' Localization.ExceptionsResourceFile)); " is 135.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,AddWorkflowStatePermission,The length of the statement  "            permission.WorkflowStatePermissionID = _workflowStatePermissionsRepository.AddWorkflowStatePermission(permission' userId); " is 122.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowManager.cs,DeleteWorkflow,The length of the statement  "                throw new WorkflowInvalidOperationException(Localization.GetString("SystemWorkflowDeletionException"' Localization.ExceptionsResourceFile)); " is 140.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowManager.cs,DeleteWorkflow,The length of the statement  "                throw new WorkflowInvalidOperationException(Localization.GetString("WorkflowInUsageException"' Localization.ExceptionsResourceFile)); " is 133.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowSecurity.cs,HasStateReviewerPermission,The length of the statement  "                PortalSecurity.IsInRoles(user' settings' PermissionController.BuildPermissions(permissions.ToList()' ReviewPermissionKey)); " is 123.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowSecurity.cs,IsWorkflowReviewer,The length of the statement  "            return workflow.States.Any(contentWorkflowState => HasStateReviewerPermission(workflow.PortalID' userId' contentWorkflowState.StateID)); " is 136.
Long Statement,DotNetNuke.Entities.Content.Workflow,WorkflowSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowSecurity.cs,GetStateReviewPermission,The length of the statement  "            return (PermissionInfo)new PermissionController().GetPermissionByCodeAndKey(ReviewPermissionCode' ReviewPermissionKey)[0]; " is 122.
Long Statement,DotNetNuke.Entities.Content.Workflow.Repositories,WorkflowStatePermissionsRepository,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\Repositories\WorkflowStatePermissionsRepository.cs,GetWorkflowStatePermissionByState,The length of the statement  "            return CBO.FillCollection<WorkflowStatePermission>(DataProvider.Instance().GetContentWorkflowStatePermissionsByStateID(stateId)); " is 129.
Long Statement,DotNetNuke.Entities.Host,IPFilterController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\IPFilter\IPFilterController.cs,AddIPFilter,The length of the statement  "            int id = DataProvider.Instance().AddIPFilter(ipFilter.IPAddress' ipFilter.SubnetMask' ipFilter.RuleType' UserController.Instance.GetCurrentUserInfo().UserID); " is 158.
Long Statement,DotNetNuke.Entities.Host,IPFilterController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\IPFilter\IPFilterController.cs,UpdateIPFilter,The length of the statement  "            DataProvider.Instance().UpdateIPFilter(ipFilter.IPFilterID' ipFilter.IPAddress' ipFilter.SubnetMask' ipFilter.RuleType' UserController.Instance.GetCurrentUserInfo().UserID); " is 173.
Long Statement,DotNetNuke.Entities.Host,IPFilterController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\IPFilter\IPFilterController.cs,CheckIfBannedIPAddress,The length of the statement  "                    if (ipFilterInfo.IPAddress=="*" || NetworkUtils.IsIPInRange(ipAddress' ipFilterInfo.IPAddress' ipFilterInfo.SubnetMask)) " is 120.
Long Statement,DotNetNuke.Entities.Host,IPFilterController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\IPFilter\IPFilterController.cs,AssertValidIPFilter,The length of the statement  "                throw new ArgumentException(Localization.GetExceptionMessage("IPAddressIncorrect"' "IP address is not in correct format")); " is 123.
Long Statement,DotNetNuke.Entities.Host,IPFilterController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\IPFilter\IPFilterController.cs,AssertValidIPFilter,The length of the statement  "                throw new ArgumentException(Localization.GetExceptionMessage("SubnetMaskIncorrect"' "Subnet mask is not in correct format")); " is 125.
Long Statement,DotNetNuke.Entities.Host,ServerController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Host\ServerController.cs,GetServers,The length of the statement  "            var servers = CBO.GetCachedObject<List<ServerInfo>>(new CacheItemArgs(cacheKey' cacheTimeout' cachePriority)' GetServersCallBack); " is 130.
Long Statement,DotNetNuke.Entities.Host,ServerController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Host\ServerController.cs,UpdateServerActivity,The length of the statement  "            var existServer = GetServers().FirstOrDefault(s => s.ServerName == server.ServerName && s.IISAppName == server.IISAppName); " is 123.
Long Statement,DotNetNuke.Entities.Host,ServerController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Host\ServerController.cs,UpdateServerActivity,The length of the statement  "            var serverId = DataProvider.Instance().UpdateServerActivity(server.ServerName' server.IISAppName' server.CreatedDate' server.LastActivityDate' server.PingFailureCount' server.Enabled); " is 184.
Long Statement,DotNetNuke.Entities.Host,ServerController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Host\ServerController.cs,UpdateServerActivity,The length of the statement  "                server.UniqueId = existServer == null || string.IsNullOrEmpty(existServer.UniqueId) ? GetServerUniqueId() : existServer.UniqueId; " is 129.
Long Statement,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,FillPropertyDefinitionInfo,The length of the statement  "                definition.PropertyDefinitionId = Convert.ToInt32(Null.SetNull(dr["PropertyDefinitionId"]' definition.PropertyDefinitionId)); " is 125.
Long Statement,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,FillPropertyDefinitionInfo,The length of the statement  "                definition.ValidationExpression = Convert.ToString(Null.SetNull(dr["ValidationExpression"]' definition.ValidationExpression)); " is 126.
Long Statement,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,FillPropertyDefinitionInfo,The length of the statement  "                definition.DefaultVisibility = (UserVisibilityMode)Convert.ToInt32(Null.SetNull(dr["DefaultVisibility"]' definition.DefaultVisibility)); " is 136.
Long Statement,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The length of the statement  "            AddDefaultDefinition(portalId' "Preferences"' "Biography"' "Multi-line Text"' 0' UserVisibilityMode.AdminOnly' dataTypes); " is 122.
Long Statement,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The length of the statement  "            AddDefaultDefinition(portalId' "Preferences"' "PreferredTimeZone"' "TimeZoneInfo"' 0' UserVisibilityMode.AdminOnly' dataTypes); " is 127.
Long Statement,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddPropertyDefinition,The length of the statement  "            EventLogController.Instance.AddLog(definition' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.PROFILEPROPERTY_CREATED); " is 215.
Long Statement,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,DeletePropertyDefinition,The length of the statement  "            EventLogController.Instance.AddLog(definition' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.PROFILEPROPERTY_DELETED); " is 215.
Long Statement,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,UpdatePropertyDefinition,The length of the statement  "            EventLogController.Instance.AddLog(definition' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.PROFILEPROPERTY_UPDATED); " is 215.
Long Statement,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,ValidateProfile,The length of the statement  "                if (propertyDefinition.Required && string.IsNullOrEmpty(propertyDefinition.PropertyValue) && propertyDefinition.DataType != imageType.EntryID) " is 142.
Long Statement,DotNetNuke.Entities.Tabs,TabModulesController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabModulesController.cs,GetTabModuleIdsBySetting,The length of the statement  "            using (var dr = dataProvider.GetTabModuleIdsBySettingNameAndValue(PortalSettings.Current.PortalId' settingName' expectedValue)) " is 127.
Long Statement,DotNetNuke.Entities.Tabs,TabWorkflowSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabWorkflowSettings.cs,GetDefaultTabWorkflowId,The length of the statement  "                    PortalController.UpdatePortalSetting(portalId' DefaultTabWorkflowKey' workflowId.ToString(CultureInfo.InvariantCulture)' true);                     " is 127.
Long Statement,DotNetNuke.Entities.Tabs,TabWorkflowSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabWorkflowSettings.cs,SetDefaultTabWorkflowId,The length of the statement  "            PortalController.UpdatePortalSetting(portalId' DefaultTabWorkflowKey' workflowId.ToString(CultureInfo.InvariantCulture)' true); " is 127.
Long Statement,DotNetNuke.Entities.Tabs,TabWorkflowSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabWorkflowSettings.cs,SetWorkflowEnabled,The length of the statement  "            PortalController.UpdatePortalSetting(portalId' TabWorkflowEnableKey' enabled.ToString(CultureInfo.InvariantCulture)' true); " is 123.
Long Statement,DotNetNuke.Entities.Tabs,TabWorkflowSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabWorkflowSettings.cs,IsWorkflowEnabled,The length of the statement  "            return !_tabController.IsHostOrAdminPage(tabInfo) && (settings[TabWorkflowEnableKey] == null || Convert.ToBoolean(settings[TabWorkflowEnableKey])); " is 147.
Long Statement,DotNetNuke.Entities.Tabs,TabExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabExtensions.cs,ContainsAlias,The length of the statement  "            return aliases.Any(tas => System.String.Compare(httpAlias' tas.HttpAlias' System.StringComparison.OrdinalIgnoreCase) == 0); " is 123.
Long Statement,DotNetNuke.Entities.Tabs,TabExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabExtensions.cs,FindByHttpAlias,The length of the statement  "            return aliases.FirstOrDefault(tas => System.String.Compare(httpAlias' tas.HttpAlias' System.StringComparison.OrdinalIgnoreCase) == 0); " is 134.
Long Statement,DotNetNuke.Entities.Tabs,TabPublishingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabPublishingController.cs,SetTabPublishing,The length of the statement  "                var errorMessage = Localization.GetExceptionMessage("PublishPagePermissionsNotMet"' "Permissions are not met. The page has not been published."); " is 145.
Long Statement,DotNetNuke.Entities.Tabs,TabPublishingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabPublishingController.cs,UnpublishTabInternal,The length of the statement  "            permissionsToRemove.AddRange(tab.TabPermissions.Where(p => p.RoleID != administratorsRoleID).Select(p => p.TabPermissionID)); " is 125.
Long Statement,DotNetNuke.Entities.Tabs,TabPublishingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabPublishingController.cs,UnpublishTabInternal,The length of the statement  "                tab.TabPermissions.Remove(tab.TabPermissions.Cast<TabPermissionInfo>().SingleOrDefault(p => p.TabPermissionID == tabPermissionId)); " is 131.
Long Statement,DotNetNuke.Entities.Tabs,TabPublishingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabPublishingController.cs,GetAlreadyPermission,The length of the statement  "            var permission = PermissionController.GetPermissionsByTab().Cast<PermissionInfo>().SingleOrDefault<PermissionInfo>(p => p.PermissionKey == permissionKey); " is 154.
Long Statement,DotNetNuke.Entities.Tabs,TabPublishingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabPublishingController.cs,GetTabPermissionByRole,The length of the statement  "            var permission = PermissionController.GetPermissionsByTab().Cast<PermissionInfo>().SingleOrDefault<PermissionInfo>(p => p.PermissionKey == permissionKey); " is 154.
Long Statement,DotNetNuke.Entities.Tabs,TabCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabCollection.cs,WithTabNameAndParentId,The length of the statement  "            return (from t in _list where t.TabName.Equals(tabName' StringComparison.InvariantCultureIgnoreCase) && t.ParentId == parentId select t).SingleOrDefault(); " is 155.
Long Statement,DotNetNuke.Entities.Tabs,TabCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabCollection.cs,WithTabName,The length of the statement  "            return (from t in _list where !string.IsNullOrEmpty(t.TabName) && t.TabName.Equals(tabName' StringComparison.InvariantCultureIgnoreCase) select t).FirstOrDefault(); " is 164.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,AddAllTabsModules,The length of the statement  "                (from ModuleInfo allTabsInstance in ModuleController.Instance.GetTabModulesByModule(allTabsModule.ModuleID) select Instance.GetTab(allTabsInstance.TabID' tab.PortalID' false)).Any( " is 180.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,AddTabInternal,The length of the statement  "            EventLogController.Instance.AddLog(tab' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' " is 146.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,CreateLocalizedCopyInternal,The length of the statement  "				Logger.TraceFormat("Localizing TabId: {0}' TabPath: {1}' Locale: {2}"' originalTab.TabID' originalTab.TabPath' locale.Code); " is 124.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,CreateLocalizedCopyInternal,The length of the statement  "                AddTabInternal(localizedCopy' afterTabId' beforeTabId' includeAllModules); //not include modules show on all page' it will handled in copy modules action. " is 154.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,DeserializeTabUrls,The length of the statement  "            objTabUrl.Url = String.IsNullOrEmpty(XmlUtils.GetAttributeValue(nodeTabUrl.CreateNavigator()' "Url")) ? "/" : XmlUtils.GetAttributeValue(nodeTabUrl.CreateNavigator()' "Url") ; " is 175.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,DeserializeTabUrls,The length of the statement  "            objTabUrl.HttpStatus = String.IsNullOrEmpty(XmlUtils.GetAttributeValue(nodeTabUrl.CreateNavigator()' "HttpStatus")) ? "200" : XmlUtils.GetAttributeValue(nodeTabUrl.CreateNavigator()' "HttpStatus"); " is 197.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,SoftDeleteTabInternal,The length of the statement  "                TabVersionSettings.Instance.SetEnabledVersioningForTab(tabToDelete.TabID' changeControlStateForTab.IsVersioningEnabledForTab); " is 126.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,SoftDeleteTabInternal,The length of the statement  "                TabWorkflowSettings.Instance.SetWorkflowEnabled(tabToDelete.PortalID' tabToDelete.TabID' changeControlStateForTab.IsWorkflowEnabledForTab); " is 139.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,AddMissingLanguages,The length of the statement  "                        foreach (var localizedTab in workingTab.LocalizedTabs.Values.Where(localizedTab => localizedTab.CultureCode == locale.Code)) " is 124.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,GiveTranslatorRoleEditRights,The length of the statement  "            string translatorRoles = PortalController.GetPortalSetting(string.Format("DefaultTranslatorRoles-{0}"' localizedTab.CultureCode)' localizedTab.PortalID' ""); " is 157.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,RestoreTab,The length of the statement  "            EventLogController.Instance.AddLog(tab' portalSettings' portalSettings.UserId' ""' EventLogController.EventLogType.TAB_RESTORED); " is 129.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,SaveTabUrl,The length of the statement  "            DataProvider.Instance().SaveTabUrl(tabUrl.TabId' tabUrl.SeqNum' portalAliasId' (int)tabUrl.PortalAliasUsage' tabUrl.Url' tabUrl.QueryString' tabUrl.CultureCode' tabUrl.HttpStatus' tabUrl.IsSystem' UserController.Instance.GetCurrentUserInfo().UserID); " is 250.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,SoftDeleteTab,The length of the statement  "                if (tab.DefaultLanguageTab != null && LocaleController.Instance.GetLocales(portalSettings.PortalId).ContainsKey(tab.CultureCode)) " is 129.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,DeserializePanes,The length of the statement  "            EventManager.Instance.OnTabDeserialize(new TabSyncEventArgs { Tab = Instance.GetTab(tabId' portalId)' TabNode = nodePanes.ParentNode }); " is 136.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,DeserializeTab,The length of the statement  "                        int defaultLanguageTabId = Convert.ToInt32(tabs[XmlUtils.GetNodeValue(tabNode.CreateNavigator()' "defaultLanguageTab")]); " is 121.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,DeserializeTab,The length of the statement  "                        TabInfo defaultLanguageTab = Instance.GetTabByName(XmlUtils.GetNodeValue(tabNode.CreateNavigator()' "defaultLanguageTab")' portalId); " is 133.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,DeserializeTab,The length of the statement  "                    DataProvider.Instance().SaveTabUrl(tab.TabID' tabUrl.SeqNum' tabUrl.PortalAliasId' (int)tabUrl.PortalAliasUsage' tabUrl.Url' tabUrl.QueryString' tabUrl.CultureCode' tabUrl.HttpStatus' tabUrl.IsSystem' UserController.Instance.GetCurrentUserInfo().UserID); " is 254.
Long Statement,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,GetPortalTabs,The length of the statement  "                    tab.HasChildren = tab.HasChildren && (includeDeletedChildren || GetTabsByParent(tab.TabID' tab.PortalID).Any(a => !a.IsDeleted)); " is 129.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionController.cs,SaveTabVersion,The length of the statement  "            tabVersion.TabVersionId = Provider.SaveTabVersion(tabVersion.TabVersionId' tabVersion.TabId' tabVersion.TimeStamp' tabVersion.Version' tabVersion.IsPublished' createdByUserID' modifiedByUserID); " is 194.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionController.cs,CreateTabVersion,The length of the statement  "                    throw new InvalidOperationException(String.Format(Localization.GetString("TabVersionCannotBeCreated_UnpublishedVersionAlreadyExists"' Localization.ExceptionsResourceFile))); " is 173.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionController.cs,CreateTabVersion,The length of the statement  "            var tabVersionId = Provider.SaveTabVersion(0' tabId' DateTime.UtcNow' newVersion' isPublished' createdByUserID' createdByUserID); " is 129.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionDetailController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionDetailController.cs,GetTabVersionDetail,The length of the statement  "            return GetTabVersionDetails(tabVersionId' ignoreCache).SingleOrDefault(tvd => tvd.TabVersionDetailId == tabVersionDetailId); " is 124.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,SetupFirstVersionForExistingTab,The length of the statement  "            var modules = _moduleController.GetTabModules(tabId).Where(m => m.Value.IsDeleted == false).Select(m => m.Value).ToArray(); " is 123.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,Publish,The length of the statement  "                throw new InvalidOperationException(String.Format(Localization.GetString("TabHasNotAnUnpublishedVersion"' Localization.ExceptionsResourceFile)' tabId)); " is 152.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,Publish,The length of the statement  "                throw new InvalidOperationException(String.Format(Localization.GetString("TabVersionAlreadyPublished"' Localization.ExceptionsResourceFile)' tabId' tabVersion.Version)); " is 169.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,Discard,The length of the statement  "                throw new InvalidOperationException(String.Format(Localization.GetString("TabHasNotAnUnpublishedVersion"' Localization.ExceptionsResourceFile)' tabId)); " is 152.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,Discard,The length of the statement  "                throw new InvalidOperationException(String.Format(Localization.GetString("TabVersionAlreadyPublished"' Localization.ExceptionsResourceFile)' tabId' tabVersion.Version)); " is 169.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,RollBackVesion,The length of the statement  "                throw new InvalidOperationException(String.Format(Localization.GetString("TabVersionCannotBeRolledBack_UnpublishedVersionExists"' Localization.ExceptionsResourceFile)' tabId' version)); " is 185.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,RollBackVesion,The length of the statement  "                throw new InvalidOperationException(String.Format(Localization.GetString("TabVersionCannotBeRolledBack_LastVersion"' Localization.ExceptionsResourceFile)' tabId' version)); " is 172.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,RollBackVesion,The length of the statement  "                    Logger.Error(string.Format("There was a problem making rollbak of the module {0}. Message: {1}."' rollbackDetail.ModuleId' e.Message)); " is 135.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,RollBackVesion,The length of the statement  "            foreach (var publishedDetail in publishedDetails.Where(publishedDetail => rollbackDetails.All(tvd => tvd.ModuleId != publishedDetail.ModuleId))) " is 144.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,CreateNewVersion,The length of the statement  "                throw new InvalidOperationException(Localization.GetString("TabVersioningNotEnabled"' Localization.ExceptionsResourceFile)); " is 124.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,CreateNewVersion,The length of the statement  "                throw new InvalidOperationException(String.Format(Localization.GetString("TabVersionCannotBeCreated_UnpublishedVersionAlreadyExistsConcurrencyProblem"' Localization.ExceptionsResourceFile)' tabId)' e); " is 201.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,CreateNewVersion,The length of the statement  "                throw new InvalidOperationException(String.Format(Localization.GetString("TabVersionCannotBeCreated_UnpublishedVersionAlreadyExistsConcurrencyProblem"' Localization.ExceptionsResourceFile)' tabId)); " is 198.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,CheckVersioningEnabled,The length of the statement  "                throw new InvalidOperationException(Localization.GetString("TabVersioningNotEnabled"' Localization.ExceptionsResourceFile)); " is 124.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,CreateSnapshotOverVersion,The length of the statement  "            var existingTabVersionDetails = _tabVersionDetailController.GetTabVersionDetails(snapshotTabVersion.TabVersionId).ToArray(); " is 124.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,CreateSnapshotOverVersion,The length of the statement  "                    IEnumerable<TabVersionDetail> deletedTabVersionDetails = _tabVersionDetailController.GetTabVersionDetails(deletedTabVersion.TabVersionId); " is 138.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,UpdateDeletedTabDetails,The length of the statement  "            var tabVersionDetailsToBeUpdated = deletedTabVersion != null ? _tabVersionDetailController.GetTabVersionDetails(deletedTabVersion.TabVersionId).ToArray()  " is 153.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,UpdateDeletedTabDetails,The length of the statement  "                var deleteOrResetAction = tabVersionDetail.Action == TabVersionDetailAction.Deleted || tabVersionDetail.Action == TabVersionDetailAction.Reset; " is 143.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,GetSnapShot,The length of the statement  "                            versionModules[tabVersionDetail.ModuleId] = JoinVersionDetails(versionModules[tabVersionDetail.ModuleId]' tabVersionDetail); " is 124.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionSettings.cs,GetMaxNumberOfVersions,The length of the statement  "            return portalId == Null.NullInteger ? TabVersionsMaxNumber : PortalController.GetPortalSettingAsInteger("TabVersionsMaxNumber"' portalId' TabVersionsMaxNumber); " is 160.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionSettings.cs,SetMaxNumberOfVersions,The length of the statement  "            PortalController.UpdatePortalSetting(portalId' "TabVersionsMaxNumber"' maxNumberOfVersions.ToString(CultureInfo.InvariantCulture)); " is 131.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionSettings.cs,SetEnabledVersioningForTab,The length of the statement  "            TabController.Instance.UpdateTabSetting(tabId' TabVersioningSettingKey' enabled.ToString(CultureInfo.InvariantCulture)); " is 120.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionTracker,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionTracker.cs,TrackModuleModification,The length of the statement  "                var tabVersionDetail = CreateNewTabVersionDetailObjectFromModule(unPublishedVersion.TabVersionId' module.ModuleID' module.PaneName' module.ModuleOrder' moduleVersion' TabVersionDetailAction.Modified); " is 200.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionTracker,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionTracker.cs,TrackModuleModification,The length of the statement  "                var existingTabVersionDetail = TabVersionDetailController.Instance.GetTabVersionDetails(unPublishedVersion.TabVersionId).SingleOrDefault(tvd => tvd.ModuleId == module.ModuleID); " is 177.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionUtils.cs,CanSeeVersionedPages,The length of the statement  "            var isAdminUser = currentPortalSettings.UserInfo.IsSuperUser || PortalSecurity.IsInRole(currentPortalSettings.AdministratorRoleName); " is 133.
Long Statement,DotNetNuke.Entities.Tabs.TabVersions,TabVersionUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionUtils.cs,GetTabVersionQueryStringValue,The length of the statement  "                HttpContext.Current.Request.QueryString[TabVersionSettings.Instance.GetTabVersionQueryStringParameter(currentPortal.PortalId)]; " is 127.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,CreateFriendlyUrl,The length of the statement  "                // It's true this could be solved by taking the items from the path earlier in the chain (in the original routine that takes them " is 129.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,CreateFriendlyUrl,The length of the statement  "                // from the querystring and includes them in the path)' but the intention is to leave the primary friendly url generation similar " is 129.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,CreateFriendlyUrl,The length of the statement  "                    //Url is home page' and there's no friendly path to add' so we don't need the home page path (ie' /home is unneeded' just use the site root) " is 140.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,FriendlyUrlInternal,The length of the statement  "            if (tab == null && path == "~/" && String.Compare(pageName' Globals.glbDefaultPage' StringComparison.OrdinalIgnoreCase) == 0) " is 125.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetAliasForPortal,The length of the statement  "            //if no match found' then call database to find (don't rely on cache for this one' because it is an exception event' not an expected event) " is 139.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetCultureOfSettings,The length of the statement  "            //note! should be replaced with compiled call to portalSettings.CultureCode property when base supported version is increased. " is 126.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyAlias,The length of the statement  "            var portalMatchRegex = RegexUtils.GetCachedRegex("^https?://" + httpAlias' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant); " is 132.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyAlias,The length of the statement  "                    PortalSettings.PortalAliasMapping aliasMapping = PortalSettingsController.Instance().GetPortalAliasMappingMode(portalId); " is 121.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyAlias,The length of the statement  "                    //essentially we are ignoring the portal alias of the portal settings object and driving the alias from the supplied portal settings culture code " is 145.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyAlias,The length of the statement  "                    //this is because the calling module cannot be guaranteed to be supplying the right culture Code / portal alias combination. " is 124.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyAlias,The length of the statement  "                        //852 : check to see if the skinSrc is explicityl specified' which we don't want to duplicate if the alias also specifies this " is 126.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyAlias,The length of the statement  "                        var fullALiasRx = RegexUtils.GetCachedRegex("^" + httpAliasFull' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant); " is 122.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyAlias,The length of the statement  "                            var httpAliasRx = RegexUtils.GetCachedRegex("^?alias=" + httpAlias' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant); " is 125.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyQueryString,The length of the statement  "                    if (!illegalPageNames.Contains(pair[0].ToLowerInvariant()) && (pair.Length == 1 || !illegalPageNames.Contains(pair[1].ToLowerInvariant()))) " is 139.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyQueryString,The length of the statement  "                                    //if the querystring has been decoded and has a '=' in it' the value will get split more times.  Put those back together with a loop. " is 133.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "            if ((tab.IsSuperTab || RewriteController.IsAdminTab(tab.PortalID' tab.TabPath' settings)) && settings.FriendlyAdminHostUrls == false) //811 : allow for friendly admin/host urls " is 176.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "                var rx = RegexUtils.GetCachedRegex(settings.NoFriendlyUrlRegex' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant); " is 121.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "            //821 : new 'CustomOnly' setting which allows keeping base Urls but also using Custom Urls.  Basically keeps search friendly  " is 124.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "            if ((settings.UrlFormat.Equals("advanced"' StringComparison.InvariantCultureIgnoreCase) || customOnly) && !RewriteController.IsExcludedFromFriendlyUrls(tab' settings' false)) " is 174.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "                    //it is a straight page.aspx reference' with just the tabid to specify parameters' so get the extension that should be used (no pagename is used by design) " is 155.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "                    //When the home page is requested with a querystring value' the path for the home page is included.  This is because path items without the home page  " is 149.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "                    //qualifier are incorrectly checked for as dnn pages' and will result in a 404.  Ie domain.com/key/value will fail looking for a DNN path called 'key/value'. " is 157.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "                    //This gets around the problem because it places the path aas /home/key/value - which correctly identifies the tab as '/Home' and the key/value parameters as " is 157.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "                    //this regex splits the incoming friendly path pagename/tabid/56/default.aspx into the non-tabid path' and individual parms for each /parm/ in the friendly path  " is 160.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "                    var rgx = RegexUtils.GetCachedRegex("[^?]*(?<tabs>/tabId/(?<tabid>\\d+))(?<path>(?<parms>(?:(?:/[^/?]+){1})+))(?:/" + pageName + ")(?:$|\\?(?<qs>.+$))"' " is 152.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "                        //allow site root for home page if it is the default culture and no other path items' or there is a specific alias for this culture and there are no other path items " is 165.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "                                    //special case - if the newPath is empty after removing the parameters' and it is the home page' and the home page is only to show the site root " is 144.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "                            //770 : custom http alias found' merge into overall result (except if builtin url' which don't get to use custom aliases) " is 121.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "                            //820 : allow for custom http aliases for builtin urls as well (reverses 770).  Otherwise' can't log in to other aliases. " is 121.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "                                //drop the language parameters when the defaultCode is the cultureCode for this Url' or the portal alias defines the culture code " is 129.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The length of the statement  "                        var re = RegexUtils.GetCachedRegex("[^?]*/tabId/(\\d+)/ctl/([A-Z][a-z]+)/" + pageName + "$"' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant); " is 150.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,RemoveExcludedPartsOfPath,The length of the statement  "            var notInPath = RegexUtils.GetCachedRegex(settings.DoNotIncludeInPathRegex' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant); " is 133.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,TransformStandardPath,The length of the statement  "            if (newPath != "/" && newPath != "" && "/ctl/privacy|/ctl/login|/ctl/register|/ctl/terms".Contains(newPath.ToLowerInvariant())) " is 127.
Long Statement,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ForceLowerCaseIfAllowed,The length of the statement  "                            var rx = RegexUtils.GetCachedRegex(settings.ForceLowerCaseRegex' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant); " is 122.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,RewriteUrl,The length of the statement  "                //if made it through there and not installing' go to next call.  Not in exception catch because it implements it's own top-level exception handling " is 147.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The length of the statement  "                        //if requested alias wasn't the primary' we have a replacement' redirects are allowed and the portal alias mapping mode is redirect " is 131.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The length of the statement  "                        if ((redirectAlias && wrongAlias != null) && result.RedirectAllowed && result.PortalAliasMapping != PortalSettings.PortalAliasMapping.Redirect) " is 143.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The length of the statement  "                    if (!redirectAlias && IsPortalAliasIncorrect(context' request' requestUri' result' queryStringCol' settings' parentTraceId' out primaryHttpAlias)) " is 146.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The length of the statement  "                            CheckForRewrite(fullUrl' querystring' result' useFriendlyUrls' queryStringCol' settings' out isPhysicalResource' parentTraceId); " is 128.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The length of the statement  "                    //check for a parameter redirect (we had to do all the previous processing to know we are on the right portal and identify the tabid) " is 133.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The length of the statement  "                    //if the CustomParmRewrite flag is set' it means we already rewrote these parameters' so they have to be correct' and aren't subject to  " is 135.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The length of the statement  "                                    //when the request culture code is the same as the portal default' check for a 301 redirect' because we try and remove the language from the url where possible " is 159.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The length of the statement  "                                                    response.AppendHeader("X-" + prodName + "-Debug"' string.Format(debugMsg' requestUri.AbsoluteUri' result.FinalUrl' result.RewritePath' result.Action' productVer)); " is 163.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The length of the statement  "                                                        response.AppendHeader("X-" + prodName + "-Debug"' string.Format(debugMsg' requestUri.AbsoluteUri' result.FinalUrl' result.RewritePath' result.Action' productVer)); " is 163.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The length of the statement  "                                    Regex.IsMatch(pathWithNoQs' settings.ValidExtensionlessUrlsRegex' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant)) " is 123.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The length of the statement  "                //do nothing' a threadAbortException will have occured from using a server.transfer or response.redirect within the code block.  This is the highest " is 148.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,Handle404OrException,The length of the statement  "                            //ok' valid tabid.  what we're going to do is to load up this tab via a rewrite of the url' and then change the output status " is 125.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,Handle404OrException,The length of the statement  "                            errorPageHtml.Write("<div>Change this message by configuring a specific 404 Error Page or Url for this website.</div>"); " is 120.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,Handle404OrException,The length of the statement  "                        errorPageHtml.Write("500 Server Error<br><div style='font-weight:bolder'>An error occured during processing : if possible' check the event log of the server</div>"); " is 165.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,Handle404OrException,The length of the statement  "                        errorPageHtml.Write("<div>You can see this exception because the customErrors attribute in the web.config is set to 'off'.  Change this value to 'on' or 'RemoteOnly' to show Error Handling</div>"); " is 197.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,Handle404OrException,The length of the statement  "                                errorPageHtml.Write("<div>The error handling would have shown this page : <a href='" + errUrl + "'>" + errUrl + "</a></div>"); " is 126.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForTabExternalForwardOrRedirect,The length of the statement  "                //do nothing' a threadAbortException will have occured from using a server.transfer or response.redirect within the code block.  This is the highest " is 148.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForSecureRedirect,The length of the statement  "                        exclude = (Regex.IsMatch(result.RawUrl' doNotRedirectSecureRegex' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant)); " is 124.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,RedirectPortalAlias,The length of the statement  "                if (result.Reason == RedirectReason.Wrong_Portal_Alias_For_Browser_Type || result.Reason == RedirectReason.Wrong_Portal_Alias_For_Culture || " is 140.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,RedirectPortalAlias,The length of the statement  "                    redirected = ConfigurePortalAliasRedirect(ref result' result.HttpAlias' httpAlias' false' result.Reason' settings.InternalAliasList' settings); " is 143.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,RedirectPortalAlias,The length of the statement  "                    redirected = ConfigurePortalAliasRedirect(ref result' result.HttpAlias' httpAlias' false' settings.InternalAliasList' settings); " is 128.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IdentifyPortalAlias,The length of the statement  "                    if (result.PortalAlias != null && String.Compare(result.PortalAlias.HTTPAlias' httpAliasFromTab' StringComparison.OrdinalIgnoreCase) != 0 " is 137.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IdentifyPortalAlias,The length of the statement  "            //double check to make sure we still have the correct alias now that all other information is known (ie tab' portal' culture) " is 125.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IdentifyPortalAlias,The length of the statement  "                //here because the portal alias matched' but no tab was found' and because there are custom tab aliases used for this portal " is 124.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IdentifyPortalAlias,The length of the statement  "                    bool incorrectAlias = IsPortalAliasIncorrect(context' request' requestUri' result' queryStringCol' settings' parentTraceId' out primaryAlias); " is 142.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,RewriteAsChildAliasRoot,The length of the statement  "                //732 : when no culture returned can be "" as well as null : no culture causes no rewrite' which results in redirect to parent alias " is 132.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForChildPortalRootUrl,The length of the statement  "            //what we are going to test for here is that if this is a child portal request' for the /default.aspx of the child portal " is 121.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForChildPortalRootUrl,The length of the statement  "            //then we are going to avoid the core 302 redirect to ?alias=portalALias by rewriting to the /default.aspx of the site root " is 123.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IgnoreRequest,The length of the statement  "            else if (request != null && request.Path.EndsWith("imagechallenge.captcha.aspx"' StringComparison.InvariantCultureIgnoreCase)) " is 126.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRewrite,The length of the statement  "                    doSiteUrlProcessing = Regex.IsMatch(fullUrl' settings.UseSiteUrlsRegex' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant); " is 129.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRewrite,The length of the statement  "                    bool doRewrite = RewriteController.IdentifyByTabPathEx(fullUrl' querystring' result' queryStringCol' settings' parentTraceId); " is 126.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRewrite,The length of the statement  "                    //728 : compare requests against the siteurls.config file' either if no other match was found' or if we want to skip the rest of the processing " is 143.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The length of the statement  "                    if (requestUri.AbsolutePath.EndsWith("/") && result.Action != ActionType.Redirect301 && result.Reason != RedirectReason.Requested_SplashPage) " is 141.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The length of the statement  "                            int requestedUrlAliasEnd = requestedUrl.IndexOf(result.PortalAlias.HTTPAlias' StringComparison.InvariantCultureIgnoreCase)  " is 122.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The length of the statement  "                                if ((requestedUrl.Length - requestedUrlAliasEnd) >= 12 && requestedUrl.Substring(requestedUrlAliasEnd).Equals("default.aspx"' StringComparison.InvariantCultureIgnoreCase)) " is 171.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The length of the statement  "                            //what happens here is that the request is reverse-engineered to see if it matches what the friendly Url shoudl have been  " is 121.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The length of the statement  "                            //if the incoming request doesn't match the 'most friendly' url' a 301 Moved Permanently status is returned' along with the friendly url  " is 136.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The length of the statement  "                                //string rawUrlWithHost = StripDebugParameter(System.Web.HttpUtility.UrlDecode(scheme + requestUri.Host + requestUri.PathAndQuery).ToLowerInvariant()); " is 151.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The length of the statement  "                                    result.DebugMessages.Add("Compared :" + bestFriendlyNoScheme + " [generated] -> " + requestedPathNoScheme + " [requested with no scheme]"); " is 139.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The length of the statement  "                                    result.DebugMessages.Add("Compared :" + bestFriendlyNoScheme + " [generated] -> " + rawUrlWithHost + " [requested with host and scheme]"); " is 138.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The length of the statement  "                                    result.DebugMessages.Add("Compared :" + bestFriendlyNoScheme + " [generated] -> " + rawUrlWithHostNoScheme + " [requested with host' no scheme]"); " is 146.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The length of the statement  "                                    result.DebugMessages.Add("Compared :" + bestFriendlyNoScheme + " [generated] -> " + HttpUtility.UrlDecode(requestedPathNoScheme) + " [requested and decoded]"); " is 159.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The length of the statement  "                                    result.DebugMessages.Add("Compared :" + bestFriendlyNoScheme + " [generated] -> " + rawUrlLowerCase + " [requested raw Url]"); " is 126.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The length of the statement  "                    if (urlDecodedRedirectPath != null && (settings.RedirectWrongCase && String.CompareOrdinal(urlDecodedRedirectPath' urlDecodedRedirectPath.ToLowerInvariant()) != 0)) " is 164.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The length of the statement  "                            allowRedirect = !Regex.IsMatch(redirectPath' settings.ForceLowerCaseRegex' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant); " is 132.
Long Statement,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The length of the statement  "                            if (settings.RedirectDefaultPage == false && redirectPathOnly.EndsWith(Globals.glbDefaultPage' StringComparison.InvariantCultureIgnoreCase)) " is 140.
Long Statement,DotNetNuke.Entities.Urls,BasicFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\BasicFriendlyUrlProvider.cs,FriendlyUrl,The length of the statement  "                            friendlyPath = GetFriendlyAlias("~/" + queryStringDic["language"] + "/" + tab.TabPath.Replace("//"' "/").TrimStart('/') + ".aspx"'  " is 130.
Long Statement,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,GetParameterRedirects,The length of the statement  "                        DataCache.SetCache(redirectActionKey' redirectActions' new DNNCacheDependency(fileDependency)' absoluteExpiration' Cache.NoSlidingExpiration); " is 142.
Long Statement,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,GetParameterReplacements,The length of the statement  "                    DataCache.SetCache(replaceActionKey' replaceActions' new DNNCacheDependency(cacheDependency)' expiration' settings.CacheTime); " is 126.
Long Statement,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,StoreFriendlyUrlIndexInCache,The length of the statement  "            SetPageCache(UrlDictKey' urlDict' new DNNCacheDependency(GetTabsCacheDependency(urlPortals))' settings' onRemovePageIndex); " is 123.
Long Statement,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,StoreFriendlyUrlIndexInCache,The length of the statement  "                log.AddProperty("Item added to cache"' "Url Portals object added to cache.  Key:" + UrlPortalsKey + "  Items: " + urlPortals.Count.ToString()); " is 143.
Long Statement,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,StoreFriendlyUrlIndexInCache,The length of the statement  "                    log.AddProperty("Item added to cache"' "Custom Alias Tabs added to cache.  Key:" + CustomAliasTabsKey + " Items: " + customAliasTabs.Count.ToString()); " is 151.
Long Statement,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,StorePageIndexInCache,The length of the statement  "            SetPageCache(PageIndexKey' tabDictionary' new DNNCacheDependency(GetTabsCacheDependency(portalIds))' settings' onRemovePageIndex); " is 130.
Long Statement,DotNetNuke.Entities.Urls,ExtensionUrlProviderController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProviderController.cs,CheckForSiteRootRewrite,The length of the statement  "            //list should have returned all providers with site root rewrite' but double check here in case of faulty third-party logic " is 123.
Long Statement,DotNetNuke.Entities.Urls,ExtensionUrlProviderController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProviderController.cs,TransformFriendlyUrlPath,The length of the statement  "                                        qsRemainder = rewrittenUrlMatch.Groups["qs"].Captures.Cast<Capture>().Aggregate(""' (current' qsCapture) => current + qsCapture.Value); //initialise " is 148.
Long Statement,DotNetNuke.Entities.Urls,FriendlyUrlOptions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlOptions.cs,GetRegex,The length of the statement  "                return _regexLookup[regexText] = RegexUtils.GetCachedRegex(regexText' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant); " is 127.
Long Statement,DotNetNuke.Entities.Urls,FriendlyUrlPathController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlPathController.cs,SplitUserIdFromFriendlyUrlPath,The length of the statement  "                //remove the trailing slash from otherParamtersPath if it exists' because the other parameters may be anywhere in the path " is 122.
Long Statement,DotNetNuke.Entities.Urls,FriendlyUrlPathController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlPathController.cs,SplitUserIdFromFriendlyUrlPath,The length of the statement  "                const string patternFormatWithParameters = @"/?(?<rem1>.*)(?=_parm_)(?<parm1>(?<=/|^)(?:_parm_)/(?<p1v>[\d\w]+)){0'1}/?(?<op>_otherparm_){0'1}/?(?<parm2>(?<=/)(?:_parm_)/(?<p2v>[\d\w]+)){0'1}(?<rem2>.*)"; " is 204.
Long Statement,DotNetNuke.Entities.Urls,FriendlyUrlPathController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlPathController.cs,SplitUserIdFromFriendlyUrlPath,The length of the statement  "                    remainingPath = Regex.Replace(remainingPath' Regex.Escape(otherParametersPath)' ""' RegexOptions.IgnoreCase | RegexOptions.CultureInvariant); " is 141.
Long Statement,DotNetNuke.Entities.Urls,FriendlyUrlPathController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlPathController.cs,CheckUserProfileReplacement,The length of the statement  "                        urlName = (!String.IsNullOrEmpty(settings.VanityUrlPrefix)) ? String.Format("{0}/{1}"' settings.VanityUrlPrefix' user.VanityUrl) : user.VanityUrl; " is 146.
Long Statement,DotNetNuke.Entities.Urls,FriendlyUrlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlController.cs,IsMobileClient,The length of the statement  "            return (HttpContext.Current.Request.Browser != null) && (ClientCapabilityProvider.Instance() != null) && ClientCapabilityProvider.CurrentClientCapability.IsMobile; " is 163.
Long Statement,DotNetNuke.Entities.Urls,RedirectController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectController.cs,CancelRedirect,The length of the statement  "            //redo the rewrite to fix up the problem.  The user has ticked 'permanent redirect' but hasn't supplied a forwarding Url " is 120.
Long Statement,DotNetNuke.Entities.Urls,RedirectController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectController.cs,CheckForParameterRedirect,The length of the statement  "            Dictionary<int' List<ParameterRedirectAction>> redirectActions = CacheController.GetParameterRedirects(settings' result.PortalId' ref messages); " is 144.
Long Statement,DotNetNuke.Entities.Urls,RedirectController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectController.cs,CheckForParameterRedirect,The length of the statement  "                    //OK what we have now is a list of redirects for the currently requested tab (either because it was specified by tab id' " is 120.
Long Statement,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,CheckIfPortalAlias,The length of the statement  "                                        new HttpCookie("SplashPageView"' "true") { Path = (!string.IsNullOrEmpty(Globals.ApplicationPath) ? Globals.ApplicationPath : "/") }); " is 134.
Long Statement,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,CheckIfPortalAlias,The length of the statement  "                    RedirectTokens.DetermineRedirectReasonAndAction(newUrl' result' true' settings' out resultingUrl' out reason' out action); " is 122.
Long Statement,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,GetUser,The length of the statement  "            var vanityUrlLookupDictionary = CBO.GetCachedObject<Dictionary<string' UserInfo>>(new CacheItemArgs(cacheKey' 20' CacheItemPriority.High' portalId)'  " is 148.
Long Statement,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,CheckTabPath,The length of the statement  "            //split off the default.aspx part and try again - compensating for gemini issue http://support.dotnetnuke.com/issue/ViewIssue.aspx?id=8651&PROJID=39 " is 148.
Long Statement,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,CheckTabPath,The length of the statement  "                            tabLookUpKey = tabLookUpKey.Replace("::" + String.Format("{0}/{1}"' settings.VanityUrlPrefix' vanityUrl)' "::" + profilePagePath.TrimStart('/').ToLowerInvariant()); " is 164.
Long Statement,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,AddSkinToRewritePath,The length of the statement  "                    rewritePath += rewritePath.Contains("?") ? "&SkinSrc=" + skin.Replace(".ascx"' "") : "?SkinSrc=" + skin.Replace(".ascx"' ""); " is 125.
Long Statement,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,GetRewriteOrRequestedPath,The length of the statement  "                //if no rewrite' then the path should have been a non-friendly path' and therefore can be passed in to get the friendly Url " is 123.
Long Statement,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,GetTabFromDictionary,The length of the statement  "                                found = CheckTabPath(tabKeyVal.Replace(" "' settings.SpaceEncodingValue) + "?" + querystringCol.ToString().Split('&')[0].ToLowerInvariant()' result' settings' tabDict' ref newUrl); " is 180.
Long Statement,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,IdentifyByRegEx,The length of the statement  "                        var rewritePath = RewriterUtils.ResolveUrl(applicationPath' re.Replace(url' sendTo)); //no rewrite path unless we match by regex the intended tab " is 145.
Long Statement,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,IdentifyByRegEx,The length of the statement  "                        //a match by regex means it's probably not a 'friendly' Url' so assume at this stage that this request will end up a 301 " is 120.
Long Statement,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,RewriteParameters,The length of the statement  "                            //656 : don't allow forced lower case of the culture identifier - always convert the case to aa-AA to match the standard " is 120.
Long Statement,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,RewriteParameters,The length of the statement  "            Dictionary<int' SharedList<ParameterRewriteAction>> rewriteActions = CacheController.GetParameterRewrites(urlAction.PortalId' " is 125.
Long Statement,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddCustomRedirectsToDictionary,The length of the statement  "                        //when adding a blank custom Url' also add in a standard tab path url' because any url that also includes querystring data will use the standard tab path " is 153.
Long Statement,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddPermanentRedirectToDictionary,The length of the statement  "            //and put in the name-less one as well' just in case a prior version of the site was runnign without the tabnames (urlformat=sefriendly) " is 136.
Long Statement,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddStandardPagesToDict,The length of the statement  "            //hard coded page paths - using 'tabDeleted' in case there is a clash with an existing page (ie' someone has created a page that takes place of the standard page' created page has preference) " is 191.
Long Statement,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddTabToTabDict,The length of the statement  "                if (thisPortal != null && (thisPortal.UserTabId == tab.TabID || thisPortal.UserTabId == tab.ParentId || thisPortal.UserTabId == -1)) " is 132.
Long Statement,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddTabToTabDict,The length of the statement  "                //this entry is going to have space substitution in it' so it is added into the dictionary with a delete notification and a 301 replaced  " is 136.
Long Statement,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddTabToTabDict,The length of the statement  "            //inspect the optional tab redirects and add them as well' keeping track if any are '200' status' meaning the standard Url will be 301' if replaced unfriendly is switched on " is 173.
Long Statement,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddToTabDict,The length of the statement  "			                    "To stop this message from appearing in the log' uncheck the option for 'Produce an Exception in the Site Log if two pages have the same name/path?' in the Advanced Url Rewriting settings."); " is 191.
Long Statement,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,BuildTabDictionary,The length of the statement  "                foreach (string culture in chosenAliasesCultures.Values.Where(culture => aliasSpecificCultures.Contains(culture) == false)) " is 123.
Long Statement,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,BuildTabDictionary,The length of the statement  "                                //however' we need to add it to the dictionary in case there's an old link (pre-translation/pre-friendly url/pre-alias&culture linked)  " is 134.
Long Statement,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,FetchTabDictionary,The length of the statement  "            if (dict == null || portalDepths == null || portalTabPathDictionary == null || !PortalExistsInIndex(portalDepths' portalId) || forceRebuild) " is 140.
Long Statement,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,FetchTabDictionary,The length of the statement  "                    if (dict == null || portalDepths == null || portalTabPathDictionary == null || !PortalExistsInIndex(portalDepths' portalId) || forceRebuild) " is 140.
Long Statement,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,GetPortalAliasByPortal,The length of the statement  "            PortalAliasInfo portalAliasInfo = portalAliasCollection.SingleOrDefault(a => a.HTTPAlias == portalAlias.ToLowerInvariant()); " is 124.
Long Statement,DotNetNuke.Entities.Urls,TabPathHelper,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabPathController.cs,GetTabPath,The length of the statement  "                    urlDict = CustomUrlDictController.FetchCustomUrlDictionary(tab.PortalID' false' false' settings' out customAliasForTabs' parentTraceId); " is 136.
Long Statement,DotNetNuke.Entities.Urls,UrlRewriterBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\UrlRewriterBase.cs,AutoAddAlias,The length of the statement  "                var portalAliasInfo = new PortalAliasInfo { PortalID = portalId' HTTPAlias = Globals.GetDomainName(context.Request' true) }; " is 124.
Long Statement,DotNetNuke.Entities.Urls,UrlRewriterUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\UrlRewriterUtils.cs,Log404,The length of the statement  "            log.LogProperties.Add(new LogDetailInfo("PortalAlias"'  (result.PortalAlias != null) ? result.PortalAlias.HTTPAlias : String.Empty)); " is 133.
Long Statement,DotNetNuke.Entities.Users.Membership,MembershipPasswordController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Membership\MembershipPasswordController.cs,AddPasswordHistory,The length of the statement  "                _dataProvider.AddPasswordHistory(userId' hashedPassword' Convert.ToBase64String(newSalt)' passwordsRetained' daysRetained); " is 123.
Long Statement,DotNetNuke.Entities.Users.Membership,MembershipPasswordController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Membership\MembershipPasswordController.cs,GetPasswordHistory,The length of the statement  "                CBO.FillCollection<PasswordHistory>(_dataProvider.GetPasswordHistory(userId' settings.NumberOfPasswordsStored' settings.NumberOfDaysBeforePasswordReuse)); " is 154.
Long Statement,DotNetNuke.Entities.Users.Social.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Social\Data\DataService.cs,SaveRelationshipType,The length of the statement  "            return _provider.ExecuteScalar<int>("SaveRelationshipType"' relationshipType.RelationshipTypeId' relationshipType.Direction' relationshipType.Name' relationshipType.Description' createUpdateUserId); " is 198.
Long Statement,DotNetNuke.Entities.Users.Social.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Social\Data\DataService.cs,SaveRelationship,The length of the statement  "            return _provider.ExecuteScalar<int>("SaveRelationship"' relationship.RelationshipId' relationship.RelationshipTypeId' relationship.Name' relationship.Description' _provider.GetNull(relationship.UserId)' _provider.GetNull(relationship.PortalId)' relationship.DefaultResponse' createUpdateUserId); " is 295.
Long Statement,DotNetNuke.Entities.Users.Social.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Social\Data\DataService.cs,GetUserRelationship,The length of the statement  "            return _provider.ExecuteReader("GetUserRelationshipsByMultipleIDs"' userId' relatedUserId' relationshipId' relationshipDirection); " is 130.
Long Statement,DotNetNuke.Entities.Users.Social.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Social\Data\DataService.cs,SaveUserRelationship,The length of the statement  "            return _provider.ExecuteScalar<int>("SaveUserRelationship"' userRelationship.UserRelationshipId' userRelationship.UserId' userRelationship.RelatedUserId' userRelationship.RelationshipId' userRelationship.Status' createUpdateUserId); " is 232.
Long Statement,DotNetNuke.Entities.Users.Social.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Social\Data\DataService.cs,SaveUserRelationshipPreference,The length of the statement  "            return _provider.ExecuteScalar<int>("SaveUserRelationshipPreference"' userRelationshipPreference.PreferenceId' userRelationshipPreference.UserId' userRelationshipPreference.RelationshipId' userRelationshipPreference.DefaultResponse' createUpdateUserId); " is 253.
Long Statement,DotNetNuke.Entities.Users.Social,RelationshipControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Social\RelationshipControllerImpl.cs,GetFriendsRelationshipByPortal,The length of the statement  "           return GetRelationshipsByPortalId(portalId).FirstOrDefault(re => re.RelationshipTypeId == (int)DefaultRelationshipTypes.Friends); " is 129.
Long Statement,DotNetNuke.Entities.Users.Social,RelationshipControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Social\RelationshipControllerImpl.cs,GetFollowersRelationshipByPortal,The length of the statement  "            return GetRelationshipsByPortalId(portalId).FirstOrDefault(re => re.RelationshipTypeId == (int)DefaultRelationshipTypes.Followers); " is 131.
Long Statement,DotNetNuke.Entities.Users.Social.Internal,FollowersControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Social\FollowersControllerImpl.cs,AddFollowerRequestNotification,The length of the statement  "            var notificationType = NotificationsController.Instance.GetNotificationType(IsFollowing(targetUser' initiatingUser) ? FollowerRequest : FollowBackRequest); " is 155.
Long Statement,DotNetNuke.Entities.Users.Social.Internal,FollowersControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Social\FollowersControllerImpl.cs,AddFollowerRequestNotification,The length of the statement  "            NotificationsController.Instance.SendNotification(notification' initiatingUser.PortalID' null' new List<UserInfo> { targetUser }); " is 130.
Long Statement,DotNetNuke.Entities.Users.Social.Internal,FriendsControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Social\FriendsControllerImpl.cs,AddFriendRequestNotification,The length of the statement  "            var subject = string.Format(Localization.GetString("AddFriendRequestSubject"' Localization.GlobalResourceFile' language)' " is 121.
Long Statement,DotNetNuke.Entities.Users.Social.Internal,FriendsControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Social\FriendsControllerImpl.cs,AddFriendRequestNotification,The length of the statement  "            NotificationsController.Instance.SendNotification(notification' initiatingUser.PortalID' null' new List<UserInfo> { targetUser }); " is 130.
Long Statement,DotNetNuke.ExtensionPoints,ContextMenuItemExtensionControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\ExtensionPoints\ContextMenuItemExtensionControl.cs,OnInit,The length of the statement  "        <img id=""" + extension.CtxMenuItemId + @"_icon"" alt=""" + extension.AltText + @""" src=""" + icon + @""" title=""" + extension.AltText + @"""> " is 144.
Long Statement,DotNetNuke.ExtensionPoints,EditPagePanelExtensionControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\ExtensionPoints\EditPagePanelExtensionControl.cs,LoadControl,The length of the statement  "            var editPanel = new PanelEditPagePanelExtensionControl { PanelId = extension.EditPagePanelId' Text = extension.Text' CssClass = extension.CssClass }; " is 149.
Long Statement,DotNetNuke.ExtensionPoints,ToolBarMenuButtonRenderer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\ExtensionPoints\ToolBarMenuButtonRenderer.cs,GetItemOutput,The length of the statement  "                return string.Format("<li class='{0}' id='{1}' ><a href='#' onclick='{2}; return false;'><span {3}>{4}</span></a></li>"' item.CssClass' item.ItemId' item.Action' item.Attributes' item.Text); " is 190.
Long Statement,DotNetNuke.ExtensionPoints,ToolBarMenuButtonRenderer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\ExtensionPoints\ToolBarMenuButtonRenderer.cs,GetItemOutput,The length of the statement  "            return string.Format("<li><input type='{0}' name='{1}' id='{2}' value='{3}' {4} onclick='{5}; return false;'/>{6}</li>"' item.Type' item.ItemId' item.ItemId' item.Text' item.Attributes' item.Action' item.Text); " is 210.
Long Statement,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,IsInstalled,The length of the statement  "            JavaScriptLibrary library = JavaScriptLibraryController.Instance.GetLibrary(l => l.LibraryName.Equals(jsname' StringComparison.OrdinalIgnoreCase)); " is 147.
Long Statement,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,RequestLooseVersionLibraryRegistration,The length of the statement  "            var library = JavaScriptLibraryController.Instance.GetLibraries(l => l.LibraryName.Equals(jsname' StringComparison.OrdinalIgnoreCase)) " is 134.
Long Statement,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,RequestSpecificVersionLibraryRegistration,The length of the statement  "            JavaScriptLibrary library = JavaScriptLibraryController.Instance.GetLibrary(l => l.LibraryName.Equals(jsname' StringComparison.OrdinalIgnoreCase) && l.Version == version); " is 171.
Long Statement,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,ResolveVersionConflicts,The length of the statement  "                var processingLibrary = JavaScriptLibraryController.Instance.GetLibrary(l => l.JavaScriptLibraryID.ToString(CultureInfo.InvariantCulture) == libraryId); " is 152.
Long Statement,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,ResolveVersionConflicts,The length of the statement  "                var existingLatestLibrary = finalScripts.FindAll(lib => lib.LibraryName.Equals(processingLibrary.LibraryName' StringComparison.OrdinalIgnoreCase)) " is 146.
Long Statement,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,GetHighestVersionLibrary,The length of the statement  "            if (Globals.Status == Globals.UpgradeStatus.Install) //if in install process' then do not use JSL but all use the legacy versions. " is 130.
Long Statement,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,GetHighestVersionLibrary,The length of the statement  "                return JavaScriptLibraryController.Instance.GetLibraries(l => l.LibraryName.Equals(jsname' StringComparison.OrdinalIgnoreCase)) " is 127.
Long Statement,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,GetScriptPath,The length of the statement  "            return ("~/Resources/libraries/" + js.LibraryName + "/" + Globals.FormatVersion(js.Version' "00"' 3' "_") + "/" + js.FileName); " is 127.
Long Statement,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,RegisterScript,The length of the statement  "            ClientResourceManager.RegisterScript(page' GetScriptPath(jsl)' GetFileOrder(jsl)' GetScriptLocation(jsl)' jsl.LibraryName' jsl.Version.ToString(3)); " is 148.
Long Statement,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,RegisterScript,The length of the statement  "                var fallback = new DnnJsIncludeFallback(jsl.ObjectName' VirtualPathUtility.ToAbsolute("~/Resources/libraries/" + jsl.LibraryName + "/" + Globals.FormatVersion(jsl.Version' "00"' 3' "_") + "/" + jsl.FileName)); " is 209.
Long Statement,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,HandlePreInstallorLegacyItemRequests,The length of the statement  "                        //This method maybe called when Page.Form hasn't initialized yet' in that situation if needed should reference dnn js manually. " is 127.
Long Statement,DotNetNuke.Framework,ServicesFrameworkImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\ServicesFrameworkImpl.cs,RegisterAjaxScript,The length of the statement  "            ClientAPI.RegisterClientVariable(page' "sf_tabId"' PortalSettings.Current.ActiveTab.TabID.ToString(CultureInfo.InvariantCulture)' /*overwrite*/ true); " is 150.
Long Statement,DotNetNuke.Framework,AJAX,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\AJAX.cs,AddScriptManager,The length of the statement  "                        //suppress error adding script manager to support edge-case of module developers custom aspx pages that inherit from basepage and use code blocks " is 145.
Long Statement,DotNetNuke.Framework,AJAX,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\AJAX.cs,AddScriptManager,The length of the statement  "                        //		stylesheetManager.CdnSettings.TelerikCdn = Host.EnableTelerikCdn ? TelerikCdnMode.Enabled : TelerikCdnMode.Disabled; " is 120.
Long Statement,DotNetNuke.Framework,AJAX,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\AJAX.cs,AddScriptManager,The length of the statement  "                        //		if (stylesheetManager.CdnSettings.TelerikCdn != TelerikCdnMode.Disabled && !string.IsNullOrEmpty(Host.TelerikCdnBasicUrl)) " is 126.
Long Statement,DotNetNuke.Framework,AJAX,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\AJAX.cs,AddScriptManager,The length of the statement  "                        //		if (stylesheetManager.CdnSettings.TelerikCdn != TelerikCdnMode.Disabled && !string.IsNullOrEmpty(Host.TelerikCdnSecureUrl)) " is 127.
Long Statement,DotNetNuke.Framework,AJAX,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\AJAX.cs,AddScriptManager,The length of the statement  "                        //suppress error adding script manager to support edge-case of module developers custom aspx pages that inherit from basepage and use code blocks " is 145.
Long Statement,DotNetNuke.Framework,CachePageStatePersister,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\CachePageStatePersister.cs,Save,The length of the statement  "            DataCache.SetCache(key.ToString()' state' objDependency' DateTime.Now.AddMinutes(Page.Session.Timeout)' Cache.NoSlidingExpiration' CacheItemPriority.NotRemovable' null); " is 169.
Long Statement,DotNetNuke.Framework,jQuery,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\jQuery.cs,KeepAlive,The length of the statement  "			var scriptBlock = string.Format("(function($){{setInterval(function(){{$.get(location.href)}}' {1});}}(jQuery));"' Globals.ApplicationPath' seconds); " is 149.
Long Statement,DotNetNuke.Framework,PageBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\PageBase.cs,GetErrorUrl,The length of the statement  "                    (exc == null || UserController.Instance.GetCurrentUserInfo() == null || !UserController.Instance.GetCurrentUserInfo().IsSuperUser ? "An unexpected error has occurred" : Server.UrlEncode(exc.Message)) " is 199.
Long Statement,DotNetNuke.Framework,PageBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\PageBase.cs,OnError,The length of the statement  "                    var errorMessage = HttpUtility.UrlEncode(Localization.GetString("NoSitesForThisInstallation.Error"' Localization.GlobalResourceFile)); " is 134.
Long Statement,DotNetNuke.Framework,Reflection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\Reflection.cs,CreateObject,The length of the statement  "            	//if both the Namespace and AssemblyName are provided then we will construct an "assembly qualified typename" - ie. "NameSpace.ClassName' AssemblyName"  " is 151.
Long Statement,DotNetNuke.Framework,Reflection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\Reflection.cs,CreateObject,The length of the statement  "					//dynamically create the typename from the constants ( this enables private assemblies to share the same configuration as the base provider )  " is 141.
Long Statement,DotNetNuke.Framework,Reflection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\Reflection.cs,CreateObject,The length of the statement  "                    TypeName = ObjectNamespace + "." + objProviderConfiguration.DefaultProvider + "' " + ObjectAssemblyName + (fixAssemblyName ? "." + objProviderConfiguration.DefaultProvider : string.Empty); " is 188.
Long Statement,DotNetNuke.Framework,Reflection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\Reflection.cs,CreateObject,The length of the statement  "					//dynamically create the typename from the constants ( this enables private assemblies to share the same configuration as the base provider )  " is 141.
Long Statement,DotNetNuke.Framework,Reflection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\Reflection.cs,CreateObject,The length of the statement  "                    TypeName = ObjectNamespace + "." + ObjectProviderName + "' " + ObjectAssemblyName + (fixAssemblyName ? "." + ObjectProviderName : string.Empty); " is 144.
Long Statement,DotNetNuke.Framework,Reflection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\Reflection.cs,CreateObject,The length of the statement  "						//dynamically create the typename from the constants ( this enables private assemblies to share the same configuration as the base provider )  " is 141.
Long Statement,DotNetNuke.Framework,Reflection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\Reflection.cs,CreateObject,The length of the statement  "                        //dynamically create the typename from the constants ( this enables private assemblies to share the same configuration as the base provider )  " is 141.
Long Statement,DotNetNuke.Entities.Icons,IconController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Icons\IconController.cs,GetFileIconUrl,The length of the statement  "            if (!string.IsNullOrEmpty(extension) && File.Exists(HostingEnvironment.MapPath(IconURL("Ext" + extension' "32x32"' "Standard")))) " is 129.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,ProcessSecurityRole,The length of the statement  "            //permissions strings are encoded with Deny permissions at the beginning and Grant permissions at the end for optimal performance " is 129.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,InputFilter,The length of the statement  "                var removeAngleBrackets = Config.GetSetting("RemoveAngleBrackets") != null && Boolean.Parse(Config.GetSetting("RemoveAngleBrackets")); " is 134.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,Replace,The length of the statement  "                            inputString = listEntryHostInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' removeItem.Value' options)); " is 179.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,Replace,The length of the statement  "                            inputString = listEntryHostInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' removeItem.Value' options)); " is 179.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,Replace,The length of the statement  "                            inputString = listEntryPortalInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' removeItem.Value' options)); " is 181.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,Replace,The length of the statement  "                            inputString = listEntryPortalInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' removeItem.Value' options)); " is 181.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,Remove,The length of the statement  "                            inputString = listEntryHostInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' string.Empty' options)); " is 175.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,Remove,The length of the statement  "                            inputString = listEntryHostInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' string.Empty' options)); " is 175.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,Remove,The length of the statement  "                            inputString = listEntryPortalInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' string.Empty' options)); " is 177.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,Remove,The length of the statement  "                            inputString = listEntryPortalInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' string.Empty' options));         " is 177.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,SignOut,The length of the statement  "            //clear any authentication provider tokens that match *UserToken convention e.g FacebookUserToken 'TwitterUserToken' LiveUserToken and GoogleUserToken " is 150.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,GetCookieDomain,The length of the statement  "                var group = groupController.GetPortalGroups().SingleOrDefault(p => p.MasterPortalId == PortalController.GetEffectivePortalId(portalId)); " is 136.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,IsDenied,The length of the statement  "                //permissions strings are encoded with Deny permissions at the beginning and Grant permissions at the end for optimal performance " is 129.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,IsDenied,The length of the statement  "                            if (settings != null && !(settings.PortalId == objUserInfo.PortalID && objUserInfo.IsInRole(settings.AdministratorRoleName))) " is 125.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,IsInRole,The length of the statement  "            if (!string.IsNullOrEmpty(role) && role == Globals.glbRoleUnauthUserName && !HttpContext.Current.Request.IsAuthenticated) " is 121.
Long Statement,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,IsInRole,The length of the statement  "            return IsInRoles(UserController.Instance.GetCurrentUserInfo()' PortalController.Instance.GetCurrentPortalSettings()' role); " is 123.
Long Statement,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,CreateDNNUser,The length of the statement  "            var filterFlags = PortalSecurity.FilterFlag.NoScripting | PortalSecurity.FilterFlag.NoAngleBrackets | PortalSecurity.FilterFlag.NoMarkup; " is 137.
Long Statement,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,UpdateUserMembership,The length of the statement  "                throw new Exception(Localization.GetExceptionMessage("UpdateUserMembershipFailed"' "Asp.net membership update user failed.")' ex); " is 130.
Long Statement,DotNetNuke.Security.Permissions,CompareDesktopModulePermissions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\CompareDesktopModulePermissions.cs,Compare,The length of the statement  "            return ((DesktopModulePermissionInfo) x).DesktopModulePermissionID.CompareTo(((DesktopModulePermissionInfo) y).DesktopModulePermissionID); " is 138.
Long Statement,DotNetNuke.Security.Permissions,DesktopModulePermissionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\DesktopModulePermissionCollection.cs,Add,The length of the statement  "                    if (permission.PermissionID == value.PermissionID && permission.UserID == value.UserID && permission.RoleID == value.RoleID) " is 124.
Long Statement,DotNetNuke.Security.Permissions,DesktopModulePermissionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\DesktopModulePermissionCollection.cs,CompareTo,The length of the statement  "                if (objDesktopModulePermissionCollection[i].DesktopModulePermissionID != this[i].DesktopModulePermissionID || objDesktopModulePermissionCollection[i].AllowAccess != this[i].AllowAccess) " is 185.
Long Statement,DotNetNuke.Security.Permissions,DesktopModulePermissionInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\DesktopModulePermissionInfo.cs,Equals,The length of the statement  "            return (AllowAccess == other.AllowAccess) && (PortalDesktopModuleID == other.PortalDesktopModuleID) && (RoleID == other.RoleID) && (PermissionID == other.PermissionID); " is 168.
Long Statement,DotNetNuke.Security.Permissions,FolderPermissionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\FolderPermissionCollection.cs,Add,The length of the statement  "                    if (permission.PermissionID == value.PermissionID && permission.UserID == value.UserID && permission.RoleID == value.RoleID) " is 124.
Long Statement,DotNetNuke.Security.Permissions,FolderPermissionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\FolderPermissionCollection.cs,Contains,The length of the statement  "                if (permission.PermissionKey == key && permission.FolderID == folderId && permission.RoleID == roleId && permission.UserID == userId) " is 133.
Long Statement,DotNetNuke.Security.Permissions,FolderPermissionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\FolderPermissionCollection.cs,CompareTo,The length of the statement  "                if (objFolderPermissionCollection[i].FolderPermissionID != this[i].FolderPermissionID || objFolderPermissionCollection[i].AllowAccess != this[i].AllowAccess) " is 157.
Long Statement,DotNetNuke.Security.Permissions,ModulePermissionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\ModulePermissionCollection.cs,Add,The length of the statement  "                    if (permission.PermissionID == value.PermissionID && permission.UserID == value.UserID && permission.RoleID == value.RoleID) " is 124.
Long Statement,DotNetNuke.Security.Permissions,ModulePermissionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\ModulePermissionCollection.cs,CompareTo,The length of the statement  "                if (objModulePermissionCollection[i].ModulePermissionID != this[i].ModulePermissionID || objModulePermissionCollection[i].AllowAccess != this[i].AllowAccess) " is 157.
Long Statement,DotNetNuke.Security.Permissions,ModulePermissionInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\ModulePermissionInfo.cs,Equals,The length of the statement  "            return (AllowAccess == other.AllowAccess) && (ModuleID == other.ModuleID) && (RoleID == other.RoleID) && (PermissionID == other.PermissionID); " is 142.
Long Statement,DotNetNuke.Security.Permissions,PermissionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionController.cs,AddPermission,The length of the statement  "            EventLogController.Instance.AddLog(permission' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.PERMISSION_CREATED); " is 210.
Long Statement,DotNetNuke.Security.Permissions,PermissionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionController.cs,GetPermissionByCodeAndKey,The length of the statement  "            return new ArrayList(GetPermissions().Where(p => p.PermissionCode.Equals(permissionCode' StringComparison.InvariantCultureIgnoreCase) " is 133.
Long Statement,DotNetNuke.Security.Permissions,PermissionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionController.cs,GetPermissionsByModule,The length of the statement  "            return new ArrayList(GetPermissions().Where(p => p.ModuleDefID == module.ModuleDefID || p.PermissionCode == "SYSTEM_MODULE_DEFINITION").ToArray()); " is 147.
Long Statement,DotNetNuke.Security.Permissions,PermissionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionController.cs,UpdatePermission,The length of the statement  "            EventLogController.Instance.AddLog(permission' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.PERMISSION_UPDATED); " is 210.
Long Statement,DotNetNuke.Security.Permissions,PermissionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionController.cs,BuildPermissions,The length of the statement  "                    //build permissions string ensuring that Deny permissions are inserted at the beginning and Grant permissions at the end " is 120.
Long Statement,DotNetNuke.Security.Permissions,PermissionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionController.cs,RemapPermission,The length of the statement  "            PermissionInfo permissionInfo = GetPermissionByCodeAndKey(permission.PermissionCode' permission.PermissionKey).ToArray().Cast<PermissionInfo>().FirstOrDefault(); " is 161.
Long Statement,DotNetNuke.Security.Permissions,PermissionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionProvider.cs,GetModulePermissions,The length of the statement  "                new CacheItemArgs(cacheKey' DataCache.ModulePermissionCacheTimeOut' DataCache.ModulePermissionCachePriority' tabID)' GetModulePermissionsCallBack); " is 147.
Long Statement,DotNetNuke.Security.Permissions,PermissionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionProvider.cs,GetTabPermissions,The length of the statement  "            return CBO.GetCachedObject<Dictionary<int' TabPermissionCollection>>(new CacheItemArgs(cacheKey' DataCache.TabPermissionCacheTimeOut' DataCache.TabPermissionCachePriority' portalID)' " is 182.
Long Statement,DotNetNuke.Security.Permissions,PermissionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionProvider.cs,GetDesktopModulePermissions,The length of the statement  "                new CacheItemArgs(DataCache.DesktopModulePermissionCacheKey' DataCache.DesktopModulePermissionCachePriority)' GetDesktopModulePermissionsCallBack); " is 147.
Long Statement,DotNetNuke.Security.Permissions,PermissionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionProvider.cs,SaveFolderPermissions,The length of the statement  "                    if (folderPermission.PermissionKey != "BROWSE" && folderPermission.PermissionKey != "READ" && folderPermission.AllowAccess) " is 123.
Long Statement,DotNetNuke.Security.Permissions,PermissionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionProvider.cs,HasModuleAccess,The length of the statement  "                        if (!((moduleConfiguration.IsShared && moduleConfiguration.IsShareableViewOnly) && TabPermissionController.CanAddContentToPage(tab))) " is 133.
Long Statement,DotNetNuke.Security.Permissions,PermissionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionProvider.cs,HasModuleAccess,The length of the statement  "                        if (!((moduleConfiguration.IsShared && moduleConfiguration.IsShareableViewOnly) && TabPermissionController.CanAddContentToPage(tab))) " is 133.
Long Statement,DotNetNuke.Security.Permissions,PermissionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionProvider.cs,SaveModulePermissions,The length of the statement  "                ModulePermissionCollection modulePermissions = ModulePermissionController.GetModulePermissions(module.ModuleID' module.TabID); " is 126.
Long Statement,DotNetNuke.Security.Permissions,PermissionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionProvider.cs,SaveTabPermissions,The length of the statement  "                    EventLogController.Instance.AddLog(tab' portalSettings' userId' ""' EventLogController.EventLogType.TABPERMISSION_DELETED); " is 123.
Long Statement,DotNetNuke.Security.Permissions,PermissionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionProvider.cs,SaveTabPermissions,The length of the statement  "                    EventLogController.Instance.AddLog(tab' portalSettings' userId' ""' EventLogController.EventLogType.TABPERMISSION_CREATED); " is 123.
Long Statement,DotNetNuke.Security.Permissions,PermissionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionProvider.cs,GetDesktopModulePermission,The length of the statement  "            return CBO.FillObject<DesktopModulePermissionInfo>(DataProvider.Instance().GetDesktopModulePermission(desktopModulePermissionId)); " is 130.
Long Statement,DotNetNuke.Security.Permissions,TabPermissionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\TabPermissionCollection.cs,Add,The length of the statement  "                    if (permission.PermissionID == value.PermissionID && permission.UserID == value.UserID && permission.RoleID == value.RoleID) " is 124.
Long Statement,DotNetNuke.Security.Permissions,TabPermissionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\TabPermissionController.cs,DeleteTabPermissionsByUser,The length of the statement  "            EventLogController.Instance.AddLog(user' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.TABPERMISSION_DELETED); " is 207.
Long Statement,DotNetNuke.Security.Permissions,TabPermissionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\TabPermissionController.cs,SaveTabPermissions,The length of the statement  "            EventLogController.Instance.AddLog(tab' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.TABPERMISSION_UPDATED); " is 206.
Long Statement,DotNetNuke.Security.Profile,DNNProfileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Profile\DNNProfileProvider.cs,UpdateUserProfile,The length of the statement  "                    EventLogController.Instance.AddLog(user' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' "USERPROFILE_UPDATED"); " is 175.
Long Statement,DotNetNuke.Security.Roles,DNNRoleProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\DNNRoleProvider.cs,UpdateRoleSettings,The length of the statement  "                    dataProvider.UpdateRoleSetting(role.RoleID' setting.Key' setting.Value' UserController.Instance.GetCurrentUserInfo().UserID); " is 125.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,DeleteUserRoleInternal,The length of the statement  "                    EventLogController.Instance.AddLog(userRole' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.ROLE_UPDATED); " is 202.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,SendNotification,The length of the statement  "                    UserRoleInfo objUserRole = RoleController.Instance.GetUserRole(PortalSettings.PortalId' objUser.UserID' objRole.RoleID); " is 120.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,AddUserRole,The length of the statement  "                EventLogController.Instance.AddLog(userRole' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.USER_ROLE_CREATED); " is 207.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,AddUserRole,The length of the statement  "                EventLogController.Instance.AddLog(userRole' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.USER_ROLE_UPDATED); " is 207.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,GetRoleByName,The length of the statement  "            return GetRoles(portalId).SingleOrDefault(r => roleName.Equals(r.RoleName.Trim()' StringComparison.InvariantCultureIgnoreCase) && r.PortalID == portalId); " is 154.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,GetRoles,The length of the statement  "            return CBO.GetCachedObject<IList<RoleInfo>>(new CacheItemArgs(cacheKey' DataCache.RolesCacheTimeOut' DataCache.RolesCachePriority)' " is 131.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,UpdateUserRole,The length of the statement  "                    EventLogController.Instance.AddLog(userRole' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.USER_ROLE_UPDATED); " is 207.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,UpdateUserRole,The length of the statement  "                    EventLogController.Instance.AddLog(userRole' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.USER_ROLE_UPDATED); " is 207.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,AddUserRole,The length of the statement  "                EventLogController.Instance.AddLog("Role"' role.RoleName' portalSettings' user.UserID' EventLogController.EventLogType.USER_ROLE_CREATED); " is 138.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,AddUserRole,The length of the statement  "                EventLogController.Instance.AddLog("Role"' role.RoleName' portalSettings' user.UserID' EventLogController.EventLogType.USER_ROLE_UPDATED); " is 138.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,CanRemoveUserFromRole,The length of the statement  "            return !((PortalSettings.AdministratorId == UserId && PortalSettings.AdministratorRoleId == RoleId) || PortalSettings.RegisteredRoleId == RoleId); " is 146.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,CanRemoveUserFromRole,The length of the statement  "            return !((PortalInfo.AdministratorId == UserId && PortalInfo.AdministratorRoleId == RoleId) || PortalInfo.RegisteredRoleId == RoleId); " is 134.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,DeleteRoleGroup,The length of the statement  "            EventLogController.Instance.AddLog(objRoleGroupInfo' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.USER_ROLE_DELETED); " is 215.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,UpdateRoleGroup,The length of the statement  "            EventLogController.Instance.AddLog(roleGroup' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.USER_ROLE_UPDATED); " is 208.
Long Statement,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,UpdateRoleGroup,The length of the statement  "                    EventLogController.Instance.AddLog(role' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.ROLE_UPDATED); " is 198.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,GetFolderContent,The length of the statement  "                throw new AssetManagerException(Localization.Localization.GetExceptionMessage("UserHasNoPermissionToBrowseFolder"' UserHasNoPermissionToBrowseFolderDefaultMessage)); " is 165.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,GetFolderContent,The length of the statement  "                folders = GetFolders(folder' sortProperties.Column == "ItemName" ? "FolderName" : sortProperties.Column' sortProperties.Ascending).ToList(); " is 140.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,GetFolders,The length of the statement  "            var folders = FolderManager.Instance.GetFolders(parentFolder).Where(f => HasPermission(f' "BROWSE") || HasPermission(f' "READ")); " is 129.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,RenameFile,The length of the statement  "                throw new AssetManagerException(Localization.Localization.GetExceptionMessage("FileNameInvalid"' FileNameInvalidDefaultMessage' newFileName)); " is 142.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,RenameFile,The length of the statement  "                throw new AssetManagerException(Localization.Localization.GetExceptionMessage("FolderFileNameIsReserved"' FolderFileNameIsReservedDefaultMessage)); " is 147.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,RenameFile,The length of the statement  "                throw new AssetManagerException(Localization.Localization.GetExceptionMessage("UserHasNoPermissionToEditFile"' UserHasNoPermissionToEditFileDefaultMessage)); " is 157.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,RenameFolder,The length of the statement  "                throw new AssetManagerException(Localization.Localization.GetExceptionMessage("FolderFileNameIsReserved"' FolderFileNameIsReservedDefaultMessage)); " is 147.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,RenameFolder,The length of the statement  "                throw new AssetManagerException(Localization.Localization.GetExceptionMessage("UserHasNoPermissionToEditFolder"' UserHasNoPermissionToEditFolderDefaultMessage)); " is 161.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,RenameFolder,The length of the statement  "                throw new AssetManagerException(Localization.Localization.GetExceptionMessage("FolderAlreadyExists"' FolderAlreadyExistsDefultMessage' newFolderName)); " is 151.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,CreateFolder,The length of the statement  "                throw new AssetManagerException(Localization.Localization.GetExceptionMessage("FolderFileNameIsReserved"' FolderFileNameIsReservedDefaultMessage)); " is 147.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,CreateFolder,The length of the statement  "                throw new AssetManagerException(Localization.Localization.GetExceptionMessage("UserHasNoPermissionToAdd"' UserHasNoPermissionToAddDefaultMessage)); " is 147.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,CreateFolder,The length of the statement  "                throw new AssetManagerException(Localization.Localization.GetExceptionMessage("InvalidMappedPath"' InvalidMappedPathDefaultMessage)); " is 133.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,CreateFolder,The length of the statement  "                throw new AssetManagerException(Localization.Localization.GetExceptionMessage("FolderAlreadyExists"' FolderAlreadyExistsDefaultMessage' filterFolderName)); " is 155.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,IsReservedName,The length of the statement  "            var reservedNames = new[] { "CON"' "PRN"' "AUX"' "NUL"' "COM1"' "COM2"' "COM3"' "COM4"' "COM5"' "COM6"' "COM7"' "COM8"' "COM9"' "LPT1"' "LPT2"' "LPT3"' "LPT4"' "LPT5"' "LPT6"' "LPT7"' "LPT8"' "LPT9"' "CLOCK$" }; " is 211.
Long Statement,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,GetFolderInfo,The length of the statement  "                throw new AssetManagerException(Localization.Localization.GetExceptionMessage("FolderDoesNotExists"' DefaultMessageDefaultMessage)); " is 132.
Long Statement,DotNetNuke.Services.Authentication,AuthenticationController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\AuthenticationController.cs,AddAuthentication,The length of the statement  "            EventLogController.Instance.AddLog(authSystem' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.AUTHENTICATION_CREATED); " is 214.
Long Statement,DotNetNuke.Services.Authentication,AuthenticationController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\AuthenticationController.cs,AddUserAuthentication,The length of the statement  "                return provider.AddUserAuthentication(userID' authenticationType' authenticationToken' UserController.Instance.GetCurrentUserInfo().UserID); " is 140.
Long Statement,DotNetNuke.Services.Authentication,AuthenticationController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\AuthenticationController.cs,DeleteAuthentication,The length of the statement  "            EventLogController.Instance.AddLog(authSystem' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.AUTHENTICATION_DELETED); " is 214.
Long Statement,DotNetNuke.Services.Authentication,AuthenticationController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\AuthenticationController.cs,GetAuthenticationServices,The length of the statement  "                    new CacheItemArgs(DataCache.AuthenticationServicesCacheKey' DataCache.AuthenticationServicesCacheTimeOut' DataCache.AuthenticationServicesCachePriority)' " is 153.
Long Statement,DotNetNuke.Services.Authentication,AuthenticationController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\AuthenticationController.cs,HasSocialAuthenticationEnabled,The length of the statement  "                                  : !string.IsNullOrEmpty(a.LoginControlSrc) && ((control?.LoadControl("~/" + a.LoginControlSrc) as AuthenticationLoginBase)?.Enabled ?? true) " is 140.
Long Statement,DotNetNuke.Services.Authentication,AuthenticationController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\AuthenticationController.cs,IsEnabledForPortal,The length of the statement  "            return !string.IsNullOrEmpty(PortalController.GetPortalSetting(authentication.AuthenticationType + "_Enabled"' portalId' "")) " is 125.
Long Statement,DotNetNuke.Services.Authentication,AuthenticationController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\AuthenticationController.cs,GetLogoffRedirectURL,The length of the statement  "                        _RedirectURL = (request != null && request.UrlReferrer != null) ? request.UrlReferrer.PathAndQuery : TestableGlobals.Instance.NavigateURL(settings.ActiveTab.TabID); " is 164.
Long Statement,DotNetNuke.Services.Authentication,AuthenticationController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\AuthenticationController.cs,GetLogoffRedirectURL,The length of the statement  "                    _RedirectURL = TestableGlobals.Instance.GetPortalDomainName(settings.PortalAlias.HTTPAlias' request' true) + "/" + Globals.glbDefaultPage; " is 138.
Long Statement,DotNetNuke.Services.Authentication,AuthenticationController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\AuthenticationController.cs,SetAuthenticationType,The length of the statement  "                        cookie = new HttpCookie("authentication"' value) { Path = (!string.IsNullOrEmpty(Globals.ApplicationPath) ? Globals.ApplicationPath : "/") }; " is 141.
Long Statement,DotNetNuke.Services.Authentication,AuthenticationController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\AuthenticationController.cs,UpdateAuthentication,The length of the statement  "            EventLogController.Instance.AddLog(authSystem' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.AUTHENTICATION_UPDATED); " is 214.
Long Statement,DotNetNuke.Services.Authentication,AuthenticationLoginBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\AuthenticationLoginBase.cs,GetIPAddress,The length of the statement  "            return UserRequestIPAddressController.Instance.GetUserRequestIPAddress(new HttpRequestWrapper(HttpContext.Current.Request));                         " is 124.
Long Statement,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,ExecuteWebRequest,The length of the statement  "					//Authentication providers needing an "Authorization: Basic/bearer base64(clientID:clientSecret)" header. OAuthHeaderCode might be: Basic/Bearer/empty. " is 151.
Long Statement,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,RequestToken,The length of the statement  "            string ret = ExecuteWebRequest(RequestTokenMethod' new Uri(outUrl)' String.Empty' headerParameters.ToAuthorizationString()); " is 124.
Long Statement,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,SaveTokenCookie,The length of the statement  "            var authTokenCookie = new HttpCookie(AuthTokenName + suffix) { Path = (!string.IsNullOrEmpty(Globals.ApplicationPath) ? Globals.ApplicationPath : "/") }; " is 153.
Long Statement,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,AuthenticateUser,The length of the statement  "            if (objUserInfo == null || (string.IsNullOrEmpty(objUserInfo.Profile.GetPropertyValue("ProfileImage")) && !string.IsNullOrEmpty(user.ProfileImage))) " is 148.
Long Statement,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,AuthenticateUser,The length of the statement  "            if (objUserInfo == null || (string.IsNullOrEmpty(objUserInfo.Profile.GetPropertyValue("Website")) && !string.IsNullOrEmpty(user.Website))) " is 138.
Long Statement,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,AuthenticateUser,The length of the statement  "            if ((objUserInfo == null || (string.IsNullOrEmpty(objUserInfo.Profile.GetPropertyValue("PreferredLocale")))) && !string.IsNullOrEmpty(user.Locale)) " is 147.
Long Statement,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,GenerateSignature,The length of the statement  "            string signatureBase = GenerateSignatureBase(url' token' callbackurl' oauthVerifier' httpMethod' timeStamp' nonce' out normalizedUrl' out requestParameters); " is 157.
Long Statement,DotNetNuke.Services.Authentication.OAuth,OAuthConfigBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthConfigBase.cs,UpdateConfig,The length of the statement  "                HostController.Instance.Update(config.Service + "_Enabled"' config.Enabled.ToString(CultureInfo.InvariantCulture)' true); " is 121.
Long Statement,DotNetNuke.Services.Authentication.OAuth,OAuthConfigBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthConfigBase.cs,UpdateConfig,The length of the statement  "                PortalController.UpdatePortalSetting(config.PortalID' config.Service + "_Enabled"' config.Enabled.ToString(CultureInfo.InvariantCulture)); " is 138.
Long Statement,DotNetNuke.Services.ClientDependency,PurgeClientDependencyFiles,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ClientDependency\PurgeClientDependencyFiles.cs,DoWork,The length of the statement  "                string[] filePaths = Directory.GetFiles(string.Format("{0}/App_Data/ClientDependency"' Common.Globals.ApplicationMapPath)); " is 123.
Long Statement,DotNetNuke.Services.Exceptions,ErrorContainer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\ErrorContainer.cs,FormatException,The length of the statement  "            m = UI.Skins.Skin.GetModuleMessageControl(Localization.Localization.GetString("ErrorOccurred")' strError' ModuleMessage.ModuleMessageType.RedError); " is 148.
Long Statement,DotNetNuke.Services.Exceptions,ErrorContainer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\ErrorContainer.cs,FormatException,The length of the statement  "                m = UI.Skins.Skin.GetModuleMessageControl(strError' HttpUtility.HtmlEncode(exc.ToString())' ModuleMessage.ModuleMessageType.RedError); " is 134.
Long Statement,DotNetNuke.Services.Exceptions,ErrorContainer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\ErrorContainer.cs,FormatException,The length of the statement  "                m = UI.Skins.Skin.GetModuleMessageControl(Localization.Localization.GetString("ErrorOccurred")' strError' ModuleMessage.ModuleMessageType.RedError); " is 148.
Long Statement,DotNetNuke.Services.Exceptions,ExceptionInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\ExceptionInfo.cs,ReadXml,The length of the statement  "			} while (reader.ReadState != ReadState.EndOfFile && reader.NodeType != XmlNodeType.None && !String.IsNullOrEmpty(reader.LocalName)); " is 132.
Long Statement,DotNetNuke.Services.Exceptions,ExceptionInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\ExceptionInfo.cs,ToString,The length of the statement  "			str.Append("<p><strong>StackTrace:</strong><pre>" + WebUtility.HtmlEncode(StackTrace)?.Replace(") at "' ")<br/>at ") + "</pre></p>"); " is 133.
Long Statement,DotNetNuke.Services.Exceptions,ExceptionInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\ExceptionInfo.cs,ToString,The length of the statement  "			str.Append("<p><strong>InnerStackTrace:</strong><pre>" + WebUtility.HtmlEncode(InnerStackTrace)?.Replace(") at "'")<br/>at ") + "</pre></p>"); " is 142.
Long Statement,DotNetNuke.Services.Exceptions,Exceptions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\Exceptions.cs,ProcessHttpException,The length of the statement  "            var notFoundErrorString = Localization.Localization.GetString("ResourceNotFound"' Localization.Localization.SharedResourceFile); " is 128.
Long Statement,DotNetNuke.Services.Exceptions,Exceptions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\Exceptions.cs,ProcessHttpException,The length of the statement  "            var notFoundErrorString = Localization.Localization.GetString("ResourceNotFound"' Localization.Localization.SharedResourceFile); " is 128.
Long Statement,DotNetNuke.Services.Exceptions,Exceptions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\Exceptions.cs,ProcessHttpException,The length of the statement  "            var notFoundErrorString = Localization.Localization.GetString("ResourceNotFound"' Localization.Localization.SharedResourceFile); " is 128.
Long Statement,DotNetNuke.Services.Exceptions,Exceptions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\Exceptions.cs,ProcessHttpException,The length of the statement  "            var notFoundErrorString = Localization.Localization.GetString("ResourceNotFound"' Localization.Localization.SharedResourceFile); " is 128.
Long Statement,DotNetNuke.Services.Exceptions,Exceptions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\Exceptions.cs,ProcessModuleLoadException,The length of the statement  "                        friendlyMessageOverride = string.Concat(exc.Message' " in "' httpParseError.VirtualPath' ":line "' httpParseError.Line); " is 120.
Long Statement,DotNetNuke.Services.FileSystem,FileLinkClickController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileLinkClickController.cs,GetFileLinkClick,The length of the statement  "            return TestableGlobals.Instance.LinkClick(String.Format("fileid={0}"' file.FileId)' Null.NullInteger' Null.NullInteger' true' false' portalId' linkClickPortalSettigns.EnableUrlLanguage' linkClickPortalSettigns.PortalGUID); " is 222.
Long Statement,DotNetNuke.Services.FileSystem,FileUrlHelper,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileUrlHelper.cs,IsLinkClickURLFormat,The length of the statement  "            if (requestPath.EndsWith(@"/LinkClick.aspx"' StringComparison.OrdinalIgnoreCase) && requestQueryString["fileticket"] != null) " is 125.
Long Statement,DotNetNuke.Services.FileSystem,FileVersionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileVersionController.cs,SetPublishedVersion,The length of the statement  "                    new FileInfo { FileName = GetVersionedFilename(file' newPublishedVersion)' Folder = file.Folder' FolderId = file.FolderId' FolderMappingID = folderMapping.FolderMappingID' PortalId = folderMapping.PortalID }'  " is 208.
Long Statement,DotNetNuke.Services.FileSystem,FileVersionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileVersionController.cs,DeleteFileVersion,The length of the statement  "                folderProvider.DeleteFile(new FileInfo { FileId = file.FileId' FileName = file.FileName' Folder = file.Folder' FolderMappingID = folderMapping.FolderMappingID' PortalId = folderMapping.PortalID' FolderId = file.FolderId }); " is 223.
Long Statement,DotNetNuke.Services.FileSystem,FileVersionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileVersionController.cs,DeleteFileVersion,The length of the statement  "                    new FileInfo { FileId = file.FileId' FileName = GetVersionedFilename(file' newVersion)' Folder = file.Folder' FolderId = file.FolderId' FolderMappingID = folderMapping.FolderMappingID' PortalId = folderMapping.PortalID }'  " is 221.
Long Statement,DotNetNuke.Services.FileSystem,FileVersionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileVersionController.cs,DeleteFileVersion,The length of the statement  "                folderProvider.DeleteFile(new FileInfo { FileName = GetVersionedFilename(file' version)' Folder = file.Folder' FolderMappingID = folderMapping.FolderMappingID' PortalId = folderMapping.PortalID' FolderId = file.FolderId });                 " is 223.
Long Statement,DotNetNuke.Services.FileSystem,FileVersionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileVersionController.cs,DeleteAllUnpublishedVersions,The length of the statement  "                folderProvider.DeleteFile(new FileInfo { FileName = version.FileName' Folder = file.Folder' FolderMappingID = folderMapping.FolderMappingID' PortalId = folderMapping.PortalID' FolderId = file.FolderId }); " is 204.
Long Statement,DotNetNuke.Services.FileSystem,FolderMappingsConfigController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderMappings\FolderMappingsConfigController.cs,FillFolderMappings,The length of the statement  "                FolderMappings.Add(XmlUtils.GetNodeValue(folderMappingNode' "folderPath")' XmlUtils.GetNodeValue(folderMappingNode' "folderTypeName")); " is 135.
Long Statement,DotNetNuke.Services.FileSystem,DatabaseFolderProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\Providers\DatabaseFolderProvider.cs,GetFileStream,The length of the statement  "            return file != null ? GetFileStreamInternal(DataProvider.Instance().GetFileVersionContent(file.FileId' version)) : null; " is 120.
Long Statement,DotNetNuke.Services.FileSystem,FileInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileInfo.cs,LoadHashProperty,The length of the statement  "            var currentHashCode = FolderProvider.Instance( FolderMappingController.Instance.GetFolderMapping(FolderMappingID).FolderProviderType).GetHashCode(this); " is 152.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,AddFileToFolderProvider,The length of the statement  "                throw new FolderProviderException(Localization.Localization.GetExceptionMessage("UnderlyingSystemError"' "The underlying system threw an exception.")' ex); " is 155.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,DeleteFileFromFolderProvider,The length of the statement  "                throw new FolderProviderException(Localization.Localization.GetExceptionMessage("UnderlyingSystemError"' "The underlying system threw an exception.")' ex); " is 155.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,AddFile,The length of the statement  "            return AddFile(folder' fileName' fileContent' true' false' false' GetContentType(Path.GetExtension(fileName))' GetCurrentUserID()); " is 131.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,AddFile,The length of the statement  "            return AddFile(folder' fileName' fileContent' overwrite' false' false' GetContentType(Path.GetExtension(fileName))' GetCurrentUserID()); " is 136.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,AddFile,The length of the statement  "                log.LogProperties.Add(new LogDetailInfo("Following file was imported/uploaded' but is not an authorized filetype: "' fileName)); " is 128.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,AddFile,The length of the statement  "                        if (folderWorkflow.WorkflowID == SystemWorkflowManager.Instance.GetDirectPublishWorkflow(folderWorkflow.PortalID).WorkflowID) " is 125.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,AddFile,The length of the statement  "					//add file into database after file saved into folder provider for remote folder providers to avoid multiple thread issue. " is 122.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,NotifyFileAddingEvents,The length of the statement  "                (folderWorkflow == null || folderWorkflow.WorkflowID == SystemWorkflowManager.Instance.GetDirectPublishWorkflow(folderWorkflow.PortalID).WorkflowID)) " is 149.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,CheckFileWritingRestrictions,The length of the statement  "            if (oldFile != null && FileLockingController.Instance.IsFileOutOfPublishPeriod(oldFile' folder.PortalID' createdByUserId)) " is 122.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,CopyFile,The length of the statement  "                    throw new PermissionsNotMetException(Localization.Localization.GetExceptionMessage("CopyFilePermissionsNotMet"' "Permissions are not met. The file has not been copied.")); " is 171.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,CopyFile,The length of the statement  "                    throw new NoSpaceAvailableException(Localization.Localization.GetExceptionMessage("CopyFileNoSpaceAvailable"' "The portal has no space available to store the specified file. The file has not been copied.")); " is 207.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,CopyFile,The length of the statement  "                    FolderProvider.Instance(folderMapping.FolderProviderType).CopyFile(folder.MappedPath' file.FileName' destinationFolder.MappedPath' folderMapping); " is 146.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,CopyFile,The length of the statement  "                    throw new FolderProviderException(Localization.Localization.GetExceptionMessage("CopyFileUnderlyingSystemError"' "The underlying system throw an exception. The file has not been copied.")' ex); " is 193.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,FileExists,The length of the statement  "                throw new FolderProviderException(Localization.Localization.GetExceptionMessage("UnderlyingSystemError"' "The underlying system threw an exception.")' ex); " is 155.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,GetFile,The length of the statement  "            return CBO.Instance.FillObject<FileInfo>(DataProvider.Instance().GetFile(fileName' folder.FolderID' retrieveUnpublishedFiles)); " is 127.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,GetFileContent,The length of the statement  "                    throw new FolderProviderException(Localization.Localization.GetExceptionMessage("UnderlyingSystemError"' "The underlying system threw an exception")' ex); " is 154.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,GetUrl,The length of the statement  "                throw new FolderProviderException(Localization.Localization.GetExceptionMessage("UnderlyingSystemError"' "The underlying system threw an exception.")' ex); " is 155.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,MoveFile,The length of the statement  "                throw new FileLockedException(Localization.Localization.GetExceptionMessage(lockReason' "File locked. The file cannot be updated. Reason: " + lockReason)); " is 155.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,MoveFile,The length of the statement  "            var destinationFolderMapping = FolderMappingController.Instance.GetFolderMapping(destinationFolder.PortalID' destinationFolder.FolderMappingID); " is 144.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,MoveFile,The length of the statement  "            if (destinationFolderMapping.FolderMappingID == sourceFolderMapping.FolderMappingID && destinationFolderProvider.SupportsMoveFile) " is 130.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,RenameFile,The length of the statement  "                throw new InvalidFileExtensionException(string.Format(Localization.Localization.GetExceptionMessage("AddFileExtensionNotAllowed"' "The extension '{0}' is not allowed. The file has not been added.")' Path.GetExtension(newFileName))); " is 232.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,RenameFile,The length of the statement  "                throw new InvalidFilenameException(string.Format(Localization.Localization.GetExceptionMessage("AddFilenameNotAllowed"' "The file name '{0}' is not allowed. The file has not been added.")' newFileName)); " is 203.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,RenameFile,The length of the statement  "                throw new FileAlreadyExistsException(Localization.Localization.GetExceptionMessage("RenameFileAlreadyExists"' "This folder already contains a file with the same name. The file has not been renamed.")); " is 201.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,RenameFile,The length of the statement  "                throw new FolderProviderException(Localization.Localization.GetExceptionMessage("RenameFileUnderlyingSystemError"' "The underlying system threw an exception. The file has not been renamed.")' ex); " is 196.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,SetAttributes,The length of the statement  "                throw new FolderProviderException(Localization.Localization.GetExceptionMessage("UnderlyingSystemError"' "The underlying system threw an exception.")' ex); " is 155.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,UnzipFile,The length of the statement  "                throw new ArgumentException(Localization.Localization.GetExceptionMessage("InvalidZipFile"' "The file specified is not a zip compressed file.")); " is 145.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,UpdateFile,The length of the statement  "                file.SHA1Hash = FolderProvider.Instance(FolderMappingController.Instance.GetFolderMapping(file.FolderMappingID).FolderProviderType).GetHashCode(file' fileContent); " is 163.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,WriteFileToResponse,The length of the statement  "                throw new PermissionsNotMetException(Localization.Localization.GetExceptionMessage("WriteFileToResponsePermissionsNotMet"' "Permissions are not met. The file cannot be downloaded.")); " is 183.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,CreateFileContentItem,The length of the statement  "            var contentTypeFile = (from t in typeController.GetContentTypes() where t.ContentType == "File" select t).SingleOrDefault(); " is 124.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,UpdateWhileApproving,The length of the statement  "            var isDatabaseMapping = FolderMappingController.Instance.GetFolderMapping(folder.PortalID' folder.FolderMappingID).MappingName == "Database"; " is 141.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,UpdateWhileApproving,The length of the statement  "                return isDatabaseMapping ? FileVersionController.Instance.AddFileVersion(file' createdByUserID' false' false' content) : FileVersionController.Instance.AddFileVersion(file' createdByUserID' false); " is 197.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,UpdateWhileApproving,The length of the statement  "                    FileVersionController.Instance.DeleteFileVersion(file' versions.OrderByDescending(f => f.Version).FirstOrDefault().Version); " is 124.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,UpdateWhileApproving,The length of the statement  "                return isDatabaseMapping ? FileVersionController.Instance.AddFileVersion(file' createdByUserID' false' false' content) : FileVersionController.Instance.AddFileVersion(file' createdByUserID' false); " is 197.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,EnsureZipFolder,The length of the statement  "            var folderMapping = folderMappingController.GetFolderMapping(destinationFolder.PortalID' destinationFolder.FolderMappingID); " is 124.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,EnsureZipFolder,The length of the statement  "                        folderManager.AddFolder(folderMappingController.GetFolderMapping(parentFolder.PortalID' parentFolder.FolderMappingID)' newFolderPath); " is 134.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,GetAutoDeleteFileStream,The length of the statement  "            return new FileStream(filePath' FileMode.Create' FileAccess.ReadWrite' FileShare.Read' BufferSize' FileOptions.DeleteOnClose); " is 126.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,GetHash,The length of the statement  "            return FolderProvider.Instance(FolderMappingController.Instance.GetFolderMapping(fileInfo.FolderMappingID).FolderProviderType).GetHashCode(fileInfo); " is 149.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,ValidMetadata,The length of the statement  "                exceptionMessage = Localization.Localization.GetExceptionMessage("MaxLengthExceeded"' "The maximum length of the field {0} has been exceeded"' DefaultMetadataNames.Title); " is 171.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,ValidMetadata,The length of the statement  "                exceptionMessage = Localization.Localization.GetExceptionMessage("StartDateMustNotBeInThePast"' "The Start Date must not be in the past"); " is 138.
Long Statement,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,ValidMetadata,The length of the statement  "                exceptionMessage = Localization.Localization.GetExceptionMessage("InvalidPublishPeriod"' "The End Date must be after the Start Date"); " is 134.
Long Statement,DotNetNuke.Services.FileSystem,FileServerHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileServerHandler.cs,ProcessRequest,The length of the statement  "                                    if (directUrl.Contains("LinkClick") || (blnForceDownload && folderMapping.FolderProviderType == "StandardFolderProvider")) " is 122.
Long Statement,DotNetNuke.Services.FileSystem,FileServerHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileServerHandler.cs,ProcessRequest,The length of the statement  "                                catch (ThreadAbortException) //if call fileManager.WriteFileToResponse ThreadAbortException will shown' should catch it and do nothing. " is 135.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetOnlyUnmap,The length of the statement  "            return (FolderProvider.Instance(FolderMappingController.Instance.GetFolderMapping(folder.FolderMappingID).FolderProviderType).SupportsMappedPaths && " is 148.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetParentFolder,The length of the statement  "                var parentFolderPath = folderPath.Substring(0' folderPath.Substring(0' folderPath.Length - 1).LastIndexOf("/"' StringComparison.Ordinal) + 1); " is 142.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,AddFolder,The length of the statement  "                throw new FolderAlreadyExistsException(Localization.Localization.GetExceptionMessage("AddFolderAlreadyExists"' "The provided folder path already exists. The folder has not been added.")); " is 187.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,AddFolder,The length of the statement  "                    mappedPath = String.IsNullOrEmpty(parentFolder.FolderPath) ? PathUtils.Instance.FormatFolderPath(parentFolder.MappedPath + folderPath) " is 134.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,AddFolder,The length of the statement  "                                                                            : PathUtils.Instance.FormatFolderPath(parentFolder.MappedPath + folderPath.Replace(parentFolder.FolderPath' string.Empty)); " is 123.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,AddFolder,The length of the statement  "                throw new FolderProviderException(Localization.Localization.GetExceptionMessage("AddFolderUnderlyingSystemError"' "The underlying system threw an exception. The folder has not been added.")' ex); " is 195.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,AddFolder,The length of the statement  "            var parentFolderPath = folderPath.Substring(0' folderPath.Substring(0' folderPath.Length - 1).LastIndexOf("/"' StringComparison.Ordinal) + 1); " is 142.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFiles,The length of the statement  "            return CBO.Instance.FillCollection<FileInfo>(DataProvider.Instance().GetFiles(folder.FolderID' retrieveUnpublishedFiles' recursive)); " is 133.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFileSystemFolders,The length of the statement  "            var folders = GetFolders(portalId' permissions' user.UserID).Where(f => f.FolderPath != null && f.FolderMappingID == defaultFolderMaping.FolderMappingID); " is 154.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFileSystemFolders,The length of the statement  "                    else if (!folder.FolderPath.StartsWith(userFolder.FolderPath' StringComparison.InvariantCultureIgnoreCase)) //Allow UserFolder children " is 135.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFolder,The length of the statement  "                folder = folders.SingleOrDefault(f => f.FolderID == folderId) ?? CBO.Instance.FillObject<FolderInfo>(DataProvider.Instance().GetFolder(folderId)); " is 146.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFolder,The length of the statement  "            return folders.SingleOrDefault(f => f.FolderPath == folderPath) ?? CBO.Instance.FillObject<FolderInfo>(DataProvider.Instance().GetFolder(portalId' folderPath)); " is 160.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFolders,The length of the statement  "            CBO.Instance.GetCachedObject<List<FolderInfo>>(new CacheItemArgs(cacheKey' DataCache.FolderCacheTimeOut' DataCache.FolderCachePriority' portalId)' GetFoldersSortedCallBack' false).ForEach(folders.Add); " is 201.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFolders,The length of the statement  "            var cacheItemArgs = new CacheItemArgs(cacheKey' DataCache.FolderUserCacheTimeOut' DataCache.FolderUserCachePriority' portalId' permissions' userId); " is 148.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFolders,The length of the statement  "            CBO.Instance.GetCachedObject<List<FolderInfo>>(cacheItemArgs' GetFoldersByPermissionSortedCallBack' false).ForEach(folders.Add); " is 128.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFolders,The length of the statement  "                    else if (!folder.FolderPath.StartsWith(userFolder.FolderPath' StringComparison.InvariantCultureIgnoreCase)) //Allow UserFolder children " is 135.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,MoveFolder,The length of the statement  "                    "The folder with name '{0}' cannot be moved. A folder with that name already exists under the folder '{1}'."' folder.FolderName' destinationFolder.FolderName))); " is 161.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,MoveFolder,The length of the statement  "            var destinationFolderMapping = FolderMappingController.Instance.GetFolderMapping(destinationFolder.PortalID' destinationFolder.FolderMappingID); " is 144.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,MoveFolder,The length of the statement  "                    "The folder with name '{0}' cannot be moved. Move Folder operation between this two folder types is not allowed"' folder.FolderName))); " is 135.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,MoveFolder,The length of the statement  "                throw new InvalidOperationException(Localization.Localization.GetExceptionMessage("MoveFolderCannotComplete"' "The operation cannot be completed.")); " is 149.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,MoveFolder,The length of the statement  "            if ((folder.FolderMappingID == destinationFolder.FolderMappingID && FolderProvider.Instance(folderMapping.FolderProviderType).SupportsMoveFolder) || " is 148.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,MoveFolder,The length of the statement  "            log.AddProperty("Home Directory"' folder.PortalID == Null.NullInteger ? Globals.HostPath : PortalSettings.Current.HomeDirectory); " is 129.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,RenameFolder,The length of the statement  "            var newFolderPath = folder.FolderPath.Substring(0' folder.FolderPath.LastIndexOf(folder.FolderName' StringComparison.Ordinal)) + PathUtils.Instance.FormatFolderPath(newFolderName); " is 180.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,RenameFolder,The length of the statement  "                throw new FolderAlreadyExistsException(Localization.Localization.GetExceptionMessage("RenameFolderAlreadyExists"' "The destination folder already exists. The folder has not been renamed.")); " is 190.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,Synchronize,The length of the statement  "                throw new NoNetworkAvailableException(Localization.Localization.GetExceptionMessage("NoNetworkAvailableError"' "Network connectivity is needed but there is no network available.")); " is 181.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,Synchronize,The length of the statement  "                    // Synchronization could be a time-consuming process. To not get a time-out' we need to modify the request time-out value " is 121.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,CopyParentFolderPermissions,The length of the statement  "            var parentFolderPath = folder.FolderPath.Substring(0' folder.FolderPath.Substring(0' folder.FolderPath.Length - 1).LastIndexOf("/"' StringComparison.Ordinal) + 1); " is 163.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFolderPermissionsFromSyncData,The length of the statement  "                SyncFoldersData[threadId] = new SyncFolderData {PortalId = portalId' FolderPath = relativePath' Permissions = permissions}; " is 123.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFolderPermissionsFromSyncData,The length of the statement  "            SyncFoldersData.Add(threadId' new SyncFolderData{ PortalId = portalId' FolderPath = relativePath' Permissions = permissions}); " is 126.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,SetFolderPermission,The length of the statement  "                .Any(fpi => fpi.FolderID == folder.FolderID && fpi.PermissionID == permissionId && fpi.RoleID == roleId && fpi.UserID == userId && fpi.AllowAccess)) " is 148.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,AddLogEntry,The length of the statement  "            EventLogController.Instance.AddLog(folder' PortalController.Instance.GetCurrentPortalSettings()' GetCurrentUserId()' ""' eventLogType); " is 135.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,AddLogEntry,The length of the statement  "            EventLogController.Instance.AddLog(propertyName' propertyValue' PortalController.Instance.GetCurrentPortalSettings()' GetCurrentUserId()' eventLogType); " is 152.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,AddUserFolder,The length of the statement  "            var folderMapping = FolderMappingsConfigController.Instance.GetFolderMapping(portalId' DefaultUsersFoldersPath) ?? FolderMappingController.Instance.GetDefaultFolderMapping(portalId); " is 182.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,AddUserFolder,The length of the statement  "            folderPath = PathUtils.Instance.FormatFolderPath(String.Concat(folderPath' PathUtils.Instance.GetUserFolderPathElement(user.UserID' PathUtils.UserFolderElement.SubFolder))); " is 173.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,AddUserFolder,The length of the statement  "            folderPath = PathUtils.Instance.FormatFolderPath(String.Concat(folderPath' user.UserID.ToString(CultureInfo.InvariantCulture))); " is 128.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,AddUserFolder,The length of the statement  "                    if (permission.PermissionKey.Equals("READ"' StringComparison.InvariantCultureIgnoreCase) || permission.PermissionKey.Equals("WRITE"' StringComparison.InvariantCultureIgnoreCase) || permission.PermissionKey.Equals("BROWSE"' StringComparison.InvariantCultureIgnoreCase)) " is 268.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,AreThereFolderMappingsRequiringNetworkConnectivity,The length of the statement  "                var folderMappingsRequiringNetworkConnectivity = from fm in FolderMappingController.Instance.GetFolderMappings(portalId) " is 120.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,ClearFolderProviderCachedLists,The length of the statement  "                if (folderMapping.MappingName != "Standard" && folderMapping.MappingName != "Secure" && folderMapping.MappingName != "Database") " is 128.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFileSystemFolders,The length of the statement  "                if (((FileWrapper.Instance.GetAttributes(physicalPath) & FileAttributes.Hidden) == FileAttributes.Hidden || physicalPath.StartsWith("_")) && hideFoldersEnabled) " is 160.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFileSystemFoldersRecursive,The length of the statement  "                        if (((FileWrapper.Instance.GetAttributes(dn) & FileAttributes.Hidden) == FileAttributes.Hidden || dn.StartsWith("_")) && hideFoldersEnabled) " is 140.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFoldersByPermissionSortedCallBack,The length of the statement  "            return CBO.Instance.FillCollection<FolderInfo>(DataProvider.Instance().GetFoldersByPortalAndPermissions(portalId' permissions' userId)); " is 136.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetMergedTree,The length of the statement  "                if (folderMapping.MappingName != "Standard" && folderMapping.MappingName != "Secure" && folderMapping.MappingName != "Database") " is 128.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetMergedTree,The length of the statement  "                    mergedItem.ExistsInFolderMapping = folderMapping.MappingName == "Database" ? mergedItem.ExistsInDatabase : mergedItem.ExistsInFileSystem; " is 137.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,IsMoveOperationValid,The length of the statement  "            var folderMapping = FolderMappingController.Instance.GetFolderMapping(folderToMove.PortalID' folderToMove.FolderMappingID); " is 123.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,IsMoveOperationValid,The length of the statement  "            if (folderToMove.FolderMappingID == destinationFolder.FolderMappingID && FolderProvider.Instance(folderMapping.FolderProviderType).SupportsMappedPaths) " is 151.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,MoveFolderBetweenProviders,The length of the statement  "            var folderInfos = GetFolders(folder.PortalID).Where(f => f.FolderPath != string.Empty && f.FolderPath.StartsWith(folder.FolderPath)).ToArray(); " is 143.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,InitialiseSyncFoldersData,The length of the statement  "                    SyncFoldersData[threadId] = new SyncFolderData { PortalId = portalId' FolderPath = relativePath' Permissions = permissions }; " is 125.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,InitialiseSyncFoldersData,The length of the statement  "                SyncFoldersData.Add(threadId' new SyncFolderData{ PortalId = portalId' FolderPath = relativePath' Permissions = permissions});                 " is 126.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,SynchronizeFiles,The length of the statement  "                    files = files.Except(FileVersionController.Instance.GetFileVersionsInFolder(folder.FolderID).Select(f => f.FileName)).ToArray(); " is 128.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,UpdateParentFolder,The length of the statement  "                var parentFolderPath = folderPath.Substring(0' folderPath.Substring(0' folderPath.Length - 1).LastIndexOf("/"' StringComparison.Ordinal) + 1); " is 142.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,UpdateChildFolders,The length of the statement  "            var folderInfos = GetFolders(folder.PortalID).Where(f => f.FolderPath != string.Empty && f.FolderPath.StartsWith(originalFolderPath)).ToArray(); " is 144.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,UpdateChildFolders,The length of the statement  "                var folderPath = newFolderPath + (newFolderPath.EndsWith("/") ? "" : "/") + folderInfo.FolderPath.Substring(originalFolderPath.Length); " is 135.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,UpdateChildFolders,The length of the statement  "                var parentProvider = FolderProvider.Instance(FolderMappingController.Instance.GetFolderMapping(parentFolder.PortalID' parentFolder.FolderMappingID).FolderProviderType); " is 168.
Long Statement,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,UpdateChildFolders,The length of the statement  "                        folderInfo.MappedPath.Substring(0' folderInfo.MappedPath.LastIndexOf("/" + originalFolderPath' StringComparison.Ordinal)) + "/" + folderPath); " is 142.
Long Statement,DotNetNuke.Services.FileSystem,FolderMappingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderMappings\FolderMappingController.cs,DeleteFolderMapping,The length of the statement  "                foreach (var file in folderMappingFolders.Select<IFolderInfo' IEnumerable<IFileInfo>>(folderManager.GetFiles).SelectMany(files => files)) " is 137.
Long Statement,DotNetNuke.Services.FileSystem,FolderMappingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderMappings\FolderMappingController.cs,DeleteFolderMapping,The length of the statement  "                // Remove the folders with the provided mapping that doesn't have child folders with other mapping (only in the database and filesystem) " is 136.
Long Statement,DotNetNuke.Services.FileSystem,FolderMappingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderMappings\FolderMappingController.cs,DeleteFolderMapping,The length of the statement  "                var removableFolders = folders.Where(f => f.FolderMappingID == folderMappingID && !folders1.Any(f2 => f2.FolderID != f.FolderID && " is 130.
Long Statement,DotNetNuke.Services.FileSystem,FolderMappingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderMappings\FolderMappingController.cs,UpdateFolderMappingSettings,The length of the statement  "                UpdateFolderMappingSetting(objFolderMapping.FolderMappingID' sKey' Convert.ToString(objFolderMapping.FolderMappingSettings[sKey])); " is 131.
Long Statement,DotNetNuke.Services.FileSystem,FolderMappingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderMappings\FolderMappingController.cs,UpdateFolderMappingSetting,The length of the statement  "                    dataProvider.UpdateFolderMappingSetting(folderMappingID' settingName' settingValue' UserController.Instance.GetCurrentUserInfo().UserID); " is 137.
Long Statement,DotNetNuke.Services.FileSystem,FolderMappingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderMappings\FolderMappingController.cs,UpdateFolderMappingSetting,The length of the statement  "                    dataProvider.AddFolderMappingSetting(folderMappingID' settingName' settingValue' UserController.Instance.GetCurrentUserInfo().UserID); " is 134.
Long Statement,DotNetNuke.Services.FileSystem,FolderProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderProvider.cs,AddFolderAndMoveFiles,The length of the statement  "            var folder = new FolderInfo { FolderPath = folderPath' FolderMappingID = folderMapping.FolderMappingID' PortalID = folderMapping.PortalID }; " is 140.
Long Statement,DotNetNuke.Services.FileSystem,FolderProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderProvider.cs,AddFolderAndMoveFiles,The length of the statement  "            var newFolder = new FolderInfo { FolderPath = newFolderPath' FolderMappingID = folderMapping.FolderMappingID' PortalID = folderMapping.PortalID }; " is 146.
Long Statement,DotNetNuke.Services.FileSystem,FolderProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderProvider.cs,MoveFiles,The length of the statement  "                folderProvider.DeleteFile(new FileInfo { FileName = file' Folder = folder.FolderPath' FolderMappingID = folderMapping.FolderMappingID' PortalId = folderMapping.PortalID }); " is 172.
Long Statement,DotNetNuke.Services.FileSystem,FolderProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderProvider.cs,MoveFolder,The length of the statement  "                folderProvider.DeleteFolder(new FolderInfo { FolderPath = subFolderPath' FolderMappingID = folderMapping.FolderMappingID' PortalID = folderMapping.PortalID }); " is 159.
Long Statement,DotNetNuke.Services.FileSystem,FolderProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderProvider.cs,MoveFolder,The length of the statement  "            folderProvider.DeleteFolder(new FolderInfo { FolderPath = folderPath' FolderMappingID = folderMapping.FolderMappingID' PortalID = folderMapping.PortalID }); " is 156.
Long Statement,DotNetNuke.Services.FileSystem,SecureFolderProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\Providers\SecureFolderProvider.cs,GetFiles,The length of the statement  "                    fileName = fileName.Substring(0' fileName.LastIndexOf(ProtectedExtension' StringComparison.InvariantCultureIgnoreCase)); " is 120.
Long Statement,DotNetNuke.Services.FileSystem,StandardFolderProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\Providers\StandardFolderProvider.cs,GetFileUrl,The length of the statement  "                return TestableGlobals.Instance.ResolveUrl(fullPath + "?ver=" + file.LastModificationTime.ToString("yyyy-MM-dd-HHmmss-fff")); " is 125.
Long Statement,DotNetNuke.Services.FileSystem.Internal,FileDeletionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\Internal\FileDeletionController.cs,DeleteFile,The length of the statement  "                throw new FileLockedException(Localization.Localization.GetExceptionMessage(lockReason' "File locked. The file cannot be updated. Reason: " + lockReason)); " is 155.
Long Statement,DotNetNuke.Services.FileSystem.Internal,FileDeletionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\Internal\FileDeletionController.cs,DeleteFile,The length of the statement  "                throw new FolderProviderException(Localization.Localization.GetExceptionMessage("DeleteFileUnderlyingSystemError"' "The underlying system threw an exception. The file has not been deleted.")' ex); " is 196.
Long Statement,DotNetNuke.Services.FileSystem.Internal,FileDeletionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\Internal\FileDeletionController.cs,UnlinkFile,The length of the statement  "                throw new FileLockedException(Localization.Localization.GetExceptionMessage(lockReason' "File locked. The file cannot be updated. Reason: " + lockReason)); " is 155.
Long Statement,DotNetNuke.Services.FileSystem.Internal,FileLockingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\Internal\FileLockingController.cs,IsFileOutOfPublishPeriod,The length of the statement  "            return (file.EnablePublishPeriod && (file.StartDate > DateTime.Today || (file.EndDate < DateTime.Today && file.EndDate != Null.NullDate))); " is 139.
Long Statement,DotNetNuke.Services.FileSystem.Internal,UserSecurityController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\Internal\UserSecurityController.cs,IsHostAdminUser,The length of the statement  "            return user.IsSuperUser || portalId > Null.NullInteger && user.IsInRole(PortalController.Instance.GetPortal(portalId).AdministratorRoleName); " is 141.
Long Statement,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The length of the statement  "            Color color = string.IsNullOrEmpty(parameters["color"]) ? Color.White : (parameters["color"].StartsWith("#") ? ColorTranslator.FromHtml(parameters["color"]) : Color.FromName(parameters["color"])); " is 196.
Long Statement,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The length of the statement  "            Color backColor = string.IsNullOrEmpty(parameters["backcolor"]) ? Color.White : (parameters["backcolor"].StartsWith("#") ? ColorTranslator.FromHtml(parameters["backcolor"]) : Color.FromName(parameters["backcolor"])); " is 216.
Long Statement,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The length of the statement  "            var resizeMode = string.IsNullOrEmpty(parameters["resizemode"]) ? ImageResizeMode.Fit : (ImageResizeMode)Enum.Parse(typeof(ImageResizeMode)' parameters["ResizeMode"]' true); " is 173.
Long Statement,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The length of the statement  "                if (double.TryParse(parameters["Gamma"]' NumberStyles.AllowDecimalPoint' CultureInfo.InvariantCulture' out gamma) && gamma >= 0.2 && gamma <= 5) " is 144.
Long Statement,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The length of the statement  "                if (double.TryParse(parameters["Contrast"]' NumberStyles.AllowDecimalPoint' CultureInfo.InvariantCulture' out contrast) && (contrast >= -100 && contrast <= 100)) " is 161.
Long Statement,DotNetNuke.Services.GeneratedImage,ImageHandlerInternal,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageHandlerInternal.cs,HandleImageRequest,The length of the statement  "                if (!string.IsNullOrEmpty(context.Request.Headers["If-Modified-Since"]) && !string.IsNullOrEmpty(context.Request.Headers["If-None-Match"]) && !cacheCleared) " is 156.
Long Statement,DotNetNuke.Services.GeneratedImage,ImageHandlerInternal,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageHandlerInternal.cs,ClearDiskImageCacheIfNecessary,The length of the statement  "            if ((userIds = DataCache.GetCache<Dictionary<int' DateTime>>(cacheKey)) == null || !userIds.ContainsKey(userId)) return false; " is 126.
Long Statement,DotNetNuke.Services.GeneratedImage,ImageHandlerInternal,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageHandlerInternal.cs,ClearDiskImageCacheIfNecessary,The length of the statement  "            //The clear mechanism is performed for ClientCacheExpiration timespan so that all active clients clears the cache and don't see old data. " is 137.
Long Statement,DotNetNuke.Services.GeneratedImage,ProfileEventHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ProfileEventHandler.cs,ProfileUpdated,The length of the statement  "            var newPhotoVisibilityMode = newProfile.GetProperty(Entities.Users.UserProfile.USERPROFILE_Photo)?.ProfileVisibility.VisibilityMode; " is 132.
Long Statement,DotNetNuke.Services.GeneratedImage,ProfileEventHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ProfileEventHandler.cs,ProfileUpdated,The length of the statement  "            var oldPhotoVisibilityMode = oldProfile.GetProperty(Entities.Users.UserProfile.USERPROFILE_Photo)?.ProfileVisibility.VisibilityMode; " is 132.
Long Statement,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,FitImage,The length of the statement  "			graphics.FillRectangle(new SolidBrush(BackColor)' new Rectangle(0' 0' resizeWidth + 2 * _border' resizeHeight + 2 * _border)); " is 126.
Long Statement,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,FitSquareImage,The length of the statement  "			graphics.DrawImage(img' (newDim - resizeWidth) / 2 + _border' (newDim - resizeHeight) / 2 + _border' resizeWidth' resizeHeight); " is 128.
Long Statement,DotNetNuke.Services.Installer.Installers,JavaScriptFileInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\JavaScriptFileInstaller.cs,ReadCustomManifest,The length of the statement  "                BasePath = String.Format("Resources\\Libraries\\{0}\\{1}"' libraryNav.Value' Globals.FormatVersion(Package.Version' "00"' 3' "_")); " is 131.
Long Statement,DotNetNuke.Services.Installer.Installers,JavaScriptLibraryInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\JavaScriptLibraryInstaller.cs,Install,The length of the statement  "                _installedLibrary = JavaScriptLibraryController.Instance.GetLibrary(l => l.LibraryName == _library.LibraryName && l.Version == _library.Version); " is 145.
Long Statement,DotNetNuke.Services.Installer.Installers,UrlProviderInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\UrlProviderInstaller.cs,DeleteProvider,The length of the statement  "				ExtensionUrlProviderInfo tempUrlProvider = ExtensionUrlProviderController.GetProviders(Null.NullInteger).Where(p => p.ProviderName == _extensionUrlProvider.ProviderName && p.ProviderType == _extensionUrlProvider.ProviderType).FirstOrDefault(); " is 243.
Long Statement,DotNetNuke.Services.Installer.Installers,AuthenticationInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\AuthenticationInstaller.cs,ReadManifest,The length of the statement  "            AuthSystem.AuthenticationType = Util.ReadElement(manifestNav' "authenticationService/type"' Log' Util.AUTHENTICATION_TypeMissing); " is 130.
Long Statement,DotNetNuke.Services.Installer.Installers,AuthenticationInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\AuthenticationInstaller.cs,ReadManifest,The length of the statement  "            AuthSystem.SettingsControlSrc = Util.ReadElement(manifestNav' "authenticationService/settingsControlSrc"' Log' Util.AUTHENTICATION_SettingsSrcMissing); " is 151.
Long Statement,DotNetNuke.Services.Installer.Installers,AuthenticationInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\AuthenticationInstaller.cs,ReadManifest,The length of the statement  "            AuthSystem.LoginControlSrc = Util.ReadElement(manifestNav' "authenticationService/loginControlSrc"' Log' Util.AUTHENTICATION_LoginSrcMissing); " is 142.
Long Statement,DotNetNuke.Services.Installer.Installers,ComponentInstallerBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ComponentInstallerBase.cs,ReadEventMessageNode,The length of the statement  "                                        if (upgradeVersion != null && (Globals.Status == Globals.UpgradeStatus.Install)) //To allow when fresh installing or installresources " is 133.
Long Statement,DotNetNuke.Services.Installer.Installers,FileInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\FileInstaller.cs,ReadManifestItem,The length of the statement  "            if ((!string.IsNullOrEmpty(BasePath)) && (BasePath.StartsWith("app_code"' StringComparison.InvariantCultureIgnoreCase) && file.Type == InstallFileType.Other)) " is 158.
Long Statement,DotNetNuke.Services.Installer.Installers,LanguageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\LanguageInstaller.cs,ReadCustomManifest,The length of the statement  "                PackageInfo package = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.Name.Equals(packageName' StringComparison.OrdinalIgnoreCase)); " is 156.
Long Statement,DotNetNuke.Services.Installer.Installers,ModuleInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ModuleInstaller.cs,Commit,The length of the statement  "                    DesktopModuleController.AddDesktopModulePageToPortal(_desktopModule' _desktopModule.AdminPage' portal.PortalID' ref createdNewPage' ref addedNewModule); " is 152.
Long Statement,DotNetNuke.Services.Installer.Installers,ModuleInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ModuleInstaller.cs,Commit,The length of the statement  "                DesktopModuleController.AddDesktopModulePageToPortal(_desktopModule' _desktopModule.HostPage' Null.NullInteger' ref createdNewPage' ref addedNewModule); " is 152.
Long Statement,DotNetNuke.Services.Installer.Installers,ModuleInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ModuleInstaller.cs,Install,The length of the statement  "                _installedDesktopModule = DesktopModuleController.GetDesktopModuleByModuleName(_desktopModule.ModuleName' Package.InstallerInfo.PortalID); " is 138.
Long Statement,DotNetNuke.Services.Installer.Installers,PackageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\PackageInstaller.cs,CheckSecurity,The length of the statement  "            PackageType type = PackageController.Instance.GetExtensionPackageType(t => t.PackageType.Equals(Package.PackageType' StringComparison.OrdinalIgnoreCase)); " is 154.
Long Statement,DotNetNuke.Services.Installer.Installers,PackageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\PackageInstaller.cs,Install,The length of the statement  "                    if ((_installedPackage == null) || (compInstaller.Version > Package.InstalledVersion) || (Package.InstallerInfo.RepairInstall)) " is 127.
Long Statement,DotNetNuke.Services.Installer.Installers,PackageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\PackageInstaller.cs,ReadManifest,The length of the statement  "            if (Package.PackageType.Equals("Skin"' StringComparison.OrdinalIgnoreCase) || Package.PackageType.Equals("Container"' StringComparison.OrdinalIgnoreCase)) " is 154.
Long Statement,DotNetNuke.Services.Installer.Installers,PackageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\PackageInstaller.cs,ReadManifest,The length of the statement  "            var packageType = PackageController.Instance.GetExtensionPackageType(t => t.PackageType.Equals(Package.PackageType' StringComparison.OrdinalIgnoreCase)); " is 153.
Long Statement,DotNetNuke.Services.Installer.Installers,PackageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\PackageInstaller.cs,ReadManifest,The length of the statement  "                _installedPackage = PackageController.Instance.GetExtensionPackage(Package.PortalID' p => p.Name.Equals(Package.Name' StringComparison.OrdinalIgnoreCase) " is 153.
Long Statement,DotNetNuke.Services.Installer.Installers,PackageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\PackageInstaller.cs,ReadManifest,The length of the statement  "                _installedPackage = PackageController.Instance.GetExtensionPackage(Package.PortalID' p => p.Name.Equals(Package.Name' StringComparison.OrdinalIgnoreCase)  " is 153.
Long Statement,DotNetNuke.Services.Installer.Installers,PackageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\PackageInstaller.cs,ReadManifest,The length of the statement  "                    //In Dynamics moduels' a component:type=File can have a basePath pointing to the App_Conde folder. This is not a correct FolderName " is 131.
Long Statement,DotNetNuke.Services.Installer.Installers,PackageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\PackageInstaller.cs,ReadManifest,The length of the statement  "                    var folderNameValue = PackageController.GetSpecificFolderName(manifestNav' "components/component/files|components/component/resourceFiles"' "basePath"' "DesktopModules"); " is 170.
Long Statement,DotNetNuke.Services.Installer.Installers,PackageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\PackageInstaller.cs,ReadManifest,The length of the statement  "                    if (foldernameNav != null) Package.FolderName = Globals.glbContainersPath +  Util.ReadElement(foldernameNav' "containerName").Replace('\\'' '/'); " is 145.
Long Statement,DotNetNuke.Services.Installer.Installers,PackageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\PackageInstaller.cs,ReadManifest,The length of the statement  "                    if (foldernameNav != null) Package.FolderName = Globals.glbSkinsPath + Util.ReadElement(foldernameNav' "skinName").Replace('\\'' '/'); " is 134.
Long Statement,DotNetNuke.Services.Installer.Installers,PackageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\PackageInstaller.cs,ReadManifest,The length of the statement  "                    folderNameValue = PackageController.GetSpecificFolderName(manifestNav' "components/component/resourceFiles"' "basePath"' "DesktopModules"); " is 139.
Long Statement,DotNetNuke.Services.Installer.Installers,ResourceFileInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ResourceFileInstaller.cs,InstallFile,The length of the statement  "                using (var manifestStream = new FileStream(Path.Combine(PhysicalBasePath' Manifest)' FileMode.Create' FileAccess.Write)) " is 120.
Long Statement,DotNetNuke.Services.Installer.Installers,ResourceFileInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ResourceFileInstaller.cs,RollbackFile,The length of the statement  "            using (var unzip = new ZipInputStream(new FileStream(insFile.InstallerInfo.TempInstallFolder + insFile.FullName' FileMode.Open))) " is 129.
Long Statement,DotNetNuke.Services.Installer.Installers,ScriptInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ScriptInstaller.cs,ExecuteSql,The length of the statement  "            //This check needs to be included because the unicode Byte Order mark results in an extra character at the start of the file " is 124.
Long Statement,DotNetNuke.Services.Installer.Installers,ScriptInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ScriptInstaller.cs,IsValidScript,The length of the statement  "            return ProviderConfiguration.DefaultProvider.Equals(fileExtension' StringComparison.InvariantCultureIgnoreCase) || fileExtension.Equals("sql"' StringComparison.InvariantCultureIgnoreCase); " is 188.
Long Statement,DotNetNuke.Services.Installer.Installers,ScriptInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ScriptInstaller.cs,UnInstallFile,The length of the statement  "                if (scriptFile.Name.StartsWith("uninstall."' StringComparison.InvariantCultureIgnoreCase) && IsValidScript(fileExtension)) " is 122.
Long Statement,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,SavePackageDependency,The length of the statement  "	        dependency.PackageDependencyId = provider.SavePackageDependency(dependency.PackageDependencyId' dependency.PackageId' dependency.PackageName' " is 141.
Long Statement,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,GetExtensionPackages,The length of the statement  "            var cacheItemArgs = new CacheItemArgs(cacheKey' DataCache.PackagesCacheTimeout' DataCache.PackagesCachePriority' portalId); " is 123.
Long Statement,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,CanDeletePackage,The length of the statement  "            var dependencies = Instance.GetPackageDependencies(d => d.PackageName.Equals(package.Name' StringComparison.OrdinalIgnoreCase) && d.Version <= package.Version); " is 160.
Long Statement,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,CanDeletePackage,The length of the statement  "                        string strRootSkin = package.PackageType.Equals("Skin"' StringComparison.OrdinalIgnoreCase) ? SkinController.RootSkin : SkinController.RootContainer; " is 149.
Long Statement,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,CanDeletePackage,The length of the statement  "                        string strFolderPath = Path.Combine(_SkinPackageInfo.PortalID == Null.NullInteger ? Path.Combine(Globals.HostMapPath' strRootSkin) : Path.Combine(portalSettings.HomeSystemDirectoryMapPath' strRootSkin)' _SkinPackageInfo.SkinName); " is 230.
Long Statement,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,CanDeletePackage,The length of the statement  "                            strFolderPath = Path.Combine(Path.Combine(portalSettings.HomeDirectoryMapPath' strRootSkin)' _SkinPackageInfo.SkinName); " is 120.
Long Statement,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,CanDeletePackage,The length of the statement  "                        XPathNavigator providerNavigator = configDoc.CreateNavigator().SelectSingleNode("/configuration/dotnetnuke/*[@defaultProvider='" + providerName + "']"); " is 152.
Long Statement,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,ParsePackage,The length of the statement  "                        if (extension != null && (extension.Equals(".dnn"' StringComparison.InvariantCultureIgnoreCase) || extension.Equals(".dnn5"' StringComparison.InvariantCultureIgnoreCase))) " is 171.
Long Statement,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,ParsePackage,The length of the statement  "                                            //In Dynamics moduels' a component:type=File can have a basePath pointing to the App_Conde folder. This is not a correct FolderName " is 131.
Long Statement,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,ParsePackage,The length of the statement  "                                            var folderNameValue = GetSpecificFolderName(nav' "components/component/files|components/component/resourceFiles"' "basePath"' "DesktopModules"); " is 144.
Long Statement,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,ParsePackage,The length of the statement  "                                            if (foldernameNav != null) package.FolderName = Globals.glbContainersPath + Util.ReadElement(foldernameNav' "containerName").Replace('\\'' '/'); " is 144.
Long Statement,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,ParsePackage,The length of the statement  "                                            if (foldernameNav != null) package.FolderName = Globals.glbSkinsPath + Util.ReadElement(foldernameNav' "skinName").Replace('\\'' '/'); " is 134.
Long Statement,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,ParsePackage,The length of the statement  "                                        if ((iconFileNav.Value != string.Empty) && (package.PackageType.Equals("Module"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Auth_System"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Container"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Skin"' StringComparison.OrdinalIgnoreCase))) " is 352.
Long Statement,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,GetString,The length of the statement  "                Logger.WarnFormat("Missing localization key. key:{0} resFileRoot:{1} threadCulture:{2} userlan:{3}"' key' resourceFileRoot' Thread.CurrentThread.CurrentUICulture' language); " is 173.
Long Statement,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,GetString,The length of the statement  "            return string.IsNullOrEmpty(resourceValue) ? string.Empty : RemoveHttpUrlsIfSiteisSSLEnabled(portalSettings' resourceValue); " is 124.
Long Statement,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,SaveString,The length of the statement  "                        AddResourceFileNode(ref root' "resheader"' "reader"' "System.Resources.ResXResourceReader' System.Windows.Forms' Version=2.0.0.0' Culture=neutral' PublicKeyToken=b77a5c561934e089"); " is 181.
Long Statement,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,SaveString,The length of the statement  "                        AddResourceFileNode(ref root' "resheader"' "writer"' "System.Resources.ResXResourceWriter' System.Windows.Forms' Version=2.0.0.0' Culture=neutral' PublicKeyToken=b77a5c561934e089"); " is 181.
Long Statement,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,GetCompiledResourceFile,The length of the statement  "                CBO.GetCachedObject<Dictionary<string' string>>(new CacheItemArgs("Compiled-" + resourceFile + "-" + locale + "-" + portalSettings.PortalId' " is 140.
Long Statement,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,GetResourceFileLookupDictionary,The length of the statement  "                    new CacheItemArgs(DataCache.ResourceFileLookupDictionaryCacheKey' DataCache.ResourceFileLookupDictionaryTimeOut' DataCache.ResourceFileLookupDictionaryCachePriority)' " is 166.
Long Statement,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,GetResourceFile,The length of the statement  "            return CBO.GetCachedObject<Dictionary<string' string>>(new CacheItemArgs(resourceFile' DataCache.ResourceFilesCacheTimeOut' DataCache.ResourceFilesCachePriority)' " is 162.
Long Statement,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,TryGetFromResourceFile,The length of the statement  "            bool bFound = TryGetFromResourceFile(key' GetResourceFileName(resourceFile' userLanguage)' portalID' ref resourceValue); " is 120.
Long Statement,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,TryGetStringInternal,The length of the statement  "            bool bFound = TryGetFromResourceFile(key' resourceFile' userLanguage' fallbackLanguage' defaultLanguage' portalId' ref resourceValue); " is 134.
Long Statement,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,TryGetStringInternal,The length of the statement  "                    string localSharedFile = resourceFile.Substring(0' resourceFile.LastIndexOf("/"' StringComparison.Ordinal) + 1) + Localization.LocalSharedResourceFile; " is 151.
Long Statement,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,TryGetStringInternal,The length of the statement  "                        bFound = TryGetFromResourceFile(key' localSharedFile' userLanguage' fallbackLanguage' defaultLanguage' portalId' ref resourceValue); " is 132.
Long Statement,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,TryGetStringInternal,The length of the statement  "                    bFound = TryGetFromResourceFile(key' Localization.SharedResourceFile' userLanguage' fallbackLanguage' defaultLanguage' portalId' ref resourceValue); " is 148.
Long Statement,DotNetNuke.Services.Localization,LanguagePackController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LanguagePackController.cs,DeleteLanguagePack,The length of the statement  "            EventLogController.Instance.AddLog(languagePack' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.LANGUAGEPACK_DELETED); " is 214.
Long Statement,DotNetNuke.Services.Localization,LanguagePackController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LanguagePackController.cs,SaveLanguagePack,The length of the statement  "                EventLogController.Instance.AddLog(languagePack' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.LANGUAGEPACK_CREATED); " is 214.
Long Statement,DotNetNuke.Services.Localization,LanguagePackController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LanguagePackController.cs,SaveLanguagePack,The length of the statement  "                EventLogController.Instance.AddLog(languagePack' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.LANGUAGEPACK_UPDATED); " is 214.
Long Statement,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,AddLanguageToPortal,The length of the statement  "                    bool contentLocalizationEnabled = PortalController.GetPortalSettingAsBoolean("ContentLocalizationEnabled"' portalID' false); " is 124.
Long Statement,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,AddLanguageToPortal,The length of the statement  "                    DataProvider.Instance().AddPortalLanguage(portalID' languageID' false' UserController.Instance.GetCurrentUserInfo().UserID); " is 124.
Long Statement,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,DeleteLanguage,The length of the statement  "            EventLogController.Instance.AddLog(language' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.LANGUAGE_DELETED); " is 206.
Long Statement,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,GetLanguageDisplayMode,The length of the statement  "            string viewType = Convert.ToString(Personalization.Personalization.GetProfile("LanguageDisplayMode"' viewTypePersonalizationKey)); " is 130.
Long Statement,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,GetBrowserCulture,The length of the statement  "            if (HttpContext.Current == null || HttpContext.Current.Request == null || HttpContext.Current.Request.UserLanguages == null) " is 124.
Long Statement,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,GetString,The length of the statement  "            return GetString(key' resourceFileRoot' PortalController.Instance.GetCurrentPortalSettings()' null' disableShowMissingKeys); " is 124.
Long Statement,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,GetString,The length of the statement  "            return LocalizationProvider.Instance.GetString(key' resourceFileRoot' language' portalSettings' disableShowMissingKeys); " is 120.
Long Statement,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,GetSystemMessage,The length of the statement  "            return GetSystemMessage(strLanguage' portalSettings' messageName' userInfo' resourceFile' custom' null' customCaption' accessingUserID); " is 136.
Long Statement,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,LocalizeControlTitle,The length of the statement  "                string reskey = "ControlTitle_" + moduleControl.ModuleContext.Configuration.ModuleControl.ControlKey.ToLowerInvariant() + ".Text"; " is 130.
Long Statement,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,SaveLanguage,The length of the statement  "                locale.LanguageId = DataProvider.Instance().AddLanguage(locale.Code' locale.Text' locale.Fallback' UserController.Instance.GetCurrentUserInfo().UserID); " is 152.
Long Statement,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,SaveLanguage,The length of the statement  "                EventLogController.Instance.AddLog(locale' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.LANGUAGE_CREATED); " is 204.
Long Statement,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,SaveLanguage,The length of the statement  "                DataProvider.Instance().UpdateLanguage(locale.LanguageId' locale.Code' locale.Text' locale.Fallback' UserController.Instance.GetCurrentUserInfo().UserID); " is 154.
Long Statement,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,SaveLanguage,The length of the statement  "                EventLogController.Instance.AddLog(locale' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.LANGUAGE_UPDATED); " is 204.
Long Statement,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,SetLanguage,The length of the statement  "                        cookie = new HttpCookie("language"' value) { Path = (!string.IsNullOrEmpty(Globals.ApplicationPath) ? Globals.ApplicationPath : "/") }; " is 135.
Long Statement,DotNetNuke.Services.Localization,LocalizationExpressionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationExpressionBuilder.cs,GetLocalizedResource,The length of the statement  "                            throw new InvalidOperationException(string.Format("Localized value '{0}' cannot be converted to type {1}."' key' propDesc.PropertyType)); " is 137.
Long Statement,DotNetNuke.Services.Localization,LocaleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocaleController.cs,CanDeleteLanguage,The length of the statement  "            return PackageController.Instance.GetExtensionPackages(Null.NullInteger' p => p.PackageType.Equals("CoreLanguagePack"' StringComparison.OrdinalIgnoreCase)) " is 155.
Long Statement,DotNetNuke.Services.Localization,LocaleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocaleController.cs,GetLocales,The length of the statement  "                    locales = CBO.GetCachedObject<Dictionary<string' Locale>>(new CacheItemArgs(cacheKey' DataCache.LocalesCacheTimeOut' DataCache.LocalesCachePriority' portalID)' GetLocalesCallBack' true); " is 186.
Long Statement,DotNetNuke.Services.Localization,LocaleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocaleController.cs,GetLocales,The length of the statement  "                    locales = CBO.FillDictionary("CultureCode"' DataProvider.Instance().GetLanguages()' new Dictionary<string' Locale>(StringComparer.OrdinalIgnoreCase)); " is 150.
Long Statement,DotNetNuke.Services.Localization,LocaleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocaleController.cs,UpdatePortalLocale,The length of the statement  "            DataProvider.Instance().UpdatePortalLanguage(locale.PortalId' locale.LanguageId' locale.IsPublished' UserController.Instance.GetCurrentUserInfo().UserID); " is 154.
Long Statement,DotNetNuke.Services.Localization.Persian,PersianController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Persian\PersianController.cs,GetPersianCultureInfo,The length of the statement  "            FieldInfo fieldInfo = persianCultureInfo.GetType().GetField("calendar"' BindingFlags.NonPublic | BindingFlags.Instance); " is 120.
Long Statement,DotNetNuke.Services.Localization.Persian,PersianController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Persian\PersianController.cs,GetPersianCultureInfo,The length of the statement  "            FieldInfo info = persianCultureInfo.DateTimeFormat.GetType().GetField("calendar"' BindingFlags.NonPublic | BindingFlags.Instance); " is 130.
Long Statement,DotNetNuke.Services.Localization.Persian,PersianController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Persian\PersianController.cs,SetPersianDateTimeFormatInfo,The length of the statement  "            persianDateTimeFormatInfo.MonthNames = new[] { "فروردین"' "اردیبهشت"' "خرداد"' "تیر"' "مرداد"' "شهریور"' "مهر"' "آبان"' "آذر"' "دی"' "بهمن"' "اسفند"' "" }; " is 155.
Long Statement,DotNetNuke.Services.Log.EventLog,DBLoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\DBLoggingProvider.cs,GetLogTypeConfigInfoByKey,The length of the statement  "            var configInfoByKey = (Hashtable)DataCache.GetCache(LogTypeInfoByKeyCacheKey) ?? FillLogTypeConfigInfoByKey(GetLogTypeConfigInfo()); " is 132.
Long Statement,DotNetNuke.Services.Log.EventLog,DBLoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\DBLoggingProvider.cs,WriteLog,The length of the statement  "                                    Mail.Mail.SendEmail(logTypeConfigInfo.MailFromAddress' logTypeConfigInfo.MailToAddress' "Event Notification"' string.Format("<pre>{0}</pre>"' HttpUtility.HtmlEncode(str))); " is 172.
Long Statement,DotNetNuke.Services.Log.EventLog,DBLoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\DBLoggingProvider.cs,SendLogNotifications,The length of the statement  "            List<LogTypeConfigInfo> configInfos = CBO.FillCollection<LogTypeConfigInfo>(DataProvider.Instance().GetEventLogPendingNotifConfig()); " is 133.
Long Statement,DotNetNuke.Services.Log.EventLog,DBLoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\DBLoggingProvider.cs,SendLogNotifications,The length of the statement  "                Mail.Mail.SendEmail(typeConfigInfo.MailFromAddress' typeConfigInfo.MailToAddress' "Event Notification"' string.Format("<pre>{0}</pre>"' HttpUtility.HtmlEncode(log))); " is 166.
Long Statement,DotNetNuke.Services.Log.EventLog,DBLoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\DBLoggingProvider.cs,UpdateLogType,The length of the statement  "            DataProvider.Instance().UpdateLogType(logTypeKey' logTypeFriendlyName' logTypeDescription' logTypeCSSClass' logTypeOwner); " is 122.
Long Statement,DotNetNuke.Services.Log.EventLog,EventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\EventLogController.cs,AddLog,The length of the statement  "            AddLog(propertyName' propertyValue' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' logType); " is 152.
Long Statement,DotNetNuke.Services.Log.EventLog,EventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\EventLogController.cs,AddLog,The length of the statement  "                log.LogProperties.Add(new LogDetailInfo("DesktopModuleID"' desktopModule.DesktopModuleID.ToString(CultureInfo.InvariantCulture))); " is 130.
Long Statement,DotNetNuke.Services.Log.EventLog,EventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\EventLogController.cs,AddLog,The length of the statement  "                log.LogProperties.Add(new LogDetailInfo("FolderMappingID"' folderInfo.FolderMappingID.ToString(CultureInfo.InvariantCulture))); " is 127.
Long Statement,DotNetNuke.Services.Log.EventLog,EventLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\EventLogController.cs,AddLog,The length of the statement  "                log.LogProperties.Add(new LogDetailInfo("FolderMappingID"' fileInfo.FolderMappingID.ToString(CultureInfo.InvariantCulture))); " is 125.
Long Statement,DotNetNuke.Services.Log.EventLog,ExceptionLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\ExceptionLogController.cs,AddLog,The length of the statement  "			if (logType == ExceptionLogType.PAGE_LOAD_EXCEPTION && HttpContext.Current != null && UserController.Instance.GetCurrentUserInfo().IsSuperUser) " is 143.
Long Statement,DotNetNuke.Services.Log.EventLog,ExceptionLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\ExceptionLogController.cs,AddLog,The length of the statement  "                    new HttpCookie("LogGUID"' log.LogGUID) { HttpOnly = false' Path = (!string.IsNullOrEmpty(Globals.ApplicationPath) ? Globals.ApplicationPath : "/") }); " is 150.
Long Statement,DotNetNuke.Services.Log.EventLog,LogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogController.cs,WriteLog,The length of the statement  "                RaiseError(filePath' "Unauthorized Access Error"' "The Windows User Account listed below must have Read/Write Privileges for the website path."); " is 145.
Long Statement,DotNetNuke.Services.Log.EventLog,LogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogController.cs,AddLog,The length of the statement  "			                if (Globals.Status != Globals.UpgradeStatus.Upgrade) //this may caught exception during upgrade because old logging provider has problem in it. " is 143.
Long Statement,DotNetNuke.Services.Log.EventLog,LogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogController.cs,AddLogType,The length of the statement  "                                                            Enum.Parse(typeof(LogTypeConfigInfo.NotificationThresholdTimeTypes)' typeConfigInfo.Attributes["NotificationThresholdTimeType"].Value) " is 134.
Long Statement,DotNetNuke.Services.Log.EventLog,LogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogController.cs,AddLogType,The length of the statement  "            LoggingProvider.Instance().AddLogType(logType.LogTypeKey' logType.LogTypeFriendlyName' logType.LogTypeDescription' logType.LogTypeCSSClass' logType.LogTypeOwner); " is 162.
Long Statement,DotNetNuke.Services.Log.EventLog,LogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogController.cs,GetLogTypeInfoDictionary,The length of the statement  "            return LoggingProvider.Instance().GetLogTypeInfo().Cast<LogTypeInfo>().ToDictionary(logTypeInfo => logTypeInfo.LogTypeKey); " is 123.
Long Statement,DotNetNuke.Services.Log.EventLog,LogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogController.cs,UpdateLogType,The length of the statement  "            LoggingProvider.Instance().UpdateLogType(logType.LogTypeKey' logType.LogTypeFriendlyName' logType.LogTypeDescription' logType.LogTypeCSSClass' logType.LogTypeOwner); " is 165.
Long Statement,DotNetNuke.Services.Log.EventLog,LogInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogInfo.cs,ReadXml,The length of the statement  "                if (reader.ReadState != ReadState.EndOfFile && reader.NodeType != XmlNodeType.None && !String.IsNullOrEmpty(reader.LocalName)) " is 126.
Long Statement,DotNetNuke.Services.Log.EventLog,LogProperties,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogProperties.cs,Deserialize,The length of the statement  "                if (reader.ReadState != ReadState.EndOfFile && reader.NodeType != XmlNodeType.None && !String.IsNullOrEmpty(reader.LocalName)) " is 126.
Long Statement,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,PurgeCache,The length of the statement  "                    throw new IOException("Deleted " + i + " files' however' some files are locked.  Could not delete the following files: " + filesNotDeleted); " is 140.
Long Statement,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,PurgeExpiredItems,The length of the statement  "                    throw new IOException("Deleted " + i + " files' however' some files are locked.  Could not delete the following files: " + filesNotDeleted); " is 140.
Long Statement,DotNetNuke.Services.OutputCache.Providers,MemoryProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\MemoryProvider.cs,SetOutput,The length of the statement  "            Cache.Insert(cacheKey' output' null' DateTime.UtcNow.Add(duration)' System.Web.Caching.Cache.NoSlidingExpiration' CacheItemPriority.Default' null); " is 147.
Long Statement,DotNetNuke.Services.OutputCache.Providers,MemoryResponseFilter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\MemoryResponseFilter.cs,AddItemToCache,The length of the statement  "            Cache.Insert(CacheKey' output' null' DateTime.UtcNow.Add(CacheDuration)' System.Web.Caching.Cache.NoSlidingExpiration' CacheItemPriority.Default' null); " is 152.
Long Statement,DotNetNuke.Services.Search.Controllers,ModuleResultController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\ModuleResultController.cs,GetModuleSearchController,The length of the statement  "                        var controller = Reflection.CreateObject(module.DesktopModule.BusinessControllerClass' module.DesktopModule.BusinessControllerClass) as IModuleSearchResultController; " is 166.
Long Statement,DotNetNuke.Services.Search.Controllers,UserResultController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\UserResultController.cs,GetDocUrl,The length of the statement  "            var url = TestableGlobals.Instance.NavigateURL(PortalSettings.UserTabId' string.Empty' "userid=" + GetUserId(searchResult)); " is 124.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,GetResults,The length of the statement  "            if((searchQuery.ModuleId > 0) && (searchQuery.SearchTypeIds.Count() > 1 || !searchQuery.SearchTypeIds.Contains(_moduleSearchTypeId))) " is 133.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,GetResults,The length of the statement  "                throw new ArgumentException(Localization.Localization.GetExceptionMessage("ModuleIdMustHaveSearchTypeIdForModule"' "ModuleId based search must have SearchTypeId for a module only")); " is 182.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,GetResults,The length of the statement  "	                var allowLeadingWildcard = HostController.Instance.GetString("Search_AllowLeadingWildcard"' "N") == "Y" || searchQuery.AllowLeadingWildcard; " is 140.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,GetResults,The length of the statement  "					var keywords = SearchHelper.Instance.RephraseSearchText(searchQuery.KeyWords' searchQuery.WildCardSearch' allowLeadingWildcard); " is 128.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,GetResults,The length of the statement  "            if (searchQuery.BeginModifiedTimeUtc > DateTime.MinValue && searchQuery.EndModifiedTimeUtc >= searchQuery.BeginModifiedTimeUtc) " is 127.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,GetResults,The length of the statement  "                query.Add(NumericRangeQuery.NewLongRange(Constants.ModifiedTimeTag' long.Parse(searchQuery.BeginModifiedTimeUtc.ToString(Constants.DateTimeFormat))' long.Parse(searchQuery.EndModifiedTimeUtc.ToString(Constants.DateTimeFormat))' true' true)' Occur.MUST); " is 253.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,GetResults,The length of the statement  "                query.Add(NumericRangeQuery.NewIntRange(Constants.RoleIdTag' searchQuery.RoleId' searchQuery.RoleId' true' true)' Occur.MUST);   " is 126.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,GetResults,The length of the statement  "                query.Add(NumericRangeQuery.NewIntRange(Constants.NumericKeyPrefixTag + kvp.Key' kvp.Value' kvp.Value' true' true)' Occur.MUST);  " is 128.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,GetResults,The length of the statement  "                localeQuery.Add(NumericRangeQuery.NewIntRange(Constants.LocaleTag' Null.NullInteger' Null.NullInteger' true' true)' Occur.SHOULD); " is 130.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,ApplySearchTypeIdFilter,The length of the statement  "                    //this is the main hook for module based search. Occur.MUST is a requirement for this condition or else results from other modules will be found " is 144.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,ApplySearchTypeIdFilter,The length of the statement  "                    query.Add(NumericRangeQuery.NewIntRange(Constants.ModuleIdTag' searchQuery.ModuleId' searchQuery.ModuleId' true' true)' Occur.MUST); " is 132.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,ApplySearchTypeIdFilter,The length of the statement  "                        modDefQuery.Add(NumericRangeQuery.NewIntRange(Constants.ModuleDefIdTag' moduleDefId' moduleDefId' true' true)' Occur.SHOULD); " is 125.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,ApplySearchTypeIdFilter,The length of the statement  "                query.Add(NumericRangeQuery.NewIntRange(Constants.SearchTypeTag' _moduleSearchTypeId' _moduleSearchTypeId' true' true)' Occur.MUST); " is 132.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,ApplySearchTypeIdFilter,The length of the statement  "                            searchTypeIdQuery.Add(NumericRangeQuery.NewIntRange(Constants.ModuleDefIdTag' moduleDefId' moduleDefId' true' true)' Occur.SHOULD); " is 131.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,ApplySearchTypeIdFilter,The length of the statement  "                            searchTypeIdQuery.Add(NumericRangeQuery.NewIntRange(Constants.SearchTypeTag' searchTypeId' searchTypeId' true' true)' Occur.SHOULD);   " is 132.
Long Statement,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,ApplySearchTypeIdFilter,The length of the statement  "                        searchTypeIdQuery.Add(NumericRangeQuery.NewIntRange(Constants.SearchTypeTag' searchTypeId' searchTypeId' true' true)' Occur.SHOULD);        " is 132.
Long Statement,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,GetSearchReindexRequestTime,The length of the statement  "                : PortalController.GetPortalSetting(Constants.SearchReindexSettingName' portalId' Null.NullString); // portal level setting " is 123.
Long Statement,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,SetIndexerCheckpointUtcTime,The length of the statement  "            SchedulingProvider.Instance().AddScheduleItemSetting(scheduleId' indexerKey' lastUtcTime.ToString(Constants.ReindexDateTimeFormat)); " is 132.
Long Statement,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,GetSearchMinMaxLength,The length of the statement  "                var exceptionMessage = Localization.Localization.GetExceptionMessage("SearchAnalyzerMinWordLength"' "Search Analyzer: min word length ({0}) is greater than max word length ({1}) value"); " is 186.
Long Statement,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,EnsurePortalDefaultsAreSet,The length of the statement  "                var currentStopWords = CBO.FillCollection<SearchStopWords>(DataProvider.Instance().GetSearchStopWords(portalId' locale.Code));  " is 126.
Long Statement,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,EnsurePortalDefaultsAreSet,The length of the statement  "                    if (!string.IsNullOrEmpty(defaultStopWords)) DataProvider.Instance().AddSearchStopWords(defaultStopWords' 1' portalId' locale.Code); " is 132.
Long Statement,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,EnsurePortalDefaultsAreSet,The length of the statement  "                var currentSynonymGroups = CBO.FillCollection<SynonymsGroup>(DataProvider.Instance().GetAllSynonymsGroups(portalId' locale.Code)); " is 130.
Long Statement,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,EnsurePortalDefaultsAreSet,The length of the statement  "                    if (!string.IsNullOrEmpty(defaultSynonymsGroup)) DataProvider.Instance().AddSynonymsGroup(defaultSynonymsGroup' 1' portalId' locale.Code); " is 138.
Long Statement,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,GetResourceFile,The length of the statement  "            return File.Exists(Path.Combine(Globals.ApplicationMapPath' ResourceFileRelativePathWithoutExt + "." + cultureCode + ".resx")) ? cultureRelativePath : regularRelativePath; " is 171.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentInternal,The length of the statement  "            Requires.PropertyNotEqualTo("searchDocument"' "ModifiedTimeUtc"' searchDocument.ModifiedTimeUtc.ToString(CultureInfo.InvariantCulture)' DateTime.MinValue.ToString(CultureInfo.InvariantCulture)); " is 194.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentInternal,The length of the statement  "                    throw new ArgumentException( Localization.Localization.GetExceptionMessage("ModuleDefIdMustBeGreaterThanZero"'"ModuleDefId must be greater than zero when SearchTypeId is for a module")); " is 186.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentInternal,The length of the statement  "                    throw new ArgumentException(Localization.Localization.GetExceptionMessage("ModuleIdMustBeGreaterThanZero"'"ModuleId must be greater than zero when SearchTypeId is for a module")); " is 179.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentInternal,The length of the statement  "                    throw new ArgumentException(Localization.Localization.GetExceptionMessage("ModuleDefIdWhenSearchTypeForModule"'"ModuleDefId is needed only when SearchTypeId is for a module")); " is 176.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentInternal,The length of the statement  "                    throw new ArgumentException(Localization.Localization.GetExceptionMessage("ModuleIdWhenSearchTypeForModule"'"ModuleId is needed only when SearchTypeId is for a module")); " is 170.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentInternal,The length of the statement  "            //Field.Store.YES    | Stores the value. When the value is stored' the original String in its entirety is recorded in the index " is 127.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentInternal,The length of the statement  "            //Field.Store.NO     | Doesn’t store the value. This option is often used along with Index.ANALYZED to index a large text field that doesn’t need to be retrieved " is 161.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentInternal,The length of the statement  "            //Index.ANALYZED     | Use the analyzer to break the field’s value into a stream of separate tokens and make each token searchable " is 130.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentInternal,The length of the statement  "            //Index.NOT_ANALYZED | Do index the field' but don’t analyze the String value.Instead' treat the Field’s entire value as a single token and make that token searchable. " is 167.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,DeleteSearchDocumentInternal,The length of the statement  "                query.Add(NumericValueQuery(Constants.LocaleTag' Localization.Localization.GetCultureLanguageID(searchDocument.CultureCode))' Occur.MUST); " is 138.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The length of the statement  "            doc.Add(new Field(Constants.UniqueKeyTag' SearchHelper.Instance.StripTagsNoAttributes(searchDocument.UniqueKey' true)' Field.Store.YES' Field.Index.NOT_ANALYZED)); " is 163.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The length of the statement  "                        ? new NumericField(Constants.LocaleTag' Field.Store.YES' true).SetIntValue(Localization.Localization.GetCultureLanguageID(searchDocument.CultureCode)) " is 150.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The length of the statement  "                var field = new Field(Constants.TitleTag' StripTagsRetainAttributes(searchDocument.Title' HtmlAttributesToRetain' false' true)' Field.Store.YES' Field.Index.ANALYZED' Field.TermVector.WITH_POSITIONS_OFFSETS); " is 208.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The length of the statement  "                var field = new Field(Constants.DescriptionTag' StripTagsRetainAttributes(searchDocument.Description' HtmlAttributesToRetain' false' true)' Field.Store.YES' Field.Index.ANALYZED' Field.TermVector.WITH_POSITIONS_OFFSETS); " is 220.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The length of the statement  "                doc.Add(new Field(Constants.BodyTag' StripTagsRetainAttributes(searchDocument.Body' HtmlAttributesToRetain' false' true)' Field.Store.YES' Field.Index.ANALYZED' Field.TermVector.WITH_POSITIONS_OFFSETS)); " is 203.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The length of the statement  "                doc.Add(new Field(Constants.UrlTag' SearchHelper.Instance.StripTagsNoAttributes(searchDocument.Url' true)' Field.Store.YES' Field.Index.NOT_ANALYZED)); " is 151.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The length of the statement  "                var field = new Field(SearchHelper.Instance.StripTagsNoAttributes(Constants.KeywordsPrefixTag + kvp.Key' true)' SearchHelper.Instance.StripTagsNoAttributes(kvp.Value' true)' Field.Store.YES' needAnalyzed ? Field.Index.ANALYZED : Field.Index.NOT_ANALYZED); " is 255.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The length of the statement  "                doc.Add(new NumericField(SearchHelper.Instance.StripTagsNoAttributes(Constants.NumericKeyPrefixTag + kvp.Key' true)' Field.Store.YES' true).SetIntValue(kvp.Value)); " is 164.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The length of the statement  "                var field = new Field(Constants.Tag' SearchHelper.Instance.StripTagsNoAttributes(tag.ToLowerInvariant()' true)' Field.Store.YES' Field.Index.NOT_ANALYZED' Field.TermVector.WITH_POSITIONS_OFFSETS); " is 196.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The length of the statement  "                    var field = new Field(Constants.AuthorNameTag' user.DisplayName' Field.Store.YES' Field.Index.ANALYZED' Field.TermVector.WITH_POSITIONS_OFFSETS); " is 145.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The length of the statement  "                doc.Add(new Field(Constants.PermissionsTag' SearchHelper.Instance.StripTagsNoAttributes(searchDocument.Permissions' true)' Field.Store.YES' Field.Index.NOT_ANALYZED)); " is 167.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The length of the statement  "            doc.Add(new NumericField(Constants.ModifiedTimeTag' Field.Store.YES' true).SetLongValue(long.Parse(searchDocument.ModifiedTimeUtc.ToString(Constants.DateTimeFormat)))); " is 168.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The length of the statement  "                var field = new Field(Constants.ContentTag' SearchHelper.Instance.StripTagsNoAttributes(sb.ToString()' true)' Field.Store.YES' Field.Index.ANALYZED' Field.TermVector.WITH_POSITIONS_OFFSETS); " is 190.
Long Statement,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,StripTagsRetainAttributes,The length of the statement  "            if (!decoded) strippedString = StripTagsRetainAttributes(HttpUtility.HtmlDecode(strippedString)' attributesList' true' retainSpace); " is 132.
Long Statement,DotNetNuke.Services.Search.Internals,LuceneControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneControllerImpl.cs,CheckDisposed,The length of the statement  "                throw new ObjectDisposedException(Localization.Localization.GetExceptionMessage("LuceneControlerIsDisposed"'"LuceneController is disposed and cannot be used anymore")); " is 168.
Long Statement,DotNetNuke.Services.Search.Internals,LuceneControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneControllerImpl.cs,CheckValidIndexFolder,The length of the statement  "                throw new SearchIndexEmptyException(Localization.Localization.GetExceptionMessage("SearchIndexingDirectoryNoValid"'"Search indexing directory is either empty or does not exist")); " is 179.
Long Statement,DotNetNuke.Services.Search.Internals,LuceneControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneControllerImpl.cs,Search,The length of the statement  "                            TitleSnippet = GetHighlightedText(highlighter' fieldQuery' searcher' match' Constants.TitleTag' searchContext.LuceneQuery.TitleSnippetLength)' " is 142.
Long Statement,DotNetNuke.Services.Search.Internals,LuceneControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneControllerImpl.cs,Search,The length of the statement  "                            BodySnippet = GetHighlightedText(highlighter' fieldQuery' searcher' match' Constants.BodyTag' searchContext.LuceneQuery.BodySnippetLength)' " is 139.
Long Statement,DotNetNuke.Services.Search.Internals,LuceneControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneControllerImpl.cs,Search,The length of the statement  "                            DescriptionSnippet = GetHighlightedText(highlighter' fieldQuery' searcher' match' Constants.DescriptionTag' searchContext.LuceneQuery.TitleSnippetLength)' " is 154.
Long Statement,DotNetNuke.Services.Search.Internals,LuceneControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneControllerImpl.cs,Search,The length of the statement  "                            TagSnippet = GetHighlightedText(highlighter' fieldQuery' searcher' match' Constants.Tag' searchContext.LuceneQuery.TitleSnippetLength)' " is 135.
Long Statement,DotNetNuke.Services.Search.Internals,LuceneControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneControllerImpl.cs,Search,The length of the statement  "                            AuthorSnippet = GetHighlightedText(highlighter' fieldQuery' searcher' match' Constants.AuthorNameTag' searchContext.LuceneQuery.TitleSnippetLength)' " is 148.
Long Statement,DotNetNuke.Services.Search.Internals,LuceneControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneControllerImpl.cs,Search,The length of the statement  "                            ContentSnippet = GetHighlightedText(highlighter' fieldQuery' searcher' match' Constants.ContentTag' searchContext.LuceneQuery.TitleSnippetLength) " is 145.
Long Statement,DotNetNuke.Services.Search.Internals,LuceneControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneControllerImpl.cs,GetDisplayScoreFromMatch,The length of the statement  "                if (beginPos > 0 && endPos > 0 && endPos > beginPos) displayScore = match.Substring(beginPos + 1' endPos - beginPos - 1); " is 121.
Long Statement,DotNetNuke.Services.Search.Internals,LuceneControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneControllerImpl.cs,GetCustomAnalyzer,The length of the statement  "                                Localization.Localization.GetExceptionMessage("InvalidAnalyzerClass"' "The class '{0}' cannot be created because it's invalid or is not an analyzer' will use default analyzer.")'  " is 178.
Long Statement,DotNetNuke.Services.Search,UserIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\UserIndexer.cs,IndexCollectedDocs,The length of the statement  "            var total = searchDocuments.Select(d => d.UniqueKey.Substring(0' d.UniqueKey.IndexOf("_"' StringComparison.Ordinal))).Distinct().Count(); " is 137.
Long Statement,DotNetNuke.Services.Search,UserIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\UserIndexer.cs,FindModifiedUsers,The length of the statement  "            using (var reader = DataProvider.Instance().GetAvailableUsersForIndex(portalId' startDateLocal' startUserId' BatchSize)) " is 120.
Long Statement,DotNetNuke.Services.Search,ModuleIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\ModuleIndexer.cs,IndexSearchDocuments,The length of the statement  "                !((SqlDateTime.MinValue.Value < module.LastContentModifiedOnDate && module.LastContentModifiedOnDate < startDateLocal))) " is 120.
Long Statement,DotNetNuke.Services.Search,ModuleIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\ModuleIndexer.cs,IndexSearchDocuments,The length of the statement  "                        var controller = Reflection.CreateObject(module.DesktopModule.BusinessControllerClass' module.DesktopModule.BusinessControllerClass); " is 133.
Long Statement,DotNetNuke.Services.Search,ModuleIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\ModuleIndexer.cs,IndexSearchDocuments,The length of the statement  "                        var contentInfo = new SearchContentModuleInfo {ModSearchBaseControllerType= (ModuleSearchBase) controller' ModInfo = module}; " is 125.
Long Statement,DotNetNuke.Services.Search,ModuleIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\ModuleIndexer.cs,IndexSearchDocuments,The length of the statement  "                        var searchItems = contentInfo.ModSearchBaseControllerType.GetModifiedSearchDocuments(module' startDateLocal.ToUniversalTime()); " is 127.
Long Statement,DotNetNuke.Services.Search,ModuleIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\ModuleIndexer.cs,GetModuleMetaData,The length of the statement  "                        Logger.Trace("ModuleIndexer: Search document for metaData found for module [" + module.DesktopModule.ModuleName + " mid:" + module.ModuleID + "]"); " is 147.
Long Statement,DotNetNuke.Services.Search,ModuleIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\ModuleIndexer.cs,GetModulesForIndex,The length of the statement  "            var modules = ModuleController.Instance.GetSearchModules(portalId).Cast<ModuleInfo>().Where(m => m.TabModuleSettings["AllowIndex"] == null || bool.Parse(m.TabModuleSettings["AllowIndex"].ToString())); " is 200.
Long Statement,DotNetNuke.Services.Search,ModuleIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\ModuleIndexer.cs,GetModulesForIndex,The length of the statement  "                    if (tab.TabSettings["AllowIndex"] == null || (tab.TabSettings["AllowIndex"] != null && bool.Parse(tab.TabSettings["AllowIndex"].ToString()))) " is 141.
Long Statement,DotNetNuke.Services.Search,ModuleIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\ModuleIndexer.cs,GetModulesForIndex,The length of the statement  "                                controller = Reflection.CreateObject(module.DesktopModule.BusinessControllerClass' module.DesktopModule.BusinessControllerClass); " is 129.
Long Statement,DotNetNuke.Services.Search,SearchEngineScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\SearchEngineScheduler.cs,DoWork,The length of the statement  "                ScheduleHistoryItem.AddLogNote(string.Format("Starting. Content change start time <b>{0:g}</b>"' lastSuccessFulDateTime)); " is 122.
Long Statement,DotNetNuke.Services.Social.Messaging,UserPreferencesController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\UserPreferencesController.cs,SetUserPreference,The length of the statement  "            dataService.SetUserPreference(userPreference.PortalId' userPreference.UserId' Convert.ToInt32(userPreference.MessagesEmailFrequency)' Convert.ToInt32(userPreference.NotificationsEmailFrequency)); " is 195.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                throw new ArgumentException(Localization.Localization.GetString("MsgSenderRequiredError"' Localization.Localization.ExceptionsResourceFile)); " is 141.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                throw new ArgumentException(Localization.Localization.GetString("MsgMessageRequiredError"' Localization.Localization.ExceptionsResourceFile)); " is 142.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                throw new ArgumentException(Localization.Localization.GetString("MsgSubjectOrBodyRequiredError"' Localization.Localization.ExceptionsResourceFile)); " is 148.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                throw new ArgumentException(Localization.Localization.GetString("MsgRolesOrUsersRequiredError"' Localization.Localization.ExceptionsResourceFile)); " is 147.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "				throw new ArgumentException(Localization.Localization.GetString("PrivateMessageDisabledError"' Localization.Localization.ExceptionsResourceFile)); " is 146.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                throw new ArgumentException(string.Format(Localization.Localization.GetString("MsgSubjectTooBigError"' Localization.Localization.ExceptionsResourceFile)' ConstMaxSubject' message.Subject.Length)); " is 196.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                if (!roles.All(role => sender.Social.Roles.Any(userRoleInfo => role.RoleID == userRoleInfo.RoleID && userRoleInfo.IsOwner))) " is 124.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                    throw new ArgumentException(Localization.Localization.GetString("MsgOnlyHostOrAdminOrUserInGroupCanSendToRoleError"' Localization.Localization.ExceptionsResourceFile)); " is 168.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                throw new ArgumentException(Localization.Localization.GetString("MsgEmptyToListFoundError"' Localization.Localization.ExceptionsResourceFile)); " is 143.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                throw new ArgumentException(string.Format(Localization.Localization.GetString("MsgToListTooBigError"' Localization.Localization.ExceptionsResourceFile)' ConstMaxTo' sbTo.Length)); " is 179.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                var interval = GetPortalSettingAsDouble("MessagingThrottlingInterval"' sender.PortalID' DefaultMessagingThrottlingInterval); " is 124.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                throw new ThrottlingIntervalNotMetException(string.Format(Localization.Localization.GetString("MsgThrottlingIntervalNotMet"' Localization.Localization.ExceptionsResourceFile)' interval)); " is 187.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                throw new AttachmentsNotAllowed(Localization.Localization.GetString("MsgAttachmentsNotAllowed"' Localization.Localization.ExceptionsResourceFile)); " is 147.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                throw new RecipientLimitExceededException(Localization.Localization.GetString("MsgRecipientLimitExceeded"' Localization.Localization.ExceptionsResourceFile)); " is 158.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "            message.MessageID = _dataService.SaveMessage(message' PortalController.GetEffectivePortalId(UserController.Instance.GetCurrentUserInfo().PortalID)' UserController.Instance.GetCurrentUserInfo().UserID); " is 201.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                foreach (var attachment in fileIDs.Select(fileId => new MessageAttachment { MessageAttachmentID = Null.NullInteger' FileID = fileId' MessageID = message.MessageID })) " is 166.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                _dataService.CreateMessageRecipientsForRole(message.MessageID' roleIds' UserController.Instance.GetCurrentUserInfo().UserID); " is 125.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "            foreach (var recipient in from user in users where InternalMessagingController.Instance.GetMessageRecipient(message.MessageID' user.UserID) == null select new MessageRecipient { MessageID = message.MessageID' UserID = user.UserID' Read = false' RecipientID = Null.NullInteger }) " is 278.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                    recipient = new MessageRecipient { MessageID = message.MessageID' UserID = sender.UserID' Read = false' RecipientID = Null.NullInteger }; " is 137.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,SendMessage,The length of the statement  "                    recipient.RecipientID = _dataService.SaveMessageRecipient(recipient' UserController.Instance.GetCurrentUserInfo().UserID); " is 122.
Long Statement,DotNetNuke.Services.Social.Messaging,MessagingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\MessagingController.cs,IsAdminOrHost,The length of the statement  "            return userInfo.IsSuperUser || userInfo.IsInRole(PortalController.Instance.GetCurrentPortalSettings().AdministratorRoleName); " is 125.
Long Statement,DotNetNuke.Services.Social.Subscriptions.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Subscriptions\Data\DataService.cs,AddSubscriptionType,The length of the statement  "            return provider.ExecuteScalar<int>("CoreMessaging_AddSubscriptionType"' subscriptionName' friendlyName' desktopModuleId); " is 121.
Long Statement,DotNetNuke.Services.Social.Subscriptions.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Subscriptions\Data\DataService.cs,GetSubscriptionsByUser,The length of the statement  "            return provider.ExecuteReader("CoreMessaging_GetSubscriptionsByUser"' provider.GetNull(portalId)' userId' provider.GetNull(subscriptionTypeId)); " is 144.
Long Statement,DotNetNuke.Services.Social.Subscriptions.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Subscriptions\Data\DataService.cs,GetSubscriptionsByContent,The length of the statement  "            return provider.ExecuteReader("CoreMessaging_GetSubscriptionsByContent"' provider.GetNull(portalId)' subscriptionTypeId' objectKey); " is 132.
Long Statement,DotNetNuke.Services.Tokens,JavaScriptPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\JavaScriptPropertyAccess.cs,ProcessToken,The length of the statement  "                    throw new ArgumentException("If the jsname property is not specified then the JavaScript token must specify a path or property."); " is 130.
Long Statement,DotNetNuke.Services.Tokens,BaseCustomTokenReplace,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\BaseCustomTokenReplace.cs,replacedTokenValue,The length of the statement  "                result = PropertySource[objectName.ToLowerInvariant()].GetProperty(propertyName' format' FormatProvider' AccessingUser' CurrentAccessLevel' ref propertyNotFound); " is 162.
Long Statement,DotNetNuke.Services.Tokens,BaseCustomTokenReplace,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\BaseCustomTokenReplace.cs,replacedTokenValue,The length of the statement  "                    string message = Localization.Localization.GetString("TokenReplaceUnknownObject"' Localization.Localization.SharedResourceFile' FormatProvider.ToString()); " is 155.
Long Statement,DotNetNuke.Services.Tokens,BaseCustomTokenReplace,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\BaseCustomTokenReplace.cs,replacedTokenValue,The length of the statement  "                    message = Localization.Localization.GetString("TokenReplaceRestrictedProperty"' Localization.Localization.GlobalResourceFile' FormatProvider.ToString()); " is 153.
Long Statement,DotNetNuke.Services.Tokens,BaseCustomTokenReplace,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\BaseCustomTokenReplace.cs,replacedTokenValue,The length of the statement  "                    message = Localization.Localization.GetString("TokenReplaceUnknownProperty"' Localization.Localization.GlobalResourceFile' FormatProvider.ToString()); " is 150.
Long Statement,DotNetNuke.Services.Tokens,BaseCustomTokenReplace,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\BaseCustomTokenReplace.cs,ContainsTokens,The length of the statement  "                return TokenizerRegex.Matches(strSourceText).Cast<Match>().Any(currentMatch => currentMatch.Result("${object}").Length > 0); " is 124.
Long Statement,DotNetNuke.Services.Tokens,CulturePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\CulturePropertyAccess.cs,GetProperty,The length of the statement  "            if (propertyName.Equals(CultureDropDownTypes.ThreeLetterIsoCode.ToString()' StringComparison.InvariantCultureIgnoreCase)) " is 121.
Long Statement,DotNetNuke.Services.Upgrade,DnnInstallLogger,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\DnnInstallLogger.cs,LogInstaller,The length of the statement  "				writer.WriteLine(DateTime.UtcNow.ToString(CultureInfo.InvariantCulture) + " " + logType + " " + CallingType + " " + message); " is 125.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddAdminPages,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddAdminPages:" + tabName); " is 156.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddAdminPages,The length of the statement  "            AddAdminPages(tabName' description' tabIconFile' tabIconFileLarge' isVisible' moduleDefId' moduleTitle' moduleIconFile' true); " is 126.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddAdminRoleToPage,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddAdminRoleToPage:" + tabPath); " is 161.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddConsoleModuleSettings,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddConsoleModuleSettings:" + moduleID); " is 168.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleControl,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddModuleControl:" + moduleDefId); " is 163.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleDefinition,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddModuleDefinition:" + desktopModuleName); " is 172.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleDefinition,The length of the statement  "            var moduleDefinition = ModuleDefinitionController.GetModuleDefinitionByFriendlyName(moduleDefinitionName' desktopModule.DesktopModuleID); " is 137.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleDefinition,The length of the statement  "                moduleDefinition = new ModuleDefinitionInfo { ModuleDefID = Null.NullInteger' DesktopModuleID = desktopModule.DesktopModuleID' FriendlyName = moduleDefinitionName }; " is 165.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddPage,The length of the statement  "            return AddPage(portalId' parentId' tabName' description' tabIconFile' tabIconFileLarge' isVisible' permissions' isAdmin); " is 121.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddPage,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddPage:" + tabName); " is 150.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddPagePermission,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddPagePermission:" + key); " is 156.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddPagePermission,The length of the statement  "            var tabPermission = new TabPermissionInfo { PermissionID = permission.PermissionID' RoleID = roleId' AllowAccess = true }; " is 122.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddSearchResults,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddSearchResults:" + moduleDefId); " is 163.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddSkinControl,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddSkinControl:" + controlKey); " is 160.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddSkinControl,The length of the statement  "                var package = new PackageInfo { Name = packageName' FriendlyName = string.Concat(controlKey' "SkinObject")' PackageType = "SkinObject"' Version = new Version(1' 0' 0) }; " is 169.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddSkinControl,The length of the statement  "                skinControl = new SkinControlInfo { PackageID = package.PackageID' ControlKey = controlKey' ControlSrc = controlSrc' SupportsPartialRendering = false }; " is 152.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddDefaultModuleIcons,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddDefaultModuleIcons"); " is 153.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddDefaultModuleIcons,The length of the statement  "            var pkg = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.Name == "DotNetNuke.Google Analytics"); " is 121.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddDefaultModuleIcons,The length of the statement  "            pkg = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.Name == "DotNetNuke.Configuration Manager"); " is 122.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddDefaultModuleIcons,The length of the statement  "            pkg = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.Name == "DotNetNuke.ProfessionalPreview"); " is 120.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleCategories,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddModuleCategories"); " is 151.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,EnableModalPopUps,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "EnableModalPopUps"); " is 149.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,EnableModalPopUps,The length of the statement  "            foreach (ModuleControlInfo control in ModuleControlController.GetModuleControlsByModuleDefinitionID(Null.NullInteger).Values) " is 125.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ExecuteScript,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "ExecuteScript:" + scriptFile); " is 159.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ExecuteScript,The length of the statement  "                HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' Localization.Localization.GetString("ExecutingScript"' Localization.Localization.GlobalResourceFile) + ":" + Path.GetFileName(scriptFile)); " is 196.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ExecuteScript,The length of the statement  "                DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogEnd"' Localization.Localization.GlobalResourceFile) + "ExecuteScript:" + scriptFile); " is 157.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ExecuteScript,The length of the statement  "                    HtmlUtils.WriteScriptSuccessError(HttpContext.Current.Response' (string.IsNullOrEmpty(exceptions))' resourcesFile.Replace("." + DefaultProvider' ".log.resources")); " is 164.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetModuleDefinition,The length of the statement  "            ModuleDefinitionInfo objModuleDefinition = ModuleDefinitionController.GetModuleDefinitionByFriendlyName(moduleDefinitionName' desktopModule.DesktopModuleID); " is 157.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallMemberRoleProvider,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "InstallMemberRoleProvider"); " is 157.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallMemberRoleProvider,The length of the statement  "                DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogEnd"' Localization.Localization.GlobalResourceFile) + "InstallMemberRoleProvider"); " is 155.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallMemberRoleProviderScript,The length of the statement  "            string exceptions = DataProvider.Instance().ExecuteScript(FileSystemUtils.ReadFile(providerPath + scriptFile + ".sql")); " is 120.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ParseFiles,The length of the statement  "                        var file = new FileInfo(portalId' fileName' extension' (int)size' width' height' contentType' folder' folderInfo.FolderID' folderInfo.StorageLocation' true); " is 157.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,RemoveCoreModule,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "RemoveCoreModule:" + desktopModuleName); " is 169.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,RemoveCoreModule,The length of the statement  "                PackageController.Instance.DeleteExtensionPackage(PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.PackageID == desktopModule.PackageID)); " is 161.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,RemoveModule,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "RemoveModule:" + desktopModuleName); " is 165.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,RemoveModuleControl,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "RemoveModuleControl:" + moduleDefId); " is 166.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,RemoveModuleFromPortals,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "RemoveModuleFromPortals:" + friendlyName); " is 171.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,TabPermissionExists,The length of the statement  "            return TabPermissionController.GetTabPermissions(tabPermission.TabID' portalID).Cast<TabPermissionInfo>().Any(permission => permission.TabID == tabPermission.TabID && permission.RoleID == tabPermission.RoleID && permission.PermissionID == tabPermission.PermissionID); " is 267.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,FavIconsToPortalSettings,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "FavIconsToPortalSettings"); " is 156.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddIconToAllowedFiles,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddIconToAllowedFiles"); " is 153.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion440,The length of the statement  "                    string[] files = Directory.GetFiles(Globals.ApplicationMapPath + "\\Portals\\" + objPortal.PortalID + "\\Cache\\"' "*.htm"); " is 124.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion500,The length of the statement  "                        var tabPermission = new TabPermissionInfo { TabID = adminTab.TabID' PermissionID = permissionId' AllowAccess = true' RoleID = portal.AdministratorRoleId }; " is 155.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion500,The length of the statement  "                            tabPermission = new TabPermissionInfo { TabID = childTab.TabID' PermissionID = permissionId' AllowAccess = true' RoleID = portal.AdministratorRoleId }; " is 151.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion500,The length of the statement  "                                deployPermission = new DesktopModulePermissionInfo { PermissionID = permissionId' AllowAccess = true' RoleID = portal.RegisteredRoleId }; " is 137.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion500,The length of the statement  "                                deployPermission = new DesktopModulePermissionInfo { PermissionID = permissionId' AllowAccess = true' RoleID = portal.AdministratorRoleId }; " is 140.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                moduleDefId = AddModuleDefinition("Dashboard"' "Provides a snapshot of your DotNetNuke Application."' "Dashboard"' true' true); " is 127.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/Dashboard/Dashboard.ascx"' "icon_dashboard_32px.gif"' SecurityAccessLevel.Host' 0); " is 143.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                AddModuleControl(moduleDefId' "Export"' ""' "DesktopModules/Admin/Dashboard/Export.ascx"' ""' SecurityAccessLevel.Host' 0); " is 123.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                AddModuleControl(moduleDefId' "DashboardControls"' ""' "DesktopModules/Admin/Dashboard/DashboardControls.ascx"' ""' SecurityAccessLevel.Host' 0); " is 145.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                TabInfo dashboardPage = AddHostPage("Dashboard"' "Summary view of application and site settings."' "~/images/icon_dashboard_16px.gif"' "~/images/icon_dashboard_32px.gif"' true); " is 177.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                AddModuleControl(moduleDefId' "DashboardControls"' ""' "DesktopModules/Admin/Dashboard/DashboardControls.ascx"' ""' SecurityAccessLevel.Host' 0); " is 145.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/Extensions/Extensions.ascx"' "~/images/icon_extensions_32px.png"' SecurityAccessLevel.View' 0); " is 155.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                AddModuleControl(moduleDefId' "Edit"' "Edit Feature"' "DesktopModules/Admin/Extensions/EditExtension.ascx"' "~/images/icon_extensions_32px.png"' SecurityAccessLevel.Edit' 0); " is 174.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                AddModuleControl(moduleDefId' "PackageWriter"' "Package Writer"' "DesktopModules/Admin/Extensions/PackageWriter.ascx"' "~/images/icon_extensions_32px.png"' SecurityAccessLevel.Host' 0); " is 185.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                AddModuleControl(moduleDefId' "EditControl"' "Edit Control"' "DesktopModules/Admin/Extensions/Editors/EditModuleControl.ascx"' "~/images/icon_extensions_32px.png"' SecurityAccessLevel.Host' 0); " is 193.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                AddModuleControl(moduleDefId' "ImportModuleDefinition"' "Import Module Definition"' "DesktopModules/Admin/Extensions/Editors/ImportModuleDefinition.ascx"' "~/images/icon_extensions_32px.png"' SecurityAccessLevel.Host' 0); " is 221.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                AddModuleControl(moduleDefId' "BatchInstall"' "Batch Install"' "DesktopModules/Admin/Extensions/BatchInstall.ascx"' "~/images/icon_extensions_32px.png"' SecurityAccessLevel.Host' 0); " is 182.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                AddModuleControl(moduleDefId' "NewExtension"' "New Extension Wizard"' "DesktopModules/Admin/Extensions/ExtensionWizard.ascx"' "~/images/icon_extensions_32px.png"' SecurityAccessLevel.Host' 0); " is 192.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                AddModuleControl(moduleDefId' "UsageDetails"' "Usage Information"' "DesktopModules/Admin/Extensions/UsageDetails.ascx"' "~/images/icon_extensions_32px.png"' SecurityAccessLevel.Host' 0' ""' true); " is 196.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "                AddModuleControl(moduleDefId' "UsageDetails"' "Usage Information"' "DesktopModules/Admin/Extensions/UsageDetails.ascx"' "~/images/icon_extensions_32px.png"' SecurityAccessLevel.Host' 0' ""' true); " is 196.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            int moduleId = AddModuleToPage(definitionsPage' moduleDefId' "Module Definitions"' "~/images/icon_moduledefinitions_32px.gif"); " is 127.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            TabInfo extensionsPage = AddHostPage("Extensions"' "Install' add' modify and delete extensions' such as modules' skins and language packs."' "~/images/icon_extensions_16px.gif"' "~/images/icon_extensions_32px.png"' true); " is 221.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddAdminPages("Extensions"' "Install' add' modify and delete extensions' such as modules' skins and language packs."' "~/images/icon_extensions_16px.gif"' "~/images/icon_extensions_32px.png"' true' moduleDefId' "Extensions"' "~/images/icon_extensions_32px.png"); " is 262.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/Languages/languageeditor.ascx"' "~/images/icon_language_32px.gif"' SecurityAccessLevel.View' 0); " is 156.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddModuleControl(moduleDefId' "Edit"' "Edit Language"' "DesktopModules/Admin/Languages/EditLanguage.ascx"' "~/images/icon_language_32px.gif"' SecurityAccessLevel.Edit' 0); " is 171.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddModuleControl(moduleDefId' "EditResourceKey"' "Full Language Editor"' "DesktopModules/Admin/Languages/languageeditorext.ascx"' "~/images/icon_language_32px.gif"' SecurityAccessLevel.Edit' 0); " is 194.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddModuleControl(moduleDefId' "LanguageSettings"' "Language Settings"' "DesktopModules/Admin/Languages/LanguageSettings.ascx"' ""' SecurityAccessLevel.Edit' 0); " is 160.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddModuleControl(moduleDefId' "TimeZone"' "TimeZone Editor"' "DesktopModules/Admin/Languages/timezoneeditor.ascx"' "~/images/icon_language_32px.gif"' SecurityAccessLevel.Host' 0); " is 179.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddModuleControl(moduleDefId' "Verify"' "Resource File Verifier"' "DesktopModules/Admin/Languages/resourceverifier.ascx"' ""' SecurityAccessLevel.Host' 0); " is 155.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddModuleControl(moduleDefId' "PackageWriter"' "Language Pack Writer"' "DesktopModules/Admin/Languages/LanguagePackWriter.ascx"' ""' SecurityAccessLevel.Host' 0); " is 162.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddAdminPages("Languages"' "Manage Language Resources."' "~/images/icon_language_16px.gif"' "~/images/icon_language_32px.gif"' true' moduleDefId' "Language Editor"' "~/images/icon_language_32px.gif"); " is 200.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/Skins/editskins.ascx"' "~/images/icon_skins_32px.gif"' SecurityAccessLevel.View' 0); " is 144.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddAdminPages("Skins"' "Manage Skin Resources."' "~/images/icon_skins_16px.gif"' "~/images/icon_skins_32px.gif"' true' moduleDefId' "Skin Editor"' "~/images/icon_skins_32px.gif"); " is 179.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            moduleDefId = AddModuleDefinition("Skin Designer"' "Allows you to modify skin attributes."' "Skin Designer"' true' true); " is 121.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/SkinDesigner/Attributes.ascx"' "~/images/icon_skins_32px.gif"' SecurityAccessLevel.Host' 0); " is 152.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            TabInfo newPage = AddHostPage("What's New"' "Provides a summary of the major features for each release."' "~/images/icon_whatsnew_16px.gif"' "~/images/icon_whatsnew_32px.gif"' true); " is 182.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            moduleDefId = AddModuleDefinition("Console"' "Display children pages as icon links for navigation."' "Console"' "DotNetNuke.Modules.Console.Components.ConsoleController"' true' false' false); " is 191.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddModuleControl(moduleDefId' ""' "Console"' "DesktopModules/Admin/Console/ViewConsole.ascx"' ""' SecurityAccessLevel.Anonymous' 0); " is 132.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddModuleControl(moduleDefId' "Settings"' "Console Settings"' "DesktopModules/Admin/Console/Settings.ascx"' ""' SecurityAccessLevel.Admin' 0); " is 142.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            moduleDefId = AddModuleDefinition("Google Analytics"' "Configure Site Google Analytics settings."' "GoogleAnalytics"' false' false); " is 132.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddModuleControl(moduleDefId' ""' "Google Analytics"' "DesktopModules/Admin/Analytics/GoogleAnalyticsSettings.ascx"' ""' SecurityAccessLevel.Admin' 0); " is 151.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion510,The length of the statement  "            AddAdminPages("Google Analytics"' "Configure Site Google Analytics settings."' "~/images/icon_analytics_16px.gif"' "~/images/icon_analytics_32px.gif"' true' moduleDefId' "Google Analytics"' "~/images/icon_analytics_32px.gif"); " is 226.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion520,The length of the statement  "            AddModuleControl(Null.NullInteger' "ViewSource"' "View Module Source"' "Admin/Modules/ViewSource.ascx"' "~/images/icon_source_32px.gif"' SecurityAccessLevel.Host' 0' ""' true); " is 176.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion520,The length of the statement  "            int moduleDefId = AddModuleDefinition("Marketplace"' "Search for DotNetNuke modules' extension and skins."' "Marketplace"); " is 123.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion520,The length of the statement  "            AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/Marketplace/Marketplace.ascx"' "~/images/icon_marketplace_32px.gif"' SecurityAccessLevel.Host' 0); " is 158.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion520,The length of the statement  "            TabInfo newPage = AddHostPage("Marketplace"' "Search for DotNetNuke modules' extension and skins."' "~/images/icon_marketplace_16px.gif"' "~/images/icon_marketplace_32px.gif"' true); " is 182.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The length of the statement  "            AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/Languages/languageEnabler.ascx"' "~/images/icon_language_32px.gif"' SecurityAccessLevel.View' 0' ""' true); " is 167.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The length of the statement  "            AddModuleControl(moduleDefId' "Editor"' ""' "DesktopModules/Admin/Languages/languageeditor.ascx"' "~/images/icon_language_32px.gif"' SecurityAccessLevel.View' 0); " is 162.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The length of the statement  "            AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/ViewProfile/ViewProfile.ascx"' "~/images/icon_profile_32px.gif"' SecurityAccessLevel.View' 0); " is 154.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The length of the statement  "            AddModuleControl(moduleDefId' "Settings"' "Settings"' "DesktopModules/Admin/ViewProfile/Settings.ascx"' "~/images/icon_profile_32px.gif"' SecurityAccessLevel.Edit' 0); " is 167.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The length of the statement  "            AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/Sitemap/SitemapSettings.ascx"' "~/images/icon_analytics_32px.gif"' SecurityAccessLevel.View' 0); " is 156.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The length of the statement  "            AddAdminPages("Search Engine Sitemap"' "Configure the sitemap for submission to common search engines."' "~/images/icon_analytics_16px.gif"' "~/images/icon_analytics_32px.gif"' true' moduleDefId' "Search Engine Sitemap"' "~/images/icon_analytics_32px.gif"); " is 257.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The length of the statement  "            ProfileController.AddDefaultDefinition(Null.NullInteger' "Preferences"' "Photo"' "Image"' 0' properties.Count * 2 + 2' UserVisibilityMode.AllUsers' dataTypes); " is 159.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The length of the statement  "                    ProfileController.AddDefaultDefinition(portal.PortalID' "Preferences"' "Photo"' "Image"' 0' properties.Count * 2 + 2' UserVisibilityMode.AllUsers' dataTypes); " is 158.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The length of the statement  "                        File.Move(defaultPageTemplatePath' String.Format("{0}Templates\\Default_old.page.template"' portal.HomeDirectoryMapPath)); " is 122.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The length of the statement  "                        var userTab = TabController.Instance.GetTabByName(tabName' portal.PortalID) ?? TabController.DeserializeTab(userTabNode' null' portal.PortalID' PortalTemplateModuleAction.Merge); " is 178.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The length of the statement  "            AddModuleControl(moduleDefId' "EditModuleDefinition"' "Edit Module Definition"' "DesktopModules/Admin/Extensions/Editors/EditModuleDefinition.ascx"' "~/images/icon_extensions_32px.png"' SecurityAccessLevel.Host' 0); " is 215.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion540,The length of the statement  "            AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/ContentList/ContentList.ascx"' ""' SecurityAccessLevel.View' 0); " is 124.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion550,The length of the statement  "            AddModuleControl(moduleDefId' "TranslationStatus"' ""' "DesktopModules/Admin/Languages/TranslationStatus.ascx"' "~/images/icon_language_32px.gif"' SecurityAccessLevel.Edit' 0); " is 176.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion550,The length of the statement  "                                    var folderPermission = new FolderPermissionInfo(permission) { FolderID = folder.FolderID' UserID = Null.NullInteger' RoleID = roleId' AllowAccess = true }; " is 155.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion560,The length of the statement  "            AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/XmlMerge/XmlMerge.ascx"' "~/images/icon_configuration_32px.png"' SecurityAccessLevel.Host' 0); " is 154.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion560,The length of the statement  "            TabInfo hostPage = AddHostPage("Configuration Manager"' "Modify configuration settings for your site"' "~/images/icon_configuration_16px.png"' "~/images/icon_configuration_32px.png"' true); " is 189.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion560,The length of the statement  "            ModuleControlInfo moduleControl = ModuleControlController.GetModuleControlsByModuleDefinitionID(languageModule.ModuleDefID)["LanguageSettings"]; " is 144.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "            ProfileController.AddDefaultDefinition(Null.NullInteger' "Preferences"' "Photo"' "Image"' 0' properties.Count * 2 + 2' UserVisibilityMode.AllUsers' dataTypes); " is 159.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/LogViewer/LogViewer.ascx"' ""' SecurityAccessLevel.Admin' 0); " is 121.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddModuleControl(moduleDefId' "Edit"' "Edit Log Settings"' "DesktopModules/Admin/LogViewer/EditLogTypes.ascx"' ""' SecurityAccessLevel.Host' 0); " is 144.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddAdminPages("Log Viewer"' "View a historical log of database events such as event schedules' exceptions' account logins' module and page changes' user account activities' security role activities' etc."' "icon_viewstats_16px.gif"' "icon_viewstats_32px.gif"' true' moduleDefId' "Log Viewer"' "icon_viewstats_16px.gif"); " is 320.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                moduleDefId = AddModuleDefinition("Scheduler"' "Allows you to schedule tasks to be run at specified intervals."' "Scheduler"); " is 126.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/Scheduler/ViewSchedule.ascx"' ""' SecurityAccessLevel.Admin' 0); " is 124.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddModuleControl(moduleDefId' "Edit"' "Edit Schedule"' "DesktopModules/Admin/Scheduler/EditSchedule.ascx"' ""' SecurityAccessLevel.Host' 0); " is 140.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddModuleControl(moduleDefId' "History"' "Schedule History"' "DesktopModules/Admin/Scheduler/ViewScheduleHistory.ascx"' ""' SecurityAccessLevel.Host' 0); " is 153.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddModuleControl(moduleDefId' "Status"' "Schedule Status"' "DesktopModules/Admin/Scheduler/ViewScheduleStatus.ascx"' ""' SecurityAccessLevel.Host' 0); " is 150.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                newPage = AddHostPage("Schedule"' "Add' modify and delete scheduled tasks to be run at specified intervals."' "icon_scheduler_16px.gif"' "icon_scheduler_32px.gif"' true); " is 170.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                moduleDefId = AddModuleDefinition("SearchAdmin"' "The Search Admininstrator provides the ability to manage search settings."' "Search Admin"); " is 142.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/SearchAdmin/SearchAdmin.ascx"' ""' SecurityAccessLevel.Host' 0); " is 124.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                newPage = AddHostPage("Search Admin"' "Manage search settings associated with DotNetNuke's search capability."' "icon_search_16px.gif"' "icon_search_32px.gif"' true); " is 166.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                moduleDefId = AddModuleDefinition("SearchInput"' "The Search Input module provides the ability to submit a search to a given search results module."' "Search Input"' false' false); " is 180.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/SearchInput/SearchInput.ascx"' ""' SecurityAccessLevel.Anonymous' 0); " is 129.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddModuleControl(moduleDefId' "Settings"' "Search Input Settings"' "DesktopModules/Admin/SearchInput/Settings.ascx"' ""' SecurityAccessLevel.Edit' 0); " is 150.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                moduleDefId = AddModuleDefinition("SearchResults"' "The Search Reasults module provides the ability to display search results."' "Search Results"' false' false); " is 161.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/SearchResults/SearchResults.ascx"' ""' SecurityAccessLevel.Anonymous' 0); " is 133.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddModuleControl(moduleDefId' "Settings"' "Search Results Settings"' "DesktopModules/Admin/SearchResults/Settings.ascx"' ""' SecurityAccessLevel.Edit' 0); " is 154.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                moduleDefId = AddModuleDefinition("SiteWizard"' "The Administrator can use this user-friendly wizard to set up the common Extensions of the Portal/Site."' "Site Wizard"); " is 170.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/SiteWizard/Sitewizard.ascx"' ""' SecurityAccessLevel.Admin' 0); " is 123.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddAdminPages("Site Wizard"' "Configure portal settings' page design and apply a site template using a step-by-step wizard."' "icon_wizard_16px.gif"' "icon_wizard_32px.gif"' true' moduleDefId' "Site Wizard"' "icon_wizard_16px.gif"); " is 232.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                DesktopModuleInfo objDesktopModuleInfo = DesktopModuleController.GetDesktopModuleByModuleName("Security"' Null.NullInteger); " is 124.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                moduleDefId = ModuleDefinitionController.GetModuleDefinitionByFriendlyName("User Accounts"' objDesktopModuleInfo.DesktopModuleID).ModuleDefID; " is 142.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                newPage = AddHostPage("Superuser Accounts"' "Manage host user accounts."' "icon_users_16px.gif"' "icon_users_32px.gif"' true); " is 126.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "            AddModuleControl(moduleDefId' "EditGroup"' "Edit Role Groups"' "DesktopModules/Admin/Security/EditGroups.ascx"' "icon_securityroles_32px.gif"' SecurityAccessLevel.Edit' Null.NullInteger); " is 187.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "            AddModuleControl(moduleDefId' "UserSettings"' "Manage User Settings"' "DesktopModules/Admin/Security/UserSettings.ascx"' "~/images/settings.gif"' SecurityAccessLevel.Edit' Null.NullInteger); " is 190.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "            AddModuleControl(moduleDefId' "ManageProfile"' "Manage Profile Definition"' "DesktopModules/Admin/Security/ProfileDefinitions.ascx"' "icon_users_32px.gif"' SecurityAccessLevel.Edit' Null.NullInteger); " is 200.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "            AddModuleControl(moduleDefId' "EditProfileProperty"' "Edit Profile Property Definition"' "DesktopModules/Admin/Security/EditProfileDefinition.ascx"' "icon_users_32px.gif"' SecurityAccessLevel.Edit' Null.NullInteger); " is 216.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "            AddModuleControl(moduleDefId' "UserSettings"' "Manage User Settings"' "DesktopModules/Admin/Security/UserSettings.ascx"' "~/images/settings.gif"' SecurityAccessLevel.Edit' Null.NullInteger); " is 190.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "            AddModuleControl(Null.NullInteger' "Profile"' "Profile"' "DesktopModules/Admin/Security/ManageUsers.ascx"' "icon_users_32px.gif"' SecurityAccessLevel.Anonymous' Null.NullInteger); " is 179.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "            AddModuleControl(Null.NullInteger' "SendPassword"' "Send Password"' "DesktopModules/Admin/Security/SendPassword.ascx"' ""' SecurityAccessLevel.Anonymous' Null.NullInteger); " is 172.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "            AddModuleControl(Null.NullInteger' "ViewProfile"' "View Profile"' "DesktopModules/Admin/Security/ViewProfile.ascx"' "icon_users_32px.gif"' SecurityAccessLevel.Anonymous' Null.NullInteger); " is 188.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                moduleDefId = AddModuleDefinition("Solutions"' "Browse additional solutions for your application."' "Solutions"' false' false); " is 127.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/Solutions/Solutions.ascx"' ""' SecurityAccessLevel.Admin' 0); " is 121.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The length of the statement  "                AddAdminPages("Solutions"' "DotNetNuke Solutions Explorer page provides easy access to locate free and commercial DotNetNuke modules' skin and more."' "icon_solutions_16px.gif"' "icon_solutions_32px.gif"' true' moduleDefId' "Solutions Explorer"' "icon_solutions_32px.gif"); " is 273.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion601,The length of the statement  "                                var deployPermission = new DesktopModulePermissionInfo { PermissionID = permission.PermissionID' AllowAccess = true' RoleID = portal.AdministratorRoleId }; " is 155.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion610,The length of the statement  "            AddModuleControl(moduleDefId' "LocalizePages"' "Localize Pages"' "DesktopModules/Admin/Languages/LocalizePages.ascx"' "~/images/icon_language_32px.gif"' SecurityAccessLevel.Edit' 0' Null.NullString' true); " is 205.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion610,The length of the statement  "            AddModuleControl(moduleDefId' "Store"' "Store Details"' "DesktopModules/Admin/Extensions/Store.ascx"' "~/images/icon_extensions_32px.png"' SecurityAccessLevel.Host' 0); " is 168.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion610,The length of the statement  "            var portalPackage = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.Name == "DotNetNuke.Portals"); " is 122.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion610,The length of the statement  "            AddModuleControl(Null.NullInteger' "MobilePreview"' "Mobile Preview"' "DesktopModules/Admin/MobilePreview/Preview.ascx"' string.Empty' SecurityAccessLevel.Admin' Null.NullInteger); " is 180.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion612,The length of the statement  "            var portalPackage = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.Name == "DotNetNuke.Portals"); " is 122.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion612,The length of the statement  "                    "The Super User can manage the various parent and child sites within the install instance. This module allows you to add a new site' modify an existing site' and delete a site."; " is 178.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion612,The length of the statement  "                    "Administrators can manage the Pages within the site. This module allows you to create a new page' modify an existing page' delete pages' change the page order' and change the hierarchical page level."; " is 202.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion612,The length of the statement  "                    "Administrators can manage the Vendors and Banners associated to the site. This module allows you to add a new vendor' modify an existing vendor' and delete a vendor."; " is 168.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion612,The length of the statement  "                    "Administrators can view the details of visitors using their site. There are a variety of reports available to display information regarding site usage' membership' and volumes."; " is 179.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion612,The length of the statement  "            portalPackage = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.Name == "DotNetNuke.SiteWizard"); " is 121.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion612,The length of the statement  "                    "Administrators can manage the security roles defined for their site. The module allows you to add new security roles' modify existing security roles' delete security roles' and manage the users assigned to security roles."; " is 224.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion612,The length of the statement  "            portalPackage = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.Name == "DotNetNuke.LogViewer"); " is 120.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion612,The length of the statement  "            portalPackage = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.Name == "DotNetNuke.Google Analytics"); " is 127.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion621,The length of the statement  "                                    <span data-bind=""text: EmptyLocationText' visible: Street().length=0 && Location().length==0 && Country().length==0 && PostalCode().length==0""></span> " is 152.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion621,The length of the statement  "                                    <span data-bind=""text: EmptyGetInTouchText' visible: Telephone().length==0 && Email().length==0 && Website().length==0 && IM().length==0""></span> " is 147.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion621,The length of the statement  "                                    <li data-bind=""visible: Telephone().length > 0""><strong><span data-bind=""text: TelephoneText"">:</span></strong> <span data-bind=""text: Telephone()""></span></li> " is 166.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion621,The length of the statement  "                                    <li data-bind=""visible: Email().length > 0""><strong><span data-bind=""text: EmailText"">:</span></strong> <span data-bind=""text: Email()""></span></li> " is 154.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion621,The length of the statement  "                                    <li data-bind=""visible: Website().length > 0""><strong><span data-bind=""text: WebsiteText"">:</span></strong> <span data-bind=""text: Website()""></span></li> " is 160.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion621,The length of the statement  "                                    <li data-bind=""visible: IM().length > 0""><strong><span data-bind=""text: IMText"">:</span></strong> <span data-bind=""text: IM()""></span></li> " is 145.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion700,The length of the statement  "                AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/AdvancedSettings/AdvancedSettings.ascx"' ""' SecurityAccessLevel.Admin' 0); " is 135.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion710,The length of the statement  "                    foreach (var alias in PortalAliasController.Instance.GetPortalAliasesByPortalId(portal.PortalID).Where(alias => alias.HTTPAlias == defaultAlias)) " is 145.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion710,The length of the statement  "            var contentTypeFile = (from t in typeController.GetContentTypes() where t.ContentType == "File" select t).SingleOrDefault(); " is 124.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion710,The length of the statement  "            var fileContentType = (from t in typeController.GetContentTypes() where t.ContentType == "File" select t).SingleOrDefault(); " is 124.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion710,The length of the statement  "                AddAdminPages("Search Admin"' "Manage search settings associated with DotNetNuke's search capability."' "~/Icons/Sigma/Search_16x16_Standard.png"' "~/Icons/Sigma/Search_32x32_Standard.png"' true' modDef.ModuleDefID' "Search Admin"' ""); " is 236.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion712,The length of the statement  "                    foreach (var module in ModuleController.Instance.GetTabModules(tabId).Where(m => m.Value.ModuleDefinition.FriendlyName == "Console")) " is 133.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion712,The length of the statement  "                foreach (var module in ModuleController.Instance.GetTabModules(hostTabId).Where(m => m.Value.ModuleDefinition.FriendlyName == "Console")) " is 137.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion720,The length of the statement  "            AddModuleControl(moduleDefId' ""' ""' "DesktopModules/Admin/ModuleCreator/CreateModule.ascx"' "~/DesktopModules/Admin/ModuleCreator/icon.png"' SecurityAccessLevel.Host' 0); " is 172.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion720,The length of the statement  "                var package = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.PackageID == desktopModule.PackageID); " is 124.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion720,The length of the statement  "            var fileContentType = (from t in typeController.GetContentTypes() where t.ContentType == "File" select t).SingleOrDefault(); " is 124.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion720,The length of the statement  "            int advancedFeaturesTabId = TabController.GetTabByTabPath(Null.NullInteger' "//Host//ProfessionalFeatures"' Null.NullString); " is 125.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion721,The length of the statement  "                //the username maybe html encode when register in 7.1.2' it will caught unicode charactors changed' need use InputFilter to correct the value. " is 142.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion721,The length of the statement  "                using (var reader = DataProvider.Instance().ExecuteSQL("SELECT UserID' Username FROM {databaseOwner}[{objectQualifier}Users] WHERE Username LIKE '%&%'")) " is 153.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion722,The length of the statement  "            var pkg = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.Name == "DotNetNuke.AdvancedSettings"); " is 121.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion733,The length of the statement  "            var notificationType = new NotificationType { Name = "NewUnauthorizedUserRegistration"' Description = "New Unauthorized User Registration Notification" }; " is 154.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,CreateFileContentItem,The length of the statement  "            var contentTypeFile = (from t in typeController.GetContentTypes() where t.ContentType == "File" select t).SingleOrDefault(); " is 124.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ImportDocumentLibraryCategories,The length of the statement  "            var defaultTags = (from v in vocabularyController.GetVocabularies() where v.IsSystem && v.Name == "Tags" select v).SingleOrDefault(); " is 133.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateFoldersForParentId,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "UpgradeFolders"); " is 146.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateFoldersForParentId,The length of the statement  "                HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' string.Format("Converting old Folders to new format. Total: {0} [Remaining: {1}]<br/>"' foldersToConvert' foldersRemaining)); " is 182.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateFoldersForParentId,The length of the statement  "                HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' string.Format("Conversion of old Folders Completed. Total Converted: {0}<br/>"' foldersToConvert)); " is 156.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UninstallPackage,The length of the statement  "	    DnnInstallLogger.InstallLogInfo(string.Concat(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile)' "Uninstallation of Package:"' packageName' " Type:"' packageType' " Version:"' version)); " is 230.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddMissingNotificationTypes,The length of the statement  "                    NotificationsController.Instance.SetNotificationTypeActions(friendRequestTypeActions' friendRequestType.NotificationTypeId); " is 124.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddMissingNotificationTypes,The length of the statement  "                    NotificationsController.Instance.SetNotificationTypeActions(followBackRequestTypeActions' followBackRequestType.NotificationTypeId); " is 132.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddMissingNotificationTypes,The length of the statement  "                    var translationSubmittedType = new NotificationType { Name = notificationTypeName' Description = "Translation Submitted" }; " is 123.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddCoreNotificationTypesFor620,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddCoreNotificationTypesFor620"); " is 162.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ConvertOldMessages,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "ConvertOldMessages"); " is 150.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ConvertOldMessages,The length of the statement  "                HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' string.Format("Converting old Messages to new format. Total: {0} [Remaining: {1}]<br/>"' messagesToConvert' messagesRemaining)); " is 185.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ConvertOldMessages,The length of the statement  "                HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' string.Format("Conversion of old Messages Completed. Total Converted: {0}<br/>"' messagesToConvert)); " is 158.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ReplaceMessagingModule,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "ReplaceMessagingModule"); " is 154.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,MovePhotoProperty,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "MovePhotoProperty"); " is 149.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateChildPortalsDefaultPage,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "UpdateChildPortalsDefaultPage"); " is 161.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,CopyGettingStartedStyles,The length of the statement  "                var gettingStartedTabId = PortalController.GetPortalSettingAsInteger("GettingStartedTabId"' portal.PortalID' Null.NullInteger); " is 127.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,RemoveGettingStartedPages,The length of the statement  "                    var gettingStartedTabId = PortalController.GetPortalSettingAsInteger("GettingStartedTabId"' portal.PortalID' Null.NullInteger); " is 127.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddAdminPage,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddAdminPage:" + tabName); " is 155.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddAdminPage,The length of the statement  "                return AddPage(adminPage' tabName' description' tabIconFile' tabIconFileLarge' isVisible' tabPermissionCollection' true); " is 121.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddHostPage,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddHostPage:" + tabName); " is 154.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddHostPage,The length of the statement  "                return AddPage(hostPage' tabName' description' tabIconFile' tabIconFileLarge' isVisible' new TabPermissionCollection()' true); " is 126.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleToPage,The length of the statement  "			return AddModuleToPage(page' moduleDefId' moduleTitle' moduleIconFile' inheritPermissions' true' Globals.glbDefaultPane); " is 121.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleToPage,The length of the statement  "			DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddModuleToPage:" + moduleDefId); " is 162.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddModuleToPage,The length of the statement  "			DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogEnd"' Localization.Localization.GlobalResourceFile) + "AddModuleToPage:" + moduleDefId); " is 160.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddPortal,The length of the statement  "                DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddPortal:" + domain); " is 151.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddPortal,The length of the statement  "                                            HtmlUtils.WriteFeedback(HttpContext.Current.Response' indent' "Creating Site Alias: " + portalAlias.InnerText + "<br>"); " is 120.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddPortal,The length of the statement  "                    HtmlUtils.WriteFeedback(HttpContext.Current.Response' indent' "<font color='red'>Error!</font> " + ex.Message + ex.StackTrace + "<br>"); " is 136.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,CreateUserInfo,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "CreateUserInfo:" + userName); " is 158.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,FindBestTemplate,The length of the statement  "                match = defaultTemplates.FirstOrDefault(x => x.CultureCode.ToLowerInvariant().StartsWith(currentCulture.Substring(0' 2))); " is 122.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,CheckUpgrade,The length of the statement  "                    warnings = BuildUserTable(dr' "Duplicate SuperUsers"' "We have detected that the following SuperUsers have duplicate entries as Portal Users. Although' no longer supported' these users may have been created in early Betas of DNN v3.0. You need to be aware that after the upgrade' these users will only be able to log in using the Super User Account's password."); " is 363.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,CheckUpgrade,The length of the statement  "                        warnings += BuildUserTable(dr' "Duplicate Portal Users"' "We have detected that the following Users have duplicate entries (they exist in more than one portal). You need to be aware that after the upgrade' the password for some of these users may have been automatically changed (as the system now only uses one password per user' rather than one password per user per portal). It is important to remember that your Users can always retrieve their password using the Password Reminder feature' which will be sent to the Email addess shown in the table."); " is 555.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,CheckUpgrade,The length of the statement  "                                    " users. As the users and their profiles are transferred to a new format' it is estimated that the script will take ~" + time.ToString("F2") + " is 142.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,DeleteFiles,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "DeleteFiles:" + stringVersion); " is 160.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ExecuteScripts,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "ExecuteScripts:" + strProviderPath); " is 165.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetSuperUser,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "GetSuperUser"); " is 144.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetUpgradeScripts,The length of the statement  "			Array.Sort(files); // The order of the returned file names is not guaranteed on certain NAS systems; use the Sort method if a specific sort order is required. " is 158.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetUpgradeScripts,The length of the statement  "            Logger.TraceFormat("GetUpgradedScripts databaseVersion:{0} applicationVersion:{1}"' databaseVersion' ApplicationVersion); " is 121.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetUpgradeScripts,The length of the statement  "                        if (version > databaseVersion && version <= ApplicationVersion && GetFileName(file).Length == 9 + DefaultProvider.Length) " is 121.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetUpgradeScripts,The length of the statement  "                        if (version == databaseVersion && version <= ApplicationVersion && GetFileName(file).Length == 9 + DefaultProvider.Length) " is 122.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddAvailableIncrementalFiles,The length of the statement  "			Array.Sort(files); // The order of the returned file names is not guaranteed; use the Sort method if a specific sort order is required. " is 135.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InitialiseHostSettings,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "InitialiseHostSettings"); " is 154.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallDatabase,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "InstallDatabase:" + Globals.FormatVersion(version)); " is 181.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallDatabase,The length of the statement  "                HtmlUtils.WriteFeedback(HttpContext.Current.Response' 0' "Installing Version: " + Globals.FormatVersion(version) + "<br>"); " is 123.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallDatabase,The length of the statement  "                message = (from XmlNode scriptNode in node.SelectNodes("script") select scriptNode.InnerText + "." + defaultProvider).Aggregate(message' (current' script) => current + ExecuteScript(providerPath + script' writeFeedback)); " is 221.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallDNN,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "InstallDNN:" + strProviderPath); " is 161.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallDNN,The length of the statement  "                                HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' "<font color='green'>Successfully Installed Site " + portalId + ":</font><br>"); " is 137.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallFiles,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "InstallFiles"); " is 144.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallPackage,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "InstallPackage:" + file); " is 154.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallPackage,The length of the statement  "                HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' "Installing Package File " + Path.GetFileNameWithoutExtension(file) + ": "); " is 133.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallPackage,The length of the statement  "            var installer = new Installer.Installer(new FileStream(file' FileMode.Open' FileAccess.Read)' Globals.ApplicationMapPath' true' deleteTempFolder); " is 146.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallPackage,The length of the statement  "                        var message = string.Format(Localization.Localization.GetString("InstallPackageError"' Localization.Localization.ExceptionsResourceFile)' file' "Manifest file missing"); " is 169.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetInstallPackages,The length of the statement  "            var packageTypes = new string[] { "Library"' "Module"' "Skin"' "Container"' "JavaScriptLibrary"' "Language"' "Provider"' "AuthSystem"' "Package" }; " is 147.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetInstallPackages,The length of the statement  "                            d => sortedPackages.Any(p => p.Value.Name.Equals(d.PackageName' StringComparison.OrdinalIgnoreCase) && p.Value.Version >= d.Version) ) ) " is 136.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ParsePackagesFromApplicationPath,The length of the statement  "                Array.Sort(files); // The order of the returned file names is not guaranteed on certain NAS systems; use the Sort method if a specific sort order is required. " is 158.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ParsePackagesFromApplicationPath,The length of the statement  "			                var oldPackages = packages.Where(kvp => kvp.Value.FriendlyName.Equals(package.FriendlyName' StringComparison.OrdinalIgnoreCase) " is 127.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallPackages,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "InstallPackages:" + packageType); " is 162.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,IsNETFrameworkCurrent,The length of the statement  "                    XPathNavigator configNavigator = configFile.CreateNavigator().SelectSingleNode("//configuration/system.web/httpRuntime|//configuration/location/system.web/httpRuntime"); " is 169.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,RemoveAdminPages,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "RemoveAdminPages:" + tabPath); " is 159.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,RemoveHostPage,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "RemoveHostPage:" + pageName); " is 158.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,TryUpgradeNETFramework,The length of the statement  "                            EventLogController.Instance.AddLog("UpgradeNet"' "Upgraded Site to .NET 3.5"' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.HOST_ALERT); " is 229.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,TryUpgradeNETFramework,The length of the statement  "                            EventLogController.Instance.AddLog("UpgradeNet"' string.Format("Upgrade to .NET 3.5 failed. Error reported during attempt to update:{0}"' message)' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.HOST_ALERT); " is 299.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeApplication,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + Localization.Localization.GetString("ApplicationUpgrades"' Localization.Localization.GlobalResourceFile) + ": " + version.ToString(3)); " is 263.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeApplication,The length of the statement  "                HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' Localization.Localization.GetString("ApplicationUpgrades"' Localization.Localization.GlobalResourceFile) + " : " + GetStringVersionWithRevision(version)); " is 211.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeApplication,The length of the statement  "                    DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogEnd"' Localization.Localization.GlobalResourceFile) + Localization.Localization.GetString("ApplicationUpgrades"' Localization.Localization.GlobalResourceFile) + ": " + version.ToString(3)); " is 261.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeApplication,The length of the statement  "                    using (StreamWriter streamWriter = File.CreateText(providerPath + Globals.FormatVersion(version) + "_Application.log.resources")) " is 129.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion941,The length of the statement  "            // It's possible previous versions of DNN created invalid binding redirects with <dependentAssembly xmlns="">' which are ignored " is 128.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion941,The length of the statement  "            var invalidDependentAssemblies = webConfig.SelectNodes("/configuration/runtime/ab:assemblyBinding/dependentAssembly"' ns); " is 122.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion941,The length of the statement  "                var assemblyIdentity = dependentAssembly.ChildNodes.Cast<XmlNode>().SingleOrDefault(n => n.LocalName.Equals("assemblyIdentity"' StringComparison.Ordinal)); " is 155.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion941,The length of the statement  "                var dependentAssemblyXPath = $"/configuration/runtime/ab:assemblyBinding/ab:dependentAssembly[ab:assemblyIdentity/@name='{name}'][ab:assemblyIdentity/@publicKeyToken='{publicKeyToken}']"; " is 187.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateConfig,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "UpdateConfig:" + stringVersion); " is 161.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateConfig,The length of the statement  "            string strExceptions = UpdateConfig(providerPath' Globals.InstallMapPath + "Config\\" + stringVersion + ".config"' version' "Core Upgrade"); " is 140.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateConfig,The length of the statement  "                DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogEnd"' Localization.Localization.GlobalResourceFile) + "UpdateConfig:" + stringVersion); " is 159.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateConfig,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "UpdateConfig:" + version.ToString(3)); " is 167.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateConfig,The length of the statement  "                DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogEnd"' Localization.Localization.GlobalResourceFile) + "UpdateConfig:" + version.ToString(3)); " is 165.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateConfig,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "UpdateConfig:" + version.ToString(3)); " is 167.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateConfig,The length of the statement  "                DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogEnd"' Localization.Localization.GlobalResourceFile) + "UpdateConfig:" + version.ToString(3)); " is 165.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeDNN,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "UpgradeDNN:" + Globals.FormatVersion(ApplicationVersion)); " is 187.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeDNN,The length of the statement  "            HtmlUtils.WriteFeedback(HttpContext.Current.Response' 0' "Upgrading to Version: " + Globals.FormatVersion(ApplicationVersion) + "<br/>"); " is 137.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeDNN,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("GeneralUpgrades"' Localization.Localization.GlobalResourceFile)); " is 134.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeIndicator,The length of the statement  "            return UpgradeIndicator(version' DotNetNukeContext.Current.Application.Type' DotNetNukeContext.Current.Application.Name' ""' isLocal' isSecureConnection); " is 154.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeIndicator,The length of the statement  "                    var moduleType = (from m in InstalledModulesController.GetInstalledModules() where m.ModuleName == packageName select m).SingleOrDefault(); " is 139.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeRedirect,The length of the statement  "            return UpgradeRedirect(ApplicationVersion' DotNetNukeContext.Current.Application.Type' DotNetNukeContext.Current.Application.Name' ""); " is 135.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeVersion,The length of the statement  "            DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "UpgradeVersion:" + scriptFile); " is 160.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeVersion,The length of the statement  "                log.AddProperty("Upgraded DotNetNuke"' "Version: " + Globals.FormatVersion(version) + "' Iteration:" + version.Revision); " is 121.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeVersion,The length of the statement  "                DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "UpgradeVersion:" + scriptFile); " is 160.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateNewtonsoftVersion,The length of the statement  "                            var matchedFiles =Directory.GetFiles(Path.Combine(Globals.ApplicationMapPath' "Install\\Module")' "Newtonsoft.Json_*_Install.zip"); " is 131.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ActivateLicense,The length of the statement  "            var isLicensable = (File.Exists(HttpContext.Current.Server.MapPath("~\\bin\\DotNetNuke.Professional.dll")) || File.Exists(HttpContext.Current.Server.MapPath("~\\bin\\DotNetNuke.Enterprise.dll"))); " is 196.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ActivateLicense,The length of the statement  "                HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' Localization.Localization.GetString("ActivatingLicense"' Localization.Localization.GlobalResourceFile)); " is 161.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ActivateLicense,The length of the statement  "                    dynamic licenseActivation = Reflection.CreateObject(Reflection.CreateType("DotNetNuke.Professional.LicenseActivation.ViewLicx")); " is 129.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ActivateLicense,The length of the statement  "                    licenseActivation.AutoActivation(licenseConfig.AccountEmail' licenseConfig.InvoiceNumber' licenseConfig.WebServer' licenseConfig.LicenseType' sku); " is 147.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,RemoveInvalidAntiForgeryCookie,The length of the statement  "                var cookieSuffix = Convert.ToBase64String(Encoding.UTF8.GetBytes(appPath)).Replace('+'' '.').Replace('/'' '-').Replace('='' '_'); " is 129.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,CheckFipsCompilanceAssemblies,The length of the statement  "            if (CryptoConfig.AllowOnlyFipsAlgorithms && HostController.Instance.GetString(FipsCompilanceAssembliesCheckedKey) != currentVersion) " is 132.
Long Statement,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,NewtonsoftNeedUpdate,The length of the statement  "                "/configuration/runtime/ab:assemblyBinding/ab:dependentAssembly[ab:assemblyIdentity/@name='Newtonsoft.Json']/ab:bindingRedirect"' nsmgr); " is 137.
Long Statement,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,SetInstallConfig,The length of the statement  "                    versionNode = AppendNewXmlNode(ref installTemplate' ref dotnetnukeNode' "installCulture"' installConfig.InstallCulture); " is 120.
Long Statement,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,SetInstallConfig,The length of the statement  "                XmlNode folderMappingsNode = installTemplate.SelectSingleNode("//dotnetnuke/"+FolderMappingsConfigController.Instance.ConfigNode); " is 130.
Long Statement,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,SetInstallConfig,The length of the statement  "                    folderMappingsNode = AppendNewXmlNode(ref installTemplate' ref dotnetnukeNode' FolderMappingsConfigController.Instance.ConfigNode' installConfig.FolderMappingsSettings); " is 169.
Long Statement,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,SetInstallConfig,The length of the statement  "                AppendNewXmlNode(ref installTemplate' ref connectionNode' "integrated"' installConfig.Connection.Integrated.ToString().ToLowerInvariant()); " is 139.
Long Statement,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,SetInstallConfig,The length of the statement  "                AppendNewXmlNode(ref installTemplate' ref connectionNode' "runasdbowner"' installConfig.Connection.RunAsDbowner.ToString().ToLowerInvariant()); " is 143.
Long Statement,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,SetInstallConfig,The length of the statement  "                AppendNewXmlNode(ref installTemplate' ref connectionNode' "upgradeconnectionstring"' installConfig.Connection.UpgradeConnectionString); " is 135.
Long Statement,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,GetInstallConfig,The length of the statement  "                installConfig.InstallCulture = XmlUtils.GetNodeValue(rootNode.CreateNavigator()' "installCulture") ?? Localization.Localization.SystemLocale; " is 141.
Long Statement,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,GetInstallConfig,The length of the statement  "                connectionConfig.Integrated = XmlUtils.GetNodeValue(connectionNode.CreateNavigator()' "integrated").ToLowerInvariant() == "true"; " is 129.
Long Statement,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,GetInstallConfig,The length of the statement  "                connectionConfig.RunAsDbowner = XmlUtils.GetNodeValue(connectionNode.CreateNavigator()' "runasdbowner").ToLowerInvariant() == "true"; " is 133.
Long Statement,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,GetInstallConfig,The length of the statement  "                connectionConfig.UpgradeConnectionString = XmlUtils.GetNodeValue(connectionNode.CreateNavigator()' "upgradeconnectionstring"); " is 126.
Long Statement,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,GetInstallConfig,The length of the statement  "                superUserConfig.UpdatePassword = XmlUtils.GetNodeValue(superUserNode.CreateNavigator()' "updatepassword").ToLowerInvariant() == "true"; " is 135.
Long Statement,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,GetInstallConfig,The length of the statement  "                        installConfig.Settings.Add(new HostSettingConfig {Name = settingNode.Name' Value = settingNode.InnerText' IsSecure = settingIsSecure}); " is 135.
Long Statement,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,GetInstallConfig,The length of the statement  "            var folderMappingsNode = installTemplate.SelectSingleNode("//dotnetnuke/"+FolderMappingsConfigController.Instance.ConfigNode); " is 126.
Long Statement,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,IsAbleToPerformDatabaseActions,The length of the statement  "            var databaseActions = string.Format(@"CREATE TABLE {0}([fakeColumn] [int] NULL); SELECT * FROM {0}; DROP TABLE {0};"' fakeName); " is 128.
Long Statement,DotNetNuke.Services.Cache,FBCachingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cache\FBCachingProvider.cs,CreateCacheFile,The length of the statement  "                //permissions issue creating cache file or more than one thread may have been trying to write the cache file simultaneously " is 123.
Long Statement,DotNetNuke.Services.Cache,FBCachingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cache\FBCachingProvider.cs,DeleteCacheFile,The length of the statement  "                //an error occurred when trying to delete the cache file - this is serious as it means that the cache will not be synchronized " is 126.
Long Statement,DotNetNuke.Services.Cache,FBCachingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cache\FBCachingProvider.cs,PurgeCacheFiles,The length of the statement  "            return string.Format("Cache Synchronization Files Processed: " + f.Length + "' Purged: " + PurgedFiles + "' Errors: " + PurgeErrors); " is 133.
Long Statement,DotNetNuke.Services.Cache,CachingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cache\CachingProvider.cs,Insert,The length of the statement  "            Insert(cacheKey' itemToCache' null as DNNCacheDependency' System.Web.Caching.Cache.NoAbsoluteExpiration' System.Web.Caching.Cache.NoSlidingExpiration' CacheItemPriority.Default' null); " is 184.
Long Statement,DotNetNuke.Services.Cache,CachingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cache\CachingProvider.cs,Insert,The length of the statement  "            Insert(cacheKey' itemToCache' dependency' System.Web.Caching.Cache.NoAbsoluteExpiration' System.Web.Caching.Cache.NoSlidingExpiration' CacheItemPriority.Default' null); " is 168.
Long Statement,DotNetNuke.Services.Cache,CachingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cache\CachingProvider.cs,Insert,The length of the statement  "		    Cache.Insert(cacheKey' itemToCache' dependency == null ? null : dependency.SystemCacheDependency' absoluteExpiration' slidingExpiration' priority' onRemoveCallback); " is 165.
Long Statement,DotNetNuke.Services.Journal,JournalDataServiceImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\JournalDataServiceImpl.cs,Journal_Get,The length of the statement  "            return _provider.ExecuteReader("Journal_Get"' portalId' currentUserId' journalId' includeAllItems' isDeleted' securityCheck); " is 125.
Long Statement,DotNetNuke.Services.Journal,JournalDataServiceImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\JournalDataServiceImpl.cs,Journal_Update,The length of the statement  "            journalId = _provider.ExecuteScalar<int>("Journal_Update"' portalId' journalId' journalTypeId' currentUserId' profileId' " is 120.
Long Statement,DotNetNuke.Services.Journal,JournalDataServiceImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\JournalDataServiceImpl.cs,Journal_Update,The length of the statement  "            journalId = _provider.ExecuteScalar<int>("Journal_Update"' portalId' journalId' journalTypeId' currentUserId' profileId' " is 120.
Long Statement,DotNetNuke.Services.Journal,JournalDataServiceImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Data\JournalDataServiceImpl.cs,Journal_Comment_Save,The length of the statement  "            commentId = _provider.ExecuteScalar<int>("Journal_Comment_Save"' journalId' commentId' userId' comment' xml' DataProvider.Instance().GetNull(dateUpdated)); " is 155.
Long Statement,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,GetMinorSize,The length of the statement  "            double calculated = (Convert.ToDouble(imageMinorSize) * Convert.ToDouble(thumbnailMajorSize)) / Convert.ToDouble(imageMajorSize); " is 129.
Long Statement,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,IsImageFile,The length of the statement  "            return (Globals.glbImageFileTypes + "'").IndexOf(Path.GetExtension(fileName).Replace("."' "") + "'"' StringComparison.InvariantCultureIgnoreCase) > -1;         " is 151.
Long Statement,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,SaveJournalItem,The length of the statement  "                    journalItem.ItemData.Title = portalSecurity.InputFilter(journalItem.ItemData.Title' PortalSecurity.FilterFlag.NoMarkup); " is 120.
Long Statement,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,SaveJournalItem,The length of the statement  "                    journalItem.ItemData.Description = portalSecurity.InputFilter(journalItem.ItemData.Description' PortalSecurity.FilterFlag.NoScripting); " is 135.
Long Statement,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,SaveJournalItem,The length of the statement  "                    journalItem.ItemData.ImageUrl = portalSecurity.InputFilter(journalItem.ItemData.ImageUrl' PortalSecurity.FilterFlag.NoScripting); " is 129.
Long Statement,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,UpdateJournalItem,The length of the statement  "                    journalItem.ItemData.Title = portalSecurity.InputFilter(journalItem.ItemData.Title' PortalSecurity.FilterFlag.NoMarkup); " is 120.
Long Statement,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,UpdateJournalItem,The length of the statement  "                    journalItem.ItemData.ImageUrl = portalSecurity.InputFilter(journalItem.ItemData.ImageUrl' PortalSecurity.FilterFlag.NoScripting); " is 129.
Long Statement,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,GetJournalItem,The length of the statement  "            return CBO.FillObject<JournalItem>(_dataService.Journal_Get(portalId' currentUserId' journalId' includeAllItems' isDeleted' securityCheck)); " is 140.
Long Statement,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,SaveComment,The length of the statement  "            //objCommentInfo.Comment = portalSecurity.Remove(objCommentInfo.Comment' DotNetNuke.Security.PortalSecurity.ConfigType.ListController' "ProfanityFilter"' DotNetNuke.Security.PortalSecurity.FilterScope.PortalList); " is 213.
Long Statement,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,SaveComment,The length of the statement  "            comment.CommentId = _dataService.Journal_Comment_Save(comment.JournalId' comment.CommentId' comment.UserId' comment.Comment' xml' Null.NullDate); " is 145.
Long Statement,DotNetNuke.Services.ModuleCache,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ModuleCache\FileProvider.cs,PurgeCache,The length of the statement  "                throw new IOException(String.Format("Deleted {0} files' however' some files are locked.  Could not delete the following files: {1}"' i' filesNotDeleted)); " is 154.
Long Statement,DotNetNuke.Services.ModuleCache,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ModuleCache\FileProvider.cs,PurgeExpiredItems,The length of the statement  "                    throw new IOException(String.Format("Deleted {0} files' however' some files are locked.  Could not delete the following files: {1}"' i' filesNotDeleted)); " is 154.
Long Statement,DotNetNuke.Services.ModuleCache,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ModuleCache\FileProvider.cs,Remove,The length of the statement  "                    throw new IOException("Deleted " + i + " files' however' some files are locked.  Could not delete the following files: " + filesNotDeleted); " is 140.
Long Statement,DotNetNuke.Services.ModuleCache,MemoryProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ModuleCache\MemoryProvider.cs,SetModule,The length of the statement  "            DataCache.SetCache(cacheKey' moduleOutput' dep' DateTime.UtcNow.Add(duration)' System.Web.Caching.Cache.NoSlidingExpiration' CacheItemPriority.Default' null); " is 158.
Long Statement,DotNetNuke.Services.Scheduling,DNNScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\DNNScheduler.cs,RunScheduleItemNow,The length of the statement  "            var scheduleHistoryItem = new ScheduleHistoryItem(scheduleItem) { NextStart = runNow ? DateTime.Now : (scheduleItem.ScheduleStartDate != Null.NullDate ? scheduleItem.ScheduleStartDate : DateTime.Now) }; " is 202.
Long Statement,DotNetNuke.Services.Scheduling,DNNScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\DNNScheduler.cs,UpdateSchedule,The length of the statement  "            var futureHistory = GetScheduleHistory(scheduleItem.ScheduleID).Cast<ScheduleHistoryItem>().Where(h => h.NextStart > DateTime.Now); " is 131.
Long Statement,DotNetNuke.Services.Scheduling,DNNScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\DNNScheduler.cs,RemoveFromScheduleInProgress,The length of the statement  "            var runningscheduleHistoryItem = GetScheduleHistory(scheduleItem.ScheduleID).Cast<ScheduleHistoryItem>().ElementAtOrDefault(0); " is 127.
Long Statement,DotNetNuke.Services.Scheduling,ProcessGroup,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\ProcessGroup.cs,Run,The length of the statement  "                    //we need also trigger work errored event so that the schedule can remove from inprogress and inqueue list to prevent endless loop. " is 131.
Long Statement,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,ServerGroupServers,The length of the statement  "                return servers.Aggregate(string.Empty' (current' serverInfo) => current + ServerController.GetServerName(serverInfo) + "'"); " is 124.
Long Statement,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,Start,The length of the statement  "                    if (SchedulingProvider.SchedulerMode == SchedulerMode.TIMER_METHOD || SchedulingProvider.SchedulerMode == SchedulerMode.DISABLED) " is 129.
Long Statement,DotNetNuke.Services.Scheduling,SchedulingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\SchedulingController.cs,AddSchedule,The length of the statement  "            EventLogController.Instance.AddLog("TypeFullName"' TypeFullName' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.SCHEDULE_CREATED); " is 222.
Long Statement,DotNetNuke.Services.Scheduling,SchedulingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\SchedulingController.cs,AddScheduleHistory,The length of the statement  "            return DataProvider.Instance().AddScheduleHistory(objScheduleHistoryItem.ScheduleID' objScheduleHistoryItem.StartDate' ServerController.GetExecutingServerName()); " is 162.
Long Statement,DotNetNuke.Services.Sitemap,CoreSitemapProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\CoreSitemapProvider.cs,GetUrls,The length of the statement  "            minPagePriority = float.Parse(PortalController.GetPortalSetting("SitemapMinPriority"' portalId' "0.1")' CultureInfo.InvariantCulture); " is 134.
Long Statement,DotNetNuke.Services.Sitemap,CoreSitemapProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\CoreSitemapProvider.cs,GetUrls,The length of the statement  "									&& !ps.ContentLocalizationEnabled || (languagePublished && t.CultureCode.Equals(currentLanguage' StringComparison.InvariantCultureIgnoreCase))); " is 144.
Long Statement,DotNetNuke.Services.Sitemap,CoreSitemapProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\CoreSitemapProvider.cs,GetUrls,The length of the statement  "	                Services.Exceptions.Exceptions.LogException(new Exception(Localization.Localization.GetExceptionMessage("SitemapUrlGenerationError"' " is 132.
Long Statement,DotNetNuke.Services.Sitemap,CoreSitemapProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\CoreSitemapProvider.cs,GetPageUrl,The length of the statement  "                        string alternateUrl = TestableGlobals.Instance.NavigateURL(localized.TabID' localized.IsSuperTab' ps' ""' localized.CultureCode); " is 129.
Long Statement,DotNetNuke.Services.Sitemap,CoreSitemapProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\CoreSitemapProvider.cs,GetPageUrl,The length of the statement  "                    string alternateUrl = TestableGlobals.Instance.NavigateURL(currentTab.TabID' currentTab.IsSuperTab' ps' ""' currentTab.CultureCode); " is 132.
Long Statement,DotNetNuke.Services.Sitemap,CoreSitemapProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\CoreSitemapProvider.cs,IsTabPublic,The length of the statement  "                // permissions strings are encoded with Deny permissions at the beginning and Grant permissions at the end for optimal performance " is 130.
Long Statement,DotNetNuke.Services.Sitemap,SitemapBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\SitemapBuilder.cs,BuildSiteMap,The length of the statement  "            excludePriority = float.Parse(PortalController.GetPortalSetting("SitemapExcludePriority"' PortalSettings.PortalId' "0")' NumberFormatInfo.InvariantInfo); " is 153.
Long Statement,DotNetNuke.Services.Sitemap,SitemapBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\SitemapBuilder.cs,BuildSiteMap,The length of the statement  "                isProviderEnabled = bool.Parse(PortalController.GetPortalSetting(_provider.Name + "Enabled"' PortalSettings.PortalId' "True")); " is 127.
Long Statement,DotNetNuke.Services.Sitemap,SitemapBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\SitemapBuilder.cs,BuildSiteMap,The length of the statement  "                    isProviderPriorityOverrided = bool.Parse(PortalController.GetPortalSetting(_provider.Name + "Override"' PortalSettings.PortalId' "False")); " is 139.
Long Statement,DotNetNuke.Services.Sitemap,SitemapBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\SitemapBuilder.cs,BuildSiteMap,The length of the statement  "                    providerPriorityValue = float.Parse(PortalController.GetPortalSetting(_provider.Name + "Value"' PortalSettings.PortalId' "50")) / 100; " is 134.
Long Statement,DotNetNuke.Services.Sitemap,SitemapBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\SitemapBuilder.cs,BuildSiteMap,The length of the statement  "                        Services.Exceptions.Exceptions.LogException(new Exception(Localization.Localization.GetExceptionMessage("SitemapProviderError"' " is 127.
Long Statement,DotNetNuke.Services.Sitemap,SitemapBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\SitemapBuilder.cs,BuildSiteMap,The length of the statement  "                        if (url.Priority > 0 && url.Priority >= excludePriority) //#RS# a valid sitemap needs priorities larger then 0' otherwise the sitemap will be rejected by google as invalid " is 171.
Long Statement,DotNetNuke.Services.Sitemap,SitemapBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\SitemapBuilder.cs,WriteSitemap,The length of the statement  "                    sitemapOutput = new StreamWriter(PortalSettings.HomeSystemDirectoryMapPath + "Sitemap\\" + cachedFile' false' Encoding.UTF8); " is 125.
Long Statement,DotNetNuke.Services.Sitemap,SitemapBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\SitemapBuilder.cs,WriteSitemapIndex,The length of the statement  "            using (sitemapOutput = new StreamWriter(PortalSettings.HomeSystemDirectoryMapPath + "Sitemap\\" + CacheFileName' false' Encoding.UTF8)) " is 135.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,ReplyMessage,The length of the statement  "                throw new ArgumentException(Localization.Localization.GetString("MsgSenderRequiredError"' Localization.Localization.ExceptionsResourceFile)); " is 141.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,ReplyMessage,The length of the statement  "                throw new ArgumentException(Localization.Localization.GetString("MsgBodyRequiredError"' Localization.Localization.ExceptionsResourceFile)); " is 139.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,ReplyMessage,The length of the statement  "                throw new AttachmentsNotAllowed(Localization.Localization.GetString("MsgAttachmentsNotAllowed"' Localization.Localization.ExceptionsResourceFile)); " is 147.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,ReplyMessage,The length of the statement  "            var messageId = _dataService.CreateMessageReply(conversationId' PortalController.GetEffectivePortalId(sender.PortalID)' body' sender.UserID' sender.DisplayName' GetCurrentUserInfo().UserID); " is 190.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,ReplyMessage,The length of the statement  "                throw new MessageOrRecipientNotFoundException(Localization.Localization.GetString("MsgMessageOrRecipientNotFound"' Localization.Localization.ExceptionsResourceFile)); " is 166.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,ReplyMessage,The length of the statement  "                foreach (var attachment in fileIDs.Select(fileId => new MessageAttachment { MessageAttachmentID = Null.NullInteger' FileID = fileId' MessageID = messageId })) " is 158.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,WaitTimeForNextMessage,The length of the statement  "            var interval = GetPortalSettingAsDouble("MessagingThrottlingInterval"' sender.PortalID' DefaultMessagingThrottlingInterval) * 60; " is 129.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetLastSentMessage,The length of the statement  "            return CBO.FillObject<Message>(_dataService.GetLastSentMessage(sender.UserID' PortalController.GetEffectivePortalId(sender.PortalID))); " is 135.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetArchivedMessages,The length of the statement  "            var reader = _dataService.GetArchiveBoxView(userId' PortalController.GetEffectivePortalId(GetCurrentUserInfo().PortalID)' afterMessageId' numberOfRecords' ConstSortColumnDate' !ConstAscending); " is 193.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetInbox,The length of the statement  "            return GetInbox(userId' afterMessageId' numberOfRecords' sortColumn' sortAscending' MessageReadStatus.Any' MessageArchivedStatus.UnArchived); " is 141.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetInbox,The length of the statement  "            var reader = _dataService.GetInBoxView(userId' PortalController.GetEffectivePortalId(GetCurrentUserInfo().PortalID)' afterMessageId' numberOfRecords' sortColumn' sortAscending' readStatus' archivedStatus' MessageSentStatus.Received); " is 233.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetMessageThread,The length of the statement  "            return GetMessageThread(conversationId' userId' afterMessageId' numberOfRecords' ConstSortColumnDate' !ConstAscending' ref totalRecords); " is 137.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetMessageThread,The length of the statement  "            var dr = _dataService.GetMessageThread(conversationId' userId' afterMessageId' numberOfRecords' sortColumn' sortAscending' ref totalRecords); " is 141.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetSentbox,The length of the statement  "            return GetSentbox(userId' afterMessageId' numberOfRecords' sortColumn' sortAscending' MessageReadStatus.Any' MessageArchivedStatus.UnArchived); " is 143.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetSentbox,The length of the statement  "            var reader = _dataService.GetSentBoxView(userId' PortalController.GetEffectivePortalId(GetCurrentUserInfo().PortalID)' afterMessageId' numberOfRecords' sortColumn' sortAscending); " is 179.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,IsAdminOrHost,The length of the statement  "            return userInfo.IsSuperUser || userInfo.IsInRole(PortalController.Instance.GetCurrentPortalSettings().AdministratorRoleName); " is 125.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetNextMessagesForInstantDispatch,The length of the statement  "            return CBO.FillCollection<MessageRecipient>(_dataService.GetNextMessagesForInstantDispatch(schedulerInstance' batchSize)); " is 122.
Long Statement,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,GetNextMessagesForDigestDispatch,The length of the statement  "            return CBO.FillCollection<MessageRecipient>(_dataService.GetNextMessagesForDigestDispatch(Convert.ToInt32(frequency)' schedulerInstance' batchSize));             " is 149.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,GetEmailBody,The length of the statement  "            template = template.Replace("[MESSAGEBODY]"' messageBody); // moved to top since that we we can replace tokens in there too... " is 126.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,GetEmailItemContent,The length of the statement  "                emailItemContent = emailItemContent.Replace("[FRIENDREQUESTACTIONS]"' string.Format(linkContent' acceptUrl' profileUrl));                 " is 121.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,GetEmailItemContent,The length of the statement  "                emailItemContent = emailItemContent.Replace("[FOLLOWREQUESTACTIONS]"' string.Format(linkContent' acceptUrl' profileUrl));             " is 121.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,GetEmailBodyItemTemplate,The length of the statement  "            return Localization.Localization.GetString("EMAIL_MESSAGING_DISPATCH_ITEM"' Localization.Localization.GlobalResourceFile' language); " is 132.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,GetEmailBodyTemplate,The length of the statement  "            return Localization.Localization.GetString("EMAIL_MESSAGING_DISPATCH_BODY"' Localization.Localization.GlobalResourceFile' language); " is 132.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,GetEmailSubjectTemplate,The length of the statement  "            return Localization.Localization.GetString("EMAIL_SUBJECT_FORMAT"' Localization.Localization.GlobalResourceFile' language); " is 123.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,GetFriendRequestActionsTemplate,The length of the statement  "            return Localization.Localization.GetString("EMAIL_SOCIAL_FRIENDREQUESTACTIONS"' Localization.Localization.GlobalResourceFile' language); " is 136.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,GetFollowRequestActionsTemplate,The length of the statement  "            return Localization.Localization.GetString("EMAIL_SOCIAL_FOLLOWREQUESTACTIONS"' Localization.Localization.GlobalResourceFile' language); " is 136.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,HandleFrequentDigests,The length of the statement  "            var handledMessages = this.HandleFrequencyDigest(DateTime.Now.AddHours(-1)' SettingLastHourlyRun' Frequency.Hourly' schedulerInstance' remainingMessages); " is 154.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,HandleFrequentDigests,The length of the statement  "            handledMessages = this.HandleFrequencyDigest(DateTime.Now.AddDays(-1)' SettingLastDailyRun' Frequency.Daily' schedulerInstance' remainingMessages);         " is 147.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,HandleFrequentDigests,The length of the statement  "            handledMessages = this.HandleFrequencyDigest(DateTime.Now.AddDays(-7)' SettingLastWeeklyRun' Frequency.Weekly' schedulerInstance' remainingMessages);          " is 149.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,HandleFrequentDigests,The length of the statement  "            this.HandleFrequencyDigest(DateTime.Now.AddDays(-30)' SettingLastMonthlyRun' Frequency.Monthly' schedulerInstance' remainingMessages);                     " is 134.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,HandleDigest,The length of the statement  "            // get subscribers based on frequency' utilize remaining batch size as part of count of users to return (note' if multiple subscriptions have the same frequency they will be combined into 1 email) " is 196.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,HandleDigest,The length of the statement  "                var batchMessages = InternalMessagingController.Instance.GetNextMessagesForDigestDispatch(frequency' schedulerInstance' remainingMessages); " is 139.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,RemoveHttpUrlsIfSiteisSSLEnabled,The length of the statement  "            if (stringContainingHttp.IndexOf("http") > -1 && portalSettings != null && (portalSettings.SSLEnabled || portalSettings.SSLEnforced)) " is 133.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,HandleInstantMessages,The length of the statement  "                var batchMessages = InternalMessagingController.Instance.GetNextMessagesForInstantDispatch(schedulerInstance' Host.MessageSchedulerBatchSize); " is 142.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,HandleInstantMessages,The length of the statement  "            ScheduleHistoryItem.AddLogNote(string.Format("<br>Messaging Scheduler '{0}' sent a total of {1} message(s)"' schedulerInstance' messagesSent)); " is 143.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,SendMessage,The length of the statement  "                String.Format("{0} < {1} >"' UserController.GetUserByEmail(portalSettings.PortalId' portalSettings.Email).DisplayName' portalSettings.Email) : portalSettings.Email; " is 164.
Long Statement,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,SendMessage,The length of the statement  "                    Mail.Mail.SendEmail(fromAddress' senderAddress' toAddress' subject' body' CreateAttachments(message.MessageID).ToList()); " is 121.
Long Statement,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,SendNotification,The length of the statement  "                throw new ArgumentException(Localization.Localization.GetString("MsgSubjectOrBodyRequiredError"' Localization.Localization.ExceptionsResourceFile)); " is 148.
Long Statement,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,SendNotification,The length of the statement  "                throw new ArgumentException(Localization.Localization.GetString("MsgRolesOrUsersRequiredError"' Localization.Localization.ExceptionsResourceFile)); " is 147.
Long Statement,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,SendNotification,The length of the statement  "                throw new ArgumentException(string.Format(Localization.Localization.GetString("MsgSubjectTooBigError"' Localization.Localization.ExceptionsResourceFile)' ConstMaxSubject' notification.Subject.Length)); " is 201.
Long Statement,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,SendNotification,The length of the statement  "                throw new ArgumentException(Localization.Localization.GetString("MsgEmptyToListFoundError"' Localization.Localization.ExceptionsResourceFile)); " is 143.
Long Statement,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,SendNotification,The length of the statement  "                throw new ArgumentException(string.Format(Localization.Localization.GetString("MsgToListTooBigError"' Localization.Localization.ExceptionsResourceFile)' ConstMaxTo' sbTo.Length)); " is 179.
Long Statement,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,SendNotification,The length of the statement  "                foreach (var messageRecipient in InternalMessagingController.Instance.GetMessageRecipients(notification.NotificationID)) " is 120.
Long Statement,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,GetNotificationType,The length of the statement  "            var cacheItemArgs = new CacheItemArgs(notificationTypeCacheKey' DataCache.NotificationTypesTimeOut' DataCache.NotificationTypesCachePriority' notificationTypeId); " is 162.
Long Statement,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,GetNotificationType,The length of the statement  "            var cacheItemArgs = new CacheItemArgs(notificationTypeCacheKey' DataCache.NotificationTypesTimeOut' DataCache.NotificationTypesCachePriority' name); " is 148.
Long Statement,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,GetNotificationTypeAction,The length of the statement  "            var notificationTypeActionCacheKey = string.Format(DataCache.NotificationTypeActionsCacheKey' notificationTypeActionId); " is 120.
Long Statement,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,GetNotificationTypeAction,The length of the statement  "            var cacheItemArgs = new CacheItemArgs(notificationTypeActionCacheKey' DataCache.NotificationTypeActionsTimeOut' DataCache.NotificationTypeActionsPriority' notificationTypeActionId); " is 181.
Long Statement,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,GetNotificationTypeAction,The length of the statement  "            var notificationTypeActionCacheKey = string.Format(DataCache.NotificationTypeActionsByNameCacheKey' notificationTypeId' name); " is 126.
Long Statement,DotNetNuke.Services.Social.Notifications,NotificationsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\NotificationsController.cs,GetNotificationTypeAction,The length of the statement  "            var cacheItemArgs = new CacheItemArgs(notificationTypeActionCacheKey' DataCache.NotificationTypeActionsTimeOut' DataCache.NotificationTypeActionsPriority' notificationTypeId' name); " is 181.
Long Statement,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,SaveMessage,The length of the statement  "            return _provider.ExecuteScalar<int>("CoreMessaging_SaveMessage"' message.MessageID' portalId 'message.To' message.From' message.Subject' message.Body' message.ConversationId' message.ReplyAllAllowed' message.SenderUserID' createUpdateUserId); " is 242.
Long Statement,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,CreateMessageReply,The length of the statement  "            return _provider.ExecuteScalar<int>("CoreMessaging_CreateMessageReply"' conversationId' portalId' body' senderUserId' fromName' createUpdateUserId); " is 148.
Long Statement,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,GetInBoxView,The length of the statement  "            return _provider.ExecuteReader("CoreMessaging_GetMessageConversations"' userId' portalId ' afterMessageId' numberOfRecords' sortColumn' sortAscending' read' archived' sent); " is 173.
Long Statement,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,GetSentBoxView,The length of the statement  "            return _provider.ExecuteReader("CoreMessaging_GetSentBox"' userId' portalId' afterMessageId' numberOfRecords' sortColumn' sortAscending);             " is 137.
Long Statement,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,GetArchiveBoxView,The length of the statement  "            return _provider.ExecuteReader("CoreMessaging_GetArchiveBox"' userId' portalId' afterMessageId' numberOfRecords' sortColumn' sortAscending); " is 140.
Long Statement,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,GetMessageThread,The length of the statement  "            return _provider.ExecuteReader("CoreMessaging_GetMessageThread"' conversationId' userId' afterMessageId' numberOfRecords' sortColumn' sortAscending); " is 149.
Long Statement,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,SaveMessageRecipient,The length of the statement  "            return _provider.ExecuteScalar<int>("CoreMessaging_SaveMessageRecipient"' messageRecipient.RecipientID' messageRecipient.MessageID' messageRecipient.UserID' messageRecipient.Read' messageRecipient.Archived' createUpdateUserId); " is 227.
Long Statement,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,SaveMessageAttachment,The length of the statement  "            return _provider.ExecuteScalar<int>("CoreMessaging_SaveMessageAttachment"' messageAttachment.MessageAttachmentID' messageAttachment.MessageID' messageAttachment.FileID' createUpdateUserId); " is 189.
Long Statement,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,GetNextMessagesForDigestDispatch,The length of the statement  "            return _provider.ExecuteReader("CoreMessaging_GetNextMessagesForDigestDispatch"' frequecy' schedulerInstance' batchSize); " is 121.
Long Statement,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,SetUserPreference,The length of the statement  "            _provider.ExecuteNonQuery("CoreMessaging_SetUserPreference"' portalId' userId' messagesEmailFrequency' notificationsEmailFrequency); " is 132.
Long Statement,DotNetNuke.Entities.Modules.Definitions,ModuleDefinitionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Definitions\ModuleDefinitionController.cs,SaveModuleDefinition,The length of the statement  "                dataProvider.UpdateModuleDefinition(moduleDefinition.ModuleDefID' moduleDefinition.FriendlyName' moduleDefinition.DefinitionName' moduleDefinition.DefaultCacheTime' UserController.Instance.GetCurrentUserInfo().UserID); " is 218.
Long Statement,DotNetNuke.Entities.Modules.Definitions,ModuleDefinitionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Definitions\ModuleDefinitionController.cs,SaveModuleDefinition,The length of the statement  "                    ArrayList permissions = permissionController.GetPermissionByCodeAndKey(kvp.Value.PermissionCode' kvp.Value.PermissionKey); " is 122.
Long Statement,DotNetNuke.Entities.Modules.Definitions,ModuleDefinitionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Definitions\ModuleDefinitionController.cs,SaveModuleDefinition,The length of the statement  "                    ModuleControlInfo moduleControl = ModuleControlController.GetModuleControlByControlKey(kvp.Value.ControlKey' kvp.Value.ModuleDefID); " is 132.
Long Statement,DotNetNuke.Entities.Modules.Definitions,ModuleDefinitionInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Definitions\ModuleDefinitionInfo.cs,LoadControls,The length of the statement  "            _ModuleControls = ModuleDefID > Null.NullInteger ? ModuleControlController.GetModuleControlsByModuleDefinitionID(ModuleDefID) : new Dictionary<string' ModuleControlInfo>(); " is 172.
Long Statement,DotNetNuke.Security.Permissions.Controls,DesktopModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\DesktopModulePermissionsGrid.cs,GetDesktopModulePermissions,The length of the statement  "            _DesktopModulePermissions = new DesktopModulePermissionCollection(DesktopModulePermissionController.GetDesktopModulePermissions(PortalDesktopModuleID)); " is 152.
Long Statement,DotNetNuke.Security.Permissions.Controls,FolderPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\FolderPermissionsGrid.cs,GetFolderPermissions,The length of the statement  "            FolderPermissions = new FolderPermissionCollection(FolderPermissionController.GetFolderPermissionsCollectionByFolder(PortalId' FolderPath)); " is 140.
Long Statement,DotNetNuke.Security.Permissions.Controls,FolderPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\FolderPermissionsGrid.cs,rolePermissionsGrid_ItemDataBound,The length of the statement  "            if (item.ItemType == ListItemType.Item || item.ItemType == ListItemType.AlternatingItem || item.ItemType == ListItemType.SelectedItem) " is 134.
Long Statement,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,rolePermissionsGrid_ItemDataBound,The length of the statement  "            if (item.ItemType == ListItemType.Item || item.ItemType == ListItemType.AlternatingItem || item.ItemType == ListItemType.SelectedItem) " is 134.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,GetRoles,The length of the statement  "            Roles = new ArrayList(RoleController.Instance.GetRoles(portalSettings.PortalId' r => r.SecurityMode != SecurityMode.SocialGroup && r.Status == RoleStatus.Approved && checkedRoles.Contains(r.RoleID)).ToArray()); " is 210.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,GetRoles,The length of the statement  "                Roles.Add(new RoleInfo { RoleID = AllUsersRoleId' PortalID = portalSettings.PortalId' RoleName=Globals.glbRoleAllUsersName });                     " is 126.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,GetRoles,The length of the statement  "            EnsureRole(new RoleInfo { RoleID = AllUsersRoleId' PortalID = portalSettings.PortalId' RoleName = Globals.glbRoleAllUsersName }); " is 129.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,SetUpGrid,The length of the statement  "                var locName = (permission.ModuleDefID <= 0) ? Localization.GetString(permission.PermissionName + ".Permission"' PermissionProvider.Instance().LocalResourceFile) //system permission " is 180.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,SetUpGrid,The length of the statement  "                                                            : (!String.IsNullOrEmpty(ResourceFile) ? Localization.GetString(permission.PermissionName + ".Permission"' ResourceFile) //custom permission " is 140.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,SetUpRolesGrid,The length of the statement  "            SetUpGrid(rolePermissionsGrid' "RoleName"' "roleid"' Localization.GetString("PermissionRoleHeader.Text"' PermissionProvider.Instance().LocalResourceFile)); " is 155.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,SetUpUsersGrid,The length of the statement  "                SetUpGrid(userPermissionsGrid' "DisplayName"' "userid"' Localization.GetString("PermissionUserHeader.Text"' PermissionProvider.Instance().LocalResourceFile)); " is 158.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,FillSelectRoleComboBox,The length of the statement  "            var groupRoles = (selectedRoleGroupId > -2) ? RoleController.Instance.GetRoles(portalSettings.PortalId' r => r.RoleGroupID == selectedRoleGroupId && r.SecurityMode != SecurityMode.SocialGroup && r.Status == RoleStatus.Approved) " is 227.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,FillSelectRoleComboBox,The length of the statement  "                : RoleController.Instance.GetRoles(portalSettings.PortalId' r => r.SecurityMode != SecurityMode.SocialGroup && r.Status == RoleStatus.Approved); " is 144.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,FillSelectRoleComboBox,The length of the statement  "            var itemToSelect = cboSelectRole.Items.Cast<ListItem>().FirstOrDefault(i => !defaultRoleIds.Contains(int.Parse(i.Value))); " is 122.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,rolePermissionsGrid_ItemDataBound,The length of the statement  "            if (item.ItemType == ListItemType.Item || item.ItemType == ListItemType.AlternatingItem || item.ItemType == ListItemType.SelectedItem) " is 134.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,rolePermissionsGrid_ItemDataBound,The length of the statement  "                if (roleID == PortalSettings.Current.AdministratorRoleId || roleID == AllUsersRoleId || roleID == PortalSettings.Current.RegisteredRoleId) " is 138.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,CreateAddRoleControls,The length of the statement  "                cboRoleGroups.Items.Add(new ListItem(roleGroup.RoleGroupName' roleGroup.RoleGroupID.ToString(CultureInfo.InvariantCulture))); " is 125.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,OnInit,The length of the statement  "            ClientResourceManager.RegisterStyleSheet(Page' "~/Resources/Shared/Components/Tokeninput/Themes/token-input-facebook.css"' FileOrder.Css.ResourceCss); " is 150.
Long Statement,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,SupportsDenyPermissions,The length of the statement  "            //to maintain backward compatibility the base implementation must always call the simple parameterless version of this method " is 125.
Long Statement,DotNetNuke.Security.Permissions.Controls,TabPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\TabPermissionsGrid.cs,rolePermissionsGrid_ItemDataBound,The length of the statement  "            if (item.ItemType == ListItemType.Item || item.ItemType == ListItemType.AlternatingItem || item.ItemType == ListItemType.SelectedItem) " is 134.
Long Statement,DotNetNuke.Services.ClientCapability,FacebookRequestController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ClientCapability\FacebookRequestController.cs,GetFacebookDetailsFromRequest,The length of the statement  "				var base64JsonArray = Convert.FromBase64String(decodedJson.PadRight(decodedJson.Length + (4 - decodedJson.Length%4)%4' '=')); " is 125.
Long Statement,DotNetNuke.Services.Mobile,PreviewProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\PreviewProfileController.cs,Save,The length of the statement  "			var logContent = string.Format("{0} Mobile Preview Profile '{1}'"' profile.Id == Null.NullInteger ? "Add" : "Update"' profile.Name); " is 132.
Long Statement,DotNetNuke.Services.Mobile,PreviewProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\PreviewProfileController.cs,GetProfilesByPortal,The length of the statement  "			var cacheArg = new CacheItemArgs(cacheKey' DataCache.PreviewProfilesCacheTimeOut' DataCache.PreviewProfilesCachePriority' portalId' addDefault); " is 144.
Long Statement,DotNetNuke.Services.Mobile,PreviewProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\PreviewProfileController.cs,AddLog,The length of the statement  "            EventLogController.Instance.AddLog("Message"' logContent' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.ADMIN_ALERT); " is 210.
Long Statement,DotNetNuke.Services.Mobile,PreviewProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\PreviewProfileController.cs,CreateDefaultDevices,The length of the statement  "			if (!settings.TryGetValue("DefPreviewProfiles_Created"' out defaultPreviewProfiles) || defaultPreviewProfiles != DotNetNukeContext.Current.Application.Name) " is 156.
Long Statement,DotNetNuke.Services.Mobile,PreviewProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\PreviewProfileController.cs,CreateDefaultDevices,The length of the statement  "					PortalController.UpdatePortalSetting(portalId' "DefPreviewProfiles_Created"' DotNetNukeContext.Current.Application.Name); " is 121.
Long Statement,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,IsRedirectAllowedForTheSession,The length of the statement  "			else if (app.Request.Cookies[DisableMobileRedirectCookieName] != null && app.Request.Cookies[DisableRedirectPresistCookieName] != null) //check for cookie " is 154.
Long Statement,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,GetRedirectUrl,The length of the statement  "                if (!string.IsNullOrEmpty(redirectUrl) && string.Compare(redirectUrl' portalSettings.ActiveTab.FullUrl' true' CultureInfo.InvariantCulture) != 0) " is 145.
Long Statement,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,GetFullSiteUrl,The length of the statement  "                if (!string.IsNullOrEmpty(fullSiteUrl) && string.Compare(fullSiteUrl' portalSettings.ActiveTab.FullUrl' true' CultureInfo.InvariantCulture) != 0) " is 145.
Long Statement,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,GetFullSiteUrl,The length of the statement  "							if (portalSettings.HomeTabId != Null.NullInteger && portalSettings.HomeTabId != currentTabId) //ensure it's not redirecting to itself " is 133.
Long Statement,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,GetMobileSiteUrl,The length of the statement  "                if (!string.IsNullOrEmpty(fullSiteUrl) && string.Compare(fullSiteUrl' portalSettings.ActiveTab.FullUrl' true' CultureInfo.InvariantCulture) != 0) " is 145.
Long Statement,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,GetMobileSiteUrl,The length of the statement  "                mobileSiteUrl += string.Format("{0}{1}=0"' mobileSiteUrl.Contains("?") ? "&" : "?"' DisableMobileRedirectQueryStringName);             " is 122.
Long Statement,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,Save,The length of the statement  "            var logContent = string.Format("'{0}' {1}"' redirection.Name' redirection.Id == Null.NullInteger ? "Added" : "Updated"); " is 120.
Long Statement,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,PurgeInvalidRedirections,The length of the statement  "            foreach (var r in redirects.Where(r => r.SourceTabId != Null.NullInteger && allTabs.Where(t => t.Key == r.SourceTabId).Count() < 1)) " is 132.
Long Statement,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,PurgeInvalidRedirections,The length of the statement  "            foreach (var r in redirects.Where(r => r.TargetType == TargetType.Tab && allTabs.Where(t => t.Key == int.Parse(r.TargetValue.ToString())).Count() < 1)) " is 151.
Long Statement,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,GetAllRedirections,The length of the statement  "            var cacheArg = new CacheItemArgs(AllRedirectionsCacheKey' DataCache.RedirectionsCacheTimeOut' DataCache.RedirectionsCachePriority' ""); " is 135.
Long Statement,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,GetRedirectionsByPortal,The length of the statement  "			var cacheArg = new CacheItemArgs(cacheKey' DataCache.RedirectionsCacheTimeOut' DataCache.RedirectionsCachePriority' portalId); " is 126.
Long Statement,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,GetRedirectUrlFromRule,The length of the statement  "                        if (portalSettings.HomeTabId != Null.NullInteger && portalSettings.HomeTabId != currentTabId) //ensure it's not redirecting to itself " is 133.
Long Statement,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,GetRedirectionsByPortalCallBack,The length of the statement  "            return CBO.FillCollection<Redirection>(DataProvider.Instance().GetRedirections(portalId)).Cast<IRedirection>().ToList(); " is 120.
Long Statement,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,AddLog,The length of the statement  "            EventLogController.Instance.AddLog("Site Redirection Rule"' logContent' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.ADMIN_ALERT); " is 224.
Long Statement,DotNetNuke.Services.Social.Notifications.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\Data\DataService.cs,CreateNotificationType,The length of the statement  "            return _provider.ExecuteScalar<int>(GetFullyQualifiedName("CreateNotificationType")' name' _provider.GetNull(description)' _provider.GetNull(timeToLive)' _provider.GetNull(desktopModuleId)' createUpdateUserId' isTask); " is 218.
Long Statement,DotNetNuke.Services.Social.Notifications.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\Data\DataService.cs,AddNotificationTypeAction,The length of the statement  "            return _provider.ExecuteScalar<int>(GetFullyQualifiedName("AddNotificationTypeAction")' notificationTypeId' nameResourceKey' _provider.GetNull(descriptionResourceKey)' _provider.GetNull(confirmResourceKey)' apiCall' createdByUserId); " is 233.
Long Statement,DotNetNuke.Services.Social.Notifications.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\Data\DataService.cs,DeleteUserNotifications,The length of the statement  "            return userId <= 0 ? 0 : _provider.ExecuteScalar<int>(GetFullyQualifiedName("DeleteUserNotifications")' userId' portalId); " is 122.
Long Statement,DotNetNuke.Services.Social.Notifications.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Notifications\Data\DataService.cs,GetNotifications,The length of the statement  "            return _provider.ExecuteReader(GetFullyQualifiedName("GetNotifications")' userId' portalId' afterNotificationId' numberOfRecords); " is 130.
Long Statement,DotNetNuke.Services.EventQueue,EventQueueController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\EventQueue\EventQueueController.cs,FillMessage,The length of the statement  "                message.Priority = (MessagePriority) Enum.Parse(typeof (MessagePriority)' Convert.ToString(Null.SetNull(dr["Priority"]' message.Priority))); " is 140.
Long Statement,DotNetNuke.Services.Installer,Installer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installer.cs,LogInstallEvent,The length of the statement  "		            log.LogProperties.Add(new LogDetailInfo(eventType + " " + package + ":"' InstallerInfo.ManifestFile.Name.Replace(".dnn"' ""))); " is 127.
Long Statement,DotNetNuke.Services.Installer,InstallerInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\InstallerInfo.cs,ReadZipStream,The length of the statement  "                    if (file.Type == InstallFileType.Resources && (file.Name.Equals("containers.zip"' StringComparison.InvariantCultureIgnoreCase) || file.Name.Equals("skins.zip"' StringComparison.InvariantCultureIgnoreCase))) " is 206.
Long Statement,DotNetNuke.Services.Installer,InstallerInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\InstallerInfo.cs,ReadZipStream,The length of the statement  "                                if (file.Extension == "dnn7" && (ManifestFile.Extension == "dnn" || ManifestFile.Extension == "dnn5" || ManifestFile.Extension == "dnn6")) " is 138.
Long Statement,DotNetNuke.Services.Installer,InstallFile,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\InstallFile.cs,ParseFileName,The length of the statement  "                        if (Extension.EndsWith("dataprovider"' StringComparison.InvariantCultureIgnoreCase) || Extension.Equals("sql"' StringComparison.InvariantCultureIgnoreCase)) " is 156.
Long Statement,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ProcessLegacySkin,The length of the statement  "                            SkinController.AddSkin(skin.SkinPackageID' Path.Combine("[G]" + SkinController.RootSkin' Path.Combine(skin.SkinName' skinFile.FullName))); " is 138.
Long Statement,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ProcessLegacySkin,The length of the statement  "                            SkinController.AddSkin(skin.SkinPackageID' Path.Combine("[G]" + SkinController.RootContainer' Path.Combine(skin.SkinName' skinFile.FullName))); " is 143.
Long Statement,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,CreateSkinManifest,The length of the statement  "                if ((subFolders[0].Name.Equals("containers"' StringComparison.InvariantCultureIgnoreCase) || subFolders[0].Name.Equals("skins"' StringComparison.InvariantCultureIgnoreCase))) " is 174.
Long Statement,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,CreateSkinManifest,The length of the statement  "                        CreateSkinManifest(writer' skinFolder' "Skin"' tempInstallFolder.Replace(Globals.ApplicationMapPath + "\\"' "")' "Skins"); " is 122.
Long Statement,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,CreateSkinManifest,The length of the statement  "                        CreateSkinManifest(writer' skinFolder' "Container"' tempInstallFolder.Replace(Globals.ApplicationMapPath + "\\"' "")' "Containers"); " is 132.
Long Statement,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ParsePackageName,The length of the statement  "            if (package.PackageType.Equals("Module"' StringComparison.OrdinalIgnoreCase) && AdminModules.Contains(package.Name + "'") || package.PackageType.Equals("Module"' StringComparison.OrdinalIgnoreCase) && CoreModules.Contains(package.Name + "'") || (package.PackageType.Equals("Container"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Skin"' StringComparison.OrdinalIgnoreCase)) && KnownSkins.Contains(package.Name + "'") || package.PackageType.Equals("SkinObject"' StringComparison.OrdinalIgnoreCase) && KnownSkinObjects.Contains(package.Name + "'")) " is 569.
Long Statement,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ProcessLegacyLanguages,The length of the statement  "            string filePath = Globals.ApplicationMapPath + Localization.Localization.SupportedLocalesFile.Substring(1).Replace("/"' "\\"); " is 126.
Long Statement,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ProcessLegacyLanguages,The length of the statement  "                    HostController.Instance.Update("EnableBrowserLanguage"' Util.ReadAttribute(browserNav' "enabled"' false' null' Null.NullString' "true")); " is 137.
Long Statement,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ProcessLegacyLanguages,The length of the statement  "                    HostController.Instance.Update("EnableUrlLanguage"' Util.ReadAttribute(urlNav' "enabled"' false' null' Null.NullString' "true")); " is 129.
Long Statement,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ProcessLegacyLanguages,The length of the statement  "                filePath = string.Format(Globals.ApplicationMapPath + Localization.Localization.ApplicationResourceDirectory.Substring(1).Replace("/"' "\\") + "\\Locales.Portal-{0}.xml"' portalID); " is 181.
Long Statement,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ProcessLegacyLanguages,The length of the statement  "                        PortalController.UpdatePortalSetting(portalID' "EnableBrowserLanguage"' Util.ReadAttribute(browserNav' "enabled"' false' null' Null.NullString' "true")); " is 153.
Long Statement,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ProcessLegacyLanguages,The length of the statement  "                        PortalController.UpdatePortalSetting(portalID' "EnableUrlLanguage"' Util.ReadAttribute(urlNav' "enabled"' false' null' Null.NullString' "true")); " is 145.
Long Statement,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ProcessLegacyModule,The length of the statement  "            string moduleFolder = Path.Combine(Globals.ApplicationMapPath' Path.Combine("DesktopModules"' desktopModule.FolderName)); " is 121.
Long Statement,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,BackupFile,The length of the statement  "            RetryableAction.RetryEverySecondFor30Seconds(() => FileSystemUtils.CopyFile(fullFileName' backupFileName)' "Backup file " + fullFileName); " is 138.
Long Statement,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,CopyFile,The length of the statement  "            RetryableAction.RetryEverySecondFor30Seconds(() => FileSystemUtils.CopyFile(installFile.TempFileName' fullFileName)' "Copy file to " + fullFileName); " is 149.
Long Statement,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,DeleteFile,The length of the statement  "                RetryableAction.RetryEverySecondFor30Seconds(() => FileSystemUtils.DeleteFile(fullFileName)' "Delete file " + fullFileName); " is 124.
Long Statement,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,ParsePackageIconFileName,The length of the statement  "            if ((package.IconFile != null) && (package.PackageType.Equals("Module"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Auth_System"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Container"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Skin"' StringComparison.OrdinalIgnoreCase))) " is 343.
Long Statement,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,ParsePackageIconFileName,The length of the statement  "                filename = package.IconFile.StartsWith("~/" + package.FolderName) ? package.IconFile.Remove(0' ("~/" + package.FolderName).Length).TrimStart('/') : package.IconFile; " is 165.
Long Statement,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,ParsePackageIconFile,The length of the statement  "            if ((package.IconFile != null) && (package.PackageType.Equals("Module"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Auth_System"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Container"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Skin"' StringComparison.OrdinalIgnoreCase))) " is 343.
Long Statement,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,WriteStream,The length of the statement  "            //HACK: Temporary fix' upping retry limit due to locking for existing filesystem access.  This "fixes" azure' but isn't the most elegant " is 136.
Long Statement,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,GetExternalRequest,The length of the statement  "	        return GetExternalRequest(URL' Data' Username' Password' Domain' ProxyAddress' ProxyPort' DoPOST' UserAgent' Referer' out Filename' Host.WebRequestTimeout); " is 156.
Long Statement,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,GetExternalRequest,The length of the statement  "			return GetExternalRequest(URL' Data' Username' Password' Domain' ProxyAddress' ProxyPort' string.Empty' string.Empty' DoPOST' UserAgent' Referer' out Filename' requestTimeout); " is 176.
Long Statement,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,GetExternalRequest,The length of the statement  "			return GetExternalRequest(URL' Data' Username' Password' Domain' ProxyAddress' ProxyPort' ProxyUsername' ProxyPassword' DoPOST' UserAgent' Referer' out Filename' Host.WebRequestTimeout); " is 186.
Long Statement,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,GetExternalRequest,The length of the statement  "			if (Username != null && Password != null && Domain != null && Username.Trim() != "" && Password.Trim() != null && Domain.Trim() != null) " is 136.
Long Statement,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,GetExternalRequest,The length of the statement  "						Filename = filenameParam.Substring(filenameParam.IndexOf("\"") + 1).TrimEnd(Convert.ToChar("\"")).TrimEnd(Convert.ToChar("\\")); " is 128.
Long Statement,DotNetNuke.Services.Installer,XmlMerge,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\XmlMerge.cs,AddNode,The length of the statement  "					DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "AddNode:" + child.InnerXml.ToString()); " is 168.
Long Statement,DotNetNuke.Services.Installer,XmlMerge,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\XmlMerge.cs,PrependNode,The length of the statement  "                    DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "PrependNode:" + child.InnerXml.ToString()); " is 172.
Long Statement,DotNetNuke.Services.Installer,XmlMerge,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\XmlMerge.cs,InsertNode,The length of the statement  "					DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "InsertNode:" + child.InnerXml.ToString()); " is 171.
Long Statement,DotNetNuke.Services.Installer,XmlMerge,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\XmlMerge.cs,RemoveAttribute,The length of the statement  "						DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "RemoveAttribute:attributeName=" + attributeName.ToString()); " is 189.
Long Statement,DotNetNuke.Services.Installer,XmlMerge,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\XmlMerge.cs,RemoveNode,The length of the statement  "					DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "RemoveNode:" + node.InnerXml.ToString()); " is 170.
Long Statement,DotNetNuke.Services.Installer,XmlMerge,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\XmlMerge.cs,UpdateAttribute,The length of the statement  "					DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "UpdateAttribute:attributeName=" + attributeName.ToString()); " is 189.
Long Statement,DotNetNuke.Services.Installer,XmlMerge,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\XmlMerge.cs,UpdateNode,The length of the statement  "				DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "UpdateNode: keyAttribute=" + keyAttribute.ToString()); " is 183.
Long Statement,DotNetNuke.Services.Installer,XmlMerge,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\XmlMerge.cs,UpdateNode,The length of the statement  "                            string commentHeaderText = string.Format(Localization.Localization.GetString("XMLMERGE_Upgrade"' Localization.Localization.SharedResourceFile)' " is 143.
Long Statement,DotNetNuke.Services.Installer.Writers,LanguageComponentWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguageComponentWriter.cs,WriteCustomManifest,The length of the statement  "                PackageInfo package = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.PackageID == _DependentPackageID); " is 128.
Long Statement,DotNetNuke.Services.Installer.Writers,LanguagePackWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguagePackWriter.cs,ReadLegacyManifest,The length of the statement  "                                        var dependentPackage = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.PackageID == kvp.Value.PackageID); " is 129.
Long Statement,DotNetNuke.Services.Installer.Writers,LanguagePackWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguagePackWriter.cs,ParseFiles,The length of the statement  "                if (folder.FullName.ToLowerInvariant().Contains("desktopmodules") && !folder.FullName.ToLowerInvariant().Contains("admin") || folder.FullName.ToLowerInvariant().Contains("providers")) " is 183.
Long Statement,DotNetNuke.Services.Installer.Writers,LanguagePackWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguagePackWriter.cs,ParseFiles,The length of the statement  "            if (folder.Name.ToLowerInvariant() == "app_localresources" || folder.Name.ToLowerInvariant() == "app_globalresources" || folder.Name.ToLowerInvariant() =="_default") " is 165.
Long Statement,DotNetNuke.Services.Installer.Writers,LanguagePackWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguagePackWriter.cs,ParseFiles,The length of the statement  "                    if (file.Name.ToLowerInvariant().Contains(Language.Code.ToLowerInvariant()) || (Language.Code.ToLowerInvariant() == "en-us" && !file.Name.Contains("-"))) " is 153.
Long Statement,DotNetNuke.Services.Installer.Writers,ModulePackageWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\ModulePackageWriter.cs,ProcessControls,The length of the statement  "            if (!(controlSrc.StartsWith("desktopmodules"' StringComparison.InvariantCultureIgnoreCase) || !controlSrc.EndsWith(".ascx"' StringComparison.InvariantCultureIgnoreCase))) " is 170.
Long Statement,DotNetNuke.Services.Installer.Writers,ModulePackageWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\ModulePackageWriter.cs,ProcessControls,The length of the statement  "				//this code allows a developer to reference an ASCX file in a different folder than the module folder ( good for ASCX files shared between modules where you want only a single copy ) " is 182.
Long Statement,DotNetNuke.Services.Installer.Writers,ModulePackageWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\ModulePackageWriter.cs,ProcessControls,The length of the statement  "                    moduleControl.ControlType = (SecurityAccessLevel) TypeDescriptor.GetConverter(typeof (SecurityAccessLevel)).ConvertFromString(controlType); " is 139.
Long Statement,DotNetNuke.Services.Installer.Writers,PackageWriterBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\PackageWriterBase.cs,AddFilesToZip,The length of the statement  "                    filepath = Path.Combine(Path.Combine(Globals.ApplicationMapPath' basePath)' packageFile.FullName.Replace(basePath + "\\"' "")); " is 127.
Long Statement,DotNetNuke.Services.Installer.Writers,PackageWriterBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\PackageWriterBase.cs,ParseFiles,The length of the statement  "                if (!file.Extension.Equals(".dnn"' StringComparison.InvariantCultureIgnoreCase) && (file.Attributes & FileAttributes.Hidden) == 0) " is 130.
Long Statement,DotNetNuke.Services.Installer.Writers,PackageWriterBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\PackageWriterBase.cs,ParseProjectFile,The length of the statement  "                    !(fileName.StartsWith("system"' StringComparison.InvariantCultureIgnoreCase) || fileName.StartsWith("microsoft"' StringComparison.InvariantCultureIgnoreCase) || fileName.Equals("dotnetnuke"' StringComparison.InvariantCultureIgnoreCase) || " is 238.
Long Statement,DotNetNuke.Services.Installer.Writers,PackageWriterBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\PackageWriterBase.cs,ParseProjectFile,The length of the statement  "                      fileName.Equals("dotnetnuke.webutility"' StringComparison.InvariantCultureIgnoreCase) || fileName.Equals("dotnetnuke.webcontrols"' StringComparison.InvariantCultureIgnoreCase))) " is 177.
Long Statement,DotNetNuke.Services.Installer.Writers,PackageWriterBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\PackageWriterBase.cs,AddFile,The length of the statement  "            if ((file.Type == InstallFileType.CleanUp || file.Type == InstallFileType.Script) && FileVersionMatchRegex.IsMatch(file.Name)) " is 126.
Long Statement,DotNetNuke.Services.Installer.Writers,PackageWriterBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\PackageWriterBase.cs,WriteManifest,The length of the statement  "            using (XmlWriter writer = XmlWriter.Create(Path.Combine(Globals.ApplicationMapPath' Path.Combine(BasePath' manifestName))' XmlUtils.GetXmlWriterSettings(ConformanceLevel.Fragment))) " is 181.
Long Statement,DotNetNuke.Services.Installer.Writers,SkinControlPackageWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\SkinControlPackageWriter.cs,ReadLegacyManifest,The length of the statement  "                    SkinControl.ControlSrc = Path.Combine(Path.Combine("DesktopModules"' Package.Name.ToLowerInvariant())' Util.ReadElement(controlNav' "src")).Replace("\\"' "/"); " is 159.
Long Statement,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMailInternal,The length of the statement  "                    mailMessage.Sender = new MailAddress(smtpUsername' Host.SMTPPortalEnabled ? PortalSettings.Current.PortalName : Host.HostTitle); " is 128.
Long Statement,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendEmail,The length of the statement  "			if (string.IsNullOrWhiteSpace(Host.SMTPServer) || string.IsNullOrEmpty(fromAddress) || string.IsNullOrEmpty(senderAddress) || string.IsNullOrEmpty(toAddress)) " is 158.
Long Statement,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,The length of the statement  "            subject = Localize.GetSystemMessage(locale' settings' subject' user' Localize.GlobalResourceFile' custom' ""' settings.AdministratorId); " is 136.
Long Statement,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,The length of the statement  "            body = Localize.GetSystemMessage(locale' settings' body' user' Localize.GlobalResourceFile' custom' ""' settings.AdministratorId); " is 130.
Long Statement,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,The length of the statement  "                String.Format("{0} < {1} >"' UserController.GetUserByEmail(settings.PortalId' settings.Email).DisplayName' settings.Email) : settings.Email; " is 140.
Long Statement,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,The length of the statement  "            return SendMail(mailFrom' mailTo' ""' bcc' MailPriority.Normal' subject' bodyFormat' Encoding.UTF8' body' attachment' smtpServer' smtpAuthentication' smtpUsername' smtpPassword); " is 178.
Long Statement,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,The length of the statement  "            return SendMail(mailFrom' mailTo' cc' bcc' priority' subject' bodyFormat' bodyEncoding' body' attachment' smtpServer' smtpAuthentication' smtpUsername' smtpPassword' Host.EnableSMTPSSL); " is 186.
Long Statement,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,Initialize,The length of the statement  "            _confirmBodyHTML = Localization.Localization.GetString("EMAIL_BulkMailConf_Html_Body"' Localization.Localization.GlobalResourceFile' _strSenderLanguage); " is 153.
Long Statement,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,Initialize,The length of the statement  "            _confirmBodyText = Localization.Localization.GetString("EMAIL_BulkMailConf_Text_Body"' Localization.Localization.GlobalResourceFile' _strSenderLanguage); " is 153.
Long Statement,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,Initialize,The length of the statement  "            _confirmSubject = Localization.Localization.GetString("EMAIL_BulkMailConf_Subject"' Localization.Localization.GlobalResourceFile' _strSenderLanguage); " is 150.
Long Statement,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,Initialize,The length of the statement  "            _noError = Localization.Localization.GetString("NoErrorsSending"' Localization.Localization.GlobalResourceFile' _strSenderLanguage); " is 132.
Long Statement,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,SendConfirmationMail,The length of the statement  "            string body = _tokenReplace.ReplaceEnvironmentTokens(BodyFormat == MailFormat.Html ? _confirmBodyHTML : _confirmBodyText' parameters' "Custom"); " is 144.
Long Statement,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,SendConfirmationMail,The length of the statement  "            var message = new Message {FromUserID = _sendingUser.UserID' ToUserID = _sendingUser.UserID' Subject = strSubject' Body = body' Status = MessageStatusType.Unread}; " is 163.
Long Statement,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,ConditionallyAddUser,The length of the statement  "            if (((user.UserID <= 0 || user.Membership.Approved) && user.Email != string.Empty) && MatchLanguageFilter(user.Profile.PreferredLocale)) " is 136.
Long Statement,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,Recipients,The length of the statement  "                    if ((userRole.EffectiveDate <= DateTime.Now || Null.IsNull(userRole.EffectiveDate)) && (userRole.ExpiryDate >= DateTime.Now || Null.IsNull(userRole.ExpiryDate))) " is 161.
Long Statement,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,SendMails,The length of the statement  "                    body = "<html><head><base href='http://" + host + "'><title>" + Subject + "</title></head><body>" + body + "</body></html>"; " is 124.
Long Statement,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,SendMails,The length of the statement  "                bool replaceTokens = !SuppressTokenReplace && (_tokenReplace.ContainsTokens(Subject) || _tokenReplace.ContainsTokens(_body)); " is 125.
Long Statement,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,SendMails,The length of the statement  "                SendConfirmationMail(recipients' messagesSent' errors' subject' startedAt' mailErrors.ToString()' mailRecipients.ToString()); " is 125.
Long Statement,DotNetNuke.Services.Syndication,RssHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Syndication\RssHandler.cs,PopulateChannel,The length of the statement  "            Channel["copyright"] = !string.IsNullOrEmpty(Settings.FooterText) ? Settings.FooterText.Replace("[year]"' DateTime.Now.Year.ToString()) : string.Empty; " is 151.
Long Statement,DotNetNuke.Services.Syndication,RssHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Syndication\RssHandler.cs,PopulateChannel,The length of the statement  "                                    if (Convert.ToDateTime(objModule.StartDate == Null.NullDate ? DateTime.MinValue : objModule.StartDate) < DateTime.Now && " is 120.
Long Statement,DotNetNuke.Services.Upgrade.Internals.Steps,IISVerificationStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\IISVerificationStep.cs,GetVersion,The length of the statement  "            using (RegistryKey key = RegistryKey.OpenBaseKey(RegistryHive.LocalMachine' RegistryView.Registry32).OpenSubKey("SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v4\\Full\\")) " is 173.
Long Statement,DotNetNuke.Services.Upgrade.Internals.Steps,ActivateLicenseStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\ActivateLicenseStep.cs,Execute,The length of the statement  "            if (licenseConfig != null && (!string.IsNullOrEmpty(licenseConfig.AccountEmail) && !string.IsNullOrEmpty(licenseConfig.InvoiceNumber) " is 133.
Long Statement,DotNetNuke.Services.Upgrade.Internals.Steps,ActivateLicenseStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\ActivateLicenseStep.cs,Execute,The length of the statement  "                        Errors.Add(Localization.Localization.GetString("LicenseActivation"' LocalInstallResourceFile) + ": " + activationResult); " is 121.
Long Statement,DotNetNuke.Services.Upgrade.InternalController.Steps,SynchConnectionStringStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\SynchConnectionStringStep.cs,Execute,The length of the statement  "            if (!string.IsNullOrEmpty(connectionConfig.UpgradeConnectionString) && Config.GetUpgradeConnectionString().ToLower() != connectionConfig.UpgradeConnectionString.ToLower()) " is 171.
Long Statement,DotNetNuke.Services.Upgrade.InternalController.Steps,SynchConnectionStringStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\SynchConnectionStringStep.cs,GetUpgradeConnectionStringUserID,The length of the statement  "            if (connection.ToLowerInvariant().Contains("user id") || connection.ToLowerInvariant().Contains("uid") || connection.ToLowerInvariant().Contains("user")) " is 153.
Long Statement,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallDatabaseStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallDatabaseStep.cs,Execute,The length of the statement  "            //Step 1 - Install Base Database. Only when it's not already installed. Globals.DataBaseVersion is null when SPs are not present " is 128.
Long Statement,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallSiteStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallSiteStep.cs,CreateSite,The length of the statement  "                domain = Globals.GetDomainName(HttpContext.Current.Request' true).ToLowerInvariant().Replace("/install/launchautoinstall"' "").Replace("/install"' "").Replace("/runinstall"' ""); " is 178.
Long Statement,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallSiteStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallSiteStep.cs,CreateSite,The length of the statement  "                userInfo = Upgrade.CreateUserInfo(portal.AdminFirstName' portal.AdminLastName' portal.AdminUserName' portal.AdminPassword' email); " is 130.
Long Statement,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallSiteStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallSiteStep.cs,CreateSite,The length of the statement  "                userInfo = Upgrade.CreateUserInfo(installConfig.SuperUser.FirstName' installConfig.SuperUser.LastName' installConfig.SuperUser.UserName' installConfig.SuperUser.Password' installConfig.SuperUser.Email); " is 202.
Long Statement,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallSiteStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallSiteStep.cs,CreateSite,The length of the statement  "            UserController.UserLogin(portalId' userInfo.Username' installConfig.SuperUser.Password' ""' ""' ""' ref loginStatus' false); " is 124.
Long Statement,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallSuperUserStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallSuperUserStep.cs,Execute,The length of the statement  "            Details = Localization.Localization.GetString("CreatingSuperUser"' LocalInstallResourceFile) + installConfig.SuperUser.UserName; " is 128.
Long Statement,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallExtensionsStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallExtensionsStep.cs,Execute,The length of the statement  "                var message = string.Format(Localization.Localization.GetString("InstallingExtension"' LocalInstallResourceFile)' packageType' Path.GetFileName(file)); " is 151.
Long Statement,DotNetNuke.Services.Upgrade.InternalController.Steps,UpdateLanguagePackStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\UpdateLanguagePackStep.cs,Execute,The length of the statement  "					//need apply the Licensing module after packages installed' so that we can know whats the edition of install instance. CE/PE/EE " is 127.
Long Statement,DotNetNuke.Services.Upgrade.InternalController.Steps,UpdateLanguagePackStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\UpdateLanguagePackStep.cs,Execute,The length of the statement  "					//we shouldn't break the install process when LP download failed' for admin user can install the LP after website created. " is 122.
Long Statement,DotNetNuke.Services.Zip,SharpZipLibRedirect,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Zip\SharpZipLibRedirect.cs,Handler,The length of the statement  "            // requires startswith' because the full string is something like "SharpZipLib' Version=0.81.0.1407' Culture=neutral' PublicKeyToken=null" " is 138.
Long Statement,DotNetNuke.UI.Containers,ActionCommandButton,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionCommandButton.cs,OnPreRender,The length of the statement  "                        ImageUrl = ModuleControl.ModuleContext.Configuration.ContainerPath.Substring(0' ModuleControl.ModuleContext.Configuration.ContainerPath.LastIndexOf("/") + 1) + ImageUrl; " is 169.
Long Statement,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,Delete,The length of the statement  "                        EventLogController.Instance.AddLog(instance' PortalSettings' user.UserID' ""' EventLogController.EventLogType.MODULE_DELETED); " is 126.
Long Statement,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,Delete,The length of the statement  "            EventLogController.Instance.AddLog(module' PortalSettings' user.UserID' ""' EventLogController.EventLogType.MODULE_SENT_TO_RECYCLE_BIN); " is 136.
Long Statement,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,Localize,The length of the statement  "                    ModuleController.Instance.LocalizeModule(sourceModule' LocaleController.Instance.GetCurrentLocale(ModuleContext.PortalId)); " is 123.
Long Statement,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,MoveUpDown,The length of the statement  "                    ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' ModuleContext.Configuration.ModuleOrder - 3' Command.CommandArgument); " is 159.
Long Statement,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,MoveUpDown,The length of the statement  "                    ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' ModuleContext.Configuration.ModuleOrder + 3' Command.CommandArgument); " is 159.
Long Statement,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,MoveUpDown,The length of the statement  "                    ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' (ModuleContext.Configuration.PaneModuleCount * 2) + 1' Command.CommandArgument); " is 169.
Long Statement,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,IsVisible,The length of the statement  "            if (action.Visible && ModulePermissionController.HasModuleAccess(action.Secure' Null.NullString' ModuleContext.Configuration)) " is 126.
Long Statement,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,IsVisible,The length of the statement  "                if ((ModuleContext.PortalSettings.UserMode == PortalSettings.Mode.Edit) || (action.Secure == SecurityAccessLevel.Anonymous || action.Secure == SecurityAccessLevel.View)) " is 169.
Long Statement,DotNetNuke.UI.Containers,ActionsMenu,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionsMenu.cs,ProcessNodes,The length of the statement  "                objParent.JSFunction = string.Format("if({0}){{{1}}};"' objParent.JSFunction' Page.ClientScript.GetPostBackEventReference(ProviderControl.NavigationControl' objParent.ID)); " is 172.
Long Statement,DotNetNuke.UI.Containers,ActionsMenu,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionsMenu.cs,ProviderControl_PopulateOnDemand,The length of the statement  "            ActionRoot.Actions.AddRange(ModuleControl.ModuleContext.Actions); //Modules how add custom actions in control lifecycle will not have those actions populated... " is 160.
Long Statement,DotNetNuke.UI.Containers,Container,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\Container.cs,AddAdministratorOnlyHighlighting,The length of the statement  "            ContentPane.Controls.Add(new LiteralControl(string.Format("<div class=\"dnnFormMessage dnnFormInfo dnnFormInfoAdminErrMssg\">{0}</div>"' message))); " is 148.
Long Statement,DotNetNuke.UI.Containers,Container,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\Container.cs,ProcessContentPane,The length of the statement  "            string pageEditRoles = TabPermissionController.GetTabPermissions(ModuleConfiguration.TabID' ModuleConfiguration.PortalID).ToString("EDIT"); " is 139.
Long Statement,DotNetNuke.UI.Containers,Container,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\Container.cs,ProcessModule,The length of the statement  "                _tracelLogger.Debug($"Container.ProcessModule Start (TabId:{PortalSettings.ActiveTab.TabID}'ModuleID: {ModuleConfiguration.ModuleDefinition.DesktopModuleID}): Module FriendlyName: '{ModuleConfiguration.ModuleDefinition.FriendlyName}')"); " is 237.
Long Statement,DotNetNuke.UI.Containers,Container,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\Container.cs,ProcessModule,The length of the statement  "                if (InjectActionMenu && !ModuleHost.IsViewMode(ModuleConfiguration' PortalSettings) && Request.QueryString["dnnprintmode"] != "true") " is 133.
Long Statement,DotNetNuke.UI.Containers,Container,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\Container.cs,ProcessModule,The length of the statement  "                    _tracelLogger.Debug($"Container.ProcessModule Info (TabId:{PortalSettings.ActiveTab.TabID}'ModuleID: {ModuleConfiguration.ModuleDefinition.DesktopModuleID}): ControlPane.Controls.Add(ModuleHost:{_moduleHost.ID})"); " is 214.
Long Statement,DotNetNuke.UI.Containers,Container,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\Container.cs,ProcessModule,The length of the statement  "                _tracelLogger.Debug($"Container.ProcessModule End (TabId:{PortalSettings.ActiveTab.TabID}'ModuleID: {ModuleConfiguration.ModuleDefinition.DesktopModuleID}): Module FriendlyName: '{ModuleConfiguration.ModuleDefinition.FriendlyName}')"); " is 235.
Long Statement,DotNetNuke.UI.Containers,Container,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\Container.cs,ProcessStylesheets,The length of the statement  "            ClientResourceManager.RegisterStyleSheet(Page' ContainerSrc.Replace(".ascx"' ".css")' FileOrder.Css.SpecificContainerCss); " is 122.
Long Statement,DotNetNuke.UI.Containers,Container,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\Container.cs,SetAlignment,The length of the statement  "                    ContentPane.Attributes["class"] = ContentPane.Attributes["class"] + " DNNAlign" + ModuleConfiguration.Alignment.ToLowerInvariant(); " is 131.
Long Statement,DotNetNuke.UI.Containers,Container,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\Container.cs,InvokeContainerEvents,The length of the statement  "            SharedList<ContainerEventListener> list = ((NaiveLockingList<ContainerEventListener>)DotNetNukeContext.Current.ContainerEventListeners).SharedList; " is 147.
Long Statement,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,IsModuleAdminInternal,The length of the statement  "                    bool blnHasModuleEditPermissions = ModulePermissionController.HasModuleAccess(SecurityAccessLevel.Edit' Null.NullString' objModule); " is 132.
Long Statement,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,IsModuleAdminInternal,The length of the statement  "            return PortalController.Instance.GetCurrentPortalSettings().ControlPanelSecurity == PortalSettings.ControlPanelPermission.ModuleEditor && _IsModuleAdmin; " is 153.
Long Statement,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,IsPageAdminInternal,The length of the statement  "            if (TabPermissionController.CanAddContentToPage() || TabPermissionController.CanAddPage() || TabPermissionController.CanAdminPage() || TabPermissionController.CanCopyPage() || " is 175.
Long Statement,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,IsPageAdminInternal,The length of the statement  "                TabPermissionController.CanDeletePage() || TabPermissionController.CanExportPage() || TabPermissionController.CanImportPage() || TabPermissionController.CanManagePage()) " is 169.
Long Statement,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddExistingModule,The length of the statement  "                EventLogController.Instance.AddLog(objClone' PortalSettings' UserId' ""' EventLogController.EventLogType.MODULE_CREATED); " is 121.
Long Statement,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddNewModule,The length of the statement  "                if (!DesktopModuleController.GetDesktopModules(PortalSettings.PortalId).TryGetValue(desktopModuleId' out desktopModule)) " is 120.
Long Statement,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddNewModule,The length of the statement  "                    if (PortalSettings.Current.DefaultModuleId > Null.NullInteger && PortalSettings.Current.DefaultTabId > Null.NullInteger) " is 120.
Long Statement,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddNewModule,The length of the statement  "                        ModuleInfo defaultModule = ModuleController.Instance.GetModule(PortalSettings.Current.DefaultModuleId' PortalSettings.Current.DefaultTabId' true); " is 146.
Long Statement,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddNewModule,The length of the statement  "                ArrayList arrSystemModuleViewPermissions = objPermissionController.GetPermissionByCodeAndKey("SYSTEM_MODULE_DEFINITION"' "VIEW"); " is 129.
Long Statement,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddNewModule,The length of the statement  "                    ArrayList arrSystemModulePermissions = objPermissionController.GetPermissionByCodeAndKey("SYSTEM_MODULE_DEFINITION"' objTabPermission.PermissionKey); " is 149.
Long Statement,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddNewModule,The length of the statement  "                        if (objSystemModulePermission.PermissionKey == "VIEW" && permissionType == ViewPermissionType.Edit && objTabPermission.PermissionKey != "EDIT") " is 143.
Long Statement,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddNewModule,The length of the statement  "                            AddModulePermission(objModule' objCustomModulePermission' objTabPermission.RoleID' objTabPermission.UserID' objTabPermission.AllowAccess); " is 138.
Long Statement,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,OnInit,The length of the statement  "			if (this.Page.Items.Contains(typeof(ControlPanelBase)) && this.Page.Items[typeof(ControlPanelBase)] is ControlPanelBase) " is 120.
Long Statement,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,AddChildActions,The length of the statement  "                                && ModulePermissionController.HasModuleAccess(action.Secure' Null.NullString' actionControl.ModuleControl.ModuleContext.Configuration))) " is 136.
Long Statement,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,AddChildActions,The length of the statement  "                            node.Text = action.Title; //no longer including SPACE in generic node collection' each control must handle how they want to display " is 131.
Long Statement,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,AddChildActions,The length of the statement  "                            if (string.IsNullOrEmpty(action.ClientScript) && string.IsNullOrEmpty(action.Url) && string.IsNullOrEmpty(action.CommandArgument)) " is 130.
Long Statement,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,AddNode,The length of the statement  "                if (objTab.TabSettings["LinkNewWindow"] != null && Boolean.TryParse((string)objTab.TabSettings["LinkNewWindow"]' out newWindow) && newWindow) " is 141.
Long Statement,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,IsTabPending,The length of the statement  "                //Why is the check for POD required?  Well to allow for functionality like RootOnly requests.  We do not want any children " is 122.
Long Statement,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,IsTabPending,The length of the statement  "                //in tree above say we our breadcrumb is (A' B' B-2) we want our tree containing A' B' B-2 AND B-1 AND C since A and B are expanded " is 131.
Long Statement,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,ProcessTab,The length of the statement  "            bool showHidden = (intNavNodeOptions & (int)NavNodeOptions.IncludeHiddenNodes) == (int)NavNodeOptions.IncludeHiddenNodes; " is 121.
Long Statement,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,ProcessTab,The length of the statement  "            if (CanShowTab(objTab' TabPermissionController.CanAdminPage()' true' showHidden)) //based off of tab properties' is it shown " is 124.
Long Statement,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,ProcessTab,The length of the statement  "                            AddNode((TabInfo) objTabLookup[objTab.ParentId]' objParentNodes' objBreadCrumbs' objPortalSettings' eToolTips' nodesLookup); " is 124.
Long Statement,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,ProcessTab,The length of the statement  "                else if (((intNavNodeOptions & (int) NavNodeOptions.IncludeSiblings) != 0) && IsTabSibling(objTab' intStartTabId' objTabLookup)) " is 128.
Long Statement,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,ProcessTab,The length of the statement  "                        if (((intNavNodeOptions & (int) NavNodeOptions.IncludeSiblings) != 0) || IsTabSibling(objTab' intStartTabId' objTabLookup) == false) " is 132.
Long Statement,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,GetNavigationNodes,The length of the statement  "            //--- cache breadcrumbs in hashtable so we can easily set flag on node denoting it as a breadcrumb node (without looping multiple times) --- " is 140.
Long Statement,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,GetNavigationNodes,The length of the statement  "                ProcessTab(objRootNode' objTab' objTabLookup' objBreadCrumbs' intLastBreadCrumbId' eToolTips' intStartTabId' intDepth' intNavNodeOptions' nodesDict); " is 149.
Long Statement,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,GetNavigationNodes,The length of the statement  "                ProcessTab(objRootNode' objTab' objTabLookup' objBreadCrumbs' intLastBreadCrumbId' eToolTips' intStartTabId' intDepth' intNavNodeOptions' nodesDict); " is 149.
Long Statement,DotNetNuke.UI,UIUtilities,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UIUtilities.cs,GetModuleId,The length of the statement  "            if (request.QueryString["moduleid"] != null && (key.Equals("module"' StringComparison.InvariantCultureIgnoreCase) || key.Equals("help"' StringComparison.InvariantCultureIgnoreCase))) " is 182.
Long Statement,DotNetNuke.UI,UIUtilities,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UIUtilities.cs,GetSlaveModule,The length of the statement  "            if (request.QueryString["moduleid"] != null && (key.ToLowerInvariant() == "module" || key.ToLowerInvariant() == "help")) " is 120.
Long Statement,DotNetNuke.UI,UIUtilities,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UIUtilities.cs,IsLegacyUI,The length of the statement  "                isLegacyUi = !(settings.EnablePopUps && !request.Browser.Crawler && request.Browser.EcmaScriptVersion >= new Version(1' 0)); " is 124.
Long Statement,DotNetNuke.UI,UIUtilities,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UIUtilities.cs,GetLocalResourceFile,The length of the statement  "                    resourceFileName = string.Format("{0}/{1}/{2}.ascx.resx"' ctrl.TemplateSourceDirectory' Localization.LocalResourceDirectory' ctrl.GetType().BaseType.Name); " is 155.
Long Statement,DotNetNuke.UI,UIUtilities,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UIUtilities.cs,GetLocalResourceFile,The length of the statement  "                    resourceFileName = string.Format("{0}/{1}/{2}.aspx.resx"' ctrl.TemplateSourceDirectory' Localization.LocalResourceDirectory' ctrl.GetType().BaseType.Name); " is 155.
Long Statement,DotNetNuke.UI.Internals,FavIcon,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\FavIcon.cs,Update,The length of the statement  "            PortalController.UpdatePortalSetting(_portalId' SettingName' fileId != Null.NullInteger ? string.Format("FileID={0}"' fileId) : ""' /*clearCache*/ true); " is 153.
Long Statement,DotNetNuke.UI.Modules,BaseModuleControlFactory,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\BaseModuleControlFactory.cs,CreateModuleControl,The length of the statement  "            moduleControl.LocalResourceFile = moduleConfiguration.ModuleControl.ControlSrc.Replace(Path.GetFileName(moduleConfiguration.ModuleControl.ControlSrc)' "") + " is 156.
Long Statement,DotNetNuke.UI.Modules,ModuleControlFactory,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleControlFactory.cs,LoadModuleControl,The length of the statement  "                TracelLogger.Debug($"ModuleControlFactory.LoadModuleControl Start (TabId:{moduleConfiguration.TabID}'ModuleId:{moduleConfiguration.ModuleID}): ModuleControlSource:{moduleConfiguration.ModuleControl.ControlSrc}"); " is 212.
Long Statement,DotNetNuke.UI.Modules,ModuleControlFactory,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleControlFactory.cs,LoadModuleControl,The length of the statement  "                TracelLogger.Debug($"ModuleControlFactory.LoadModuleControl End (TabId:{moduleConfiguration.TabID}'ModuleId:{moduleConfiguration.ModuleID}): ModuleControlSource:{moduleConfiguration.ModuleControl.ControlSrc}"); " is 210.
Long Statement,DotNetNuke.UI.Modules,ModuleControlFactory,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleControlFactory.cs,LoadModuleControl,The length of the statement  "                TracelLogger.Debug($"ModuleControlFactory.LoadModuleControl Start (TabId:{moduleConfiguration.TabID}'ModuleId:{moduleConfiguration.ModuleID}): ModuleControlSource:{moduleConfiguration.ModuleControl.ControlSrc}"); " is 212.
Long Statement,DotNetNuke.UI.Modules,ModuleControlFactory,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleControlFactory.cs,LoadModuleControl,The length of the statement  "                TracelLogger.Debug($"ModuleControlFactory.LoadModuleControl End (TabId:{moduleConfiguration.TabID}'ModuleId:{moduleConfiguration.ModuleID}): ModuleControlSource:{moduleConfiguration.ModuleControl.ControlSrc}"); " is 210.
Long Statement,DotNetNuke.UI.Modules,ModuleControlFactory,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleControlFactory.cs,LoadSettingsControl,The length of the statement  "                TracelLogger.Debug($"ModuleControlFactory.LoadSettingsControl Start (TabId:{moduleConfiguration.TabID}'ModuleId:{moduleConfiguration.ModuleID}): ModuleControlSource:{moduleConfiguration.ModuleControl.ControlSrc}"); " is 214.
Long Statement,DotNetNuke.UI.Modules,ModuleControlFactory,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleControlFactory.cs,LoadSettingsControl,The length of the statement  "                TracelLogger.Debug($"ModuleControlFactory.LoadSettingsControl End (TabId:{moduleConfiguration.TabID}'ModuleId:{moduleConfiguration.ModuleID}): ModuleControlSource:{moduleConfiguration.ModuleControl.ControlSrc}"); " is 212.
Long Statement,DotNetNuke.UI.Modules,ModuleControlFactory,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleControlFactory.cs,CreateModuleControl,The length of the statement  "                    moduleControl.LocalResourceFile = moduleConfiguration.ModuleControl.ControlSrc.Replace(Path.GetFileName(moduleConfiguration.ModuleControl.ControlSrc)' "") + " is 156.
Long Statement,DotNetNuke.UI.Modules,ModuleHost,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleHost.cs,InjectModuleContent,The length of the statement  "                                         Text = !string.IsNullOrEmpty(_moduleConfiguration.WebSliceTitle) ? _moduleConfiguration.WebSliceTitle : _moduleConfiguration.ModuleTitle " is 136.
Long Statement,DotNetNuke.UI.Modules,ModuleHost,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleHost.cs,LoadModuleControl,The length of the statement  "                    //if the module supports caching and caching is enabled for the instance and the user does not have Edit rights or is currently in View mode " is 140.
Long Statement,DotNetNuke.UI.Modules,ModuleHost,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleHost.cs,TryLoadCached,The length of the statement  "                byte[] cachedBytes = ModuleCachingProvider.Instance(_moduleConfiguration.GetEffectiveCacheMethod()).GetModule(_moduleConfiguration.TabModuleID' cacheKey); " is 154.
Long Statement,DotNetNuke.UI.Modules,ModuleHost,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleHost.cs,RestoreCachedClientResourceRegistrations,The length of the statement  "                            JavaScript.RequestRegistration(args[0]' new Version(args[1])' (SpecificVersion)Enum.Parse(typeof(SpecificVersion)' args[2])); " is 125.
Long Statement,DotNetNuke.UI.Modules,ModuleHost,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleHost.cs,CreateChildControls,The length of the statement  "                //if module is dynamically loaded and AJAX is installed and the control supports partial rendering (defined in ModuleControls table ) " is 133.
Long Statement,DotNetNuke.UI.Modules,ModuleHost,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleHost.cs,RenderContents,The length of the statement  "                if (SupportsCaching() && IsViewMode(_moduleConfiguration' PortalSettings) && !Globals.IsAdminControl() && !IsVersionRequest()) " is 126.
Long Statement,DotNetNuke.UI.Modules,ModuleHost,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleHost.cs,RenderContents,The length of the statement  "                        cache.SetModule(_moduleConfiguration.TabModuleID' cacheKey' new TimeSpan(0' 0' _moduleConfiguration.CacheTime)' moduleContent); " is 127.
Long Statement,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,AddHelpActions,The length of the statement  "            if (!string.IsNullOrEmpty(Configuration.ModuleControl.HelpURL) && Host.EnableModuleOnLineHelp && PortalSettings.EnablePopUps) " is 125.
Long Statement,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,AddPrintAction,The length of the statement  "                                                 "SkinSrc=" + Globals.QueryStringEncode("[G]" + SkinController.RootSkin + "/" + Globals.glbHostSkinFolder + "/" + "No Skin")' " is 124.
Long Statement,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,AddPrintAction,The length of the statement  "                                                 "ContainerSrc=" + Globals.QueryStringEncode("[G]" + SkinController.RootContainer + "/" + Globals.glbHostSkinFolder + "/" + "No Container")' " is 139.
Long Statement,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,AddMenuMoveActions,The length of the statement  "            _moduleMoveActions = new ModuleAction(GetNextActionID()' Localization.GetString(ModuleActionType.MoveRoot' Localization.GlobalResourceFile)' string.Empty' string.Empty' string.Empty' string.Empty' string.Empty' false); " is 218.
Long Statement,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,AddMenuMoveActions,The length of the statement  "                if (!string.IsNullOrEmpty(pane) && Configuration != null && !Configuration.PaneName.Equals(pane' StringComparison.InvariantCultureIgnoreCase)) " is 142.
Long Statement,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,LoadActions,The length of the statement  "            _moduleGenericActions = new ModuleAction(GetNextActionID()' Localization.GetString("ModuleGenericActions.Action"' Localization.GlobalResourceFile)' string.Empty' string.Empty' string.Empty); " is 190.
Long Statement,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,LoadActions,The length of the statement  "                _moduleSpecificActions = new ModuleAction(GetNextActionID()' Localization.GetString("ModuleSpecificActions.Action"' Localization.GlobalResourceFile)' string.Empty' string.Empty' string.Empty); " is 192.
Long Statement,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,LoadActions,The length of the statement  "                if (!Globals.IsAdminControl() && ModulePermissionController.HasModuleAccess(SecurityAccessLevel.Admin' "DELETE'MANAGE"' Configuration)) " is 135.
Long Statement,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,LoadActions,The length of the statement  "                                     NavigateUrl(PortalSettings.ActiveTab.TabID' "ExportModule"' false' "moduleid=" + ModuleId' "ReturnURL=" + FilterUrl(request))' " is 126.
Long Statement,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,LoadActions,The length of the statement  "                                     NavigateUrl(PortalSettings.ActiveTab.TabID' "ImportModule"' false' "moduleid=" + ModuleId' "ReturnURL=" + FilterUrl(request))' " is 126.
Long Statement,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,LoadActions,The length of the statement  "            if (ModulePermissionController.HasModuleAccess(SecurityAccessLevel.Host' "MANAGE"' Configuration) && !Globals.IsAdminControl()) " is 127.
Long Statement,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,LoadActions,The length of the statement  "                             NavigateUrl(TabId' "ViewSource"' false' "ModuleId=" + ModuleId' "ctlid=" + Configuration.ModuleControlId' "ReturnURL=" + FilterUrl(request))' " is 141.
Long Statement,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,LoadActions,The length of the statement  "            if (!Globals.IsAdminControl() && ModulePermissionController.HasModuleAccess(SecurityAccessLevel.Admin' "DELETE'MANAGE"' Configuration)) " is 135.
Long Statement,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,NavigateUrl,The length of the statement  "            var url = TestableGlobals.Instance.NavigateURL(tabID' isSuperTab' settings' controlKey' language' pageName' additionalParameters); " is 130.
Long Statement,DotNetNuke.UI.Modules,ProfileModuleUserControlBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ProfileModuleUserControlBase.cs,GetRedirectUrl,The length of the statement  "                redirectUrl = TestableGlobals.Instance.GetPortalDomainName(PortalSettings.Current.PortalAlias.HTTPAlias' Request' true) + " is 121.
Long Statement,DotNetNuke.UI.Modules,ProfileModuleUserControlBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ProfileModuleUserControlBase.cs,OnInit,The length of the statement  "                                          ? NavigationManager.NavigateURL(ModuleContext.PortalSettings.ActiveTab.TabID' ""' "UserId=" + ModuleContext.PortalSettings.UserId.ToString(CultureInfo.InvariantCulture)) " is 169.
Long Statement,DotNetNuke.UI.Skins.Controls,LanguagePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\LanguageTokenReplace.cs,GetQsParams,The length of the statement  "                HttpUtility.ParseQueryString(new Uri(HttpContext.Current.Request.Url.Scheme + "://" + HttpContext.Current.Request.Url.Authority + HttpContext.Current.Request.RawUrl).Query); " is 173.
Long Statement,DotNetNuke.UI.Skins.Controls,LanguagePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\LanguageTokenReplace.cs,GetQsParams,The length of the statement  "                                ModuleInfo localizedModule = ModuleController.Instance.GetModuleByCulture(moduleID' tabid' settings.PortalId' LocaleController.Instance.GetLocale(newLanguage)); " is 160.
Long Statement,DotNetNuke.UI.Skins.Controls,LanguagePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\LanguageTokenReplace.cs,GetQsParams,The length of the statement  "            if (!settings.ContentLocalizationEnabled && LocaleController.Instance.GetLocales(settings.PortalId).Count > 1 && !settings.EnableUrlLanguage) " is 141.
Long Statement,DotNetNuke.UI.Skins.Controls,LanguagePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\LanguageTokenReplace.cs,NewUrl,The length of the statement  "                // Example: Accessing protected page /de-de/Page1 redirects to /de-DE/Login?returnurl=%2f%2fde-de%2fPage1 and changing language to en-us on the login page " is 154.
Long Statement,DotNetNuke.UI.Skins.Controls,LanguagePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\LanguageTokenReplace.cs,NewUrl,The length of the statement  "                // using the language links won't change the language in the returnurl parameter and the user will be redirected to the de-de version after logging in " is 150.
Long Statement,DotNetNuke.UI.Skins.Controls,LanguagePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\LanguageTokenReplace.cs,NewUrl,The length of the statement  "                // Assumption: Loosing the returnurl information is better than confusing the user by switching the language back after the login " is 129.
Long Statement,DotNetNuke.UI.Skins.Controls,LanguagePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\LanguageTokenReplace.cs,NewUrl,The length of the statement  "                var queryParams = HttpUtility.ParseQueryString(new Uri(string.Concat(HttpContext.Current.Request.Url.GetLeftPart(UriPartial.Authority)' HttpContext.Current.Request.RawUrl)).Query); " is 180.
Long Statement,DotNetNuke.UI.Skins.Controls,LanguagePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\LanguageTokenReplace.cs,NewUrl,The length of the statement  "            var url = $"{TestableGlobals.Instance.NavigateURL(tabId' isSuperTab' objPortal' controlKey' newLanguage' queryStrings)}{rawQueryString}"; " is 137.
Long Statement,DotNetNuke.UI.Skins.Controls,SkinsEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\SkinsEditControl.cs,RenderEditMode,The length of the statement  "                    writer.AddAttribute(HtmlTextWriterAttribute.Href' Page.ClientScript.GetPostBackClientHyperlink(this' "Delete_" + kvp.Key' false)); " is 130.
Long Statement,DotNetNuke.UI.Skins.Controls,SkinsEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\SkinsEditControl.cs,RenderEditMode,The length of the statement  "                    writer.AddAttribute(HtmlTextWriterAttribute.Onclick' "javascript:return confirm('" + ClientAPI.GetSafeJSString(Localization.GetString("DeleteItem")) + "');"); " is 158.
Long Statement,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,LoadContainerByPath,The length of the statement  "            if (containerPath.IndexOf("/skins/"' StringComparison.InvariantCultureIgnoreCase) != -1 || containerPath.IndexOf("/skins\\"' StringComparison.InvariantCultureIgnoreCase) != -1 || containerPath.IndexOf("\\skins\\"' StringComparison.InvariantCultureIgnoreCase) != -1 || " is 267.
Long Statement,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,LoadContainerByPath,The length of the statement  "                    _containerWrapperControl.Controls.Add(new ErrorContainer(PortalSettings' string.Format(Skin.CONTAINERLOAD_ERROR' containerPath)' lex).Container); " is 145.
Long Statement,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,LoadContainerFromPane,The length of the statement  "                containerSrc = "[" + PaneControl.Attributes["ContainerType"] + "]" + SkinController.RootContainer + "/" + PaneControl.Attributes["ContainerName"] + "/" + " is 153.
Long Statement,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,LoadContainerFromPane,The length of the statement  "                if (containerSrc.Contains("/") && !(containerSrc.StartsWith("[g]"' StringComparison.InvariantCultureIgnoreCase) || containerSrc.StartsWith("[l]"' StringComparison.InvariantCultureIgnoreCase))) " is 192.
Long Statement,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,LoadContainerFromPane,The length of the statement  "                    containerSrc = string.Format(SkinController.IsGlobalSkin(PortalSettings.ActiveTab.SkinSrc) ? "[G]containers/{0}" : "[L]containers/{0}"' containerSrc.TrimStart('/')); " is 165.
Long Statement,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,LoadContainerFromQueryString,The length of the statement  "                string containerSrc = SkinController.FormatSkinSrc(Globals.QueryStringDecode(request.QueryString["ContainerSrc"]) + ".ascx"' PortalSettings); " is 141.
Long Statement,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,LoadModuleContainer,The length of the statement  "                container = (LoadContainerFromQueryString(module' request) ?? LoadContainerFromCookie(request)) ?? LoadNoContainer(module); " is 123.
Long Statement,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,InjectModule,The length of the statement  "                if (!Globals.IsAdminControl() && (PortalSettings.InjectModuleHyperLink || PortalSettings.UserMode != PortalSettings.Mode.View)) " is 127.
Long Statement,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,InjectModule,The length of the statement  "                    //Assume that the title control is named dnnTitle.  If this becomes an issue we could loop through the controls looking for the title type of skin object " is 153.
Long Statement,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,InjectModule,The length of the statement  "                //Response.Redirect may called in module control's OnInit method' so it will cause ThreadAbortException' no need any action here. " is 129.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,InjectControlPanel,The length of the statement  "            if (Request.QueryString["dnnprintmode"] != "true" && !UrlUtils.InPopUp() && Request.QueryString["hidecommandbar"] != "true") " is 124.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,InjectControlPanel,The length of the statement  "                if (Host.AllowControlPanelToDetermineVisibility || (ControlPanelBase.IsPageAdminInternal() || ControlPanelBase.IsModuleAdminInternal()))  " is 136.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,InvokeSkinEvents,The length of the statement  "            SharedList<SkinEventListener> list = ((NaiveLockingList<SkinEventListener>)DotNetNukeContext.Current.SkinEventListeners).SharedList; " is 132.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,LoadSkin,The length of the statement  "                    skinError.Text = string.Format(Localization.GetString("SkinLoadError"' Localization.GlobalResourceFile)' skinPath' page.Server.HtmlEncode(exc.Message)); " is 152.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,ProcessMasterModules,The length of the statement  "                    if (TabVersionController.Instance.GetTabVersions(TabController.CurrentPage.TabID).All(tabVersion => tabVersion.Version != urlVersion)) " is 134.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,ProcessMasterModules,The length of the statement  "                    if ((PortalSettings.ActiveTab.StartDate < DateAndTime.Now && PortalSettings.ActiveTab.EndDate > DateAndTime.Now) || TabPermissionController.CanAdminPage() || Globals.IsLayoutMode()) " is 181.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,ProcessMasterModules,The length of the statement  "                                   string.Format(Localization.GetString("ContractExpired.Error")' PortalSettings.PortalName' Globals.GetMediumDate(PortalSettings.ExpiryDate.ToString(CultureInfo.InvariantCulture))' PortalSettings.Email)' " is 201.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,OnInit,The length of the statement  "                AddPageMessage(this' Localization.GetString("ModuleLoadWarning.Error")' string.Format(Localization.GetString("ModuleLoadWarning.Text")' PortalSettings.Email)' ModuleMessage.ModuleMessageType.YellowWarning); " is 206.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,OnInit,The length of the statement  "					messageType = (ModuleMessage.ModuleMessageType)Enum.Parse(typeof (ModuleMessage.ModuleMessageType)' HttpContext.Current.Items[OnInitMessageType].ToString()' true); " is 163.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,OnPreRender,The length of the statement  "                ClientResourceManager.RegisterStyleSheet(Page' "~/resources/shared/stylesheets/dnn.dragDrop.css"' FileOrder.Css.FeatureCss); " is 124.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,OnPreRender,The length of the statement  "                sb.AppendLine("             draggingHintText: '" + Localization.GetSafeJSString("DraggingHintText"' Localization.GlobalResourceFile) + "''"); " is 141.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,OnPreRender,The length of the statement  "                sb.AppendLine("             dragHintText: '" + Localization.GetSafeJSString("DragModuleHint"' Localization.GlobalResourceFile) + "''"); " is 135.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,OnPreRender,The length of the statement  "                sb.AppendLine("             dropHintText: '" + Localization.GetSafeJSString("DropModuleHint"' Localization.GlobalResourceFile) + "''"); " is 135.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,OnPreRender,The length of the statement  "                sb.AppendLine("             dropTargetText: '" + Localization.GetSafeJSString("DropModuleTarget"' Localization.GlobalResourceFile) + "'"); " is 138.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,GetPopUpSkin,The length of the statement  "            string skinSource = Globals.IsAdminSkin() ? SkinController.FormatSkinSrc(page.PortalSettings.DefaultAdminSkin' page.PortalSettings) : page.PortalSettings.ActiveTab.SkinSrc; " is 172.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,GetPopUpSkin,The length of the statement  "                skinSource = SkinController.FormatSkinSrc(SkinController.FormatSkinPath(skinSource) + "popUpSkin.ascx"' page.PortalSettings); " is 125.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,GetSkin,The length of the statement  "                skinSource = SkinController.FormatSkinSrc(Globals.QueryStringDecode(page.Request.QueryString["SkinSrc"]) + ".ascx"' page.PortalSettings); " is 137.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,GetSkin,The length of the statement  "                //skinSource = Globals.IsAdminSkin() ? SkinController.FormatSkinSrc(page.PortalSettings.DefaultAdminSkin' page.PortalSettings) : page.PortalSettings.ActiveTab.SkinSrc; " is 167.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,GetSkin,The length of the statement  "                skinSource = Globals.IsAdminSkin() ? PortalController.GetPortalSetting("DefaultAdminSkin"' page.PortalSettings.PortalId' " is 120.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,InjectModule,The length of the statement  "                if(PortalSettings.ActiveTab.TabID == PortalSettings.UserTabId || PortalSettings.ActiveTab.ParentId == PortalSettings.UserTabId) " is 127.
Long Statement,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,InjectModule,The length of the statement  "                //Response.Redirect may called in module control's OnInit method' so it will cause ThreadAbortException' no need any action here. " is 129.
Long Statement,DotNetNuke.UI.Skins,SkinControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinControl.cs,LoadSkins,The length of the statement  "                if (cboSkin.Items[intIndex].Value.Equals(Convert.ToString(ViewState["SkinSrc"])' StringComparison.InvariantCultureIgnoreCase)) " is 126.
Long Statement,DotNetNuke.UI.Skins,SkinControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinControl.cs,OnLoad,The length of the statement  "				if (Request.QueryString["pid"] != null && (Globals.IsHostTab(PortalSettings.ActiveTab.TabID) || UserController.Instance.GetCurrentUserInfo().IsSuperUser)) " is 154.
Long Statement,DotNetNuke.UI.Skins,SkinControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinControl.cs,cmdPreview_Click,The length of the statement  "                string strURL = Globals.ApplicationURL() + "&" + strType + "Src=" + Globals.QueryStringEncode(SkinSrc.Replace(".ascx"' "")); " is 124.
Long Statement,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,GetPortalSkins,The length of the statement  "                ProcessSkinsFolder(skins' portalInfo.HomeDirectoryMapPath + skinRoot' skinRoot' PortalSkinPrefix); //to be compliant with all versions " is 134.
Long Statement,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,AddSkinPackage,The length of the statement  "            EventLogController.Instance.AddLog(skinPackage' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.SKINPACKAGE_CREATED); " is 212.
Long Statement,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,AddSkinPackage,The length of the statement  "            return DataProvider.Instance().AddSkinPackage(skinPackage.PackageID' skinPackage.PortalID' skinPackage.SkinName' skinPackage.SkinType' UserController.Instance.GetCurrentUserInfo().UserID); " is 188.
Long Statement,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,CanDeleteSkin,The length of the statement  "            else if (folderPath.IndexOf(PortalSettings.Current.HomeSystemDirectoryMapPath' StringComparison.InvariantCultureIgnoreCase) != -1) " is 130.
Long Statement,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,CanDeleteSkin,The length of the statement  "                if (Host.DefaultAdminSkin.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase) || Host.DefaultPortalSkin.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase) || " is 178.
Long Statement,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,CanDeleteSkin,The length of the statement  "                    portalSettings.DefaultAdminSkin.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase) || portalSettings.DefaultPortalSkin.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase)) " is 192.
Long Statement,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,CanDeleteSkin,The length of the statement  "                if (Host.DefaultAdminContainer.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase) || Host.DefaultPortalContainer.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase) || " is 188.
Long Statement,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,CanDeleteSkin,The length of the statement  "                    portalSettings.DefaultAdminContainer.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase) || portalSettings.DefaultPortalContainer.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase)) " is 202.
Long Statement,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,DeleteSkinPackage,The length of the statement  "            EventLogController.Instance.AddLog(skinPackage' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.SKINPACKAGE_DELETED); " is 212.
Long Statement,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,UpdateSkinPackage,The length of the statement  "            EventLogController.Instance.AddLog(skinPackage' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' ""' EventLogController.EventLogType.SKINPACKAGE_UPDATED); " is 212.
Long Statement,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,UploadLegacySkin,The length of the statement  "                        else if (objZipEntry.Name.Equals(RootContainer.ToLowerInvariant() + ".zip"' StringComparison.InvariantCultureIgnoreCase)) " is 121.
Long Statement,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,UploadLegacySkin,The length of the statement  "                        strMessage += string.Format(FILE_RESTICTED' objZipEntry.Name' Host.AllowedExtensionWhitelist.ToStorageString()' "'"' "' *.").Replace("2"' "true"); " is 146.
Long Statement,DotNetNuke.UI.Skins,SkinDefaults,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinDefaults.cs,GetSkinDefaults,The length of the statement  "                    new CacheItemArgs(string.Format(DataCache.SkinDefaultsCacheKey' DefaultType)' DataCache.SkinDefaultsCacheTimeOut' DataCache.SkinDefaultsCachePriority' DefaultType)' " is 164.
Long Statement,DotNetNuke.UI.Skins,ControlParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,TokenMatchHandler,The length of the statement  "                string AttributeNode = Token + (String.IsNullOrEmpty(m.Groups["instance"].Value) ? "" : ":" + m.Groups["instance"].Value); " is 122.
Long Statement,DotNetNuke.UI.Skins,ControlParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,TokenMatchHandler,The length of the statement  "                        XmlNode xmlSkinAttributeRoot = Attributes.DocumentElement.SelectSingleNode("descendant::Object[Token='[" + AttributeNode + "]']"); " is 130.
Long Statement,DotNetNuke.UI.Skins,ControlParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,TokenMatchHandler,The length of the statement  "                                                                             xmlSkinAttribute.SelectSingleNode("Name").InnerText + "=\"" + xmlSkinAttribute.SelectSingleNode("Value").InnerText + "\""' " is 122.
Long Statement,DotNetNuke.UI.Skins,ControlParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,TokenMatchHandler,The length of the statement  "                                    SkinControl += " " + xmlSkinAttribute.SelectSingleNode("Name").InnerText + "=\"" + xmlSkinAttribute.SelectSingleNode("Value").InnerText.Replace("\""' "&quot;") + " is 161.
Long Statement,DotNetNuke.UI.Skins,ControlParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,TokenMatchHandler,The length of the statement  "                        string ControlRegistration = "<%@ Register TagPrefix=\"dnn\" TagName=\"" + Token + "\" Src=\"~/" + (string)ControlList[Token] + "\" %>" + Environment.NewLine; " is 158.
Long Statement,DotNetNuke.UI.Skins,ObjectParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,ObjectMatchHandler,The length of the statement  "                //"token" string matches will be in the form of (" id=".." codetype=".." codebase=".." etc...><param name=".." value=".." />") " is 126.
Long Statement,DotNetNuke.UI.Skins,ObjectParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,ObjectMatchHandler,The length of the statement  "                //we need to assume properly formatted HTML - attributes will be enclosed in double quotes and there will no spaces between assignments ( ie. attribute="value" ) " is 161.
Long Statement,DotNetNuke.UI.Skins,ObjectParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,ObjectMatchHandler,The length of the statement  "                            string ControlRegistration = "<%@ Register TagPrefix=\"dnn\" TagName=\"" + Token + "\" Src=\"~/" + (string)ControlList[Token] + "\" %>" + Environment.NewLine; " is 158.
Long Statement,DotNetNuke.UI.Skins,PathParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,MatchHandler,The length of the statement  "                m_Messages += SkinController.FormatMessage(SUBST' string.Format(SUBST_DETAIL' HttpUtility.HtmlEncode(strOldTag)' HttpUtility.HtmlEncode(strNewTag))' 2' false); " is 159.
Long Statement,DotNetNuke.UI.Skins,SkinFile,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,PrependASCXDirectives,The length of the statement  "                    Prefix += "<%@ Control language=\"vb\" AutoEventWireup=\"false\" Explicit=\"True\" Inherits=\"DotNetNuke.UI.Skins.Skin\" %>" + Environment.NewLine; " is 147.
Long Statement,DotNetNuke.UI.Skins,SkinFile,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,PrependASCXDirectives,The length of the statement  "                    Prefix += "<%@ Control language=\"vb\" AutoEventWireup=\"false\" Explicit=\"True\" Inherits=\"DotNetNuke.UI.Containers.Container\" %>" + Environment.NewLine; " is 157.
Long Statement,DotNetNuke.UI.Skins,SkinThumbNailControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinThumbNailControl.cs,AddDefaultSkin,The length of the statement  "            strDefault += "<img src=\"" + Globals.ApplicationPath.Replace("\\"' "/") + "/images/spacer.gif\" width=\"140\" height=\"135\" border=\"0\">"; " is 141.
Long Statement,DotNetNuke.UI.Skins,SkinThumbNailControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinThumbNailControl.cs,AddSkin,The length of the statement  "                strImage += "<a href=\"" + CreateThumbnail(strFile.Replace(".ascx"' ".jpg")).Replace("thumbnail_"' "") + "\" target=\"_blank\"><img src=\"" + " is 141.
Long Statement,DotNetNuke.UI.Skins,SkinThumbNailControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinThumbNailControl.cs,AddSkin,The length of the statement  "            OptSkin.Items.Add(new ListItem(FormatSkinName(strFolder' Path.GetFileNameWithoutExtension(strFile)) + "<br />" + strImage' root + "/" + strFolder + "/" + Path.GetFileName(strFile))); " is 182.
Long Statement,DotNetNuke.UI.Skins,SkinThumbNailControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinThumbNailControl.cs,CreateThumbnail,The length of the statement  "            strThumbnail = Globals.ApplicationPath + "\\" + strThumbnail.Substring(strThumbnail.IndexOf("portals\\"' StringComparison.InvariantCultureIgnoreCase)); " is 151.
Long Statement,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,Localize,The length of the statement  "					cboRegion.Items.Insert(0' new ListItem("<" + Localization.GetString("Not_Specified"' Localization.SharedResourceFile) + ">"' "")); " is 130.
Long Statement,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,OnLoad,The length of the statement  "				valTelephone.ErrorMessage = Localization.GetString("TelephoneRequired"' Localization.GetResourceFile(this' MyFileName)); " is 120.
Long Statement,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,OnLoad,The length of the statement  "					cboCountry.Items.Insert(0' new ListItem("<" + Localization.GetString("Not_Specified"' Localization.SharedResourceFile) + ">"' "")); " is 131.
Long Statement,DotNetNuke.UI.UserControls,Help,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Help.cs,OnLoad,The length of the statement  "                    helpFrame.Text = string.Format("<iframe src='{0}' id='helpFrame' width='100%' height='500'></iframe>"' objModuleControl.HelpURL); ; " is 131.
Long Statement,DotNetNuke.UI.UserControls,Help,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Help.cs,OnLoad,The length of the statement  "                    string localResourceFile = objModuleControl.ControlSrc.Replace(fileName' Localization.LocalResourceDirectory + "/" + fileName); " is 127.
Long Statement,DotNetNuke.UI.UserControls,Help,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Help.cs,OnLoad,The length of the statement  "                    ModuleDefinitionInfo objModuleDefinition = ModuleDefinitionController.GetModuleDefinitionByID(objModuleControl.ModuleDefID); " is 124.
Long Statement,DotNetNuke.UI.UserControls,Help,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Help.cs,OnLoad,The length of the statement  "                        DesktopModuleInfo objDesktopModule = DesktopModuleController.GetDesktopModule(objModuleDefinition.DesktopModuleID' PortalId); " is 125.
Long Statement,DotNetNuke.UI.UserControls,Help,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Help.cs,OnLoad,The length of the statement  "                            PackageInfo objPackage = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.PackageID == objDesktopModule.PackageID); " is 138.
Long Statement,DotNetNuke.UI.UserControls,ModuleAuditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\ModuleAuditControl.cs,ShowCreatedString,The length of the statement  "                    UserInfo userInfo = UserController.GetUserById(PortalController.Instance.GetCurrentPortalSettings().PortalId' int.Parse(CreatedByUser)); " is 136.
Long Statement,DotNetNuke.UI.UserControls,ModuleAuditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\ModuleAuditControl.cs,ShowUpdatedString,The length of the statement  "                    UserInfo userInfo = UserController.GetUserById(PortalController.Instance.GetCurrentPortalSettings().PortalId' int.Parse(LastModifiedByUser)); " is 141.
Long Statement,DotNetNuke.UI.UserControls,SectionHeadControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\SectionHeadControl.cs,OnPreRender,The length of the statement  "                    DNNClientAPI.EnableMinMax(imgIcon' ctl' !IsExpanded' Page.ResolveUrl(MinImageUrl)' Page.ResolveUrl(MaxImageUrl)' DNNClientAPI.MinMaxPersistanceType.Page); " is 154.
Long Statement,DotNetNuke.UI.UserControls,TextEditor,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\TextEditor.cs,PopulateLists,The length of the statement  "                OptView.Items.Add(new ListItem(Localization.GetString("BasicTextBox"' Localization.GetResourceFile(this' MyFileName))' "BASIC")); " is 129.
Long Statement,DotNetNuke.UI.UserControls,TextEditor,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\TextEditor.cs,PopulateLists,The length of the statement  "                    OptView.Items.Add(new ListItem(Localization.GetString("RichTextBox"' Localization.GetResourceFile(this' MyFileName))' "RICH")); " is 127.
Long Statement,DotNetNuke.UI.UserControls,TextEditor,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\TextEditor.cs,OptRenderSelectedIndexChanged,The length of the statement  "                TxtDesktopHTML.Text = TextRenderMode == "H" ? HtmlUtils.ConvertToHtml(TxtDesktopHTML.Text) : HtmlUtils.ConvertToText(TxtDesktopHTML.Text); " is 138.
Long Statement,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,SetStorageLocationType,The length of the statement  "            //Check to see if this is the 'Root' folder' if so we cannot rely on its text value because it is something and not an empty string that we need to lookup the 'root' folder " is 172.
Long Statement,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,SetStorageLocationType,The length of the statement  "                var folderMapping = FolderMappingController.Instance.GetFolderMapping(objFolderInfo.PortalID' objFolderInfo.FolderMappingID); " is 125.
Long Statement,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,SetStorageLocationType,The length of the statement  "                    imgStorageLocationType.ImageUrl = FolderProvider.Instance(folderMapping.FolderProviderType).GetFolderProviderIconPath(); " is 120.
Long Statement,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,DoChangeURL,The length of the statement  "                if (_Urltype == "U" && (_Url.StartsWith("~/" + PortalSettings.DefaultIconLocation' StringComparison.InvariantCultureIgnoreCase))) " is 129.
Long Statement,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,DoRenderTypeControls,The length of the statement  "                        string strImagesFolder = Path.Combine(Globals.ApplicationMapPath' PortalSettings.DefaultIconLocation.Replace('/'' '\\')); " is 121.
Long Statement,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,DoRenderTypeControls,The length of the statement  "                            cboImages.Items.Add(new ListItem(img' string.Format("~/{0}/{1}"' PortalSettings.DefaultIconLocation' img).ToLowerInvariant())); " is 127.
Long Statement,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,DoRenderTypeControls,The length of the statement  "                        cboTabs.DataSource = TabController.GetPortalTabs(_settings.PortalId' Null.NullInteger' !Required' "none available"' true' false' false' true' false); " is 149.
Long Statement,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,DoRenderTypeControls,The length of the statement  "                                if ((Required && String.IsNullOrEmpty(cboFiles.Items[0].Value)) || (!Required && !String.IsNullOrEmpty(cboFiles.Items[0].Value))) " is 129.
Long Statement,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,OnLoad,The length of the statement  "                if ((Request.QueryString["pid"] != null) && (Globals.IsHostTab(PortalSettings.ActiveTab.TabID) || UserController.Instance.GetCurrentUserInfo().IsSuperUser)) " is 156.
Long Statement,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,cmdSave_Click,The length of the statement  "            if (!String.IsNullOrEmpty(FileFilter) && ("'" + FileFilter.ToLowerInvariant()).IndexOf("'" + strExtension.ToLowerInvariant()) == -1) " is 132.
Long Statement,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,cmdSave_Click,The length of the statement  "                    fileManager.AddFile(folder' fileName' txtFile.PostedFile.InputStream' true' true' ((FileManager)fileManager).GetContentType(Path.GetExtension(fileName))); " is 154.
Long Statement,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,cmdSave_Click,The length of the statement  "                    lblMessage.Text += "<br />" + string.Format(Localization.GetString("RestrictedFileType")' fileName' Host.AllowedExtensionWhitelist.ToDisplayString()); " is 150.
Long Statement,DotNetNuke.UI.UserControls,URLTrackingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLTrackingControl.cs,cmdDisplay_Click,The length of the statement  "                grdLog.DataSource = objUrls.GetUrlLog(PortalSettings.PortalId' lblLogURL.Text' ModuleID' Convert.ToDateTime(strStartDate)' Convert.ToDateTime(strEndDate)); " is 155.
Long Statement,DotNetNuke.UI.UserControls,LocaleSelectorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\LocaleSelectorControl.cs,OnLoad,The length of the statement  "                item = new ListItem(Localization.GetString("NativeName.Text"' Localization.GetResourceFile(this' MyFileName))' "NATIVE"); " is 121.
Long Statement,DotNetNuke.UI.UserControls,LocaleSelectorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\LocaleSelectorControl.cs,OnLoad,The length of the statement  "                item = new ListItem(Localization.GetString("EnglishName.Text"' Localization.GetResourceFile(this' MyFileName))' "ENGLISH"); " is 123.
Long Statement,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableContainerDragAndDrop,The length of the statement  "            if (ClientAPI.ClientAPIDisabled() == false && ClientAPI.BrowserSupportsFunctionality(ClientAPI.ClientFunctionality.Positioning)) " is 128.
Long Statement,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableContainerDragAndDrop,The length of the statement  "                ClientAPI.RegisterClientVariable(objTitle.Page' "__dnn_dragDrop"' objContainer.ClientID + " " + objTitle.ClientID + " " + ModuleID + ";"' false); " is 145.
Long Statement,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,The length of the statement  "            EnableMinMax(objButton' objContent' -1' blnDefaultMin' strMinIconLoc' strMaxIconLoc' ePersistanceType' 5' strPersonalizationNamingCtr' strPersonalizationKey); " is 158.
Long Statement,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,The length of the statement  "            EnableMinMax(objButton' objContent' intModuleId' blnDefaultMin' strMinIconLoc' strMaxIconLoc' ePersistanceType' intAnimationFrames' null' null); " is 144.
Long Statement,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,The length of the statement  "                            AddAttribute(objButton' "onclick"' "if (__dnn_ContainerMaxMin_OnClick(this' '" + objContent.ClientID + "')) return false;"); " is 124.
Long Statement,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,The length of the statement  "                            ClientAPI.RegisterClientVariable(objButton.Page' "cookieid_" + objContent.ClientID' "_Module" + intModuleId + "_Visible"' true); " is 128.
Long Statement,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,MinMaxContentVisibile,The length of the statement  "                        string strVisible = Convert.ToString(Personalization.GetProfile(Globals.GetAttribute(objButton' "userctr")' Globals.GetAttribute(objButton' "userkey"))); " is 153.
Long Statement,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,MinMaxContentVisibile,The length of the statement  "                        Personalization.SetProfile(Globals.GetAttribute(objButton' "userctr")' Globals.GetAttribute(objButton' "userkey")' value.ToString()); " is 133.
Long Statement,DotNetNuke.UI.WebControls,ActionLink,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\ActionLink.cs,IsVisible,The length of the statement  "                if ((RequireEditMode != true || ModuleControl.ModuleContext.PortalSettings.UserMode == PortalSettings.Mode.Edit) || (security == SecurityAccessLevel.Anonymous || security == SecurityAccessLevel.View)) " is 200.
Long Statement,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,Encrypt,The length of the statement  "			var ticket = new FormsAuthenticationTicket(1' HttpContext.Current.Request.UserHostAddress' DateTime.Now' expiration' false' content); " is 133.
Long Statement,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,WarpText,The length of the statement  "			PointF p4 = RandomPoint(rect.Width - (intWrange - Convert.ToInt32(p3.X))' rect.Width' rect.Height - (intHrange - Convert.ToInt32(p2.Y))' rect.Height); " is 150.
Long Statement,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateChildControls,The length of the statement  "			if ((CaptchaWidth.IsEmpty || CaptchaWidth.Type != UnitType.Pixel || CaptchaHeight.IsEmpty || CaptchaHeight.Type != UnitType.Pixel)) " is 131.
Long Statement,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateChildControls,The length of the statement  "			_image = new Image {BorderColor = BorderColor' BorderStyle = BorderStyle' BorderWidth = BorderWidth' ToolTip = ToolTip' EnableViewState = false}; " is 145.
Long Statement,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,Render,The length of the statement  "				writer.AddAttribute(HtmlTextWriterAttribute.Alt' Localization.GetString("CaptchaAlt.Text"' Localization.SharedResourceFile)); " is 125.
Long Statement,DotNetNuke.UI.WebControls,RolesSelectionGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DataGrids\RolesSelectionGrid.cs,GetRoles,The length of the statement  "                    ? RoleController.Instance.GetRoles(PortalController.Instance.GetCurrentPortalSettings().PortalId' r => r.RoleGroupID == roleGroupId && r.SecurityMode != SecurityMode.SocialGroup && r.Status == RoleStatus.Approved) " is 213.
Long Statement,DotNetNuke.UI.WebControls,RolesSelectionGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DataGrids\RolesSelectionGrid.cs,GetRoles,The length of the statement  "                    : RoleController.Instance.GetRoles(PortalController.Instance.GetCurrentPortalSettings().PortalId' r => r.SecurityMode != SecurityMode.SocialGroup && r.Status == RoleStatus.Approved); " is 182.
Long Statement,DotNetNuke.UI.WebControls,RolesSelectionGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DataGrids\RolesSelectionGrid.cs,CreateChildControls,The length of the statement  "					cboRoleGroups.Items.Add(new ListItem(roleGroup.RoleGroupName' roleGroup.RoleGroupID.ToString(CultureInfo.InvariantCulture))); " is 125.
Long Statement,DotNetNuke.UI.WebControls,DualListBox,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DualListBox.cs,RenderButton,The length of the statement  "            writer.AddAttribute(HtmlTextWriterAttribute.Href' Page.ClientScript.GetPostBackEventReference(GetPostBackOptions(buttonType))); " is 127.
Long Statement,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,BindPageNumbers,The length of the statement  "            _totalPages = TotalRecords/RecordsPerPage >= 1 ? Convert.ToInt32(Math.Ceiling(Convert.ToDouble(TotalRecords)/RecordsPerPage)) : 0; " is 130.
Long Statement,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,CreateURL,The length of the statement  "                               ? (!String.IsNullOrEmpty(CurrentPage) ? TestableGlobals.Instance.NavigateURL(TabID' ""' QuerystringParams' "currentpage=" + CurrentPage) : TestableGlobals.Instance.NavigateURL(TabID' ""' QuerystringParams)) " is 206.
Long Statement,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,CreateURL,The length of the statement  "                               : (!String.IsNullOrEmpty(CurrentPage) ? TestableGlobals.Instance.NavigateURL(TabID' ""' "currentpage=" + CurrentPage) : TestableGlobals.Instance.NavigateURL(TabID)); " is 165.
Long Statement,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,GetLink,The length of the statement  "                return CSSClassLinkInactive.Trim().Length > 0 ? "<span class=\"" + CSSClassLinkInactive + "\">[" + PageNum + "]</span>" : "<span>[" + PageNum + "]</span>"; " is 155.
Long Statement,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,GetPreviousLink,The length of the statement  "                              : "<a href=\"" + CreateURL((CurrentPage - 1).ToString()) + "\">" + Localization.GetString("Previous"' Localization.SharedResourceFile) + "</a>") " is 144.
Long Statement,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,GetPreviousLink,The length of the statement  "                              ? "<span class=\"" + CSSClassLinkInactive + "\">" + Localization.GetString("Previous"' Localization.SharedResourceFile) + "</span>" " is 131.
Long Statement,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,GetNextLink,The length of the statement  "                              ? "<a href=\"" + CreateURL((CurrentPage + 1).ToString()) + "\" class=\"" + CSSClassLinkActive + "\">" + Localization.GetString("Next"' Localization.SharedResourceFile) + " is 169.
Long Statement,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,GetNextLink,The length of the statement  "                              : "<a href=\"" + CreateURL((CurrentPage + 1).ToString()) + "\">" + Localization.GetString("Next"' Localization.SharedResourceFile) + "</a>") " is 140.
Long Statement,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,GetNextLink,The length of the statement  "                              ? "<span class=\"" + CSSClassLinkInactive + "\">" + Localization.GetString("Next"' Localization.SharedResourceFile) + "</span>" " is 127.
Long Statement,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,GetFirstLink,The length of the statement  "                           ? "<a href=\"" + CreateURL("1") + "\" class=\"" + CSSClassLinkActive + "\">" + Localization.GetString("First"' Localization.SharedResourceFile) + "</a>" " is 152.
Long Statement,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,GetFirstLink,The length of the statement  "                       ? "<span class=\"" + CSSClassLinkInactive + "\">" + Localization.GetString("First"' Localization.SharedResourceFile) + "</span>" " is 128.
Long Statement,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,GetLastLink,The length of the statement  "                           ? "<a href=\"" + CreateURL(_totalPages.ToString()) + "\" class=\"" + CSSClassLinkActive + "\">" + Localization.GetString("Last"' Localization.SharedResourceFile) + "</a>" " is 170.
Long Statement,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,GetLastLink,The length of the statement  "                           : "<a href=\"" + CreateURL(_totalPages.ToString()) + "\">" + Localization.GetString("Last"' Localization.SharedResourceFile) + "</a>"; " is 134.
Long Statement,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,GetLastLink,The length of the statement  "                       ? "<span class=\"" + CSSClassLinkInactive + "\">" + Localization.GetString("Last"' Localization.SharedResourceFile) + "</span>" " is 127.
Long Statement,DotNetNuke.UI.WebControls,AutoCompleteControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\AutoCompleteControl.cs,AutoCompleteControl_Init,The length of the statement  "            ClientResourceManager.RegisterScript(this.Page' "~/Resources/Shared/components/ProfileAutoComplete/dnn.ProfileAutoComplete.js"); " is 128.
Long Statement,DotNetNuke.UI.WebControls,AutoCompleteControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\AutoCompleteControl.cs,AutoCompleteControl_Init,The length of the statement  "            ClientResourceManager.RegisterFeatureStylesheet(this.Page' "~/Resources/Shared/components/ProfileAutoComplete/dnn.AutoComplete.css"); " is 133.
Long Statement,DotNetNuke.UI.WebControls,DateEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DateEditControl.cs,CreateChildControls,The length of the statement  "            linkCalendar.Text = "<img src=\"" + Globals.ApplicationPath + "/images/calendar.png\" border=\"0\" />&nbsp;&nbsp;" + Localization.GetString("Calendar"); " is 152.
Long Statement,DotNetNuke.UI.WebControls,DnnCountryAutocompleteControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNCountryAutocompleteControl.cs,DnnCountryRegionControl_Init,The length of the statement  "			ClientResourceManager.RegisterScript(this.Page' "~/Resources/Shared/components/CountriesRegions/dnn.CountriesRegions.js"); " is 122.
Long Statement,DotNetNuke.UI.WebControls,DnnCountryAutocompleteControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNCountryAutocompleteControl.cs,DnnCountryRegionControl_Init,The length of the statement  "			ClientResourceManager.RegisterFeatureStylesheet(this.Page' "~/Resources/Shared/components/CountriesRegions/dnn.CountriesRegions.css"); " is 134.
Long Statement,DotNetNuke.UI.WebControls,DNNListEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNListEditControl.cs,RenderEditMode,The length of the statement  "            var defaultText = HttpUtility.HtmlEncode("<" + Localization.GetString("Not_Specified"' Localization.SharedResourceFile) + ">"); " is 127.
Long Statement,DotNetNuke.UI.WebControls,DNNPageEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNPageEditControl.cs,RenderEditMode,The length of the statement  "            List<TabInfo> listTabs = TabController.GetPortalTabs(_portalSettings.PortalId' Null.NullInteger' true' "<" + Localization.GetString("None_Specified") + ">"' true' false' true' true' false); " is 189.
Long Statement,DotNetNuke.UI.WebControls,DNNRegionEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNRegionEditControl.cs,CreateChildControls,The length of the statement  "            Regions.Items.Add(new ListItem() { Text = "<" + Localization.GetString("Not_Specified"' Localization.SharedResourceFile) + ">"' Value = "" }); " is 142.
Long Statement,DotNetNuke.UI.WebControls,DNNRegionEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNRegionEditControl.cs,DnnRegionControl_Init,The length of the statement  "			ClientResourceManager.RegisterScript(this.Page' "~/Resources/Shared/components/CountriesRegions/dnn.CountriesRegions.js"); " is 122.
Long Statement,DotNetNuke.UI.WebControls,DNNRegionEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNRegionEditControl.cs,DnnRegionControl_Init,The length of the statement  "			ClientResourceManager.RegisterFeatureStylesheet(this.Page' "~/Resources/Shared/components/CountriesRegions/dnn.CountriesRegions.css"); " is 134.
Long Statement,DotNetNuke.UI.WebControls,DNNRichTextEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNRichTextEditControl.cs,OnDataChanged,The length of the statement  "            var args = new PropertyEditorEventArgs(Name) { Value = Page.Server.HtmlEncode(strValue)' OldValue = Page.Server.HtmlEncode(strOldValue)' StringValue = Page.Server.HtmlEncode(RemoveBaseTags(StringValue)) }; " is 205.
Long Statement,DotNetNuke.UI.WebControls,FieldEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\FieldEditorControl.cs,BuildDiv,The length of the statement  "			if (ShowRequired && editInfo.Required && (editInfo.EditMode == PropertyEditorMode.Edit || (editInfo.Required && string.IsNullOrEmpty(strValue)))) " is 145.
Long Statement,DotNetNuke.UI.WebControls,FieldEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\FieldEditorControl.cs,BuildRequiredIcon,The length of the statement  "			if (ShowRequired && editInfo.Required && (editInfo.EditMode == PropertyEditorMode.Edit || (editInfo.Required && string.IsNullOrEmpty(strValue)))) " is 145.
Long Statement,DotNetNuke.UI.WebControls,FieldEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\FieldEditorControl.cs,BuildTable,The length of the statement  "			if (editInfo.LabelMode == LabelMode.Bottom || editInfo.LabelMode == LabelMode.Top || editInfo.LabelMode == LabelMode.None) " is 122.
Long Statement,DotNetNuke.UI.WebControls,PropertyEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\PropertyEditorControl.cs,CreateEditor,The length of the statement  "								var groupData = UnderlyingDataSource.Cast<object>().Where(obj => GetCategory(obj) == strGroup.Trim() && GetRowVisibility(obj)); " is 127.
Long Statement,DotNetNuke.UI.WebControls,PropertyEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\PropertyEditorControl.cs,OnPreRender,The length of the statement  "                    DNNClientAPI.EnableMinMax(icon' tbl' false' IconController.IconURL("Minus"' "12X15")' IconController.IconURL("Plus"'"12X15")' DNNClientAPI.MinMaxPersistanceType.Page); " is 167.
Long Statement,DotNetNuke.UI.WebControls,PropertyLabelControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\PropertyLabelControl.cs,CreateChildControls,The length of the statement  "                cmdHelp = new LinkButton { ID = ID + "_cmdHelp"' CssClass = "dnnFormHelp"' CausesValidation = false' EnableViewState = false' TabIndex = -1 }; " is 142.
Long Statement,DotNetNuke.UI.WebControls,PropertyLabelControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\PropertyLabelControl.cs,OnPreRender,The length of the statement  "				label.Attributes.Add("for"' EditControl is EditControl ? ((EditControl)EditControl).EditControlClientId : EditControl.ClientID); " is 128.
Long Statement,DotNetNuke.UI.WebControls,VisibilityControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\VisibilityControl.cs,LoadPostData,The length of the statement  "                        if (postCollection[postDataKey + ":relationship_" + relationship.RelationshipId.ToString(CultureInfo.InvariantCulture)] != null) " is 128.
Long Statement,DotNetNuke.UI.WebControls,VisibilityControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\VisibilityControl.cs,OnPreRender,The length of the statement  "			Page.ClientScript.RegisterClientScriptBlock(GetType()' "visibleChange"' "$(document).ready(function(){$('.dnnFormVisibility').on('click'' 'input[type=radio]'' function(){$(this).parent().parent().find('ul').hide();$(this).parent().next('ul').show();});});"' true); " is 264.
Long Statement,DotNetNuke.UI.WebControls,VisibilityControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\VisibilityControl.cs,Render,The length of the statement  "            writer.AddStyleAttribute(HtmlTextWriterStyle.Display' Visibility.VisibilityMode == UserVisibilityMode.FriendsAndGroups ? "block" : "none"); " is 139.
Long Statement,DotNetNuke.UI.WebControls.Internal,PermissionTriState,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DataGrids\PermissionTriState.cs,GetInitScript,The length of the statement  "            LookupScriptValues(ctl' out grantImagePath' out denyImagePath' out nullImagePath' out lockImagePath' out grantAltText' out denyAltText' out nullAltText); " is 153.
Long Statement,DotNetNuke.Entities.Content.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Data\DataService.cs,AddHeirarchicalTerm,The length of the statement  "            return _provider.ExecuteScalar<int>("AddHeirarchicalTerm"' term.VocabularyId' term.ParentTermId' term.Name' term.Description' term.Weight' createdByUserId); " is 156.
Long Statement,DotNetNuke.Entities.Content.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Data\DataService.cs,AddSimpleTerm,The length of the statement  "            return _provider.ExecuteScalar<int>("AddSimpleTerm"' term.VocabularyId' term.Name' term.Description' term.Weight' createdByUserId); " is 131.
Long Statement,DotNetNuke.Entities.Content.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Data\DataService.cs,UpdateHeirarchicalTerm,The length of the statement  "            _provider.ExecuteNonQuery("UpdateHeirarchicalTerm"' term.TermId' term.VocabularyId' term.ParentTermId' term.Name' term.Description' term.Weight' lastModifiedByUserId); " is 167.
Long Statement,DotNetNuke.Entities.Content.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Data\DataService.cs,UpdateSimpleTerm,The length of the statement  "            _provider.ExecuteNonQuery("UpdateSimpleTerm"' term.TermId' term.VocabularyId' term.Name' term.Description' term.Weight' lastModifiedByUserId); " is 142.
Long Statement,DotNetNuke.Entities.Controllers,HostController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Controllers\HostController.cs,GetBoolean,The length of the statement  "                    retValue = (setting.StartsWith("Y"' StringComparison.InvariantCultureIgnoreCase) || setting.Equals("TRUE"' StringComparison.InvariantCultureIgnoreCase)); " is 153.
Complex Conditional,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,AddHTTP,The conditional expression  "strURL.IndexOf("mailto:") == -1 && strURL.IndexOf("://") == -1 && strURL.IndexOf("~") == -1 && strURL.IndexOf("\\\\") == -1"  is complex.
Complex Conditional,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,GetURLType,The conditional expression  "URL.ToLowerInvariant().StartsWith("mailto:") == false && URL.IndexOf("://") == -1 && URL.StartsWith("~") == false && URL.StartsWith("\\\\") == false && URL.StartsWith("/") == false"  is complex.
Complex Conditional,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,ProcessHttpModule,The conditional expression  "toLowerLocalPath.EndsWith("webresource.axd")                      || toLowerLocalPath.EndsWith("scriptresource.axd")                      || toLowerLocalPath.EndsWith("captcha.aspx")                      || toLowerLocalPath.Contains("upgradewizard.aspx")                      || toLowerLocalPath.Contains("installwizard.aspx")                      || toLowerLocalPath.EndsWith("install.aspx")"  is complex.
Complex Conditional,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,ProcessHttpModule,The conditional expression  "allowUnknownExtensions == false                      && toLowerLocalPath.EndsWith(".aspx") == false                      && toLowerLocalPath.EndsWith(".asmx") == false                      && toLowerLocalPath.EndsWith(".ashx") == false                      && toLowerLocalPath.EndsWith(".svc") == false"  is complex.
Complex Conditional,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,GetDatabaseUtcTime,The conditional expression  "DateTime.UtcNow >= _lastUpdateUtc + TimeSpan.FromMinutes(15) || !(TimeSpan.FromHours(-26) <= _driftUtc && _driftUtc <= TimeSpan.FromHours(26)) || _driftUtc == TimeSpan.MinValue"  is complex.
Complex Conditional,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,GetDatabaseLocalTime,The conditional expression  "DateTime.UtcNow >= _lastUpdateLocal + TimeSpan.FromMinutes(15) || !(TimeSpan.FromHours(-26) <= _driftLocal && _driftLocal <= TimeSpan.FromHours(26)) || _driftLocal == TimeSpan.MinValue"  is complex.
Complex Conditional,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateDatabaseVersion,The conditional expression  "(Major >= 5 || (Major == 4 && Minor == 9 && Build > 0))"  is complex.
Complex Conditional,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,CopyModule,The conditional expression  "!String.IsNullOrEmpty(sourceModule.CultureCode) && sourceModule.CultureCode == portal.DefaultLanguage && destinationModule.CultureCode != sourceModule.CultureCode &&                  !String.IsNullOrEmpty(destinationModule.CultureCode)"  is complex.
Complex Conditional,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,CopyModule,The conditional expression  "!String.IsNullOrEmpty(sourceModule.CultureCode) && sourceModule.CultureCode != portal.DefaultLanguage && destinationModule.CultureCode != sourceModule.CultureCode &&                       !String.IsNullOrEmpty(destinationModule.CultureCode)"  is complex.
Complex Conditional,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,DeserializeModule,The conditional expression  "existModule != null && !existModule.IsDeleted && existModule.AllTabs && existModule.PortalID == portalId"  is complex.
Complex Conditional,DotNetNuke.Entities.Users,MembershipPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Membership\MembershipPropertyAccess.cs,GetProperty,The conditional expression  "CurrentScope < Scope.DefaultSettings || (CurrentScope == Scope.DefaultSettings && !UserQueriesHimself) ||                  ((CurrentScope != Scope.SystemMessages || objUser.IsSuperUser)                       && (propertyName.Equals("password"' StringComparison.InvariantCultureIgnoreCase) || propertyName.Equals("passwordanswer"' StringComparison.InvariantCultureIgnoreCase) || propertyName.Equals("passwordquestion"' StringComparison.InvariantCultureIgnoreCase))                  )"  is complex.
Complex Conditional,DotNetNuke.Entities.Users,ProfilePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Profile\ProfilePropertyAccess.cs,CheckAccessLevel,The conditional expression  "targetUser.Social.UserRelationships.Any(userRelationship =>                                                                            (userRelationship.RelationshipId == relationship.RelationshipId                                                                                && userRelationship.Status == RelationshipStatus.Accepted                                                                                && ((userRelationship.RelatedUserId == accessingUser.UserID && userRelationship.UserId == targetUser.UserID)                                                                                      || (userRelationship.RelatedUserId == targetUser.UserID && userRelationship.UserId == accessingUser.UserID)))                                                                        )"  is complex.
Complex Conditional,DotNetNuke.Common.Lists,ListController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\ListController.cs,GetListInfoCollection,The conditional expression  "(list.Name == listName || string.IsNullOrEmpty(listName)) && (list.ParentKey == parentKey || string.IsNullOrEmpty(parentKey)) &&                      (list.PortalID == portalId || portalId == Null.NullInteger)"  is complex.
Complex Conditional,DotNetNuke.Entities.Host,ServerController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Host\ServerController.cs,UpdateServerActivity,The conditional expression  "existServer == null                  || string.IsNullOrEmpty(existServer.Url)                  || (string.IsNullOrEmpty(existServer.UniqueId) && !string.IsNullOrEmpty(GetServerUniqueId()))"  is complex.
Complex Conditional,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,GetPortalTabs,The conditional expression  "((excludeTabId < 0) || (tab.TabID != excludeTabId)) &&                      (!tab.IsSuperTab || objUserInfo.IsSuperUser)"  is complex.
Complex Conditional,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,GetPortalTabs,The conditional expression  "(tab.IsVisible || includeHidden) && tab.HasAVisibleVersion && (tab.IsDeleted == false || includeDeleted) &&                          (tab.TabType == TabType.Normal || includeURL)"  is complex.
Complex Conditional,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,IsValidTabName,The conditional expression  "!string.IsNullOrEmpty(doNotRewriteRegex) &&                           (Regex.IsMatch(cleanTabName' doNotRewriteRegex' RegexOptions.IgnoreCase)                               || Regex.IsMatch("/" + cleanTabName' doNotRewriteRegex' RegexOptions.IgnoreCase)                              || Regex.IsMatch("/" + cleanTabName + "/"' doNotRewriteRegex' RegexOptions.IgnoreCase))"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,CreateFriendlyUrl,The conditional expression  "newPath == "" //no path (no querystring when rewritten)                      && (isHomePage && newTabPath == "/") //is the home page' and we're not using 'home' for it                      && (langParms == "" || dropLangParms)                      //doesn't have any language parms' or we're intentionally getting rid of them                      && !builtInUrl"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,FriendlyUrlInternal,The conditional expression  "tab != null && portalSettings.SSLEnabled && tab.IsSecure &&                  friendlyPath.StartsWith("http://"' StringComparison.InvariantCultureIgnoreCase)"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,ImproveFriendlyUrlWithMessages,The conditional expression  "customOnly && isCustomUrl || customOnly == false || builtInUrl"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The conditional expression  "(redirectAlias && wrongAlias != null) && result.RedirectAllowed && result.PortalAliasMapping != PortalSettings.PortalAliasMapping.Redirect"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The conditional expression  "!finished                          && !postRequest /* either request is null' or it's not a post - 551 */                          && result.HttpAlias != null /* must have a http alias */                          && !result.CustomParmRewrite && /* not custom rewritten parms */                          ((settings.EnableCustomProviders &&                            RedirectController.CheckForModuleProviderRedirect(requestUri' ref result' queryStringCol' settings' parentTraceId))                          //894 : allow disable of all custom providers                           ||                           RedirectController.CheckForParameterRedirect(requestUri' ref result' queryStringCol' settings))"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The conditional expression  "result.OriginalPath.Equals(result.HttpAlias' StringComparison.InvariantCultureIgnoreCase)                                  && result.PortalAlias != null                                  && result.Reason != RedirectReason.Deleted_Page                                  && result.Reason != RedirectReason.Disabled_Page"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The conditional expression  "result.DoRewrite == false && result.CanRewrite != StateBoolean.False && !finished &&                              result.Action == ActionType.Continue"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,Handle404OrException,The conditional expression  "context != null && response != null && result != null && showDebug"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForTabExternalForwardOrRedirect,The conditional expression  "result.TabId > -1 && result.PortalId > -1 &&                  (settings.ForwardExternalUrlsType != DNNPageForwardType.NoForward ||                   result.Reason == RedirectReason.Tab_Permanent_Redirect)"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IdentifyPortalAlias,The conditional expression  "result.DoRewrite == false && (result.Action == ActionType.Continue                                                ||                                                (result.Action == ActionType.CheckFor301 &&                                                 result.Reason == RedirectReason.Custom_Tab_Alias))"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IgnoreRequestForInstall,The conditional expression  "physicalPath.EndsWith("install.aspx"' true' CultureInfo.InvariantCulture)                  || physicalPath.EndsWith("installwizard.aspx"' true' CultureInfo.InvariantCulture)                  || physicalPath.EndsWith("upgradewizard.aspx"' true' CultureInfo.InvariantCulture)                  || Globals.Status == Globals.UpgradeStatus.Install                  || Globals.Status == Globals.UpgradeStatus.Upgrade"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IgnoreRequestForInstall,The conditional expression  "physicalPath.EndsWith(Globals.glbDefaultPage' true' CultureInfo.InvariantCulture) == false                  && refererPath != null                  && String.Compare(requestedDomain' refererDomain' StringComparison.OrdinalIgnoreCase) == 0                  && (refererPath.EndsWith("install.aspx"' true' CultureInfo.InvariantCulture)                      || refererPath.EndsWith("installwizard.aspx"' true' CultureInfo.InvariantCulture)                      || refererPath.EndsWith("upgradewizard.aspx"' true' CultureInfo.InvariantCulture)                     )"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The conditional expression  "result.TabId > -1 //valid tab                      && (result.Action == ActionType.Redirect301 //specific 301 redirect                          || (do301Val != null && do301Val == "true") //or rewrite hint for specific 301 redirect                           || result.Action == ActionType.Redirect302)"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The conditional expression  "(result.Reason == RedirectReason.Deleted_Page || result.Reason == RedirectReason.Disabled_Page)                                  && portalHomeTabId > 0                                  && settings.DeletedTabHandlingType == DeletedTabHandlingType.Do301RedirectToPortalHome"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForRedirects,The conditional expression  "!(bestFriendlyNoScheme == requestedPathNoScheme                                        || bestFriendlyNoScheme == rawUrlWithHost                                        || bestFriendlyNoScheme == rawUrlWithHostNoScheme                                        || bestFriendlyNoScheme == HttpUtility.UrlDecode(requestedPathNoScheme)                                        || HttpUtility.UrlDecode(bestFriendlyNoScheme) == HttpUtility.UrlDecode(requestedPathNoScheme)                                        || bestFriendlyNoScheme == rawUrlLowerCase)"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,BasicFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\BasicFriendlyUrlProvider.cs,FriendlyUrl,The conditional expression  "tab != null && portalSettings != null && portalSettings.SSLEnabled && tab.IsSecure &&                  friendlyPath.StartsWith("http://"' StringComparison.InvariantCultureIgnoreCase)"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,The conditional expression  "rulePortalId == portalId || rulePortalId == -1 || portalId == -1 || portalSpecific"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,FriendlyUrlPathController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlPathController.cs,SplitUserIdFromFriendlyUrlPath,The conditional expression  "otherParmsGp != null && otherParmsGp.Success && (parm1ValueGp.Success || parm2ValueGp.Success)"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,FriendlyUrlPathController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlPathController.cs,SplitUserIdFromFriendlyUrlPath,The conditional expression  "(otherParmsGp == null || otherParmsGp.Success == false) && parm1ValueGp != null &&                          parm1ValueGp.Success"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,FriendlyUrlPathController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlPathController.cs,CheckUserProfileReplacement,The conditional expression  "portalSettings != null && tab.PortalID == portalSettings.PortalId &&                      (tab.TabID == portalSettings.UserTabId || portalSettings.UserTabId == -1 ||                          tab.ParentId == portalSettings.UserTabId)"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,FriendlyUrlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlController.cs,CleanNameForUrl,The conditional expression  "!doublePeriod && i > 0 && c == '.' && normalisedUrl[i - 1] == '.'"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,FriendlyUrlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlController.cs,EnsureLeadingChar,The conditional expression  "leading != null && path != null                  && leading.Length <= path.Length && leading != """  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,FriendlyUrlController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\FriendlyUrlController.cs,EnsureNotLeadingChar,The conditional expression  "leading != null && path != null                  && leading.Length <= path.Length && leading != """  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,IdentifyByTabPathEx,The conditional expression  "result.DoRewrite && settings.ForcePortalDefaultLanguage && result.PortalId >= 0 &&                  rewritePath.Contains("language=") == false"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddCustomRedirectsToDictionary,The conditional expression  "tab.DisableLink || !string.IsNullOrEmpty(tab.Url) ||                             (tab.EndDate < DateTime.Now && tab.EndDate > DateTime.MinValue) ||                             (tab.StartDate > DateTime.Now && tab.StartDate > DateTime.MinValue)"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddTabToTabDict,The conditional expression  "thisPortal != null && (thisPortal.UserTabId == tab.TabID || thisPortal.UserTabId == tab.ParentId || thisPortal.UserTabId == -1)"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddTabToTabDict,The conditional expression  "tab.DisableLink || !string.IsNullOrEmpty(tab.Url) ||                 (tab.EndDate < DateTime.Now && tab.EndDate > DateTime.MinValue) ||                 (tab.StartDate > DateTime.Now && tab.StartDate > DateTime.MinValue)"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddToTabDict,The conditional expression  "(foundTAb.IsDeleted == false && isDeleted == false) //found is not deleted' this tab is not deleted                      && keyDupAction == UrlEnums.TabKeyPreference.TabOK                      && foundTAb.TabIdOriginal != "-1""  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,FetchTabDictionary,The conditional expression  "dict == null || portalDepths == null || portalTabPathDictionary == null || !PortalExistsInIndex(portalDepths' portalId) || forceRebuild"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,FetchTabDictionary,The conditional expression  "dict == null || portalDepths == null || portalTabPathDictionary == null || !PortalExistsInIndex(portalDepths' portalId) || forceRebuild"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,TabPathHelper,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabPathController.cs,AppendToTabPath,The conditional expression  "!modified                  && string.IsNullOrEmpty(options.PunctuationReplacement) == false                  && tab.TabName.Contains(" ")                  && tabName.Contains(" ") == false"  is complex.
Complex Conditional,DotNetNuke.Entities.Urls,UrlAction,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\UrlAction.cs,SetActionWithNoDowngrade,The conditional expression  "Action != ActionType.Redirect301                          && Action != ActionType.Redirect302                          && Action != ActionType.Redirect302Now                          && Action != ActionType.Output404"  is complex.
Complex Conditional,DotNetNuke.Security.Permissions,FolderPermissionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\FolderPermissionCollection.cs,Contains,The conditional expression  "permission.PermissionKey == key && permission.FolderID == folderId && permission.RoleID == roleId && permission.UserID == userId"  is complex.
Complex Conditional,DotNetNuke.Security.Permissions,TabPermissionCollection,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\TabPermissionCollection.cs,CompareTo,The conditional expression  "objTabPermissionCollection[i].TabPermissionID != this[i].TabPermissionID                          || objTabPermissionCollection[i].PermissionID != this[i].PermissionID                          || objTabPermissionCollection[i].RoleID != this[i].RoleID                          || objTabPermissionCollection[i].UserID != this[i].UserID                          || objTabPermissionCollection[i].AllowAccess != this[i].AllowAccess"  is complex.
Complex Conditional,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,GenerateSignatureBase,The conditional expression  "!((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443))"  is complex.
Complex Conditional,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,MoveFolder,The conditional expression  "(folder.FolderMappingID == destinationFolder.FolderMappingID && FolderProvider.Instance(folderMapping.FolderProviderType).SupportsMoveFolder) ||                  (IsStandardFolderProviderType(folderMapping) && IsStandardFolderProviderType(destinationFolderMapping))"  is complex.
Complex Conditional,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,SetFolderPermission,The conditional expression  "folder.FolderPermissions.Cast<FolderPermissionInfo>()                  .Any(fpi => fpi.FolderID == folder.FolderID && fpi.PermissionID == permissionId && fpi.RoleID == roleId && fpi.UserID == userId && fpi.AllowAccess)"  is complex.
Complex Conditional,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,ParsePackage,The conditional expression  "(iconFileNav.Value != string.Empty) && (package.PackageType.Equals("Module"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Auth_System"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Container"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Skin"' StringComparison.OrdinalIgnoreCase))"  is complex.
Complex Conditional,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,LocalizeControlTitle,The conditional expression  "PortalSettings.Current.ActiveTab.TabPath.StartsWith("//Admin//"' StringComparison.CurrentCultureIgnoreCase) ||                      String.Compare(PortalSettings.Current.ActiveTab.TabPath' "//Admin"' StringComparison.OrdinalIgnoreCase) == 0 ||                      PortalSettings.Current.ActiveTab.TabPath.StartsWith("//Host//"' StringComparison.CurrentCultureIgnoreCase) ||                      String.Compare(PortalSettings.Current.ActiveTab.TabPath' "//Host"' StringComparison.OrdinalIgnoreCase) == 0"  is complex.
Complex Conditional,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,SetThreadCultures,The conditional expression  "portalSettings != null && portalSettings.ContentLocalizationEnabled &&                          HttpContext.Current.Request.IsAuthenticated &&                          portalSettings.AllowUserUICulture"  is complex.
Complex Conditional,DotNetNuke.Services.Log.EventLog,DBLoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\DBLoggingProvider.cs,AddLog,The conditional expression  "scheduler == null || logInfo.BypassBuffering || SchedulingProvider.Enabled == false                   || scheduler.GetScheduleStatus() == ScheduleStatus.STOPPED || !Host.EventLogBuffer"  is complex.
Complex Conditional,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,GetResults,The conditional expression  "searchQuery.SortField == SortFields.CustomStringField || searchQuery.SortField == SortFields.CustomNumericField                  || searchQuery.SortField == SortFields.NumericKey || searchQuery.SortField == SortFields.Keyword"  is complex.
Complex Conditional,DotNetNuke.Services.Journal,Content,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\Content.cs,UpdateContentItem,The conditional expression  "(objContent.ContentTypeId == GetContentTypeID("DNNCorp_JournalProfile") && objJournalItem.ProfileId > 0)                      || (objContent.ContentTypeId == GetContentTypeID("DNNCorp_JournalGroup") && objJournalItem.SocialGroupId > 0)"  is complex.
Complex Conditional,DotNetNuke.Services.Scheduling,DNNScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\DNNScheduler.cs,RunScheduleItemNow,The conditional expression  "scheduleHistoryItem.TimeLapse != Null.NullInteger                  && scheduleHistoryItem.TimeLapseMeasurement != Null.NullString                  && scheduleHistoryItem.Enabled                  && SchedulingController.CanRunOnThisServer(scheduleItem.Servers)"  is complex.
Complex Conditional,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,FireEvents,The conditional expression  "scheduleItem.NextStart <= DateTime.Now &&  							scheduleItem.Enabled &&  							!IsInProgress(scheduleItem) &&  							!HasDependenciesConflict(scheduleItem) &&  							numRun < numToRun"  is complex.
Complex Conditional,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,LoadQueueFromEvent,The conditional expression  "!IsInQueue(historyItem) &&                          !IsInProgress(historyItem) &&                          !HasDependenciesConflict(historyItem) &&                          historyItem.Enabled"  is complex.
Complex Conditional,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,LoadQueueFromTimer,The conditional expression  "!IsInQueue(historyItem) &&                          historyItem.TimeLapse != Null.NullInteger &&                          historyItem.TimeLapseMeasurement != Null.NullString &&                          historyItem.Enabled"  is complex.
Complex Conditional,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,Start,The conditional expression  "FreeThreads > 0 && !refreshQueueSchedule && KeepRunning && !_forceReloadSchedule"  is complex.
Complex Conditional,DotNetNuke.Services.Sitemap,CoreSitemapProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\CoreSitemapProvider.cs,GetUrls,The conditional expression  "!tab.IsDeleted && !tab.DisableLink && tab.TabType == TabType.Normal &&  	                    (Null.IsNull(tab.StartDate) || tab.StartDate < DateTime.Now) &&  	                    (Null.IsNull(tab.EndDate) || tab.EndDate > DateTime.Now) && IsTabPublic(tab.TabPermissions)"  is complex.
Complex Conditional,DotNetNuke.Services.Sitemap,CoreSitemapProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\CoreSitemapProvider.cs,GetPageUrl,The conditional expression  "(ps.SSLEnforced || (objTab.IsSecure && ps.SSLEnabled)) && url.StartsWith("http://")"  is complex.
Complex Conditional,DotNetNuke.Services.Sitemap,CoreSitemapProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\CoreSitemapProvider.cs,GetPageUrl,The conditional expression  "(!localized.IsDeleted && !localized.DisableLink && localized.TabType == TabType.Normal) &&                          (Null.IsNull(localized.StartDate) || localized.StartDate < DateTime.Now) &&                          (Null.IsNull(localized.EndDate) || localized.EndDate > DateTime.Now) &&                          (IsTabPublic(localized.TabPermissions)) &&                          (includeHiddenPages || localized.IsVisible) && localized.HasBeenPublished"  is complex.
Complex Conditional,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,RemoveHttpUrlsIfSiteisSSLEnabled,The conditional expression  "stringContainingHttp.IndexOf("http") > -1 && portalSettings != null && (portalSettings.SSLEnabled || portalSettings.SSLEnforced)"  is complex.
Complex Conditional,DotNetNuke.Services.Analytics,GoogleAnalyticsEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Analytics\GoogleAnalyticsEngine.cs,RenderScript,The conditional expression  "!trackForAdmin &&                  (UserController.Instance.GetCurrentUserInfo().IsSuperUser                   ||                   (PortalSettings.Current != null &&                    UserController.Instance.GetCurrentUserInfo().IsInRole(PortalSettings.Current.AdministratorRoleName)))"  is complex.
Complex Conditional,DotNetNuke.Services.Installer,InstallerInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\InstallerInfo.cs,ReadZipStream,The conditional expression  "file.Extension == "dnn7" && (ManifestFile.Extension == "dnn" || ManifestFile.Extension == "dnn5" || ManifestFile.Extension == "dnn6")"  is complex.
Complex Conditional,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ParsePackageName,The conditional expression  "package.PackageType.Equals("Module"' StringComparison.OrdinalIgnoreCase) && AdminModules.Contains(package.Name + "'") || package.PackageType.Equals("Module"' StringComparison.OrdinalIgnoreCase) && CoreModules.Contains(package.Name + "'") || (package.PackageType.Equals("Container"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Skin"' StringComparison.OrdinalIgnoreCase)) && KnownSkins.Contains(package.Name + "'") || package.PackageType.Equals("SkinObject"' StringComparison.OrdinalIgnoreCase) && KnownSkinObjects.Contains(package.Name + "'")"  is complex.
Complex Conditional,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,IsFileValid,The conditional expression  "(strExtension == "dnn" || whiteList.IsAllowedExtension(strExtension) || packageWhiteList.Contains(strExtension) ||                   (packageWhiteList.Contains("*dataprovider") && strExtension.EndsWith("dataprovider")))"  is complex.
Complex Conditional,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,ParsePackageIconFileName,The conditional expression  "(package.IconFile != null) && (package.PackageType.Equals("Module"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Auth_System"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Container"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Skin"' StringComparison.OrdinalIgnoreCase))"  is complex.
Complex Conditional,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,ParsePackageIconFile,The conditional expression  "(package.IconFile != null) && (package.PackageType.Equals("Module"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Auth_System"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Container"' StringComparison.OrdinalIgnoreCase) || package.PackageType.Equals("Skin"' StringComparison.OrdinalIgnoreCase))"  is complex.
Complex Conditional,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,GetExternalRequest,The conditional expression  "Username != null && Password != null && Domain != null && Username.Trim() != "" && Password.Trim() != null && Domain.Trim() != null"  is complex.
Complex Conditional,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,GetExternalRequest,The conditional expression  "Username != null && Password != null && Username.Trim() != "" && Password.Trim() != null"  is complex.
Complex Conditional,DotNetNuke.Services.Installer.Writers,PackageWriterBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\PackageWriterBase.cs,ParseProjectFile,The conditional expression  "!(fileName.StartsWith("system"' StringComparison.InvariantCultureIgnoreCase) || fileName.StartsWith("microsoft"' StringComparison.InvariantCultureIgnoreCase) || fileName.Equals("dotnetnuke"' StringComparison.InvariantCultureIgnoreCase) ||                        fileName.Equals("dotnetnuke.webutility"' StringComparison.InvariantCultureIgnoreCase) || fileName.Equals("dotnetnuke.webcontrols"' StringComparison.InvariantCultureIgnoreCase))"  is complex.
Complex Conditional,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendEmail,The conditional expression  "string.IsNullOrWhiteSpace(Host.SMTPServer) || string.IsNullOrEmpty(fromAddress) || string.IsNullOrEmpty(senderAddress) || string.IsNullOrEmpty(toAddress)"  is complex.
Complex Conditional,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,ConditionallyAddUser,The conditional expression  "((user.UserID <= 0 || user.Membership.Approved) && user.Email != string.Empty) && MatchLanguageFilter(user.Profile.PreferredLocale)"  is complex.
Complex Conditional,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,Recipients,The conditional expression  "(userRole.EffectiveDate <= DateTime.Now || Null.IsNull(userRole.EffectiveDate)) && (userRole.ExpiryDate >= DateTime.Now || Null.IsNull(userRole.ExpiryDate))"  is complex.
Complex Conditional,DotNetNuke.Services.Syndication,RssHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Syndication\RssHandler.cs,PopulateChannel,The conditional expression  "Request == null || Settings == null || Settings.ActiveTab == null || ModuleId == Null.NullInteger"  is complex.
Complex Conditional,DotNetNuke.Services.Upgrade.Internals.Steps,ActivateLicenseStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\ActivateLicenseStep.cs,Execute,The conditional expression  "licenseConfig != null && (!string.IsNullOrEmpty(licenseConfig.AccountEmail) && !string.IsNullOrEmpty(licenseConfig.InvoiceNumber)                                  && !string.IsNullOrEmpty(licenseConfig.LicenseType) && !string.IsNullOrEmpty(licenseConfig.WebServer))"  is complex.
Complex Conditional,DotNetNuke.UI.Containers,Container,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\Container.cs,ProcessContentPane,The conditional expression  "viewRoles.Equals(PortalSettings.AdministratorRoleName' StringComparison.InvariantCultureIgnoreCase)                              && (moduleEditRoles.Equals(PortalSettings.AdministratorRoleName' StringComparison.InvariantCultureIgnoreCase)                                      || String.IsNullOrEmpty(moduleEditRoles))                              && pageEditRoles.Equals(PortalSettings.AdministratorRoleName' StringComparison.InvariantCultureIgnoreCase)"  is complex.
Complex Conditional,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,IsPageAdminInternal,The conditional expression  "TabPermissionController.CanAddContentToPage() || TabPermissionController.CanAddPage() || TabPermissionController.CanAdminPage() || TabPermissionController.CanCopyPage() ||                  TabPermissionController.CanDeletePage() || TabPermissionController.CanExportPage() || TabPermissionController.CanImportPage() || TabPermissionController.CanManagePage()"  is complex.
Complex Conditional,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,AddChildActions,The conditional expression  "action.Visible &&                          (action.Secure != SecurityAccessLevel.Anonymous ||                              (!ModuleHost.IsViewMode(actionControl.ModuleControl.ModuleContext.Configuration' PortalSettings.Current))                                  && ModulePermissionController.HasModuleAccess(action.Secure' Null.NullString' actionControl.ModuleControl.ModuleContext.Configuration))"  is complex.
Complex Conditional,DotNetNuke.UI.Modules,ModuleHost,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleHost.cs,RenderContents,The conditional expression  "SupportsCaching() && IsViewMode(_moduleConfiguration' PortalSettings) && !Globals.IsAdminControl() && !IsVersionRequest()"  is complex.
Complex Conditional,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,LoadActions,The conditional expression  "Configuration != null && (Configuration.IsShared && Configuration.IsShareableViewOnly)                      && TabPermissionController.CanAddContentToPage()"  is complex.
Complex Conditional,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,LoadContainerByPath,The conditional expression  "containerPath.IndexOf("/skins/"' StringComparison.InvariantCultureIgnoreCase) != -1 || containerPath.IndexOf("/skins\\"' StringComparison.InvariantCultureIgnoreCase) != -1 || containerPath.IndexOf("\\skins\\"' StringComparison.InvariantCultureIgnoreCase) != -1 ||                  containerPath.IndexOf("\\skins/"' StringComparison.InvariantCultureIgnoreCase) != -1"  is complex.
Complex Conditional,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,ProcessMasterModules,The conditional expression  "(PortalSettings.ActiveTab.StartDate < DateAndTime.Now && PortalSettings.ActiveTab.EndDate > DateAndTime.Now) || TabPermissionController.CanAdminPage() || Globals.IsLayoutMode()"  is complex.
Complex Conditional,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,CanDeleteSkin,The conditional expression  "Host.DefaultAdminSkin.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase) || Host.DefaultPortalSkin.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase) ||                      portalSettings.DefaultAdminSkin.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase) || portalSettings.DefaultPortalSkin.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase)"  is complex.
Complex Conditional,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,CanDeleteSkin,The conditional expression  "Host.DefaultAdminContainer.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase) || Host.DefaultPortalContainer.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase) ||                      portalSettings.DefaultAdminContainer.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase) || portalSettings.DefaultPortalContainer.StartsWith(skin' StringComparison.InvariantCultureIgnoreCase)"  is complex.
Complex Conditional,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,DoRenderTypeControls,The conditional expression  "(Required && String.IsNullOrEmpty(cboFiles.Items[0].Value)) || (!Required && !String.IsNullOrEmpty(cboFiles.Items[0].Value))"  is complex.
Complex Conditional,DotNetNuke.UI.WebControls,ActionLink,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\ActionLink.cs,IsVisible,The conditional expression  "(RequireEditMode != true || ModuleControl.ModuleContext.PortalSettings.UserMode == PortalSettings.Mode.Edit) || (security == SecurityAccessLevel.Anonymous || security == SecurityAccessLevel.View)"  is complex.
Complex Conditional,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateChildControls,The conditional expression  "(CaptchaWidth.IsEmpty || CaptchaWidth.Type != UnitType.Pixel || CaptchaHeight.IsEmpty || CaptchaHeight.Type != UnitType.Pixel)"  is complex.
Complex Conditional,DotNetNuke.UI.WebControls,FieldEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\FieldEditorControl.cs,BuildDiv,The conditional expression  "ShowRequired && editInfo.Required && (editInfo.EditMode == PropertyEditorMode.Edit || (editInfo.Required && string.IsNullOrEmpty(strValue)))"  is complex.
Complex Conditional,DotNetNuke.UI.WebControls,FieldEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\FieldEditorControl.cs,BuildRequiredIcon,The conditional expression  "ShowRequired && editInfo.Required && (editInfo.EditMode == PropertyEditorMode.Edit || (editInfo.Required && string.IsNullOrEmpty(strValue)))"  is complex.
Virtual Method Call from Constructor,DotNetNuke.Services.OutputCache.Providers,DatabaseResponseFilter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\DatabaseResponseFilter.cs,DatabaseResponseFilter,The constructor "DatabaseResponseFilter" calls a virtual method "GetOutputCacheItemCount".
Empty Catch Block,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,Redirect,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,GetDotNet4ReleaseNumberFromRegistry,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Common.Utilities,ImageUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\ImageUtils.cs,CreateJPG,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Common.Utilities,XmlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\XmlUtils.cs,DeSerializeHashtable,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortal,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortal,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,CreatePortal,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Common.Lists,CachedCountryList,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Lists\CachedCountryList.cs,GetCountryList,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Entities.Host,IPFilterInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\IPFilter\IPFilterInfo.cs,Fill,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,SerializeTab,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,Handle404OrException,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,GetCurrentPrincipal,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForTabExternalForwardOrRedirect,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,GetPortal,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,RemovedPageIndexCallBack,The method has an empty catch block.
Empty Catch Block,DotNetNuke.ExtensionPoints,SafeDirectoryCatalog,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\ExtensionPoints\SafeDirectoryCatalog.cs,SafeDirectoryCatalog,The method has an empty catch block.
Empty Catch Block,DotNetNuke.ExtensionPoints,SafeDirectoryCatalog,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\ExtensionPoints\SafeDirectoryCatalog.cs,SafeDirectoryCatalog,The method has an empty catch block.
Empty Catch Block,DotNetNuke.ExtensionPoints,SafeDirectoryCatalog,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\ExtensionPoints\SafeDirectoryCatalog.cs,SafeDirectoryCatalog,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Framework,AJAX,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\AJAX.cs,AddScriptManager,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Framework,AJAX,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\AJAX.cs,AddScriptManager,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Security.Roles,RoleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleInfo.cs,Fill,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.FileSystem,FileServerHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileServerHandler.cs,ProcessRequest,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.FileSystem,FileServerHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileServerHandler.cs,ProcessRequest,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.FileSystem.Internal.SecurityCheckers,SvgFileChecker,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\Internal\SecurityCheckers\SvgFileChecker.cs,Validate,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.GeneratedImage,IPCount,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\IPCount.cs,CheckIp,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.GeneratedImage,DiskImageStore,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DiskImageStore.cs,ForcePurgeFromServerCache,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.GeneratedImage,DiskImageStore,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DiskImageStore.cs,PurgeCallback,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.GeneratedImage,DiskImageStore,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DiskImageStore.cs,Add,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.Localization.Persian,PersianCalendar,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Persian\PersianCalendar.cs,GetYear,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.Localization.Persian,PersianCalendar,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Persian\PersianCalendar.cs,GetMonth,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.Localization.Persian,PersianCalendar,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Persian\PersianCalendar.cs,GetDayOfMonth,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.Localization.Persian,PersianCalendar,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Persian\PersianCalendar.cs,GetDayOfYear,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.Localization.Persian,PersianCalendar,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Persian\PersianCalendar.cs,GetDayOfWeek,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.Search,SearchEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\SearchEngine.cs,GetAndStoreSearchDocuments,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.Search,SearchEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\SearchEngine.cs,GetAndStoreSearchDocuments,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddManageUsersModulePermissions,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddManageUsersModulePermissions,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddManageUsersModulePermissions,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ParsePackagesFromApplicationPath,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,ProcessRequest,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Services.Zip,SharpZipLibRedirect,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Zip\SharpZipLibRedirect.cs,RegisterSharpZipLibRedirect,The method has an empty catch block.
Empty Catch Block,DotNetNuke.UI.Skins,Pane,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Pane.cs,InjectModule,The method has an empty catch block.
Empty Catch Block,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,InjectModule,The method has an empty catch block.
Empty Catch Block,DotNetNuke.UI.WebControls,EditControlFactory,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\EditControlFactory.cs,CreateEditControlInternal,The method has an empty catch block.
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,GetCurrentDomainDirectory,The following statement contains a magic number: dir.Length > 3 &&  dir.EndsWith("\\")
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,IsInstalled,The following statement contains a magic number: const int c_PassingScore = 4;
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,IsInstalled,The following statement contains a magic number: int dataproviderfactor = Convert.ToInt32(HasDataProviderLogFiles() ? 3 : 0);
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,IsInstalled,The following statement contains a magic number: int htmlmodulefactor = Convert.ToInt32(ModuleDirectoryExists("html") ? 2 : 0);
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,IsInstalled,The following statement contains a magic number: int portaldirectoryfactor = Convert.ToInt32(HasNonDefaultPortalDirectory() ? 2 : 0);
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,FormatAddress,The following statement contains a magic number: strAddress = strAddress.Substring(2);
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,FormatVersion,The following statement contains a magic number: fieldCount > 2
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,FormatVersion,The following statement contains a magic number: fieldCount > 3
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,ManageTokenUploadDirectory,The following statement contains a magic number: tLen = strToken.Length + 2;
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,ManageTokenUploadDirectory,The following statement contains a magic number: P = strHTML.IndexOf(strToken + "=\""' S + strURL.Length + 2' StringComparison.InvariantCultureIgnoreCase);
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CleanFileName,The following statement contains a magic number: BadChars = ":/\\?*|" + ((char)34) + ((char)39) + ((char)9);
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CleanFileName,The following statement contains a magic number: BadChars = ":/\\?*|" + ((char)34) + ((char)39) + ((char)9);
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CleanFileName,The following statement contains a magic number: BadChars = ":/\\?*|" + ((char)34) + ((char)39) + ((char)9);
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CleanName,The following statement contains a magic number: string strBadChars = ". ~`!@#$%^&*()-_+={[}]|\\:;<'>?/" + ((char)34) + ((char)39);
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CleanName,The following statement contains a magic number: string strBadChars = ". ~`!@#$%^&*()-_+={[}]|\\:;<'>?/" + ((char)34) + ((char)39);
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CreateValidClass,The following statement contains a magic number: var validClassLookupDictionary = CBO.GetCachedObject<SharedDictionary<string' string>>(new CacheItemArgs("ValidClassLookup"' 200' CacheItemPriority.NotRemovable)'                                                                                                     (CacheItemArgs cacheItemArgs) => new SharedDictionary<string' string>());
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,CreateValidID,The following statement contains a magic number: var validIDLookupDictionary = CBO.GetCachedObject<SharedDictionary<string' string>>(new CacheItemArgs("ValidIDLookup"' 200' CacheItemPriority.NotRemovable)'                                                                                                  (CacheItemArgs cacheItemArgs) => new SharedDictionary<string' string>());
Magic Number,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,ResolveUrl,The following statement contains a magic number: return ApplicationPath + "/" + url.Substring(2);
Magic Number,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,GetNETFrameworkVersion,The following statement contains a magic number: var version = Environment.Version.ToString(2);
Magic Number,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,GetNETFrameworkVersion,The following statement contains a magic number: release >= 528040
Magic Number,DotNetNuke.Common.Utilities,RegexUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\RegexUtils.cs,GetCachedRegex,The following statement contains a magic number: cache.Insert(key' regex' (DNNCacheDependency)null' Cache.NoAbsoluteExpiration' TimeSpan.FromMinutes(10)' CacheItemPriority.BelowNormal' null);
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetMaxUploadSize,The following statement contains a magic number: maxRequestLength = XmlUtils.GetAttributeValueAsLong(httpNode.CreateNavigator()' "maxRequestLength"' 0) * 1024;
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetMaxUploadSize,The following statement contains a magic number: const int DefaultMaxAllowedContentLength = 30000000;
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetMaxUploadSize,The following statement contains a magic number: var maxAllowedContentLength = XmlUtils.GetAttributeValueAsLong(httpNode.CreateNavigator()' "maxAllowedContentLength"' 30000000);
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetRequestFilterSize,The following statement contains a magic number: const int defaultRequestFilter = 30000000/1024/1024;
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetRequestFilterSize,The following statement contains a magic number: const int defaultRequestFilter = 30000000/1024/1024;
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetRequestFilterSize,The following statement contains a magic number: const int defaultRequestFilter = 30000000/1024/1024;
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetRequestFilterSize,The following statement contains a magic number: var maxAllowedContentLength = XmlUtils.GetAttributeValueAsLong(httpNode.CreateNavigator()' "maxAllowedContentLength"' 30000000);
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetRequestFilterSize,The following statement contains a magic number: return maxAllowedContentLength / 1024 / 1024;
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetRequestFilterSize,The following statement contains a magic number: return maxAllowedContentLength / 1024 / 1024;
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,SetMaxUploadSize,The following statement contains a magic number: newSize = 12582912;
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,SetMaxUploadSize,The following statement contains a magic number: newSize < 12582912
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,SetMaxUploadSize,The following statement contains a magic number: httpNode.Attributes["maxRequestLength"].InnerText = (newSize / 1024).ToString("#");
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,SetMaxUploadSize,The following statement contains a magic number: httpNode.Attributes["requestLengthDiskThreshold"].InnerText = (newSize / 1024).ToString("#");
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,Iis7AndAbove,The following statement contains a magic number: return Environment.OSVersion.Version.Major >= 6;
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetAuthCookieTimeout,The following statement contains a magic number: return (formsNav != null) ? XmlUtils.GetAttributeValueAsInteger(formsNav' "timeout"' 30) : 30;
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,GetAuthCookieTimeout,The following statement contains a magic number: return (formsNav != null) ? XmlUtils.GetAttributeValueAsInteger(formsNav' "timeout"' 30) : 30;
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,Save,The following statement contains a magic number: const int maxRetires = 4;
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,Save,The following statement contains a magic number: const double miltiplier = 2.5;
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,UpdateMachineKey,The following statement contains a magic number: string validationKey = portalSecurity.CreateKey(20);
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,UpdateMachineKey,The following statement contains a magic number: string decryptionKey = portalSecurity.CreateKey(24);
Magic Number,DotNetNuke.Common.Utilities,Config,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\Config.cs,UpdateValidationKey,The following statement contains a magic number: string validationKey = objSecurity.CreateKey(20);
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,GetDatabaseUtcTime,The following statement contains a magic number: DateTime.UtcNow >= _lastUpdateUtc + TimeSpan.FromMinutes(15) || !(TimeSpan.FromHours(-26) <= _driftUtc && _driftUtc <= TimeSpan.FromHours(26)) || _driftUtc == TimeSpan.MinValue
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,GetDatabaseUtcTime,The following statement contains a magic number: DateTime.UtcNow >= _lastUpdateUtc + TimeSpan.FromMinutes(15) || !(TimeSpan.FromHours(-26) <= _driftUtc && _driftUtc <= TimeSpan.FromHours(26)) || _driftUtc == TimeSpan.MinValue
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,GetDatabaseUtcTime,The following statement contains a magic number: DateTime.UtcNow >= _lastUpdateUtc + TimeSpan.FromMinutes(15) || !(TimeSpan.FromHours(-26) <= _driftUtc && _driftUtc <= TimeSpan.FromHours(26)) || _driftUtc == TimeSpan.MinValue
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,GetDatabaseLocalTime,The following statement contains a magic number: DateTime.UtcNow >= _lastUpdateLocal + TimeSpan.FromMinutes(15) || !(TimeSpan.FromHours(-26) <= _driftLocal && _driftLocal <= TimeSpan.FromHours(26)) || _driftLocal == TimeSpan.MinValue
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,GetDatabaseLocalTime,The following statement contains a magic number: DateTime.UtcNow >= _lastUpdateLocal + TimeSpan.FromMinutes(15) || !(TimeSpan.FromHours(-26) <= _driftLocal && _driftLocal <= TimeSpan.FromHours(26)) || _driftLocal == TimeSpan.MinValue
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,GetDatabaseLocalTime,The following statement contains a magic number: DateTime.UtcNow >= _lastUpdateLocal + TimeSpan.FromMinutes(15) || !(TimeSpan.FromHours(-26) <= _driftLocal && _driftLocal <= TimeSpan.FromHours(26)) || _driftLocal == TimeSpan.MinValue
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: utcTimeDifference.TotalSeconds < 60
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: utcTimeDifference.TotalMinutes < 2
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: utcTimeDifference.TotalMinutes < 60
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: utcTimeDifference.TotalHours < 2
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: utcTimeDifference.TotalHours < 24
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: utcTimeDifference.TotalDays < 2
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: utcTimeDifference.TotalDays < 7
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: return String.Format(Localization.GetString("WeekAgo")' (int)utcTimeDifference.TotalDays / 7);
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: utcTimeDifference.TotalDays < 14
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: return String.Format(Localization.GetString("WeeksAgo")' (int)utcTimeDifference.TotalDays / 7);
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: utcTimeDifference.TotalDays < 30
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: return String.Format(Localization.GetString("MonthAgo")' (int)utcTimeDifference.TotalDays / 30);
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: utcTimeDifference.TotalDays < 60
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: return String.Format(Localization.GetString("MonthsAgo")' (int)utcTimeDifference.TotalDays / 30);
Magic Number,DotNetNuke.Common.Utilities,DateUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DateUtils.cs,CalculateDateForDisplay,The following statement contains a magic number: utcTimeDifference.TotalDays < 180
Magic Number,DotNetNuke.Common.Utilities,FileSystemUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\FileSystemUtils.cs,WriteStream,The following statement contains a magic number: var bytBuffer = new byte[10000];
Magic Number,DotNetNuke.Common.Utilities,FileSystemUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\FileSystemUtils.cs,WriteStream,The following statement contains a magic number: intLength = objStream.Read(bytBuffer' 0' 10000);
Magic Number,DotNetNuke.Common.Utilities,FileSystemUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\FileSystemUtils.cs,UnzipResources,The following statement contains a magic number: int intSize = 2048;
Magic Number,DotNetNuke.Common.Utilities,FileSystemUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\FileSystemUtils.cs,UnzipResources,The following statement contains a magic number: var arrData = new byte[2048];
Magic Number,DotNetNuke.Common.Utilities,HtmlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\HtmlUtils.cs,WriteFeedback,The following statement contains a magic number: strMessage += timeElapsed.ToString().Substring(0' timeElapsed.ToString().LastIndexOf("."' StringComparison.Ordinal) + 4) + " -";
Magic Number,DotNetNuke.Common.Utilities,ImageUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\ImageUtils.cs,CreateImage,The following statement contains a magic number: var arrData = new byte[2048];
Magic Number,DotNetNuke.Common.Utilities,ImageUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\ImageUtils.cs,CreateImageForDB,The following statement contains a magic number: var myEncoderParameter = new EncoderParameter(myEncoder' 90);
Magic Number,DotNetNuke.Common.Utilities,EscapedString,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\EscapedString.cs,EndsInEscapeMode,The following statement contains a magic number: return escapeCount%2 == 1;
Magic Number,DotNetNuke.Common.Utilities,PathUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\PathUtils.cs,GetUserFolderPathElementInternal,The following statement contains a magic number: const int subfolderSeedLength = 2;
Magic Number,DotNetNuke.Common.Utilities,PathUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\PathUtils.cs,GetUserFolderPathElementInternal,The following statement contains a magic number: const int byteOffset = 255;
Magic Number,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,PopUpUrl,The following statement contains a magic number: return PopUpUrl(url' control' portalSettings' onClickEvent' responseRedirect' 550' 950);
Magic Number,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,PopUpUrl,The following statement contains a magic number: return PopUpUrl(url' control' portalSettings' onClickEvent' responseRedirect' 550' 950);
Magic Number,DotNetNuke.Common.Utilities,UrlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\UrlUtils.cs,ValidReturnUrl,The following statement contains a magic number: var urlWithNoProtocol = url.Substring(2);
Magic Number,DotNetNuke.Common.Utilities,SqlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\SqlUtils.cs,TranslateSQLException,The following statement contains a magic number: switch (sqlError.Number)                  {                      case 17:                          filteredMessage = "Sql server does not exist or access denied";                          break;                      case 4060:                          filteredMessage = "Invalid Database";                          break;                      case 18456:                          filteredMessage = "Sql login failed";                          break;                      case 1205:                          filteredMessage = "Sql deadlock victim";                          break;                      default:                          filteredMessage = exc.ToString();                          break;                  }
Magic Number,DotNetNuke.Common.Utilities,SqlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\SqlUtils.cs,TranslateSQLException,The following statement contains a magic number: switch (sqlError.Number)                  {                      case 17:                          filteredMessage = "Sql server does not exist or access denied";                          break;                      case 4060:                          filteredMessage = "Invalid Database";                          break;                      case 18456:                          filteredMessage = "Sql login failed";                          break;                      case 1205:                          filteredMessage = "Sql deadlock victim";                          break;                      default:                          filteredMessage = exc.ToString();                          break;                  }
Magic Number,DotNetNuke.Common.Utilities,SqlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\SqlUtils.cs,TranslateSQLException,The following statement contains a magic number: switch (sqlError.Number)                  {                      case 17:                          filteredMessage = "Sql server does not exist or access denied";                          break;                      case 4060:                          filteredMessage = "Invalid Database";                          break;                      case 18456:                          filteredMessage = "Sql login failed";                          break;                      case 1205:                          filteredMessage = "Sql deadlock victim";                          break;                      default:                          filteredMessage = exc.ToString();                          break;                  }
Magic Number,DotNetNuke.Common.Utilities,SqlUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\SqlUtils.cs,TranslateSQLException,The following statement contains a magic number: switch (sqlError.Number)                  {                      case 17:                          filteredMessage = "Sql server does not exist or access denied";                          break;                      case 4060:                          filteredMessage = "Invalid Database";                          break;                      case 18456:                          filteredMessage = "Sql login failed";                          break;                      case 1205:                          filteredMessage = "Sql deadlock victim";                          break;                      default:                          filteredMessage = exc.ToString();                          break;                  }
Magic Number,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateDatabaseVersion,The following statement contains a magic number: (Major >= 5 || (Major == 4 && Minor == 9 && Build > 0))
Magic Number,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateDatabaseVersion,The following statement contains a magic number: (Major >= 5 || (Major == 4 && Minor == 9 && Build > 0))
Magic Number,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,UpdateDatabaseVersion,The following statement contains a magic number: (Major >= 5 || (Major == 4 && Minor == 9 && Build > 0))
Magic Number,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,GetPortals,The following statement contains a magic number: Globals.Status == Globals.UpgradeStatus.Upgrade && Globals.DataBaseVersion < new Version(6' 1' 0)
Magic Number,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,PurgeScheduleHistory,The following statement contains a magic number: ExecuteNonQuery(90' "PurgeScheduleHistory");
Magic Number,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,GetAvailableUsersForIndex,The following statement contains a magic number: return ExecuteReader(90' "GetAvailableUsersForIndex"' portalId' startDate' startUserId' numberOfUsers);
Magic Number,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,DeserializeModule,The following statement contains a magic number: module.WebSliceTTL = XmlUtils.GetNodeValueInt(nodeModule' "webslicettl"' module.CacheTime / 60);
Magic Number,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,GetModuleContent,The following statement contains a magic number: content = content.Substring(9' content.Length - 12);
Magic Number,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,GetModuleContent,The following statement contains a magic number: content = content.Substring(9' content.Length - 12);
Magic Number,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,GetModuleSettings,The following statement contains a magic number: var moduleSettings = CBO.GetCachedObject<Dictionary<int' Hashtable>>(new CacheItemArgs(cacheKey'                                                                                      DataCache.ModuleCacheTimeOut'                                                                                      DataCache.ModuleCachePriority)'                              c =>                              {                                  var moduleSettingsDic = new Dictionary<int' Hashtable>();                                  IDataReader dr = DataProvider.Instance().GetModuleSettingsByTab(tabId);                                  while (dr.Read())                                  {                                      int mId = dr.GetInt32(0);                                      Hashtable settings;                                      if (!moduleSettingsDic.TryGetValue(mId' out settings))                                      {                                          settings = new Hashtable();                                          moduleSettingsDic[mId] = settings;                                      }                                        if (!dr.IsDBNull(2))                                      {                                          settings[dr.GetString(1)] = dr.GetString(2);                                      }                                      else                                      {                                          settings[dr.GetString(1)] = "";                                      }                                  }                                  CBO.CloseDataReader(dr' true);                                  return moduleSettingsDic;                              });
Magic Number,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,GetModuleSettings,The following statement contains a magic number: var moduleSettings = CBO.GetCachedObject<Dictionary<int' Hashtable>>(new CacheItemArgs(cacheKey'                                                                                      DataCache.ModuleCacheTimeOut'                                                                                      DataCache.ModuleCachePriority)'                              c =>                              {                                  var moduleSettingsDic = new Dictionary<int' Hashtable>();                                  IDataReader dr = DataProvider.Instance().GetModuleSettingsByTab(tabId);                                  while (dr.Read())                                  {                                      int mId = dr.GetInt32(0);                                      Hashtable settings;                                      if (!moduleSettingsDic.TryGetValue(mId' out settings))                                      {                                          settings = new Hashtable();                                          moduleSettingsDic[mId] = settings;                                      }                                        if (!dr.IsDBNull(2))                                      {                                          settings[dr.GetString(1)] = dr.GetString(2);                                      }                                      else                                      {                                          settings[dr.GetString(1)] = "";                                      }                                  }                                  CBO.CloseDataReader(dr' true);                                  return moduleSettingsDic;                              });
Magic Number,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,GetTabModuleSettings,The following statement contains a magic number: var tabModuleSettings = CBO.GetCachedObject<Dictionary<int' Hashtable>>(new CacheItemArgs(cacheKey'                                                                                      DataCache.TabModuleCacheTimeOut'                                                                                      DataCache.TabModuleCachePriority)'                              c =>                              {                                  var tabModuleSettingsDic = new Dictionary<int' Hashtable>();                                  using (IDataReader dr = DataProvider.Instance().GetTabModuleSettingsByTab(tabId))                                  {                                      while (dr.Read())                                      {                                          int tMId = dr.GetInt32(0);                                          Hashtable settings;                                          if (!tabModuleSettingsDic.TryGetValue(tMId' out settings))                                          {                                              settings = new Hashtable();                                              tabModuleSettingsDic[tMId] = settings;                                          }                                            if (!dr.IsDBNull(2))                                          {                                              settings[dr.GetString(1)] = dr.GetString(2);                                          }                                          else                                          {                                              settings[dr.GetString(1)] = "";                                          }                                      }                                  }                                  return tabModuleSettingsDic;                              });
Magic Number,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,GetTabModuleSettings,The following statement contains a magic number: var tabModuleSettings = CBO.GetCachedObject<Dictionary<int' Hashtable>>(new CacheItemArgs(cacheKey'                                                                                      DataCache.TabModuleCacheTimeOut'                                                                                      DataCache.TabModuleCachePriority)'                              c =>                              {                                  var tabModuleSettingsDic = new Dictionary<int' Hashtable>();                                  using (IDataReader dr = DataProvider.Instance().GetTabModuleSettingsByTab(tabId))                                  {                                      while (dr.Read())                                      {                                          int tMId = dr.GetInt32(0);                                          Hashtable settings;                                          if (!tabModuleSettingsDic.TryGetValue(tMId' out settings))                                          {                                              settings = new Hashtable();                                              tabModuleSettingsDic[tMId] = settings;                                          }                                            if (!dr.IsDBNull(2))                                          {                                              settings[dr.GetString(1)] = dr.GetString(2);                                          }                                          else                                          {                                              settings[dr.GetString(1)] = "";                                          }                                      }                                  }                                  return tabModuleSettingsDic;                              });
Magic Number,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,UpdateModuleOrder,The following statement contains a magic number: moduleOrder += 2;
Magic Number,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,UpdateTabModuleOrder,The following statement contains a magic number: var newOrder = (moduleCounter * 2) - 1;
Magic Number,DotNetNuke.Entities.Modules.Settings,SettingsRepository<T>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Settings\SettingsRepository.cs,GetSettings,The following statement contains a magic number: return CBO.GetCachedObject<T>(new CacheItemArgs(CacheKey(moduleContext.TabModuleID)' 20' CacheItemPriority.AboveNormal' moduleContext)' Load' false);
Magic Number,DotNetNuke.Entities.Modules.Settings,SettingsRepository<T>,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Settings\SettingsRepository.cs,LoadMapping,The following statement contains a magic number: CachingProvider.Instance().Insert(cacheKey' mapping' (DNNCacheDependency)null' DateTime.Now.AddHours(2)' Cache.NoSlidingExpiration);
Magic Number,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,LoadPortalSettings,The following statement contains a magic number: portalSettings.SMTPConnectionLimit = settings.GetValueOrDefault("SMTPConnectionLimit"' 2);
Magic Number,DotNetNuke.Entities.Portals,PortalSettingsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettingsController.cs,LoadPortalSettings,The following statement contains a magic number: portalSettings.SMTPMaxIdleTime = settings.GetValueOrDefault("SMTPMaxIdleTime"' 100000);
Magic Number,DotNetNuke.Entities.Portals,PortalAliasController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasController.cs,GetPortalAliasByTab,The following statement contains a magic number: int intPortalId = -2;
Magic Number,DotNetNuke.Entities.Portals,PortalAliasController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalAliasController.cs,GetPortalAliasByTab,The following statement contains a magic number: switch (intPortalId)              {                  case -2: //tab does not exist                      break;                  case -1: //host tab                      //host tabs are not verified to determine if they belong to the portal alias                      retValue = portalAlias;                      break;                  default: //portal tab                      retValue = GetPortalAliasByPortal(intPortalId' portalAlias);                      break;              }
Magic Number,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseProfileDefinitions,The following statement contains a magic number: orderCounter += 2;
Magic Number,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseProfileDefinitions,The following statement contains a magic number: switch (XmlUtils.GetNodeValueInt(node' "defaultvisibility"' 2))                  {                      case 0:                          objProfileDefinition.DefaultVisibility = UserVisibilityMode.AllUsers;                          break;                      case 1:                          objProfileDefinition.DefaultVisibility = UserVisibilityMode.MembersOnly;                          break;                      case 2:                          objProfileDefinition.DefaultVisibility = UserVisibilityMode.AdminOnly;                          break;                  }
Magic Number,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseProfileDefinitions,The following statement contains a magic number: switch (XmlUtils.GetNodeValueInt(node' "defaultvisibility"' 2))                  {                      case 0:                          objProfileDefinition.DefaultVisibility = UserVisibilityMode.AllUsers;                          break;                      case 1:                          objProfileDefinition.DefaultVisibility = UserVisibilityMode.MembersOnly;                          break;                      case 2:                          objProfileDefinition.DefaultVisibility = UserVisibilityMode.AdminOnly;                          break;                  }
Magic Number,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseProfileDefinitions,The following statement contains a magic number: orderCounter += 2;
Magic Number,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,HasSpaceAvailable,The following statement contains a magic number: return (((GetPortalSpaceUsedBytes(portalId) + fileSizeBytes) / Math.Pow(1024' 2)) <= hostSpace) || hostSpace == 0;
Magic Number,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,HasSpaceAvailable,The following statement contains a magic number: return (((GetPortalSpaceUsedBytes(portalId) + fileSizeBytes) / Math.Pow(1024' 2)) <= hostSpace) || hostSpace == 0;
Magic Number,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUserSettings,The following statement contains a magic number: settings["Records_PerPage"] = 10;
Magic Number,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GetUserSettings,The following statement contains a magic number: portal != null && portal.Users > 1000
Magic Number,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,IsValidUserName,The following statement contains a magic number: return userName.Length >= 5 &&                          userName == userName.Trim() &&                          userName.All(ch => ch >= ' ') &&                          userName.IndexOfAny(unallowedAscii) < 0;
Magic Number,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,CreateUser,The following statement contains a magic number: var passwordExpiry = DateTime.Now.AddMinutes(1440);
Magic Number,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,GeneratePassword,The following statement contains a magic number: return GeneratePassword(MembershipProviderConfig.MinPasswordLength + 4);
Magic Number,DotNetNuke.Entities.Users,UserController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserController.cs,VerifyUser,The following statement contains a magic number: strings.Length != 2
Magic Number,DotNetNuke.Entities.Users,UserOnlineController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Users Online\UserOnlineController.cs,TrackAnonymousUser,The following statement contains a magic number: cookie = new HttpCookie(cookieName' userID)                  {                      Expires = DateTime.Now.AddMinutes(20)'                      Path = (!string.IsNullOrEmpty(Globals.ApplicationPath) ? Globals.ApplicationPath : "/")                  };
Magic Number,DotNetNuke.Common.Controls,Form,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Controls\ActionLessForm.cs,RenderAttributes,The following statement contains a magic number: int EndPoint = html.IndexOf("\""' StartPoint + 8) + 1;
Magic Number,DotNetNuke.Common.Controls,Form,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Controls\ActionLessForm.cs,RenderAttributes,The following statement contains a magic number: int EndPoint = html.IndexOf("\""' StartPoint + 4) + 1;
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,IPtoLong,The following statement contains a magic number: addr = addr | (Convert.ToInt64(addressBytes[x]) << (3 - x) * 8);
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,IPtoLong,The following statement contains a magic number: addr = addr | (Convert.ToInt64(addressBytes[x]) << (3 - x) * 8);
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,IPtoLong,The following statement contains a magic number: x <= 3
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,LongToIp,The following statement contains a magic number: var ipByte = new byte[4];
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,LongToIp,The following statement contains a magic number: long mask8 = MaskFromCidr(8);
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,LongToIp,The following statement contains a magic number: ipByte[x] = Convert.ToByte((ip & mask8) >> ((3 - x) * 8));
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,LongToIp,The following statement contains a magic number: ipByte[x] = Convert.ToByte((ip & mask8) >> ((3 - x) * 8));
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,LongToIp,The following statement contains a magic number: mask8 = mask8 >> 8;
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,LongToIp,The following statement contains a magic number: x <= 3
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,MaskFromCidr,The following statement contains a magic number: return Convert.ToInt64(Math.Pow(2' ((32 - cidr))) - 1) ^ 4294967295L;
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,MaskFromCidr,The following statement contains a magic number: return Convert.ToInt64(Math.Pow(2' ((32 - cidr))) - 1) ^ 4294967295L;
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,MaskFromCidr,The following statement contains a magic number: return Convert.ToInt64(Math.Pow(2' ((32 - cidr))) - 1) ^ 4294967295L;
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,Network2IpRange,The following statement contains a magic number: uint usableIps = (bits > 30) ? 0 : (broadcast - network - 1);
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,IP2Int,The following statement contains a magic number: ip = Convert.ToUInt32(elements[0]) << 24;
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,IP2Int,The following statement contains a magic number: ip += Convert.ToUInt32(elements[1]) << 16;
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,IP2Int,The following statement contains a magic number: ip += Convert.ToUInt32(elements[2]) << 8;
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,IP2Int,The following statement contains a magic number: ip += Convert.ToUInt32(elements[2]) << 8;
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,IP2Int,The following statement contains a magic number: ip += Convert.ToUInt32(elements[3]);
Magic Number,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,IP2Int,The following statement contains a magic number: elements.Length == 4
Magic Number,DotNetNuke.Common.Utilities.Internal,RetryableAction,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\RetryableAction.cs,RetryEverySecondFor30Seconds,The following statement contains a magic number: new RetryableAction(action' description' 30' TimeSpan.FromSeconds(1)).TryIt();
Magic Number,DotNetNuke.Common.Utilities.Internal,RetryableAction,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\RetryableAction.cs,Retry5TimesWith2SecondsDelay,The following statement contains a magic number: new RetryableAction(action' description' 5' TimeSpan.FromSeconds(2)).TryIt();
Magic Number,DotNetNuke.Common.Utilities.Internal,RetryableAction,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\RetryableAction.cs,Retry5TimesWith2SecondsDelay,The following statement contains a magic number: new RetryableAction(action' description' 5' TimeSpan.FromSeconds(2)).TryIt();
Magic Number,DotNetNuke.ComponentModel.DataAnnotations,CacheableAttribute,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\ComponentModel\DataAnnotations\CacheableAttribute.cs,CacheableAttribute,The following statement contains a magic number: CacheTimeOut = 20;
Magic Number,DotNetNuke.Entities.Content.Taxonomy,Vocabulary,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Taxonomy\Vocabulary.cs,Fill,The following statement contains a magic number: switch (Convert.ToInt16(dr["VocabularyTypeID"]))              {                  case 1:                      Type = VocabularyType.Simple;                      break;                  case 2:                      Type = VocabularyType.Hierarchy;                      break;              }
Magic Number,DotNetNuke.Entities.Content.Workflow,SystemWorkflowManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\SystemWorkflowManager.cs,CreateSaveDraftWorkflow,The following statement contains a magic number: state = GetPublishedStateDefinition(2);
Magic Number,DotNetNuke.Entities.Content.Workflow,SystemWorkflowManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\SystemWorkflowManager.cs,CreateContentApprovalWorkflow,The following statement contains a magic number: state = GetReadyForReviewStateDefinition(2);
Magic Number,DotNetNuke.Entities.Content.Workflow,SystemWorkflowManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\SystemWorkflowManager.cs,CreateContentApprovalWorkflow,The following statement contains a magic number: state = GetPublishedStateDefinition(3);
Magic Number,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,MoveWorkflowStateDown,The following statement contains a magic number: states.Length == 3
Magic Number,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,MoveWorkflowStateUp,The following statement contains a magic number: states.Length == 3
Magic Number,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,MoveWorkflowStateUp,The following statement contains a magic number: i >= states.Length - 2
Magic Number,DotNetNuke.Entities.Content.Workflow,WorkflowStateManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowStateManager.cs,MoveState,The following statement contains a magic number: index < 1 || index > states.Length - 2
Magic Number,DotNetNuke.Entities.Content.Workflow,WorkflowManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Workflow\WorkflowManager.cs,AddWorkflow,The following statement contains a magic number: var lastDefaultState = _systemWorkflowManager.GetPublishedStateDefinition(2);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinition,The following statement contains a magic number: _orderCounter += 2;
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The following statement contains a magic number: AddDefaultDefinition(portalId' "Name"' "Prefix"' "Text"' 50' UserVisibilityMode.AllUsers' dataTypes);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The following statement contains a magic number: AddDefaultDefinition(portalId' "Name"' "FirstName"' "Text"' 50' UserVisibilityMode.AllUsers' dataTypes);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The following statement contains a magic number: AddDefaultDefinition(portalId' "Name"' "MiddleName"' "Text"' 50' UserVisibilityMode.AllUsers' dataTypes);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The following statement contains a magic number: AddDefaultDefinition(portalId' "Name"' "LastName"' "Text"' 50' UserVisibilityMode.AllUsers' dataTypes);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The following statement contains a magic number: AddDefaultDefinition(portalId' "Name"' "Suffix"' "Text"' 50' UserVisibilityMode.AllUsers' dataTypes);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The following statement contains a magic number: AddDefaultDefinition(portalId' "Address"' "Unit"' "Text"' 50' UserVisibilityMode.AdminOnly' dataTypes);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The following statement contains a magic number: AddDefaultDefinition(portalId' "Address"' "Street"' "Text"' 50' UserVisibilityMode.AdminOnly' dataTypes);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The following statement contains a magic number: AddDefaultDefinition(portalId' "Address"' "City"' "Text"' 50' UserVisibilityMode.AdminOnly' dataTypes);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The following statement contains a magic number: AddDefaultDefinition(portalId' "Address"' "PostalCode"' "Text"' 50' UserVisibilityMode.AdminOnly' dataTypes);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The following statement contains a magic number: AddDefaultDefinition(portalId' "Contact Info"' "Telephone"' "Text"' 50' UserVisibilityMode.AdminOnly' dataTypes);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The following statement contains a magic number: AddDefaultDefinition(portalId' "Contact Info"' "Cell"' "Text"' 50' UserVisibilityMode.AdminOnly' dataTypes);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The following statement contains a magic number: AddDefaultDefinition(portalId' "Contact Info"' "Fax"' "Text"' 50' UserVisibilityMode.AdminOnly' dataTypes);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The following statement contains a magic number: AddDefaultDefinition(portalId' "Contact Info"' "Website"' "Text"' 50' UserVisibilityMode.AdminOnly' dataTypes);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,AddDefaultDefinitions,The following statement contains a magic number: AddDefaultDefinition(portalId' "Contact Info"' "IM"' "Text"' 50' UserVisibilityMode.AdminOnly' dataTypes);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,CreateThumbnails,The following statement contains a magic number: CreateThumbnail(fileId' "l"' 64' 64);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,CreateThumbnails,The following statement contains a magic number: CreateThumbnail(fileId' "l"' 64' 64);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,CreateThumbnails,The following statement contains a magic number: CreateThumbnail(fileId' "s"' 50' 50);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,CreateThumbnails,The following statement contains a magic number: CreateThumbnail(fileId' "s"' 50' 50);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,CreateThumbnails,The following statement contains a magic number: CreateThumbnail(fileId' "xs"' 32' 32);
Magic Number,DotNetNuke.Entities.Profile,ProfileController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileController.cs,CreateThumbnails,The following statement contains a magic number: CreateThumbnail(fileId' "xs"' 32' 32);
Magic Number,DotNetNuke.Entities.Profile,ProfileVisibility,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileVisibility.cs,ProfileVisibility,The following statement contains a magic number: var roles = lists[0].Substring(2).TrimEnd(''').Split(''');
Magic Number,DotNetNuke.Entities.Profile,ProfileVisibility,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileVisibility.cs,ProfileVisibility,The following statement contains a magic number: !String.IsNullOrEmpty(lists[0].Substring(2).TrimEnd('''))
Magic Number,DotNetNuke.Entities.Profile,ProfileVisibility,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileVisibility.cs,ProfileVisibility,The following statement contains a magic number: var relationships = lists[1].Substring(2).TrimEnd(''').Split(''');
Magic Number,DotNetNuke.Entities.Profile,ProfileVisibility,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Profile\ProfileVisibility.cs,ProfileVisibility,The following statement contains a magic number: !String.IsNullOrEmpty(lists[1].Substring(2).TrimEnd('''))
Magic Number,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,GetTabSettingsByPortal,The following statement contains a magic number: return CBO.GetCachedObject<Dictionary<int' Hashtable>>(new CacheItemArgs(cacheKey'                                                                                      DataCache.TabCacheTimeOut'                                                                                      DataCache.TabCachePriority)'                          c =>                          {                              var tabSettings = new Dictionary<int' Hashtable>();                              using (var dr = _dataProvider.GetTabSettings(portalId))                              {                                  while (dr.Read())                                  {                                      int tabId = dr.GetInt32(0);                                      Hashtable settings;                                      if (!tabSettings.TryGetValue(tabId' out settings))                                      {                                          settings = new Hashtable();                                          tabSettings[tabId] = settings;                                      }                                        if (!dr.IsDBNull(2))                                      {                                          settings[dr.GetString(1)] = dr.GetString(2);                                      }                                      else                                      {                                          settings[dr.GetString(1)] = "";                                      }                                  }                              }                              return tabSettings;                          });
Magic Number,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,GetTabSettingsByPortal,The following statement contains a magic number: return CBO.GetCachedObject<Dictionary<int' Hashtable>>(new CacheItemArgs(cacheKey'                                                                                      DataCache.TabCacheTimeOut'                                                                                      DataCache.TabCachePriority)'                          c =>                          {                              var tabSettings = new Dictionary<int' Hashtable>();                              using (var dr = _dataProvider.GetTabSettings(portalId))                              {                                  while (dr.Read())                                  {                                      int tabId = dr.GetInt32(0);                                      Hashtable settings;                                      if (!tabSettings.TryGetValue(tabId' out settings))                                      {                                          settings = new Hashtable();                                          tabSettings[tabId] = settings;                                      }                                        if (!dr.IsDBNull(2))                                      {                                          settings[dr.GetString(1)] = dr.GetString(2);                                      }                                      else                                      {                                          settings[dr.GetString(1)] = "";                                      }                                  }                              }                              return tabSettings;                          });
Magic Number,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,DeserializeTab,The following statement contains a magic number: tab.SiteMapPriority = XmlUtils.GetNodeValueSingle(tabNode' "sitemappriority"' (float)0.5);
Magic Number,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,GetPortalTabs,The following statement contains a magic number: var tab = new TabInfo { TabID = -1' TabName = noneSpecifiedText' TabOrder = 0' ParentId = -2 };
Magic Number,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,SerializeTab,The following statement contains a magic number: switch (tab.TabType)              {                  case TabType.Normal:                      urlNode.Attributes.Append(XmlUtils.CreateAttribute(tabXml' "type"' "Normal"));                      break;                  case TabType.Tab:                      urlNode.Attributes.Append(XmlUtils.CreateAttribute(tabXml' "type"' "Tab"));                      //Get the tab being linked to                      TabInfo tempTab = TabController.Instance.GetTab(Int32.Parse(tab.Url)' tab.PortalID' false);                      if (tempTab != null)                      {                          urlNode.InnerXml = tempTab.TabPath;                      }                      break;                  case TabType.File:                      urlNode.Attributes.Append(XmlUtils.CreateAttribute(tabXml' "type"' "File"));                      IFileInfo file = FileManager.Instance.GetFile(Int32.Parse(tab.Url.Substring(7)));                      urlNode.InnerXml = file.RelativePath;                      break;                  case TabType.Url:                      urlNode.Attributes.Append(XmlUtils.CreateAttribute(tabXml' "type"' "Url"));                      break;              }
Magic Number,DotNetNuke.Entities.Tabs,TabInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabInfo.cs,TabInfo,The following statement contains a magic number: SiteMapPriority = 0.5F;
Magic Number,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,DeleteOldestVersionIfTabHasMaxNumberOfVersions,The following statement contains a magic number: var snapShotTabVersion = tabVersionsOrdered.ElementAtOrDefault(maxVersionsAllowed - 2);
Magic Number,DotNetNuke.Entities.Portals.Internal,PortalTemplateIO,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\Internal\PortalTemplateIO.cs,OpenTextReader,The following statement contains a magic number: var retryable = new RetryableAction(                  () => reader = new StreamReader(File.Open(filePath' FileMode.Open))'                  filePath' 10' TimeSpan.FromMilliseconds(50)' 2);
Magic Number,DotNetNuke.Entities.Portals.Internal,PortalTemplateIO,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\Internal\PortalTemplateIO.cs,OpenTextReader,The following statement contains a magic number: var retryable = new RetryableAction(                  () => reader = new StreamReader(File.Open(filePath' FileMode.Open))'                  filePath' 10' TimeSpan.FromMilliseconds(50)' 2);
Magic Number,DotNetNuke.Entities.Portals.Internal,PortalTemplateIO,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\Internal\PortalTemplateIO.cs,OpenTextReader,The following statement contains a magic number: var retryable = new RetryableAction(                  () => reader = new StreamReader(File.Open(filePath' FileMode.Open))'                  filePath' 10' TimeSpan.FromMilliseconds(50)' 2);
Magic Number,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,GetFriendlyQueryString,The following statement contains a magic number: string queryString = queryStringMatch.Groups[2].Value.Replace("&amp;"' "&");
Magic Number,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,Handle404OrException,The following statement contains a magic number: statusCode = 500;
Magic Number,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IsPortalAliasIncorrect,The following statement contains a magic number: checkAlias = checkAlias.Substring(4);
Magic Number,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,IgnoreRequestForWebServer,The following statement contains a magic number: rootPath = rootPath.Substring(rootPath.IndexOf("://"' StringComparison.Ordinal) + 3);
Magic Number,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,SecurityCheck,The following statement contains a magic number: throw new HttpException(404' "Not Found");
Magic Number,DotNetNuke.Entities.Urls,BasicFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\BasicFriendlyUrlProvider.cs,CheckPathLength,The following statement contains a magic number: friendlyPath.Length >= 260
Magic Number,DotNetNuke.Entities.Urls,BasicFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\BasicFriendlyUrlProvider.cs,GetFriendlyQueryString,The following statement contains a magic number: string queryString = queryStringMatch.Groups[2].Value.Replace("&amp;"' "&");
Magic Number,DotNetNuke.Entities.Urls,BasicFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\BasicFriendlyUrlProvider.cs,GetQueryStringDictionary,The following statement contains a magic number: (keyvalue.Length == 2)
Magic Number,DotNetNuke.Entities.Urls,BasicFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\BasicFriendlyUrlProvider.cs,GetQueryStringDictionary,The following statement contains a magic number: (parts.Length == 2)
Magic Number,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,SetPortalCache,The following statement contains a magic number: var absoluteExpiration = DateTime.Now.Add(new TimeSpan(24' 0' 0));
Magic Number,DotNetNuke.Entities.Urls,CacheController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CacheController.cs,StoreCustomAliasesInCache,The following statement contains a magic number: DateTime absoluteExpiration = DateTime.Now.Add(new TimeSpan(24' 0' 0));
Magic Number,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,The following statement contains a magic number: switch (rdr.NodeType)                      {                          case XmlNodeType.Element:                              if (rdr.Name == "parameterRedirect")                              {                                  var tabMessages = new List<string>();                                  int actionCount = 0;                                  //now set up the action                                  string portalIdRaw = rdr.GetAttribute("rulePortalId");                                  if (string.IsNullOrEmpty(portalIdRaw))                                  {                                      portalIdRaw = rdr.GetAttribute("portalId");                                  }                                  int rulePortalId = -1;                                  if (portalIdRaw != null)                                  {                                      Int32.TryParse(portalIdRaw' out rulePortalId);                                  }                                  if (rulePortalId == portalId || rulePortalId == -1 || portalSpecific)                                  //if portal specific' all rules are assumed to belong to the portal                                  {                                      string tabIdRaw = rdr.GetAttribute("tabIds");                                      string tabNames = rdr.GetAttribute("tabNames");                                      string name = rdr.GetAttribute("name");                                      string fromSiteRootRaw = rdr.GetAttribute("fromSiteRoot");                                      string fromDefaultRaw = rdr.GetAttribute("fromDefault");                                      string changeToSiteRootRaw = rdr.GetAttribute("changeToSiteRoot");                                      bool fromDefault;                                      bool fromSiteRoot;                                      bool changeToSiteRoot;                                      bool.TryParse(fromDefaultRaw' out fromDefault);                                      bool.TryParse(fromSiteRootRaw' out fromSiteRoot);                                      bool.TryParse(changeToSiteRootRaw' out changeToSiteRoot);                                      List<int> tabIds = XmlHelpers.TabIdsFromAttributes(tabIdRaw' tabNames' portalId'                                                                                         ref tabMessages);                                      foreach (int tabId in tabIds)                                      {                                          var action = new ParameterRedirectAction                                          {                                              PortalId = portalId'                                              LookFor = rdr.GetAttribute("lookFor")'                                              RedirectTo = rdr.GetAttribute("redirectTo")'                                              Name = name'                                              Action = rdr.GetAttribute("action")'                                              ChangeToSiteRoot = changeToSiteRoot'                                              TabId = tabId                                          };                                          if (fromDefault)                                          {                                              //check for 'fromDefault' attribute                                              action.ForDefaultPage = true;                                              action.TabId = -2;                                          }                                          else                                          {                                              //or support the older convention' which was to include a tabid of -2                                              action.ForDefaultPage = tabId == -2;                                          }                                          if (fromSiteRoot)                                          {                                              action.TabId = -3; //site root marker                                          }                                          List<ParameterRedirectAction> tabActionCol;                                          if (actions.ContainsKey(action.TabId))                                          {                                              tabActionCol = actions[action.TabId];                                          }                                          else                                          {                                              tabActionCol = new List<ParameterRedirectAction>();                                              actions.Add(action.TabId' tabActionCol);                                          }                                          tabActionCol.Add(action);                                          actionCount++;                                      }                                      messages.Add(name + " redirect actions added:" + actionCount.ToString());                                  }                                  if (tabMessages.Count > 0)                                  {                                      messages.AddRange(tabMessages);                                  }                              }                              break;                            case XmlNodeType.EndElement:                              break;                      }
Magic Number,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,The following statement contains a magic number: switch (rdr.NodeType)                      {                          case XmlNodeType.Element:                              if (rdr.Name == "parameterRedirect")                              {                                  var tabMessages = new List<string>();                                  int actionCount = 0;                                  //now set up the action                                  string portalIdRaw = rdr.GetAttribute("rulePortalId");                                  if (string.IsNullOrEmpty(portalIdRaw))                                  {                                      portalIdRaw = rdr.GetAttribute("portalId");                                  }                                  int rulePortalId = -1;                                  if (portalIdRaw != null)                                  {                                      Int32.TryParse(portalIdRaw' out rulePortalId);                                  }                                  if (rulePortalId == portalId || rulePortalId == -1 || portalSpecific)                                  //if portal specific' all rules are assumed to belong to the portal                                  {                                      string tabIdRaw = rdr.GetAttribute("tabIds");                                      string tabNames = rdr.GetAttribute("tabNames");                                      string name = rdr.GetAttribute("name");                                      string fromSiteRootRaw = rdr.GetAttribute("fromSiteRoot");                                      string fromDefaultRaw = rdr.GetAttribute("fromDefault");                                      string changeToSiteRootRaw = rdr.GetAttribute("changeToSiteRoot");                                      bool fromDefault;                                      bool fromSiteRoot;                                      bool changeToSiteRoot;                                      bool.TryParse(fromDefaultRaw' out fromDefault);                                      bool.TryParse(fromSiteRootRaw' out fromSiteRoot);                                      bool.TryParse(changeToSiteRootRaw' out changeToSiteRoot);                                      List<int> tabIds = XmlHelpers.TabIdsFromAttributes(tabIdRaw' tabNames' portalId'                                                                                         ref tabMessages);                                      foreach (int tabId in tabIds)                                      {                                          var action = new ParameterRedirectAction                                          {                                              PortalId = portalId'                                              LookFor = rdr.GetAttribute("lookFor")'                                              RedirectTo = rdr.GetAttribute("redirectTo")'                                              Name = name'                                              Action = rdr.GetAttribute("action")'                                              ChangeToSiteRoot = changeToSiteRoot'                                              TabId = tabId                                          };                                          if (fromDefault)                                          {                                              //check for 'fromDefault' attribute                                              action.ForDefaultPage = true;                                              action.TabId = -2;                                          }                                          else                                          {                                              //or support the older convention' which was to include a tabid of -2                                              action.ForDefaultPage = tabId == -2;                                          }                                          if (fromSiteRoot)                                          {                                              action.TabId = -3; //site root marker                                          }                                          List<ParameterRedirectAction> tabActionCol;                                          if (actions.ContainsKey(action.TabId))                                          {                                              tabActionCol = actions[action.TabId];                                          }                                          else                                          {                                              tabActionCol = new List<ParameterRedirectAction>();                                              actions.Add(action.TabId' tabActionCol);                                          }                                          tabActionCol.Add(action);                                          actionCount++;                                      }                                      messages.Add(name + " redirect actions added:" + actionCount.ToString());                                  }                                  if (tabMessages.Count > 0)                                  {                                      messages.AddRange(tabMessages);                                  }                              }                              break;                            case XmlNodeType.EndElement:                              break;                      }
Magic Number,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,The following statement contains a magic number: switch (rdr.NodeType)                      {                          case XmlNodeType.Element:                              if (rdr.Name == "parameterRedirect")                              {                                  var tabMessages = new List<string>();                                  int actionCount = 0;                                  //now set up the action                                  string portalIdRaw = rdr.GetAttribute("rulePortalId");                                  if (string.IsNullOrEmpty(portalIdRaw))                                  {                                      portalIdRaw = rdr.GetAttribute("portalId");                                  }                                  int rulePortalId = -1;                                  if (portalIdRaw != null)                                  {                                      Int32.TryParse(portalIdRaw' out rulePortalId);                                  }                                  if (rulePortalId == portalId || rulePortalId == -1 || portalSpecific)                                  //if portal specific' all rules are assumed to belong to the portal                                  {                                      string tabIdRaw = rdr.GetAttribute("tabIds");                                      string tabNames = rdr.GetAttribute("tabNames");                                      string name = rdr.GetAttribute("name");                                      string fromSiteRootRaw = rdr.GetAttribute("fromSiteRoot");                                      string fromDefaultRaw = rdr.GetAttribute("fromDefault");                                      string changeToSiteRootRaw = rdr.GetAttribute("changeToSiteRoot");                                      bool fromDefault;                                      bool fromSiteRoot;                                      bool changeToSiteRoot;                                      bool.TryParse(fromDefaultRaw' out fromDefault);                                      bool.TryParse(fromSiteRootRaw' out fromSiteRoot);                                      bool.TryParse(changeToSiteRootRaw' out changeToSiteRoot);                                      List<int> tabIds = XmlHelpers.TabIdsFromAttributes(tabIdRaw' tabNames' portalId'                                                                                         ref tabMessages);                                      foreach (int tabId in tabIds)                                      {                                          var action = new ParameterRedirectAction                                          {                                              PortalId = portalId'                                              LookFor = rdr.GetAttribute("lookFor")'                                              RedirectTo = rdr.GetAttribute("redirectTo")'                                              Name = name'                                              Action = rdr.GetAttribute("action")'                                              ChangeToSiteRoot = changeToSiteRoot'                                              TabId = tabId                                          };                                          if (fromDefault)                                          {                                              //check for 'fromDefault' attribute                                              action.ForDefaultPage = true;                                              action.TabId = -2;                                          }                                          else                                          {                                              //or support the older convention' which was to include a tabid of -2                                              action.ForDefaultPage = tabId == -2;                                          }                                          if (fromSiteRoot)                                          {                                              action.TabId = -3; //site root marker                                          }                                          List<ParameterRedirectAction> tabActionCol;                                          if (actions.ContainsKey(action.TabId))                                          {                                              tabActionCol = actions[action.TabId];                                          }                                          else                                          {                                              tabActionCol = new List<ParameterRedirectAction>();                                              actions.Add(action.TabId' tabActionCol);                                          }                                          tabActionCol.Add(action);                                          actionCount++;                                      }                                      messages.Add(name + " redirect actions added:" + actionCount.ToString());                                  }                                  if (tabMessages.Count > 0)                                  {                                      messages.AddRange(tabMessages);                                  }                              }                              break;                            case XmlNodeType.EndElement:                              break;                      }
Magic Number,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,The following statement contains a magic number: switch (rdr.NodeType)                      {                          case XmlNodeType.Element:                              if (rdr.Name == "parameterRewrite")                              {                                  string portalIdRaw = rdr.GetAttribute("portalId");                                  int rulePortalId = -1;                                  int actionCount = 0;                                  if (portalIdRaw != null)                                  {                                      Int32.TryParse(portalIdRaw' out rulePortalId);                                  }                                  if (rulePortalId == portalId || rulePortalId == -1 || portalId == -1 || portalSpecific)                                  {                                      //now set up the action                                      string tabIdRaw = rdr.GetAttribute("tabIds");                                      string tabNames = rdr.GetAttribute("tabNames");                                      string name = rdr.GetAttribute("name");                                      string fromSiteRootRaw = rdr.GetAttribute("fromSiteRoot");                                      bool fromSiteRoot;                                      bool.TryParse(fromSiteRootRaw' out fromSiteRoot);                                      List<int> tabIds = XmlHelpers.TabIdsFromAttributes(tabIdRaw' tabNames' portalId'                                                                                         ref messages);                                      foreach (int tabId in tabIds)                                      {                                          var action = new ParameterRewriteAction                                          {                                              LookFor = rdr.GetAttribute("lookFor")'                                              RewriteTo = rdr.GetAttribute("rewriteTo")'                                              Name = name'                                              TabId = tabId                                          };                                          if (fromSiteRoot)                                          {                                              action.ForSiteRoot = true;                                              action.TabId = -3;                                          }                                          else                                          {                                              //older rule specified tabid -3 meant site root                                              action.ForSiteRoot = tabId == -3;                                          }                                            action.PortalId = portalId;                                          SharedList<ParameterRewriteAction> tabActionCol;                                          if (actions.ContainsKey(action.TabId))                                          {                                              tabActionCol = actions[action.TabId];                                          }                                          else                                          {                                              tabActionCol = new SharedList<ParameterRewriteAction>();                                              actions.Add(action.TabId' tabActionCol);                                          }                                          tabActionCol.Add(action);                                          actionCount++;                                      }                                      messages.Add(name + " rewrite actions added:" + actionCount.ToString());                                  }                              }                                  break;                            case XmlNodeType.EndElement:                              break;                      }
Magic Number,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,The following statement contains a magic number: switch (rdr.NodeType)                      {                          case XmlNodeType.Element:                              if (rdr.Name == "parameterRewrite")                              {                                  string portalIdRaw = rdr.GetAttribute("portalId");                                  int rulePortalId = -1;                                  int actionCount = 0;                                  if (portalIdRaw != null)                                  {                                      Int32.TryParse(portalIdRaw' out rulePortalId);                                  }                                  if (rulePortalId == portalId || rulePortalId == -1 || portalId == -1 || portalSpecific)                                  {                                      //now set up the action                                      string tabIdRaw = rdr.GetAttribute("tabIds");                                      string tabNames = rdr.GetAttribute("tabNames");                                      string name = rdr.GetAttribute("name");                                      string fromSiteRootRaw = rdr.GetAttribute("fromSiteRoot");                                      bool fromSiteRoot;                                      bool.TryParse(fromSiteRootRaw' out fromSiteRoot);                                      List<int> tabIds = XmlHelpers.TabIdsFromAttributes(tabIdRaw' tabNames' portalId'                                                                                         ref messages);                                      foreach (int tabId in tabIds)                                      {                                          var action = new ParameterRewriteAction                                          {                                              LookFor = rdr.GetAttribute("lookFor")'                                              RewriteTo = rdr.GetAttribute("rewriteTo")'                                              Name = name'                                              TabId = tabId                                          };                                          if (fromSiteRoot)                                          {                                              action.ForSiteRoot = true;                                              action.TabId = -3;                                          }                                          else                                          {                                              //older rule specified tabid -3 meant site root                                              action.ForSiteRoot = tabId == -3;                                          }                                            action.PortalId = portalId;                                          SharedList<ParameterRewriteAction> tabActionCol;                                          if (actions.ContainsKey(action.TabId))                                          {                                              tabActionCol = actions[action.TabId];                                          }                                          else                                          {                                              tabActionCol = new SharedList<ParameterRewriteAction>();                                              actions.Add(action.TabId' tabActionCol);                                          }                                          tabActionCol.Add(action);                                          actionCount++;                                      }                                      messages.Add(name + " rewrite actions added:" + actionCount.ToString());                                  }                              }                                  break;                            case XmlNodeType.EndElement:                              break;                      }
Magic Number,DotNetNuke.Entities.Urls,ExtensionUrlProviderController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProviderController.cs,TransformFriendlyUrlPath,The following statement contains a magic number: status == 0 || status == 200
Magic Number,DotNetNuke.Entities.Urls,ExtensionUrlProviderController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProviderController.cs,GetModuleProviders,The following statement contains a magic number: var moduleProviders = CBO.GetCachedObject<List<ExtensionUrlProvider>>(new CacheItemArgs(cacheKey'                                                                                  60'                                                                                  CacheItemPriority.High'                                                                                  portalId)'                                      c =>                                      {                                          var id = (int)c.Params[0];                                          IDataReader dr = DataProvider.Instance().GetExtensionUrlProviders(id);                                          try                                          {                                              var providers = new List<ExtensionUrlProvider>();                                              var providerConfigs = CBO.FillCollection(dr' new List<ExtensionUrlProviderInfo>()' false);                                                foreach (var providerConfig in providerConfigs)                                              {                                                  var providerType = Reflection.CreateType(providerConfig.ProviderType);                                                  if (providerType == null)                                                  {                                                      continue;                                                  }                                                    var provider = Reflection.CreateObject(providerType) as ExtensionUrlProvider;                                                  if (provider == null)                                                  {                                                      continue;                                                  }                                                    provider.ProviderConfig = providerConfig;                                                  provider.ProviderConfig.PortalId = id;                                                  providers.Add(provider);                                              }                                                if (dr.NextResult())                                              {                                                  //Setup Settings                                                  while (dr.Read())                                                  {                                                      var extensionUrlProviderId = Null.SetNullInteger(dr["ExtensionUrlProviderID"]);                                                      var key = Null.SetNullString(dr["SettingName"]);                                                      var value = Null.SetNullString(dr["SettingValue"]);                                                        var provider = providers.SingleOrDefault(p => p.ProviderConfig.ExtensionUrlProviderId == extensionUrlProviderId);                                                      if (provider != null)                                                      {                                                          provider.ProviderConfig.Settings[key] = value;                                                      }                                                  }                                              }                                                if (dr.NextResult())                                              {                                                  //Setup Tabs                                                  while (dr.Read())                                                  {                                                      var extensionUrlProviderId = Null.SetNullInteger(dr["ExtensionUrlProviderID"]);                                                      var tabId = Null.SetNullInteger(dr["TabID"]);                                                        var provider = providers.SingleOrDefault(p => p.ProviderConfig.ExtensionUrlProviderId == extensionUrlProviderId);                                                      if (provider != null && !provider.ProviderConfig.TabIds.Contains(tabId))                                                      {                                                          provider.ProviderConfig.TabIds.Add(tabId);                                                      }                                                  }                                              }                                                return providers;                                          }                                          finally                                          {                                              //Close reader                                              CBO.CloseDataReader(dr' true);                                          }                                      });
Magic Number,DotNetNuke.Entities.Urls,ExtensionUrlProviderController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProviderController.cs,GetOptionsFromSettings,The following statement contains a magic number: return new FriendlyUrlOptions              {                  PunctuationReplacement = (settings.ReplaceSpaceWith != FriendlyUrlSettings.ReplaceSpaceWithNothing)                                                  ? settings.ReplaceSpaceWith                                                  : String.Empty'                  SpaceEncoding = settings.SpaceEncodingValue'                  MaxUrlPathLength = 200'                  ConvertDiacriticChars = settings.AutoAsciiConvert'                  RegexMatch = settings.RegexMatch'                  IllegalChars = settings.IllegalChars'                  ReplaceChars = settings.ReplaceChars'                  ReplaceDoubleChars = settings.ReplaceDoubleChars'                  ReplaceCharWithChar = settings.ReplaceCharacterDictionary'                  PageExtension = settings.PageExtensionUsageType == PageExtensionUsageType.Never ? "" : settings.PageExtension              };
Magic Number,DotNetNuke.Entities.Urls,RedirectController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectController.cs,CheckForParameterRedirect,The following statement contains a magic number: List<ParameterRedirectAction> defaultRedirects = redirectActions[-2];
Magic Number,DotNetNuke.Entities.Urls,RedirectController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectController.cs,CheckForParameterRedirect,The following statement contains a magic number: redirectActions.ContainsKey(-2) && result.OriginalPath.ToLowerInvariant().Contains("default.aspx")
Magic Number,DotNetNuke.Entities.Urls,RedirectController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectController.cs,CheckForParameterRedirect,The following statement contains a magic number: List<ParameterRedirectAction> siteRootRedirects = redirectActions[-3];
Magic Number,DotNetNuke.Entities.Urls,RedirectController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectController.cs,CheckForParameterRedirect,The following statement contains a magic number: redirectActions.ContainsKey(-3)
Magic Number,DotNetNuke.Entities.Urls,RedirectController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectController.cs,CheckForParameterRedirect,The following statement contains a magic number: !success && parmRedirect.TabId == -3
Magic Number,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,GetUser,The following statement contains a magic number: var vanityUrlLookupDictionary = CBO.GetCachedObject<Dictionary<string' UserInfo>>(new CacheItemArgs(cacheKey' 20' CacheItemPriority.High' portalId)'                                                                           c => new Dictionary<string' UserInfo>());
Magic Number,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,IdentifyByRegEx,The following statement contains a magic number: var sesUrlParams = sesMatch.Groups[2].Value;
Magic Number,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,RewriteParameters,The following statement contains a magic number: cultureId = cultureMatch.Groups[1].Value + "-" +                                              cultureMatch.Groups[2].ToString().ToUpper();
Magic Number,DotNetNuke.Entities.Urls,RewriterUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriterUtils.cs,ResolveUrl,The following statement contains a magic number: return appPath + "/" + url.Substring(2);
Magic Number,DotNetNuke.Entities.Urls,RewriterUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriterUtils.cs,ResolveUrl,The following statement contains a magic number: return "/" + url.Substring(2);
Magic Number,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,BuildPortalAliasesDictionary,The following statement contains a magic number: string noWWWVersion = plainAlias.Substring(4);
Magic Number,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,BuildPortalAliasesDictionary,The following statement contains a magic number: plainAlias.Length > 4
Magic Number,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,BuildTabDictionary,The following statement contains a magic number: pathSizes = new PathSizes { MinAliasDepth = 10' MinTabPathDepth = 10' MaxAliasDepth = 0' MaxTabPathDepth = 0 };
Magic Number,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,BuildTabDictionary,The following statement contains a magic number: pathSizes = new PathSizes { MinAliasDepth = 10' MinTabPathDepth = 10' MaxAliasDepth = 0' MaxTabPathDepth = 0 };
Magic Number,DotNetNuke.Entities.Urls,UrlRewriterUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\UrlRewriterUtils.cs,GetOptionsFromSettings,The following statement contains a magic number: var options = new FriendlyUrlOptions                  {                      PunctuationReplacement = (settings.ReplaceSpaceWith != FriendlyUrlSettings.ReplaceSpaceWithNothing)                                                       ? settings.ReplaceSpaceWith                                                       : String.Empty'                      SpaceEncoding = settings.SpaceEncodingValue'                      MaxUrlPathLength = 200'                      ConvertDiacriticChars = settings.AutoAsciiConvert'                      RegexMatch = settings.RegexMatch'                      IllegalChars = settings.IllegalChars'                      ReplaceChars = settings.ReplaceChars'                      ReplaceDoubleChars = settings.ReplaceDoubleChars'                      ReplaceCharWithChar = settings.ReplaceCharacterDictionary'                      PageExtension = (settings.PageExtensionUsageType == PageExtensionUsageType.Never)                                               ? ""                                               : settings.PageExtension                  };
Magic Number,DotNetNuke.Entities.Users.Membership,MembershipPasswordController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Membership\MembershipPasswordController.cs,AddPasswordHistory,The following statement contains a magic number: var inputBuffer = new byte[bytePassword.Length + 16];
Magic Number,DotNetNuke.Entities.Users.Membership,MembershipPasswordController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Membership\MembershipPasswordController.cs,AddPasswordHistory,The following statement contains a magic number: Buffer.BlockCopy(newSalt' 0' inputBuffer' bytePassword.Length' 16);
Magic Number,DotNetNuke.Entities.Users.Membership,MembershipPasswordController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Membership\MembershipPasswordController.cs,GetRandomSaltValue,The following statement contains a magic number: var bSalt = new byte[16];
Magic Number,DotNetNuke.Entities.Users.Membership,MembershipPasswordController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Membership\MembershipPasswordController.cs,IsPasswordPreviouslyUsed,The following statement contains a magic number: var inputBuffer = new byte[bytePassword.Length + 16];
Magic Number,DotNetNuke.Entities.Users.Membership,MembershipPasswordController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Membership\MembershipPasswordController.cs,IsPasswordPreviouslyUsed,The following statement contains a magic number: Buffer.BlockCopy(oldSalt' 0' inputBuffer' bytePassword.Length' 16);
Magic Number,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,GetScriptPath,The following statement contains a magic number: return ("~/Resources/libraries/" + js.LibraryName + "/" + Globals.FormatVersion(js.Version' "00"' 3' "_") + "/" + js.FileName);
Magic Number,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,GetScriptVersions,The following statement contains a magic number: List<string> orderedScripts = (from object item in HttpContextSource.Current.Items.Keys                                             where item.ToString().StartsWith(ScriptPrefix)                                             select item.ToString().Substring(4)).ToList();
Magic Number,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,RegisterScript,The following statement contains a magic number: ClientResourceManager.RegisterScript(page' GetScriptPath(jsl)' GetFileOrder(jsl)' GetScriptLocation(jsl)' jsl.LibraryName' jsl.Version.ToString(3));
Magic Number,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,RegisterScript,The following statement contains a magic number: var fallback = new DnnJsIncludeFallback(jsl.ObjectName' VirtualPathUtility.ToAbsolute("~/Resources/libraries/" + jsl.LibraryName + "/" + Globals.FormatVersion(jsl.Version' "00"' 3' "_") + "/" + jsl.FileName));
Magic Number,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,HandlePreInstallorLegacyItemRequests,The following statement contains a magic number: List<string> legacyScripts = (from object item in HttpContextSource.Current.Items.Keys                                            where item.ToString().StartsWith(LegacyPrefix)                                            select item.ToString().Substring(7)).ToList();
Magic Number,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,RegisterClientReference,The following statement contains a magic number: switch (reference)              {                  case ClientAPI.ClientNamespaceReferences.dnn:                  case ClientAPI.ClientNamespaceReferences.dnn_dom:                      if (HttpContextSource.Current.Items.Contains(LegacyPrefix + "dnn.js"))                      {                          break;                      }                        ClientResourceManager.RegisterScript(page' ClientAPI.ScriptPath + "dnn.js"' 12);                      HttpContextSource.Current.Items.Add(LegacyPrefix + "dnn.js"' true);                      page.ClientScript.RegisterClientScriptBlock(page.GetType()' "dnn.js"' "");                        if (!ClientAPI.BrowserSupportsFunctionality(ClientAPI.ClientFunctionality.SingleCharDelimiters))                      {                          ClientAPI.RegisterClientVariable(page' "__scdoff"' "1"' true);                      }                        if (!ClientAPI.UseExternalScripts)                      {                          ClientAPI.RegisterEmbeddedResource(page' "dnn.scripts.js"' typeof (ClientAPI));                      }                      break;                  case ClientAPI.ClientNamespaceReferences.dnn_dom_positioning:                      RegisterClientReference(page' ClientAPI.ClientNamespaceReferences.dnn);                      ClientResourceManager.RegisterScript(page' ClientAPI.ScriptPath + "dnn.dom.positioning.js"' 13);                      break;              }
Magic Number,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,RegisterClientReference,The following statement contains a magic number: switch (reference)              {                  case ClientAPI.ClientNamespaceReferences.dnn:                  case ClientAPI.ClientNamespaceReferences.dnn_dom:                      if (HttpContextSource.Current.Items.Contains(LegacyPrefix + "dnn.js"))                      {                          break;                      }                        ClientResourceManager.RegisterScript(page' ClientAPI.ScriptPath + "dnn.js"' 12);                      HttpContextSource.Current.Items.Add(LegacyPrefix + "dnn.js"' true);                      page.ClientScript.RegisterClientScriptBlock(page.GetType()' "dnn.js"' "");                        if (!ClientAPI.BrowserSupportsFunctionality(ClientAPI.ClientFunctionality.SingleCharDelimiters))                      {                          ClientAPI.RegisterClientVariable(page' "__scdoff"' "1"' true);                      }                        if (!ClientAPI.UseExternalScripts)                      {                          ClientAPI.RegisterEmbeddedResource(page' "dnn.scripts.js"' typeof (ClientAPI));                      }                      break;                  case ClientAPI.ClientNamespaceReferences.dnn_dom_positioning:                      RegisterClientReference(page' ClientAPI.ClientNamespaceReferences.dnn);                      ClientResourceManager.RegisterScript(page' ClientAPI.ScriptPath + "dnn.dom.positioning.js"' 13);                      break;              }
Magic Number,DotNetNuke.Framework.JavaScriptLibraries,JavaScriptLibraryController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScriptLibraryController.cs,SaveLibrary,The following statement contains a magic number: library.JavaScriptLibraryID = DataProvider.Instance().ExecuteScalar<int>("SaveJavaScriptLibrary"'                                                           library.JavaScriptLibraryID'                                                          library.PackageID'                                                          library.LibraryName'                                                          library.Version.ToString(3)'                                                          library.FileName'                                                          library.ObjectName'                                                          library.PreferredScriptLocation'                                                          library.CDNPath);
Magic Number,DotNetNuke.Framework,jQuery,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\jQuery.cs,KeepAlive,The following statement contains a magic number: cookieTimeout = 5;
Magic Number,DotNetNuke.Framework,jQuery,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\jQuery.cs,KeepAlive,The following statement contains a magic number: cookieTimeout > 5
Magic Number,DotNetNuke.Framework,jQuery,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\jQuery.cs,KeepAlive,The following statement contains a magic number: var seconds = (cookieTimeout*60 - 30)*1000;
Magic Number,DotNetNuke.Framework,jQuery,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\jQuery.cs,KeepAlive,The following statement contains a magic number: var seconds = (cookieTimeout*60 - 30)*1000;
Magic Number,DotNetNuke.Framework,jQuery,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\jQuery.cs,KeepAlive,The following statement contains a magic number: var seconds = (cookieTimeout*60 - 30)*1000;
Magic Number,DotNetNuke.Framework,PageBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\PageBase.cs,OnError,The following statement contains a magic number: statusCode == 404
Magic Number,DotNetNuke.Framework,PageBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\PageBase.cs,LocalizeControl,The following statement contains a magic number: (match.Groups[match.Groups.Count - 2].Value.IndexOf("~"' StringComparison.Ordinal) == -1)
Magic Number,DotNetNuke.Framework,PageBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\PageBase.cs,LocalizeControl,The following statement contains a magic number: var resolvedUrl = Page.ResolveUrl(match.Groups[match.Groups.Count - 2].Value);
Magic Number,DotNetNuke.Framework,PageBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\PageBase.cs,LocalizeControl,The following statement contains a magic number: value = value.Replace(match.Groups[match.Groups.Count - 2].Value' resolvedUrl);
Magic Number,DotNetNuke.Security,FIPSCompliant,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\FIPSCompliant.cs,EncryptAES,The following statement contains a magic number: Byte[] derivedKey = derivedBytes.GetBytes(32);
Magic Number,DotNetNuke.Security,FIPSCompliant,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\FIPSCompliant.cs,EncryptAES,The following statement contains a magic number: Byte[] derivedInitVector = derivedBytes.GetBytes(16);
Magic Number,DotNetNuke.Security,FIPSCompliant,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\FIPSCompliant.cs,EncryptAES,The following statement contains a magic number: aesProvider.KeySize = 256;
Magic Number,DotNetNuke.Security,FIPSCompliant,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\FIPSCompliant.cs,VerifyAesSettings,The following statement contains a magic number: passPhrase.Length < 8
Magic Number,DotNetNuke.Security,FIPSCompliant,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\FIPSCompliant.cs,VerifyAesSettings,The following statement contains a magic number: salt.Length < 8
Magic Number,DotNetNuke.Security,FIPSCompliant,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\FIPSCompliant.cs,DecryptAES,The following statement contains a magic number: Byte[] derivedKey = derivedBytes.GetBytes(32);
Magic Number,DotNetNuke.Security,FIPSCompliant,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\FIPSCompliant.cs,DecryptAES,The following statement contains a magic number: Byte[] derivedInitVector = derivedBytes.GetBytes(16);
Magic Number,DotNetNuke.Security,FIPSCompliant,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\FIPSCompliant.cs,DecryptAES,The following statement contains a magic number: aesProvider.KeySize = 256;
Magic Number,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,SignOut,The following statement contains a magic number: cookie.Expires = DateTime.Now.AddYears(-30);
Magic Number,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,SignOut,The following statement contains a magic number: cookie.Expires = DateTime.Now.AddYears(-30);
Magic Number,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,SignOut,The following statement contains a magic number: auth.Expires = DateTime.Now.AddYears(-30);
Magic Number,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,GeneratePassword,The following statement contains a magic number: return GeneratePassword(MinPasswordLength + 4);
Magic Number,DotNetNuke.Security.Permissions,DesktopModulePermissionInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\DesktopModulePermissionInfo.cs,GetHashCode,The following statement contains a magic number: return (_desktopModulePermissionID*397) ^ _portalDesktopModuleID;
Magic Number,DotNetNuke.Security.Permissions,ModulePermissionInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\ModulePermissionInfo.cs,GetHashCode,The following statement contains a magic number: return (_moduleID*397) ^ _modulePermissionID;
Magic Number,DotNetNuke.Services.Assets,SortProperties,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\SortProperties.cs,Parse,The following statement contains a magic number: se.Length == 2
Magic Number,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,ApplyOrder,The following statement contains a magic number: var result = typeof(Queryable).GetMethods().Single(                      method => method.Name == methodName                              && method.IsGenericMethodDefinition                              && method.GetGenericArguments().Length == 2                              && method.GetParameters().Length == 2)                      .MakeGenericMethod(typeof(T)' property.PropertyType)                      .Invoke(null' new object[] { source' lambda });
Magic Number,DotNetNuke.Services.Assets,AssetManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Assets\AssetManager.cs,ApplyOrder,The following statement contains a magic number: var result = typeof(Queryable).GetMethods().Single(                      method => method.Name == methodName                              && method.IsGenericMethodDefinition                              && method.GetGenericArguments().Length == 2                              && method.GetParameters().Length == 2)                      .MakeGenericMethod(typeof(T)' property.PropertyType)                      .Invoke(null' new object[] { source' lambda });
Magic Number,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,OAuthClientBase,The following statement contains a magic number: AuthTokenExpiry = new TimeSpan(14' 0' 0' 0);
Magic Number,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,GenerateSignatureBase,The following statement contains a magic number: !((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443))
Magic Number,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,GenerateSignatureBase,The following statement contains a magic number: !((url.Scheme == "http" && url.Port == 80) || (url.Scheme == "https" && url.Port == 443))
Magic Number,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,GenerateTimeStamp,The following statement contains a magic number: TimeSpan ts = DateTime.UtcNow - new DateTime(1970' 1' 1' 0' 0' 0' 0);
Magic Number,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,GenerateNonce,The following statement contains a magic number: return random.Next(123400' 9999999).ToString(CultureInfo.InvariantCulture);
Magic Number,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,GenerateNonce,The following statement contains a magic number: return random.Next(123400' 9999999).ToString(CultureInfo.InvariantCulture);
Magic Number,DotNetNuke.Services.Authentication.OAuth,OAuthClientBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthClientBase.cs,RemoveToken,The following statement contains a magic number: var authTokenCookie = new HttpCookie(AuthTokenName)              {                  Expires = DateTime.Now.AddDays(-30)'                  Path = (!string.IsNullOrEmpty(Globals.ApplicationPath) ? Globals.ApplicationPath : "/")              };
Magic Number,DotNetNuke.Services.Authentication.OAuth,OAuthLoginBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Authentication\OAuth\OAuthLoginBase.cs,OnLoad,The following statement contains a magic number: HttpContext.Current.Response.Cookies.Set(new HttpCookie("returnurl"' RedirectURL)                  {                      Expires = DateTime.Now.AddMinutes(5)'                      Path = (!string.IsNullOrEmpty(Globals.ApplicationPath) ? Globals.ApplicationPath : "/")                  });
Magic Number,DotNetNuke.Services.Cryptography,FipsCompilanceCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\FipsCompilanceCryptographyProvider.cs,EncryptParameter,The following statement contains a magic number: passphrase = passphrase + "XXXXXXXXXXXXXXXX".Substring(0' 16 - passphrase.Length);
Magic Number,DotNetNuke.Services.Cryptography,FipsCompilanceCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\FipsCompilanceCryptographyProvider.cs,EncryptParameter,The following statement contains a magic number: passphrase.Length < 16
Magic Number,DotNetNuke.Services.Cryptography,FipsCompilanceCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\FipsCompilanceCryptographyProvider.cs,EncryptParameter,The following statement contains a magic number: byte[] byteKey = Encoding.UTF8.GetBytes(passphrase.Substring(0' 8));
Magic Number,DotNetNuke.Services.Cryptography,FipsCompilanceCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\FipsCompilanceCryptographyProvider.cs,EncryptParameter,The following statement contains a magic number: byte[] byteVector = Encoding.UTF8.GetBytes(passphrase.Substring(passphrase.Length - 8' 8));
Magic Number,DotNetNuke.Services.Cryptography,FipsCompilanceCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\FipsCompilanceCryptographyProvider.cs,EncryptParameter,The following statement contains a magic number: byte[] byteVector = Encoding.UTF8.GetBytes(passphrase.Substring(passphrase.Length - 8' 8));
Magic Number,DotNetNuke.Services.Cryptography,FipsCompilanceCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\FipsCompilanceCryptographyProvider.cs,DecryptParameter,The following statement contains a magic number: passphrase = passphrase + "XXXXXXXXXXXXXXXX".Substring(0' 16 - passphrase.Length);
Magic Number,DotNetNuke.Services.Cryptography,FipsCompilanceCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\FipsCompilanceCryptographyProvider.cs,DecryptParameter,The following statement contains a magic number: passphrase.Length < 16
Magic Number,DotNetNuke.Services.Cryptography,FipsCompilanceCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\FipsCompilanceCryptographyProvider.cs,DecryptParameter,The following statement contains a magic number: byte[] byteKey = Encoding.UTF8.GetBytes(passphrase.Substring(0' 8));
Magic Number,DotNetNuke.Services.Cryptography,FipsCompilanceCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\FipsCompilanceCryptographyProvider.cs,DecryptParameter,The following statement contains a magic number: byte[] byteVector = Encoding.UTF8.GetBytes(passphrase.Substring(passphrase.Length - 8' 8));
Magic Number,DotNetNuke.Services.Cryptography,FipsCompilanceCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\FipsCompilanceCryptographyProvider.cs,DecryptParameter,The following statement contains a magic number: byte[] byteVector = Encoding.UTF8.GetBytes(passphrase.Substring(passphrase.Length - 8' 8));
Magic Number,DotNetNuke.Services.Cryptography,FipsCompilanceCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\FipsCompilanceCryptographyProvider.cs,EncryptString,The following statement contains a magic number: byte[] trimmedBytes = new byte[24];
Magic Number,DotNetNuke.Services.Cryptography,FipsCompilanceCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\FipsCompilanceCryptographyProvider.cs,EncryptString,The following statement contains a magic number: Buffer.BlockCopy(tdesKey' 0' trimmedBytes' 0' 24);
Magic Number,DotNetNuke.Services.Cryptography,FipsCompilanceCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\FipsCompilanceCryptographyProvider.cs,DecryptString,The following statement contains a magic number: byte[] trimmedBytes = new byte[24];
Magic Number,DotNetNuke.Services.Cryptography,FipsCompilanceCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\FipsCompilanceCryptographyProvider.cs,DecryptString,The following statement contains a magic number: Buffer.BlockCopy(tdesKey' 0' trimmedBytes' 0' 24);
Magic Number,DotNetNuke.Services.Cryptography,CoreCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\CoreCryptographyProvider.cs,EncryptParameter,The following statement contains a magic number: passphrase = passphrase + "XXXXXXXXXXXXXXXX".Substring(0' 16 - passphrase.Length);
Magic Number,DotNetNuke.Services.Cryptography,CoreCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\CoreCryptographyProvider.cs,EncryptParameter,The following statement contains a magic number: passphrase.Length < 16
Magic Number,DotNetNuke.Services.Cryptography,CoreCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\CoreCryptographyProvider.cs,EncryptParameter,The following statement contains a magic number: byte[] byteKey = Encoding.UTF8.GetBytes(passphrase.Substring(0' 8));
Magic Number,DotNetNuke.Services.Cryptography,CoreCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\CoreCryptographyProvider.cs,EncryptParameter,The following statement contains a magic number: byte[] byteVector = Encoding.UTF8.GetBytes(passphrase.Substring(passphrase.Length - 8' 8));
Magic Number,DotNetNuke.Services.Cryptography,CoreCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\CoreCryptographyProvider.cs,EncryptParameter,The following statement contains a magic number: byte[] byteVector = Encoding.UTF8.GetBytes(passphrase.Substring(passphrase.Length - 8' 8));
Magic Number,DotNetNuke.Services.Cryptography,CoreCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\CoreCryptographyProvider.cs,DecryptParameter,The following statement contains a magic number: passphrase = passphrase + "XXXXXXXXXXXXXXXX".Substring(0' 16 - passphrase.Length);
Magic Number,DotNetNuke.Services.Cryptography,CoreCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\CoreCryptographyProvider.cs,DecryptParameter,The following statement contains a magic number: passphrase.Length < 16
Magic Number,DotNetNuke.Services.Cryptography,CoreCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\CoreCryptographyProvider.cs,DecryptParameter,The following statement contains a magic number: byte[] byteKey = Encoding.UTF8.GetBytes(passphrase.Substring(0' 8));
Magic Number,DotNetNuke.Services.Cryptography,CoreCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\CoreCryptographyProvider.cs,DecryptParameter,The following statement contains a magic number: byte[] byteVector = Encoding.UTF8.GetBytes(passphrase.Substring(passphrase.Length - 8' 8));
Magic Number,DotNetNuke.Services.Cryptography,CoreCryptographyProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cryptography\CoreCryptographyProvider.cs,DecryptParameter,The following statement contains a magic number: byte[] byteVector = Encoding.UTF8.GetBytes(passphrase.Substring(passphrase.Length - 8' 8));
Magic Number,DotNetNuke.Services.Exceptions,BasePortalException,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\BasePortalException.cs,InitializePrivateVariables,The following statement contains a magic number: AssemblyVersion = DotNetNukeContext.Current.Application.Version.ToString(3);
Magic Number,DotNetNuke.Services.Exceptions,Exceptions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\Exceptions.cs,ProcessHttpException,The following statement contains a magic number: var exc = new HttpException(404' notFoundErrorString);
Magic Number,DotNetNuke.Services.Exceptions,Exceptions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\Exceptions.cs,ProcessHttpException,The following statement contains a magic number: var exc = new HttpException(404' notFoundErrorString);
Magic Number,DotNetNuke.Services.Exceptions,Exceptions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\Exceptions.cs,ProcessHttpException,The following statement contains a magic number: var exc = new HttpException(404' notFoundErrorString);
Magic Number,DotNetNuke.Services.FileSystem,FileVersionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileVersionController.cs,AddFileVersion,The following statement contains a magic number: var buffer = new byte[16 * 1024];
Magic Number,DotNetNuke.Services.FileSystem,FileVersionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileVersionController.cs,AddFileVersion,The following statement contains a magic number: var buffer = new byte[16 * 1024];
Magic Number,DotNetNuke.Services.FileSystem,FileVersionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileVersionController.cs,MaxFileVersions,The following statement contains a magic number: return PortalController.GetPortalSettingAsInteger("MaxFileVersions"' portalId' 5);
Magic Number,DotNetNuke.Services.FileSystem,DatabaseFolderProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\Providers\DatabaseFolderProvider.cs,UpdateFileInternal,The following statement contains a magic number: var buffer = new byte[16 * 1024];
Magic Number,DotNetNuke.Services.FileSystem,DatabaseFolderProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\Providers\DatabaseFolderProvider.cs,UpdateFileInternal,The following statement contains a magic number: var buffer = new byte[16 * 1024];
Magic Number,DotNetNuke.Services.FileSystem,DatabaseFolderProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\Providers\DatabaseFolderProvider.cs,UpdateFileContent,The following statement contains a magic number: var buffer = new byte[16 * 1024];
Magic Number,DotNetNuke.Services.FileSystem,DatabaseFolderProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\Providers\DatabaseFolderProvider.cs,UpdateFileContent,The following statement contains a magic number: var buffer = new byte[16 * 1024];
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,RotateFlipImage,The following statement contains a magic number: !image.PropertyIdList.Any(x => x == 274)
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,RotateFlipImage,The following statement contains a magic number: var orientation = image.GetPropertyItem(274);
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,RotateFlipImage,The following statement contains a magic number: var newOrientation = new byte[2];
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,OrientationToFlipType,The following statement contains a magic number: switch (int.Parse(orientation))              {                  case 1:                      return RotateFlipType.RotateNoneFlipNone;                  case 2:                      return RotateFlipType.RotateNoneFlipX;                  case 3:                      return RotateFlipType.Rotate180FlipNone;                  case 4:                      return RotateFlipType.Rotate180FlipX;                  case 5:                      return RotateFlipType.Rotate90FlipX;                  case 6:                      return RotateFlipType.Rotate90FlipNone;                  case 7:                      return RotateFlipType.Rotate270FlipX;                  case 8:                      return RotateFlipType.Rotate270FlipNone;                  default:                      return RotateFlipType.RotateNoneFlipNone;              }
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,OrientationToFlipType,The following statement contains a magic number: switch (int.Parse(orientation))              {                  case 1:                      return RotateFlipType.RotateNoneFlipNone;                  case 2:                      return RotateFlipType.RotateNoneFlipX;                  case 3:                      return RotateFlipType.Rotate180FlipNone;                  case 4:                      return RotateFlipType.Rotate180FlipX;                  case 5:                      return RotateFlipType.Rotate90FlipX;                  case 6:                      return RotateFlipType.Rotate90FlipNone;                  case 7:                      return RotateFlipType.Rotate270FlipX;                  case 8:                      return RotateFlipType.Rotate270FlipNone;                  default:                      return RotateFlipType.RotateNoneFlipNone;              }
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,OrientationToFlipType,The following statement contains a magic number: switch (int.Parse(orientation))              {                  case 1:                      return RotateFlipType.RotateNoneFlipNone;                  case 2:                      return RotateFlipType.RotateNoneFlipX;                  case 3:                      return RotateFlipType.Rotate180FlipNone;                  case 4:                      return RotateFlipType.Rotate180FlipX;                  case 5:                      return RotateFlipType.Rotate90FlipX;                  case 6:                      return RotateFlipType.Rotate90FlipNone;                  case 7:                      return RotateFlipType.Rotate270FlipX;                  case 8:                      return RotateFlipType.Rotate270FlipNone;                  default:                      return RotateFlipType.RotateNoneFlipNone;              }
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,OrientationToFlipType,The following statement contains a magic number: switch (int.Parse(orientation))              {                  case 1:                      return RotateFlipType.RotateNoneFlipNone;                  case 2:                      return RotateFlipType.RotateNoneFlipX;                  case 3:                      return RotateFlipType.Rotate180FlipNone;                  case 4:                      return RotateFlipType.Rotate180FlipX;                  case 5:                      return RotateFlipType.Rotate90FlipX;                  case 6:                      return RotateFlipType.Rotate90FlipNone;                  case 7:                      return RotateFlipType.Rotate270FlipX;                  case 8:                      return RotateFlipType.Rotate270FlipNone;                  default:                      return RotateFlipType.RotateNoneFlipNone;              }
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,OrientationToFlipType,The following statement contains a magic number: switch (int.Parse(orientation))              {                  case 1:                      return RotateFlipType.RotateNoneFlipNone;                  case 2:                      return RotateFlipType.RotateNoneFlipX;                  case 3:                      return RotateFlipType.Rotate180FlipNone;                  case 4:                      return RotateFlipType.Rotate180FlipX;                  case 5:                      return RotateFlipType.Rotate90FlipX;                  case 6:                      return RotateFlipType.Rotate90FlipNone;                  case 7:                      return RotateFlipType.Rotate270FlipX;                  case 8:                      return RotateFlipType.Rotate270FlipNone;                  default:                      return RotateFlipType.RotateNoneFlipNone;              }
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,OrientationToFlipType,The following statement contains a magic number: switch (int.Parse(orientation))              {                  case 1:                      return RotateFlipType.RotateNoneFlipNone;                  case 2:                      return RotateFlipType.RotateNoneFlipX;                  case 3:                      return RotateFlipType.Rotate180FlipNone;                  case 4:                      return RotateFlipType.Rotate180FlipX;                  case 5:                      return RotateFlipType.Rotate90FlipX;                  case 6:                      return RotateFlipType.Rotate90FlipNone;                  case 7:                      return RotateFlipType.Rotate270FlipX;                  case 8:                      return RotateFlipType.Rotate270FlipNone;                  default:                      return RotateFlipType.RotateNoneFlipNone;              }
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,OrientationToFlipType,The following statement contains a magic number: switch (int.Parse(orientation))              {                  case 1:                      return RotateFlipType.RotateNoneFlipNone;                  case 2:                      return RotateFlipType.RotateNoneFlipX;                  case 3:                      return RotateFlipType.Rotate180FlipNone;                  case 4:                      return RotateFlipType.Rotate180FlipX;                  case 5:                      return RotateFlipType.Rotate90FlipX;                  case 6:                      return RotateFlipType.Rotate90FlipNone;                  case 7:                      return RotateFlipType.Rotate270FlipX;                  case 8:                      return RotateFlipType.Rotate270FlipNone;                  default:                      return RotateFlipType.RotateNoneFlipNone;              }
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,GetFile,The following statement contains a magic number: var intCacheTimeout = 20 * Convert.ToInt32(GetPerformanceSetting());
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,WriteFile,The following statement contains a magic number: const int bufferSize = 4096;
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,WriteStream,The following statement contains a magic number: var bytBuffer = new byte[10000];
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,WriteStream,The following statement contains a magic number: var intLength = objStream.Read(bytBuffer' 0' 10000);
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,WriteStream,The following statement contains a magic number: intLength = objStream.Read(bytBuffer' 0' 10000);
Magic Number,DotNetNuke.Services.FileSystem,FileManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FileManager.cs,ValidMetadata,The following statement contains a magic number: !string.IsNullOrEmpty(file.Title) && file.Title.Length > 256
Magic Number,DotNetNuke.Services.FileSystem,FolderManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderManager.cs,GetFoldersByPermissionSortedCallBack,The following statement contains a magic number: var userId = (int)cacheItemArgs.ParamList[2];
Magic Number,DotNetNuke.Services.FileSystem,FolderMappingController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\FolderMappings\FolderMappingController.cs,GetFolderMappingSettings,The following statement contains a magic number: var intCacheTimeout = 20 * Convert.ToInt32(Host.PerformanceSetting);
Magic Number,DotNetNuke.Services.FileSystem,StandardFolderProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\FileSystem\Providers\StandardFolderProvider.cs,UpdateFile,The following statement contains a magic number: var arrData = new byte[2048];
Magic Number,DotNetNuke.Services.GeneratedImage,IPCount,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\IPCount.cs,IPCount,The following statement contains a magic number: PurgeInterval = new TimeSpan(0' 10' 0);
Magic Number,DotNetNuke.Services.GeneratedImage,IPCount,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\IPCount.cs,IPCount,The following statement contains a magic number: MaxCount = 500;
Magic Number,DotNetNuke.Services.GeneratedImage,DiskImageStore,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DiskImageStore.cs,DiskImageStore,The following statement contains a magic number: PurgeInterval = new TimeSpan(0' 5' 0);
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,DnnImageHandler,The following statement contains a magic number: ImageCompression = 95;
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,DnnImageHandler,The following statement contains a magic number: DiskImageStore.PurgeInterval = new TimeSpan(0' 3' 0);
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,DnnImageHandler,The following statement contains a magic number: IPCountPurgeInterval = new TimeSpan(0' 5' 0);
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,DnnImageHandler,The following statement contains a magic number: IPCountMaxCount = 500;
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,DnnImageHandler,The following statement contains a magic number: ClientCacheExpiration = new TimeSpan(0' 10' 0);
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: switch (size)                  {                      case "xxs":                          width = 16;                          height = 16;                          break;                      case "xs":                          width = 32;                          height = 32;                          break;                      case "s":                          width = 50;                          height = 50;                          break;                      case "l":                          width = 64;                          height = 64;                          break;                      case "xl":                          width = 128;                          height = 128;                          break;                      case "xxl":                          width = 256;                          height = 256;                          break;                  }
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: switch (size)                  {                      case "xxs":                          width = 16;                          height = 16;                          break;                      case "xs":                          width = 32;                          height = 32;                          break;                      case "s":                          width = 50;                          height = 50;                          break;                      case "l":                          width = 64;                          height = 64;                          break;                      case "xl":                          width = 128;                          height = 128;                          break;                      case "xxl":                          width = 256;                          height = 256;                          break;                  }
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: switch (size)                  {                      case "xxs":                          width = 16;                          height = 16;                          break;                      case "xs":                          width = 32;                          height = 32;                          break;                      case "s":                          width = 50;                          height = 50;                          break;                      case "l":                          width = 64;                          height = 64;                          break;                      case "xl":                          width = 128;                          height = 128;                          break;                      case "xxl":                          width = 256;                          height = 256;                          break;                  }
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: switch (size)                  {                      case "xxs":                          width = 16;                          height = 16;                          break;                      case "xs":                          width = 32;                          height = 32;                          break;                      case "s":                          width = 50;                          height = 50;                          break;                      case "l":                          width = 64;                          height = 64;                          break;                      case "xl":                          width = 128;                          height = 128;                          break;                      case "xxl":                          width = 256;                          height = 256;                          break;                  }
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: switch (size)                  {                      case "xxs":                          width = 16;                          height = 16;                          break;                      case "xs":                          width = 32;                          height = 32;                          break;                      case "s":                          width = 50;                          height = 50;                          break;                      case "l":                          width = 64;                          height = 64;                          break;                      case "xl":                          width = 128;                          height = 128;                          break;                      case "xxl":                          width = 256;                          height = 256;                          break;                  }
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: switch (size)                  {                      case "xxs":                          width = 16;                          height = 16;                          break;                      case "xs":                          width = 32;                          height = 32;                          break;                      case "s":                          width = 50;                          height = 50;                          break;                      case "l":                          width = 64;                          height = 64;                          break;                      case "xl":                          width = 128;                          height = 128;                          break;                      case "xxl":                          width = 256;                          height = 256;                          break;                  }
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: switch (size)                  {                      case "xxs":                          width = 16;                          height = 16;                          break;                      case "xs":                          width = 32;                          height = 32;                          break;                      case "s":                          width = 50;                          height = 50;                          break;                      case "l":                          width = 64;                          height = 64;                          break;                      case "xl":                          width = 128;                          height = 128;                          break;                      case "xxl":                          width = 256;                          height = 256;                          break;                  }
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: switch (size)                  {                      case "xxs":                          width = 16;                          height = 16;                          break;                      case "xs":                          width = 32;                          height = 32;                          break;                      case "s":                          width = 50;                          height = 50;                          break;                      case "l":                          width = 64;                          height = 64;                          break;                      case "xl":                          width = 128;                          height = 128;                          break;                      case "xxl":                          width = 256;                          height = 256;                          break;                  }
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: switch (size)                  {                      case "xxs":                          width = 16;                          height = 16;                          break;                      case "xs":                          width = 32;                          height = 32;                          break;                      case "s":                          width = 50;                          height = 50;                          break;                      case "l":                          width = 64;                          height = 64;                          break;                      case "xl":                          width = 128;                          height = 128;                          break;                      case "xxl":                          width = 256;                          height = 256;                          break;                  }
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: switch (size)                  {                      case "xxs":                          width = 16;                          height = 16;                          break;                      case "xs":                          width = 32;                          height = 32;                          break;                      case "s":                          width = 50;                          height = 50;                          break;                      case "l":                          width = 64;                          height = 64;                          break;                      case "xl":                          width = 128;                          height = 128;                          break;                      case "xxl":                          width = 256;                          height = 256;                          break;                  }
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: switch (size)                  {                      case "xxs":                          width = 16;                          height = 16;                          break;                      case "xs":                          width = 32;                          height = 32;                          break;                      case "s":                          width = 50;                          height = 50;                          break;                      case "l":                          width = 64;                          height = 64;                          break;                      case "xl":                          width = 128;                          height = 128;                          break;                      case "xxl":                          width = 256;                          height = 256;                          break;                  }
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: switch (size)                  {                      case "xxs":                          width = 16;                          height = 16;                          break;                      case "xs":                          width = 32;                          height = 32;                          break;                      case "s":                          width = 50;                          height = 50;                          break;                      case "l":                          width = 64;                          height = 64;                          break;                      case "xl":                          width = 128;                          height = 128;                          break;                      case "xxl":                          width = 256;                          height = 256;                          break;                  }
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: double.TryParse(parameters["Gamma"]' NumberStyles.AllowDecimalPoint' CultureInfo.InvariantCulture' out gamma) && gamma >= 0.2 && gamma <= 5
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: double.TryParse(parameters["Gamma"]' NumberStyles.AllowDecimalPoint' CultureInfo.InvariantCulture' out gamma) && gamma >= 0.2 && gamma <= 5
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: double.TryParse(parameters["Contrast"]' NumberStyles.AllowDecimalPoint' CultureInfo.InvariantCulture' out contrast) && (contrast >= -100 && contrast <= 100)
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following statement contains a magic number: double.TryParse(parameters["Contrast"]' NumberStyles.AllowDecimalPoint' CultureInfo.InvariantCulture' out contrast) && (contrast >= -100 && contrast <= 100)
Magic Number,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,TryParseDimension,The following statement contains a magic number: const int maxDimension = 4000;
Magic Number,DotNetNuke.Services.GeneratedImage,ImageHandlerInternal,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageHandlerInternal.cs,ImageHandlerInternal,The following statement contains a magic number: ImageCompression = 95;
Magic Number,DotNetNuke.Services.GeneratedImage,ImageHandlerInternal,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageHandlerInternal.cs,HandleImageRequest,The following statement contains a magic number: context.Response.StatusCode = 403;
Magic Number,DotNetNuke.Services.GeneratedImage,ImageHandlerInternal,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageHandlerInternal.cs,HandleImageRequest,The following statement contains a magic number: context.Response.StatusCode = 403;
Magic Number,DotNetNuke.Services.GeneratedImage,ImageHandlerInternal,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageHandlerInternal.cs,HandleImageRequest,The following statement contains a magic number: context.Response.StatusCode = 304;
Magic Number,DotNetNuke.Services.GeneratedImage,ImageHandlerInternal,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageHandlerInternal.cs,HandleImageRequest,The following statement contains a magic number: context.Response.StatusCode = 429;
Magic Number,DotNetNuke.Services.GeneratedImage,ImageHandlerInternal,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageHandlerInternal.cs,RenderImage,The following statement contains a magic number: var quantizer = new OctreeQuantizer(255' 8);
Magic Number,DotNetNuke.Services.GeneratedImage,ImageHandlerInternal,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageHandlerInternal.cs,RenderImage,The following statement contains a magic number: var quantizer = new OctreeQuantizer(255' 8);
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageBrightnessTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageBrightnessTransform.cs,ProcessImage,The following statement contains a magic number: Brightness = -255;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageBrightnessTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageBrightnessTransform.cs,ProcessImage,The following statement contains a magic number: Brightness < -255
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageBrightnessTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageBrightnessTransform.cs,ProcessImage,The following statement contains a magic number: Brightness = 255;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageBrightnessTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageBrightnessTransform.cs,ProcessImage,The following statement contains a magic number: Brightness > 255
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageBrightnessTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageBrightnessTransform.cs,ProcessImage,The following statement contains a magic number: cR = 255;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageBrightnessTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageBrightnessTransform.cs,ProcessImage,The following statement contains a magic number: cR > 255
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageBrightnessTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageBrightnessTransform.cs,ProcessImage,The following statement contains a magic number: cG = 255;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageBrightnessTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageBrightnessTransform.cs,ProcessImage,The following statement contains a magic number: cG > 255
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageBrightnessTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageBrightnessTransform.cs,ProcessImage,The following statement contains a magic number: cB = 255;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageBrightnessTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageBrightnessTransform.cs,ProcessImage,The following statement contains a magic number: cB > 255
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: Contrast = -100;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: Contrast < -100
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: Contrast = 100;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: Contrast > 100
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: Contrast = (100.0 + Contrast) / 100.0;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: Contrast = (100.0 + Contrast) / 100.0;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: double pR = c.R / 255.0;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pR -= 0.5;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pR += 0.5;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pR *= 255;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pR = 255;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pR > 255
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: double pG = c.G / 255.0;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pG -= 0.5;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pG += 0.5;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pG *= 255;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pG = 255;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pG > 255
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: double pB = c.B / 255.0;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pB -= 0.5;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pB += 0.5;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pB *= 255;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pB = 255;
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageContrastTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageContrastTransform.cs,ProcessImage,The following statement contains a magic number: pB > 255
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageGammaTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageGammaTransform.cs,ProcessImage,The following statement contains a magic number: byte[] gammaArray = new byte[256];
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageGammaTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageGammaTransform.cs,ProcessImage,The following statement contains a magic number: gammaArray[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / Gamma)) + 0.5));
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageGammaTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageGammaTransform.cs,ProcessImage,The following statement contains a magic number: gammaArray[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / Gamma)) + 0.5));
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageGammaTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageGammaTransform.cs,ProcessImage,The following statement contains a magic number: gammaArray[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / Gamma)) + 0.5));
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageGammaTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageGammaTransform.cs,ProcessImage,The following statement contains a magic number: gammaArray[i] = (byte)Math.Min(255' (int)((255.0 * Math.Pow(i / 255.0' 1.0 / Gamma)) + 0.5));
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageGammaTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageGammaTransform.cs,ProcessImage,The following statement contains a magic number: i < 256
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageGreyScaleTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageGreyscaleTransform.cs,ProcessImage,The following statement contains a magic number: byte gray = (byte)(.299 * c.R + .587 * c.G + .114 * c.B);
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageGreyScaleTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageGreyscaleTransform.cs,ProcessImage,The following statement contains a magic number: byte gray = (byte)(.299 * c.R + .587 * c.G + .114 * c.B);
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageGreyScaleTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageGreyscaleTransform.cs,ProcessImage,The following statement contains a magic number: byte gray = (byte)(.299 * c.R + .587 * c.G + .114 * c.B);
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageInvertTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageInvertTransform.cs,ProcessImage,The following statement contains a magic number: bmap.SetPixel(i' j' Color.FromArgb(255 - c.R' 255 - c.G' 255 - c.B));
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageInvertTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageInvertTransform.cs,ProcessImage,The following statement contains a magic number: bmap.SetPixel(i' j' Color.FromArgb(255 - c.R' 255 - c.G' 255 - c.B));
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageInvertTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageInvertTransform.cs,ProcessImage,The following statement contains a magic number: bmap.SetPixel(i' j' Color.FromArgb(255 - c.R' 255 - c.G' 255 - c.B));
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,FitImage,The following statement contains a magic number: var newimage = new Bitmap(resizeWidth + 2 * _border' resizeHeight + 2 * _border);
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,FitImage,The following statement contains a magic number: var newimage = new Bitmap(resizeWidth + 2 * _border' resizeHeight + 2 * _border);
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,FitImage,The following statement contains a magic number: graphics.FillRectangle(new SolidBrush(BackColor)' new Rectangle(0' 0' resizeWidth + 2 * _border' resizeHeight + 2 * _border));
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,FitImage,The following statement contains a magic number: graphics.FillRectangle(new SolidBrush(BackColor)' new Rectangle(0' 0' resizeWidth + 2 * _border' resizeHeight + 2 * _border));
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,FitSquareImage,The following statement contains a magic number: var newimage = new Bitmap(newDim + 2 * _border' newDim + 2 * _border);
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,FitSquareImage,The following statement contains a magic number: var newimage = new Bitmap(newDim + 2 * _border' newDim + 2 * _border);
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,FitSquareImage,The following statement contains a magic number: graphics.FillRectangle(new SolidBrush(BackColor)'new Rectangle(0'0'newDim + 2*_border 'newDim + 2*_border));
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,FitSquareImage,The following statement contains a magic number: graphics.FillRectangle(new SolidBrush(BackColor)'new Rectangle(0'0'newDim + 2*_border 'newDim + 2*_border));
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,FitSquareImage,The following statement contains a magic number: graphics.DrawImage(img' (newDim - resizeWidth) / 2 + _border' (newDim - resizeHeight) / 2 + _border' resizeWidth' resizeHeight);
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,FitSquareImage,The following statement contains a magic number: graphics.DrawImage(img' (newDim - resizeWidth) / 2 + _border' (newDim - resizeHeight) / 2 + _border' resizeWidth' resizeHeight);
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,CropImage,The following statement contains a magic number: graphics.DrawImage(img' (Width - resizeWidth) / 2' (Height - resizeHeight) / 2' resizeWidth' resizeHeight);
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,CropImage,The following statement contains a magic number: graphics.DrawImage(img' (Width - resizeWidth) / 2' (Height - resizeHeight) / 2' resizeWidth' resizeHeight);
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,FillImage,The following statement contains a magic number: graphics.DrawImage(img' (Width - resizeWidth) / 2' (Height - resizeHeight) / 2' resizeWidth' resizeHeight);
Magic Number,DotNetNuke.Services.GeneratedImage.FilterTransform,ImageResizeTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\FilterTransform\ImageResizeTransform.cs,FillImage,The following statement contains a magic number: graphics.DrawImage(img' (Width - resizeWidth) / 2' (Height - resizeHeight) / 2' resizeWidth' resizeHeight);
Magic Number,DotNetNuke.Services.GeneratedImage.ImageQuantization,GrayscaleQuantizer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageQuantization\GrayscaleQuantizer.cs,GrayscaleQuantizer,The following statement contains a magic number: _colors = new Color[256];
Magic Number,DotNetNuke.Services.GeneratedImage.ImageQuantization,GrayscaleQuantizer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageQuantization\GrayscaleQuantizer.cs,GrayscaleQuantizer,The following statement contains a magic number: int nColors = 256;
Magic Number,DotNetNuke.Services.GeneratedImage.ImageQuantization,GrayscaleQuantizer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageQuantization\GrayscaleQuantizer.cs,QuantizePixel,The following statement contains a magic number: double luminance = (pixel.Red *0.299) + (pixel.Green *0.587) + (pixel.Blue  *0.114);
Magic Number,DotNetNuke.Services.GeneratedImage.ImageQuantization,GrayscaleQuantizer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageQuantization\GrayscaleQuantizer.cs,QuantizePixel,The following statement contains a magic number: double luminance = (pixel.Red *0.299) + (pixel.Green *0.587) + (pixel.Blue  *0.114);
Magic Number,DotNetNuke.Services.GeneratedImage.ImageQuantization,GrayscaleQuantizer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageQuantization\GrayscaleQuantizer.cs,QuantizePixel,The following statement contains a magic number: double luminance = (pixel.Red *0.299) + (pixel.Green *0.587) + (pixel.Blue  *0.114);
Magic Number,DotNetNuke.Services.GeneratedImage.ImageQuantization,GrayscaleQuantizer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageQuantization\GrayscaleQuantizer.cs,QuantizePixel,The following statement contains a magic number: var colorIndex = (byte)(luminance +0.5);
Magic Number,DotNetNuke.Services.GeneratedImage.ImageQuantization,OctreeQuantizer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageQuantization\OctreeQuantizer.cs,OctreeQuantizer,The following statement contains a magic number: maxColors > 255
Magic Number,DotNetNuke.Services.GeneratedImage.ImageQuantization,OctreeQuantizer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageQuantization\OctreeQuantizer.cs,OctreeQuantizer,The following statement contains a magic number: ( maxColorBits < 1 ) | ( maxColorBits > 8 )
Magic Number,DotNetNuke.Services.GeneratedImage.ImageQuantization,Octree,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageQuantization\OctreeQuantizer.cs,Octree,The following statement contains a magic number: _reducibleNodes = new OctreeNode[9] ;
Magic Number,DotNetNuke.Services.GeneratedImage.ImageQuantization,OctreeNode,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageQuantization\OctreeQuantizer.cs,Reduce,The following statement contains a magic number: index < 8
Magic Number,DotNetNuke.Services.GeneratedImage.ImageQuantization,OctreeNode,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageQuantization\OctreeQuantizer.cs,GetPaletteIndex,The following statement contains a magic number: int	shift = 7 - level ;
Magic Number,DotNetNuke.Services.GeneratedImage.ImageQuantization,OctreeNode,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\ImageQuantization\OctreeQuantizer.cs,GetPaletteIndex,The following statement contains a magic number: int index = ( ( pixel.Red & mask[level] ) >> ( shift - 2 ) ) |  							( ( pixel.Green & mask[level] ) >> ( shift - 1 ) ) |  							( ( pixel.Blue & mask[level] ) >> ( shift ) ) ;
Magic Number,DotNetNuke.Services.GeneratedImage.StartTransform,PlaceholderTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\StartTransform\PlaceHolderTransform.cs,ProcessImage,The following statement contains a magic number: var colorPen = new Pen(Color'2);
Magic Number,DotNetNuke.Services.GeneratedImage.StartTransform,PlaceholderTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\StartTransform\PlaceHolderTransform.cs,ProcessImage,The following statement contains a magic number: objGraphics.DrawRectangle(colorPen'1'1'Width-3'Height-3);
Magic Number,DotNetNuke.Services.GeneratedImage.StartTransform,PlaceholderTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\StartTransform\PlaceHolderTransform.cs,ProcessImage,The following statement contains a magic number: objGraphics.DrawRectangle(colorPen'1'1'Width-3'Height-3);
Magic Number,DotNetNuke.Services.GeneratedImage.StartTransform,PlaceholderTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\StartTransform\PlaceHolderTransform.cs,ProcessImage,The following statement contains a magic number: var fontSize = 13;
Magic Number,DotNetNuke.Services.GeneratedImage.StartTransform,PlaceholderTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\StartTransform\PlaceHolderTransform.cs,ProcessImage,The following statement contains a magic number: fontSize = 8;
Magic Number,DotNetNuke.Services.GeneratedImage.StartTransform,PlaceholderTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\StartTransform\PlaceHolderTransform.cs,ProcessImage,The following statement contains a magic number: Width < 101
Magic Number,DotNetNuke.Services.GeneratedImage.StartTransform,PlaceholderTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\StartTransform\PlaceHolderTransform.cs,ProcessImage,The following statement contains a magic number: var rectangle = new Rectangle(5' 5' Width - 10' Height - 10);
Magic Number,DotNetNuke.Services.GeneratedImage.StartTransform,PlaceholderTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\StartTransform\PlaceHolderTransform.cs,ProcessImage,The following statement contains a magic number: var rectangle = new Rectangle(5' 5' Width - 10' Height - 10);
Magic Number,DotNetNuke.Services.GeneratedImage.StartTransform,PlaceholderTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\StartTransform\PlaceHolderTransform.cs,ProcessImage,The following statement contains a magic number: var rectangle = new Rectangle(5' 5' Width - 10' Height - 10);
Magic Number,DotNetNuke.Services.GeneratedImage.StartTransform,PlaceholderTransform,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\StartTransform\PlaceHolderTransform.cs,ProcessImage,The following statement contains a magic number: var rectangle = new Rectangle(5' 5' Width - 10' Height - 10);
Magic Number,DotNetNuke.Services.ImprovementsProgram,BeaconService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ImprovementsProgram\BeaconService.cs,GetBeaconQuery,The following statement contains a magic number: string installVersion = Common.Globals.FormatVersion(DotNetNukeContext.Current.Application.Version' "00"' 3' "");
Magic Number,DotNetNuke.Services.Installer.Blocker,InstallBlocker,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Blocker\InstallBlocker.cs,RegisterInstallEnd,The following statement contains a magic number: var retryable = new RetryableAction(() =>              {                  if (IsInstallInProgress() && fileCreated)                  {                      File.Delete(Globals.ApplicationMapPath + installBlockerFile);                  }              }' "Deleting lock file"' 60' TimeSpan.FromSeconds(1));
Magic Number,DotNetNuke.Services.Installer.Installers,JavaScriptFileInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\JavaScriptFileInstaller.cs,ReadCustomManifest,The following statement contains a magic number: BasePath = String.Format("Resources\\Libraries\\{0}\\{1}"' libraryNav.Value' Globals.FormatVersion(Package.Version' "00"' 3' "_"));
Magic Number,DotNetNuke.Services.Installer.Installers,CleanupInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\CleanupInstaller.cs,ProcessCleanupFile,The following statement contains a magic number: Log.AddInfo(string.Format(Util.CLEANUP_Processing' Version.ToString(3)));
Magic Number,DotNetNuke.Services.Installer.Installers,CleanupInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\CleanupInstaller.cs,ProcessCleanupFile,The following statement contains a magic number: Log.AddInfo(string.Format(Util.CLEANUP_ProcessComplete' Version.ToString(3)));
Magic Number,DotNetNuke.Services.Installer.Installers,LanguageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\LanguageInstaller.cs,ReadCustomManifest,The following statement contains a magic number: LanguagePack.DependentPackageID = -2;
Magic Number,DotNetNuke.Services.Installer.Installers,ModuleInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\ModuleInstaller.cs,ReadManifest,The following statement contains a magic number: _desktopModule.Version = Globals.FormatVersion(Package.Version' "00"' 4' ".");
Magic Number,DotNetNuke.Services.Installer.Installers,PackageInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\PackageInstaller.cs,ReadManifest,The following statement contains a magic number: Log.AddFailure(Util.INSTALL_Version + " - " + Package.InstalledVersion.ToString(3));
Magic Number,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,AddPackageInternal,The following statement contains a magic number: package.PackageID = provider.AddPackage(package.PortalID'                                                  package.Name'                                                  package.FriendlyName'                                                  package.Description'                                                  package.PackageType'                                                  package.Version.ToString(3)'                                                  package.License'                                                  package.Manifest'                                                  package.Owner'                                                  package.Organization'                                                  package.Url'                                                  package.Email'                                                  package.ReleaseNotes'                                                  package.IsSystemPackage'                                                  UserController.Instance.GetCurrentUserInfo().UserID'                                                  package.FolderName'                                                  package.IconFile);
Magic Number,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,UpdatePackageInternal,The following statement contains a magic number: provider.UpdatePackage(package.PackageID'                                     package.PortalID'                                     package.FriendlyName'                                     package.Description'                                     package.PackageType'                                     package.Version.ToString(3)'                                     package.License'                                     package.Manifest'                                     package.Owner'                                     package.Organization'                                     package.Url'                                     package.Email'                                     package.ReleaseNotes'                                     package.IsSystemPackage'                                     UserController.Instance.GetCurrentUserInfo().UserID'                                     package.FolderName'                                     package.IconFile);
Magic Number,DotNetNuke.Services.Localization,LocalizationExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationExtensions.cs,GetLocaleCodeFromFileName,The following statement contains a magic number: return m.Success ? m.Groups[2].Value : string.Empty;
Magic Number,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,GetCompiledResourceFileCallBack,The following statement contains a magic number: PortalSettings portalSettings = (PortalSettings)cacheItemArgs.Params[2];
Magic Number,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,GetResourceFileName,The following statement contains a magic number: switch (resourceFileRoot.Substring(resourceFileRoot.Length - 5' 5).ToLowerInvariant())                      {                          case ".resx":                              resourceFile = resourceFileRoot;                              break;                          case ".ascx":                              resourceFile = resourceFileRoot + ".resx";                              break;                          case ".aspx":                              resourceFile = resourceFileRoot + ".resx";                              break;                          default:                              resourceFile = resourceFileRoot + ".ascx.resx"; //a portal module                              break;                      }
Magic Number,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,GetResourceFileName,The following statement contains a magic number: switch (resourceFileRoot.Substring(resourceFileRoot.Length - 5' 5).ToLowerInvariant())                      {                          case ".resx":                              resourceFile = resourceFileRoot;                              break;                          case ".ascx":                              resourceFile = resourceFileRoot + ".resx";                              break;                          case ".aspx":                              resourceFile = resourceFileRoot + ".resx";                              break;                          default:                              resourceFile = resourceFileRoot + ".ascx.resx"; //a portal module                              break;                      }
Magic Number,DotNetNuke.Services.Localization,Locale,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Locale.cs,Fill,The following statement contains a magic number: bool hasColumns = schemaTable.Select("ColumnName = 'IsPublished' Or ColumnName = 'PortalID'").Length == 2;
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,AddLanguageToPortal,The following statement contains a magic number: var firstExtraLanguage = (portalLocales != null) && portalLocales.Count == 2;
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,ConvertLegacyTimeZoneOffsetToTimeZoneInfo,The following statement contains a magic number: switch (timeZoneOffsetInMinutes)              {                  case -720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Dateline Standard Time");                      break;                  case -660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Samoa Standard Time");                      break;                  case -600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Hawaiian Standard Time");                      break;                  case -540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Alaskan Standard Time");                      break;                  case -480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");                      break;                  case -420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mountain Standard Time");                      break;                  case -360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");                      break;                  case -300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");                      break;                  case -240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Atlantic Standard Time");                      break;                  case -210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Newfoundland Standard Time");                      break;                  case -180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Argentina Standard Time");                      break;                  case -120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Mid-Atlantic Standard Time");                      break;                  case -60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cape Verde Standard Time");                      break;                  case 0:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");                      break;                  case 60:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");                      break;                  case 120:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("GTB Standard Time");                      break;                  case 180:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Russian Standard Time");                      break;                  case 210:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Iran Standard Time");                      break;                  case 240:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Arabian Standard Time");                      break;                  case 270:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Afghanistan Standard Time");                      break;                  case 300:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Pakistan Standard Time");                      break;                  case 330:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("India Standard Time");                      break;                  case 345:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Nepal Standard Time");                      break;                  case 360:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");                      break;                  case 390:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Myanmar Standard Time");                      break;                  case 420:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");                      break;                  case 480:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("China Standard Time");                      break;                  case 540:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tokyo Standard Time");                      break;                  case 570:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Cen. Australia Standard Time");                      break;                  case 600:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("AUS Eastern Standard Time");                      break;                  case 660:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Magadan Standard Time");                      break;                  case 720:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");                      break;                  case 780:                      timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Tonga Standard Time");                      break;                  default:                      foreach (TimeZoneInfo timeZone in TimeZoneInfo.GetSystemTimeZones())                      {                          if (Math.Abs(timeZone.BaseUtcOffset.TotalMinutes - timeZoneOffsetInMinutes) < 0.001)                          {                              timeZoneInfo = timeZone;                              break;                          }                      }                      break;              }
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,GetResourceFileName,The following statement contains a magic number: resourceFileName = resourceFileName.Substring(0' resourceFileName.Length - 11) + "." + language + ".resx";
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,GetResourceFileName,The following statement contains a magic number: resourceFileName = resourceFileName.Substring(0' resourceFileName.Length - 5) + "." + "Host.resx";
Magic Number,DotNetNuke.Services.Localization,Localization,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Localization.cs,RemoveLanguageFromPortal,The following statement contains a magic number: var lastLanguage = LocaleController.Instance.GetLocales(portalID).Count == 2;
Magic Number,DotNetNuke.Services.Log.EventLog,DBLoggingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\DBLoggingProvider.cs,GetLogTypeInfo,The following statement contains a magic number: return CBO.GetCachedObject<ArrayList>(new CacheItemArgs(LogTypeCacheKey' 20' CacheItemPriority.Normal)'                  c => CBO.FillCollection(DataProvider.Instance().GetLogTypeInfo()' typeof (LogTypeInfo)));
Magic Number,DotNetNuke.Services.Log.EventLog,ExceptionLogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\ExceptionLogController.cs,AddLog,The following statement contains a magic number: sqlException != null && (uint)sqlException.ErrorCode == 0x80131904 && sqlException.Number == 4060
Magic Number,DotNetNuke.Services.Log.EventLog,LogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogController.cs,WriteToStreamWriter,The following statement contains a magic number: fs.Position = fileLength - 9;
Magic Number,DotNetNuke.Services.Log.EventLog,LogController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogController.cs,WriteLog,The following statement contains a magic number: fs == null && intAttempts < 100
Magic Number,DotNetNuke.Services.Log.EventLog,LogInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogInfo.cs,AddProperty,The following statement contains a magic number: PropertyName = PropertyName.Substring(0' 50);
Magic Number,DotNetNuke.Services.Log.EventLog,LogInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogInfo.cs,AddProperty,The following statement contains a magic number: PropertyName.Length > 50
Magic Number,DotNetNuke.Services.Log.EventLog,LogInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogInfo.cs,AddProperty,The following statement contains a magic number: PropertyValue = "(TRUNCATED TO 500 CHARS): " + PropertyValue.Substring(0' 500);
Magic Number,DotNetNuke.Services.Log.EventLog,LogInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogInfo.cs,AddProperty,The following statement contains a magic number: PropertyValue.Length > 500
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,PurgeCache,The following statement contains a magic number: !(FileSystemUtils.DeleteFileWithWait(file' 100' 200))
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,PurgeCache,The following statement contains a magic number: !(FileSystemUtils.DeleteFileWithWait(file' 100' 200))
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,PurgeExpiredItems,The following statement contains a magic number: !(FileSystemUtils.DeleteFileWithWait(fileToDelete' 100' 200))
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,PurgeExpiredItems,The following statement contains a magic number: !(FileSystemUtils.DeleteFileWithWait(fileToDelete' 100' 200))
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,Remove,The following statement contains a magic number: !(FileSystemUtils.DeleteFileWithWait(file' 100' 200))
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,Remove,The following statement contains a magic number: !(FileSystemUtils.DeleteFileWithWait(file' 100' 200))
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,SetOutput,The following statement contains a magic number: FileSystemUtils.DeleteFileWithWait(cachedOutputFile' 100' 200);
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,SetOutput,The following statement contains a magic number: FileSystemUtils.DeleteFileWithWait(cachedOutputFile' 100' 200);
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,StreamOutput,The following statement contains a magic number: FileSystemUtils.DeleteFileWithWait(attribFile' 100' 200);
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,StreamOutput,The following statement contains a magic number: FileSystemUtils.DeleteFileWithWait(attribFile' 100' 200);
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,StreamOutput,The following statement contains a magic number: FileSystemUtils.DeleteFileWithWait(captureFile' 100' 200);
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileProvider.cs,StreamOutput,The following statement contains a magic number: FileSystemUtils.DeleteFileWithWait(captureFile' 100' 200);
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileResponseFilter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileResponseFilter.cs,FileResponseFilter,The following statement contains a magic number: bool fileDeleted = FileSystemUtils.DeleteFileWithWait(CachedOutputTempFileName' 100' 200);
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileResponseFilter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileResponseFilter.cs,FileResponseFilter,The following statement contains a magic number: bool fileDeleted = FileSystemUtils.DeleteFileWithWait(CachedOutputTempFileName' 100' 200);
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileResponseFilter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileResponseFilter.cs,StopFiltering,The following statement contains a magic number: FileSystemUtils.DeleteFileWithWait(CachedOutputFileName' 100' 200);
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileResponseFilter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileResponseFilter.cs,StopFiltering,The following statement contains a magic number: FileSystemUtils.DeleteFileWithWait(CachedOutputFileName' 100' 200);
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileResponseFilter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileResponseFilter.cs,StopFiltering,The following statement contains a magic number: FileSystemUtils.DeleteFileWithWait(CachedOutputFileName' 100' 200);
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileResponseFilter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileResponseFilter.cs,StopFiltering,The following statement contains a magic number: FileSystemUtils.DeleteFileWithWait(CachedOutputFileName' 100' 200);
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileResponseFilter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileResponseFilter.cs,StopFiltering,The following statement contains a magic number: FileSystemUtils.DeleteFileWithWait(CachedOutputAttribFileName' 100' 200);
Magic Number,DotNetNuke.Services.OutputCache.Providers,FileResponseFilter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\OutputCache\Providers\FileResponseFilter.cs,StopFiltering,The following statement contains a magic number: FileSystemUtils.DeleteFileWithWait(CachedOutputAttribFileName' 100' 200);
Magic Number,DotNetNuke.Services.Search.Controllers,UserResultController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\UserResultController.cs,HasViewPermission,The following statement contains a magic number: var extendedVisibility = searchResult.UniqueKey.IndexOf("_") != searchResult.UniqueKey.LastIndexOf("_")                                               ? searchResult.UniqueKey.Split('_')[2]                                               : string.Empty;
Magic Number,DotNetNuke.Services.Search.Controllers,SearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Controllers\SearchControllerImpl.cs,GetSearchResultControllers,The following statement contains a magic number: var cachArg = new CacheItemArgs(SeacrchContollersCacheKey' 120' CacheItemPriority.Default);
Magic Number,DotNetNuke.Services.Search.Entities,SearchQuery,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Entities\SearchQuery.cs,SearchQuery,The following statement contains a magic number: TitleSnippetLength = 60;
Magic Number,DotNetNuke.Services.Search.Entities,SearchQuery,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Entities\SearchQuery.cs,SearchQuery,The following statement contains a magic number: BodySnippetLength = 100;
Magic Number,DotNetNuke.Services.Search.Entities,SearchQuery,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Entities\SearchQuery.cs,SearchQuery,The following statement contains a magic number: PageSize = 10;
Magic Number,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,GetSearchTypes,The following statement contains a magic number: var cachArg = new CacheItemArgs(SearchTypesCacheKey' 120' CacheItemPriority.Default);
Magic Number,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,GetSynonymTerms,The following statement contains a magic number: var cachArg = new CacheItemArgs(cacheKey' 120' CacheItemPriority.Default);
Magic Number,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,GetSynonymsGroups,The following statement contains a magic number: var cachArg = new CacheItemArgs(cacheKey' 120' CacheItemPriority.Default);
Magic Number,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,GetSearchStopWords,The following statement contains a magic number: var cachArg = new CacheItemArgs(cacheKey' 120' CacheItemPriority.Default);
Magic Number,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,SynonymTermsCallBack,The following statement contains a magic number: var cultureCode = parts[2];
Magic Number,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,GetSearchStopWordsCallBack,The following statement contains a magic number: var cultureCode = splittedKeys[2];
Magic Number,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,GetSynonymsGroupsCallBack,The following statement contains a magic number: var cultureCode = cacheItem.CacheKey.Split('_')[2];
Magic Number,DotNetNuke.Services.Search.Internals,LuceneQuery,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneQuery.cs,LuceneQuery,The following statement contains a magic number: TitleSnippetLength = 60;
Magic Number,DotNetNuke.Services.Search.Internals,LuceneQuery,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneQuery.cs,LuceneQuery,The following statement contains a magic number: BodySnippetLength = 100;
Magic Number,DotNetNuke.Services.Search.Internals,LuceneQuery,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneQuery.cs,LuceneQuery,The following statement contains a magic number: PageSize = 10;
Magic Number,DotNetNuke.Services.Search.Internals,SearchQueryStringParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchQueryStringParser.cs,GetLastModifiedDate,The following statement contains a magic number: switch (date.ToLowerInvariant())                  {                      case "day":                          result = DateTime.UtcNow.AddDays(-1);                          break;                      case "week":                          result = DateTime.UtcNow.AddDays(-7);                          break;                      case "month":                          result = DateTime.UtcNow.AddMonths(-1);                          break;                      case "quarter":                          result = DateTime.UtcNow.AddMonths(-3);                          break;                      case "year":                          result = DateTime.UtcNow.AddYears(-1);                          break;                  }
Magic Number,DotNetNuke.Services.Search.Internals,SearchQueryStringParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchQueryStringParser.cs,GetLastModifiedDate,The following statement contains a magic number: switch (date.ToLowerInvariant())                  {                      case "day":                          result = DateTime.UtcNow.AddDays(-1);                          break;                      case "week":                          result = DateTime.UtcNow.AddDays(-7);                          break;                      case "month":                          result = DateTime.UtcNow.AddMonths(-1);                          break;                      case "quarter":                          result = DateTime.UtcNow.AddMonths(-3);                          break;                      case "year":                          result = DateTime.UtcNow.AddYears(-1);                          break;                  }
Magic Number,DotNetNuke.Services.Search.Internals,SearchSecurityTrimmer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchSecurityTrimmer.cs,SearchSecurityTrimmer,The following statement contains a magic number: _hitDocs = new List<ScoreDoc>(16);
Magic Number,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,GetSearchContentSourceList,The following statement contains a magic number: var searchableModuleDefsCacheArgs = new CacheItemArgs(                      string.Format(SearchableModuleDefsKey' SearchableModuleDefsCacheKey' portalId)'                      120' CacheItemPriority.Default);
Magic Number,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,GetSearchDocumentTypeDisplayName,The following statement contains a magic number: var keys = CBO.Instance.GetCachedObject<IDictionary<string' string>>(                              new CacheItemArgs(key' 120' CacheItemPriority.Default)' SearchDocumentTypeDisplayNameCallBack' false);
Magic Number,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocuments,The following statement contains a magic number: const int commitBatchSize = 1024 * 16;
Magic Number,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocuments,The following statement contains a magic number: const int commitBatchSize = 1024 * 16;
Magic Number,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The following statement contains a magic number: field.Boost = _titleBoost / 10f;
Magic Number,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The following statement contains a magic number: field.Boost = _descriptionBoost / 10f;
Magic Number,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The following statement contains a magic number: switch (key)                  {                      case Constants.TitleTag:                          if (_titleBoost > 0 && _titleBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _titleBoost / 10f;                          }                          break;                      case Constants.SubjectTag:                          if (_contentBoost > 0 && _contentBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _contentBoost / 10f;                          }                          break;                      case Constants.CommentsTag:                          if (_descriptionBoost > 0 && _descriptionBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _descriptionBoost / 10f;                          }                          break;                      case Constants.AuthorNameTag:                          if (_authorBoost > 0 && _authorBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _authorBoost / 10f;                          }                          break;                  }
Magic Number,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The following statement contains a magic number: switch (key)                  {                      case Constants.TitleTag:                          if (_titleBoost > 0 && _titleBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _titleBoost / 10f;                          }                          break;                      case Constants.SubjectTag:                          if (_contentBoost > 0 && _contentBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _contentBoost / 10f;                          }                          break;                      case Constants.CommentsTag:                          if (_descriptionBoost > 0 && _descriptionBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _descriptionBoost / 10f;                          }                          break;                      case Constants.AuthorNameTag:                          if (_authorBoost > 0 && _authorBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _authorBoost / 10f;                          }                          break;                  }
Magic Number,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The following statement contains a magic number: switch (key)                  {                      case Constants.TitleTag:                          if (_titleBoost > 0 && _titleBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _titleBoost / 10f;                          }                          break;                      case Constants.SubjectTag:                          if (_contentBoost > 0 && _contentBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _contentBoost / 10f;                          }                          break;                      case Constants.CommentsTag:                          if (_descriptionBoost > 0 && _descriptionBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _descriptionBoost / 10f;                          }                          break;                      case Constants.AuthorNameTag:                          if (_authorBoost > 0 && _authorBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _authorBoost / 10f;                          }                          break;                  }
Magic Number,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The following statement contains a magic number: switch (key)                  {                      case Constants.TitleTag:                          if (_titleBoost > 0 && _titleBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _titleBoost / 10f;                          }                          break;                      case Constants.SubjectTag:                          if (_contentBoost > 0 && _contentBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _contentBoost / 10f;                          }                          break;                      case Constants.CommentsTag:                          if (_descriptionBoost > 0 && _descriptionBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _descriptionBoost / 10f;                          }                          break;                      case Constants.AuthorNameTag:                          if (_authorBoost > 0 && _authorBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _authorBoost / 10f;                          }                          break;                  }
Magic Number,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The following statement contains a magic number: field.Boost = _tagBoost / 10f;
Magic Number,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The following statement contains a magic number: field.Boost = _authorBoost / 10f;
Magic Number,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The following statement contains a magic number: field.Boost = _contentBoost/10f;
Magic Number,DotNetNuke.Services.Search.Internals,LuceneControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneControllerImpl.cs,InstantiateReader,The following statement contains a magic number: var cutoffTime = DateTime.Now - TimeSpan.FromSeconds(_readerTimeSpan*10);
Magic Number,DotNetNuke.Services.Search.Internals,LuceneControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\LuceneControllerImpl.cs,OptimizeSearchIndex,The following statement contains a magic number: _writer.Optimize(4' doWait);
Magic Number,DotNetNuke.Services.Search,TabIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\TabIndexer.cs,IndexSearchDocuments,The following statement contains a magic number: const int saveThreshold = 1024;
Magic Number,DotNetNuke.Services.Search,UserIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\UserIndexer.cs,FindModifiedUsers,The following statement contains a magic number: var extendedVisibility = splitValues[2];
Magic Number,DotNetNuke.Services.Search,UserIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\UserIndexer.cs,FindModifiedUsers,The following statement contains a magic number: var modifiedTime = Convert.ToDateTime(splitValues[3]).ToUniversalTime();
Magic Number,DotNetNuke.Services.Search,UserIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\UserIndexer.cs,DeleteDocuments,The following statement contains a magic number: clauseCount += 2;
Magic Number,DotNetNuke.Services.Search,ModuleIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\ModuleIndexer.cs,IndexSearchDocuments,The following statement contains a magic number: const int saveThreshold = 1024 * 2;
Magic Number,DotNetNuke.Services.Search,ModuleIndexer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\ModuleIndexer.cs,IndexSearchDocuments,The following statement contains a magic number: const int saveThreshold = 1024 * 2;
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ExecuteScript,The following statement contains a magic number: HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' Localization.Localization.GetString("ExecutingScript"' Localization.Localization.GlobalResourceFile) + ":" + Path.GetFileName(scriptFile));
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallMemberRoleProviderScript,The following statement contains a magic number: HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' "Executing Script: " + scriptFile + "<br>");
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The following statement contains a magic number: ProfileController.AddDefaultDefinition(Null.NullInteger' "Preferences"' "Photo"' "Image"' 0' properties.Count * 2 + 2' UserVisibilityMode.AllUsers' dataTypes);
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The following statement contains a magic number: ProfileController.AddDefaultDefinition(Null.NullInteger' "Preferences"' "Photo"' "Image"' 0' properties.Count * 2 + 2' UserVisibilityMode.AllUsers' dataTypes);
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The following statement contains a magic number: ProfileController.AddDefaultDefinition(portal.PortalID' "Preferences"' "Photo"' "Image"' 0' properties.Count * 2 + 2' UserVisibilityMode.AllUsers' dataTypes);
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion530,The following statement contains a magic number: ProfileController.AddDefaultDefinition(portal.PortalID' "Preferences"' "Photo"' "Image"' 0' properties.Count * 2 + 2' UserVisibilityMode.AllUsers' dataTypes);
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The following statement contains a magic number: ProfileController.AddDefaultDefinition(Null.NullInteger' "Preferences"' "Photo"' "Image"' 0' properties.Count * 2 + 2' UserVisibilityMode.AllUsers' dataTypes);
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeToVersion562,The following statement contains a magic number: ProfileController.AddDefaultDefinition(Null.NullInteger' "Preferences"' "Photo"' "Image"' 0' properties.Count * 2 + 2' UserVisibilityMode.AllUsers' dataTypes);
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateFoldersForParentId,The following statement contains a magic number: HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' "<br/>"' false);
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateFoldersForParentId,The following statement contains a magic number: HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' string.Format("Converting old Folders to new format. Total: {0} [Remaining: {1}]<br/>"' foldersToConvert' foldersRemaining));
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateFoldersForParentId,The following statement contains a magic number: HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' string.Format("Conversion of old Folders Completed. Total Converted: {0}<br/>"' foldersToConvert));
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ConvertOldMessages,The following statement contains a magic number: const int batchSize = 500;
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ConvertOldMessages,The following statement contains a magic number: HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' "<br/>"' false);
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ConvertOldMessages,The following statement contains a magic number: HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' string.Format("Converting old Messages to new format. Total: {0} [Remaining: {1}]<br/>"' messagesToConvert' messagesRemaining));
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ConvertOldMessages,The following statement contains a magic number: HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' string.Format("Conversion of old Messages Completed. Total Converted: {0}<br/>"' messagesToConvert));
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,MovePhotoProperty,The following statement contains a magic number: properties.Where(p => p.ViewOrder > propPhoto.ViewOrder).ToList().ForEach(p =>                          {                              p.ViewOrder -= 2;                              ProfileController.UpdatePropertyDefinition(p);                          });
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,FindBestTemplate,The following statement contains a magic number: match = defaultTemplates.FirstOrDefault(x => x.CultureCode.ToLowerInvariant().StartsWith(currentCulture.Substring(0' 2)));
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,BuildUserTable,The following statement contains a magic number: stringBuilder.Append("<td class='Norma'>" + dr.GetString(2) + "</td>");
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,BuildUserTable,The following statement contains a magic number: stringBuilder.Append("<td class='Norma'>" + dr.GetString(3) + "</td>");
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,BuildUserTable,The following statement contains a magic number: stringBuilder.Append("<td class='Norma'>" + dr.GetString(4) + "</td>");
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,CheckUpgrade,The following statement contains a magic number: double time = userCount / 10834;
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,CheckUpgrade,The following statement contains a magic number: userCount > 1000
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,DeleteFiles,The following statement contains a magic number: HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' "Cleaning Up Files: " + stringVersion);
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetStringVersion,The following statement contains a magic number: var versionArray = new int[3];
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetStringVersion,The following statement contains a magic number: versionArray[2] = version.Build;
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetStringVersion,The following statement contains a magic number: i < 2
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetStringVersion,The following statement contains a magic number: i <= 2
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetUpgradeScripts,The following statement contains a magic number: version > databaseVersion && version <= ApplicationVersion && GetFileName(file).Length == 9 + DefaultProvider.Length
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetUpgradeScripts,The following statement contains a magic number: version == databaseVersion && version <= ApplicationVersion && GetFileName(file).Length == 9 + DefaultProvider.Length
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,GetUpgradeScripts,The following statement contains a magic number: GetFileName(file).Length == 9 + DefaultProvider.Length
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,AddAvailableIncrementalFiles,The following statement contains a magic number: version.Major < 8
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallDNN,The following statement contains a magic number: int portalId = AddPortal(node' true' 2' portalHost);
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallDNN,The following statement contains a magic number: HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' "<font color='green'>Successfully Installed Site " + portalId + ":</font><br>");
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InstallPackage,The following statement contains a magic number: HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' "Installing Package File " + Path.GetFileNameWithoutExtension(file) + ": ");
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,TryUpgradeNETFramework,The following statement contains a magic number: switch (Globals.NETFrameworkVersion.ToString(2))              {                  case "3.5":                      if (!IsNETFrameworkCurrent("3.5"))                      {                          //Upgrade to .NET 3.5                          string upgradeFile = string.Format("{0}\\Config\\Net35.config"' Globals.InstallMapPath);                          string message = UpdateConfig(upgradeFile' ApplicationVersion' ".NET 3.5 Upgrade");                          if (string.IsNullOrEmpty(message))                          {                              //Remove old AJAX file                              FileSystemUtils.DeleteFile(Path.Combine(Globals.ApplicationMapPath' "bin\\System.Web.Extensions.dll"));                                //Log Upgrade                                EventLogController.Instance.AddLog("UpgradeNet"' "Upgraded Site to .NET 3.5"' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.HOST_ALERT);                          }                          else                          {                              //Log Failed Upgrade                              EventLogController.Instance.AddLog("UpgradeNet"' string.Format("Upgrade to .NET 3.5 failed. Error reported during attempt to update:{0}"' message)' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.HOST_ALERT);                          }                      }                      break;                  case "4.0":                      if (!IsNETFrameworkCurrent("4.0"))                      {                          //Upgrade to .NET 4.0                          string upgradeFile = string.Format("{0}\\Config\\Net40.config"' Globals.InstallMapPath);                          string strMessage = UpdateConfig(upgradeFile' ApplicationVersion' ".NET 4.0 Upgrade");                          EventLogController.Instance.AddLog("UpgradeNet"'                                                    string.IsNullOrEmpty(strMessage)                                                        ? "Upgraded Site to .NET 4.0"                                                        : string.Format("Upgrade to .NET 4.0 failed. Error reported during attempt to update:{0}"' strMessage)'                                                    PortalController.Instance.GetCurrentPortalSettings()'                                                    UserController.Instance.GetCurrentUserInfo().UserID'                                                    EventLogController.EventLogType.HOST_ALERT);                      }                      break;              }
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeApplication,The following statement contains a magic number: DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + Localization.Localization.GetString("ApplicationUpgrades"' Localization.Localization.GlobalResourceFile) + ": " + version.ToString(3));
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeApplication,The following statement contains a magic number: HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' Localization.Localization.GetString("ApplicationUpgrades"' Localization.Localization.GlobalResourceFile) + " : " + GetStringVersionWithRevision(version));
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeApplication,The following statement contains a magic number: switch (version.ToString(3))                      {                          case "3.2.3":                              UpgradeToVersion323();                              break;                          case "4.4.0":                              UpgradeToVersion440();                              break;                          case "4.7.0":                              UpgradeToVersion470();                              break;                          case "4.8.2":                              UpgradeToVersion482();                              break;                          case "5.0.0":                              UpgradeToVersion500();                              break;                          case "5.0.1":                              UpgradeToVersion501();                              break;                          case "5.1.0":                              UpgradeToVersion510();                              break;                          case "5.1.1.0":                              UpgradeToVersion511();                              break;                          case "5.1.3":                              UpgradeToVersion513();                              break;                          case "5.2.0":                              UpgradeToVersion520();                              break;                          case "5.2.1":                              UpgradeToVersion521();                              break;                          case "5.3.0":                              UpgradeToVersion530();                              break;                          case "5.4.0":                              UpgradeToVersion540();                              break;                          case "5.4.3":                              UpgradeToVersion543();                              break;                          case "5.5.0":                              UpgradeToVersion550();                              break;                          case "5.6.0":                              UpgradeToVersion560();                              break;                          case "5.6.2":                              UpgradeToVersion562();                              break;                            case "6.0.1":                              UpgradeToVersion601();                              break;                          case "6.0.2":                              UpgradeToVersion602();                              break;                          case "6.1.0":                              UpgradeToVersion610();                              break;                          case "6.1.2":                              UpgradeToVersion612();                              break;                          case "6.1.3":                              UpgradeToVersion613();                              break;                          case "6.2.0":                              UpgradeToVersion620();                              break;                          case "6.2.1":                              UpgradeToVersion621();                              break;                          case "6.2.4":                              UpgradeToVersion624();                              break;                          case "7.0.0":                              UpgradeToVersion700();                              break;                          case "7.1.0":                              UpgradeToVersion710();                              break;                          case "7.1.1":                              UpgradeToVersion711();                              break;                          case "7.1.2":                              UpgradeToVersion712();                              break;                          case "7.2.0":                              UpgradeToVersion720();                              break;                          case "7.2.1":                              UpgradeToVersion721();                              break;                          case "7.2.2":                              UpgradeToVersion722();                              break;                          case "7.3.2":                              UpgradeToVersion732();                              break;                          case "7.3.3":                              UpgradeToVersion733();                              break;                          case "7.4.0":                              UpgradeToVersion740();                              break;                          case "7.4.2":                              UpgradeToVersion742();                              break;                          case "9.1.0":                              UpgradeToVersion910();                              break;                          case "9.2.0":                              UpgradeToVersion920();                              break;                          case "9.2.1":                              UpgradeToVersion921();                              break;                          case "9.3.0":                              UpgradeToVersion930();                              break;                          case "9.4.1":                              UpgradeToVersion941();                              break;                      }
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateConfig,The following statement contains a magic number: HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' $"Updating Config Files: {stringVersion}");
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateConfig,The following statement contains a magic number: DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "UpdateConfig:" + version.ToString(3));
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateConfig,The following statement contains a magic number: var merge = new XmlMerge(stream' version.ToString(3)' reason);
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateConfig,The following statement contains a magic number: DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogEnd"' Localization.Localization.GlobalResourceFile) + "UpdateConfig:" + version.ToString(3));
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateConfig,The following statement contains a magic number: DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogStart"' Localization.Localization.GlobalResourceFile) + "UpdateConfig:" + version.ToString(3));
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateConfig,The following statement contains a magic number: var merge = new XmlMerge(stream' version.ToString(3)' reason);
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpdateConfig,The following statement contains a magic number: DnnInstallLogger.InstallLogInfo(Localization.Localization.GetString("LogEnd"' Localization.Localization.GlobalResourceFile) + "UpdateConfig:" + version.ToString(3));
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeIndicator,The following statement contains a magic number: url += "?core=" + Globals.FormatVersion(Assembly.GetExecutingAssembly().GetName().Version' "00"' 3' "");
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeIndicator,The following statement contains a magic number: url += "&version=" + Globals.FormatVersion(version' "00"' 3' "");
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeIndicator,The following statement contains a magic number: url += "&os=" + Globals.FormatVersion(Globals.OperatingSystemVersion' "00"' 2' "");
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeIndicator,The following statement contains a magic number: url += "&net=" + Globals.FormatVersion(Globals.NETFrameworkVersion' "00"' 2' "");
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeIndicator,The following statement contains a magic number: url += "&db=" + Globals.FormatVersion(Globals.DatabaseEngineVersion' "00"' 2' "");
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,ActivateLicense,The following statement contains a magic number: HtmlUtils.WriteFeedback(HttpContext.Current.Response' 2' Localization.Localization.GetString("ActivatingLicense"' Localization.Localization.GlobalResourceFile));
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,FindLocalizedContent,The following statement contains a magic number: var key = field.Substring(1' field.Length - 2);
Magic Number,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,NewtonsoftNeedUpdate,The following statement contains a magic number: !string.IsNullOrEmpty(newVersion) && new Version(newVersion) >= new Version(10' 0' 0' 0)
Magic Number,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,IsValidSqlServerVersion,The following statement contains a magic number: switch (versionNumber)                      {                          case 8:                              //sql 2000                          case 9:                              //sql 2005                              isValidVersion = false;                              break;                          case 10:                              //sql 2008                          case 11:                              //sql 2010                          case 12:                              //sql 2012                              isValidVersion = true;                              break;                          default:                              //covers unknown versions and later releases                              isValidVersion = true;                              break;                      }
Magic Number,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,IsValidSqlServerVersion,The following statement contains a magic number: switch (versionNumber)                      {                          case 8:                              //sql 2000                          case 9:                              //sql 2005                              isValidVersion = false;                              break;                          case 10:                              //sql 2008                          case 11:                              //sql 2010                          case 12:                              //sql 2012                              isValidVersion = true;                              break;                          default:                              //covers unknown versions and later releases                              isValidVersion = true;                              break;                      }
Magic Number,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,IsValidSqlServerVersion,The following statement contains a magic number: switch (versionNumber)                      {                          case 8:                              //sql 2000                          case 9:                              //sql 2005                              isValidVersion = false;                              break;                          case 10:                              //sql 2008                          case 11:                              //sql 2010                          case 12:                              //sql 2012                              isValidVersion = true;                              break;                          default:                              //covers unknown versions and later releases                              isValidVersion = true;                              break;                      }
Magic Number,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,IsValidSqlServerVersion,The following statement contains a magic number: switch (versionNumber)                      {                          case 8:                              //sql 2000                          case 9:                              //sql 2005                              isValidVersion = false;                              break;                          case 10:                              //sql 2008                          case 11:                              //sql 2010                          case 12:                              //sql 2012                              isValidVersion = true;                              break;                          default:                              //covers unknown versions and later releases                              isValidVersion = true;                              break;                      }
Magic Number,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,IsValidSqlServerVersion,The following statement contains a magic number: switch (versionNumber)                      {                          case 8:                              //sql 2000                          case 9:                              //sql 2005                              isValidVersion = false;                              break;                          case 10:                              //sql 2008                          case 11:                              //sql 2010                          case 12:                              //sql 2012                              isValidVersion = true;                              break;                          default:                              //covers unknown versions and later releases                              isValidVersion = true;                              break;                      }
Magic Number,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,GetLanguagePack,The following statement contains a magic number: WebResponse wr = Util.GetExternalRequest(downloadUrl'                                                       null'                                                       null'                                                       null'                                                       null'                                                       null'                                                       -1'  													 null'  													 null'                                                       false'                                                       "DotNetNuke-Appgallery/1.0.0.0(Microsoft Windows NT 6.1.7600.0"'                                                       "wpi://2.1.0.0/Microsoft Windows NT 6.1.7600.0"'                                                       out myfile'  													 10000);
Magic Number,DotNetNuke.Services.Cache,FBCachingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cache\FBCachingProvider.cs,PurgeCacheFiles,The following statement contains a magic number: dtLastWrite < DateTime.Now.Subtract(new TimeSpan(2' 0' 0))
Magic Number,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,GetJournalImageContent,The following statement contains a magic number: int thumbnailWidth = 400;
Magic Number,DotNetNuke.Services.Journal,JournalControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalControllerImpl.cs,GetJournalImageContent,The following statement contains a magic number: int thumbnailHeight = 400;
Magic Number,DotNetNuke.Services.Localization.Internal,LocalizationImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\Internal\LocalizationImpl.cs,BestCultureCodeBasedOnBrowserLanguages,The following statement contains a magic number: lang = lang.Substring(0' 2);
Magic Number,DotNetNuke.Services.ModuleCache,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ModuleCache\FileProvider.cs,PurgeCache,The following statement contains a magic number: !FileSystemUtils.DeleteFileWithWait(File' 100' 200)
Magic Number,DotNetNuke.Services.ModuleCache,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ModuleCache\FileProvider.cs,PurgeCache,The following statement contains a magic number: !FileSystemUtils.DeleteFileWithWait(File' 100' 200)
Magic Number,DotNetNuke.Services.ModuleCache,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ModuleCache\FileProvider.cs,PurgeExpiredItems,The following statement contains a magic number: !FileSystemUtils.DeleteFileWithWait(fileToDelete' 100' 200)
Magic Number,DotNetNuke.Services.ModuleCache,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ModuleCache\FileProvider.cs,PurgeExpiredItems,The following statement contains a magic number: !FileSystemUtils.DeleteFileWithWait(fileToDelete' 100' 200)
Magic Number,DotNetNuke.Services.ModuleCache,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ModuleCache\FileProvider.cs,SetModule,The following statement contains a magic number: FileSystemUtils.DeleteFileWithWait(cachedOutputFile' 100' 200);
Magic Number,DotNetNuke.Services.ModuleCache,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ModuleCache\FileProvider.cs,SetModule,The following statement contains a magic number: FileSystemUtils.DeleteFileWithWait(cachedOutputFile' 100' 200);
Magic Number,DotNetNuke.Services.ModuleCache,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ModuleCache\FileProvider.cs,Remove,The following statement contains a magic number: !FileSystemUtils.DeleteFileWithWait(File' 100' 200)
Magic Number,DotNetNuke.Services.ModuleCache,FileProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ModuleCache\FileProvider.cs,Remove,The following statement contains a magic number: !FileSystemUtils.DeleteFileWithWait(File' 100' 200)
Magic Number,DotNetNuke.Services.Scheduling,DNNScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\DNNScheduler.cs,StartAndWaitForResponse,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,DotNetNuke.Services.Scheduling,DNNScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\DNNScheduler.cs,StartAndWaitForResponse,The following statement contains a magic number: i <= 30
Magic Number,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,FireEvents,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,Halt,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,Halt,The following statement contains a magic number: i <= 120
Magic Number,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,RunEventSchedule,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMinutes(10));
Magic Number,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,RunEventSchedule,The following statement contains a magic number: _writerTimeouts > 20 || _readerTimeouts > 20
Magic Number,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,RunEventSchedule,The following statement contains a magic number: _writerTimeouts > 20 || _readerTimeouts > 20
Magic Number,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,Start,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,Start,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMinutes(10));
Magic Number,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,Start,The following statement contains a magic number: _writerTimeouts > 20 || _readerTimeouts > 20
Magic Number,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,Start,The following statement contains a magic number: _writerTimeouts > 20 || _readerTimeouts > 20
Magic Number,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,Start,The following statement contains a magic number: Thread.Sleep(10000);
Magic Number,DotNetNuke.Services.Scheduling,SchedulingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\SchedulingProvider.cs,SchedulingProvider,The following statement contains a magic number: DelayAtAppStart = HostController.Instance.GetInteger("SchedulerdelayAtAppStart"' 1)*60;
Magic Number,DotNetNuke.Services.Sitemap,CoreSitemapProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\CoreSitemapProvider.cs,GetPriority,The following statement contains a magic number: priority = 0.1F;
Magic Number,DotNetNuke.Services.Sitemap,CoreSitemapProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\CoreSitemapProvider.cs,GetPriority,The following statement contains a magic number: objTab.Level >= 9
Magic Number,DotNetNuke.Services.Sitemap,SitemapBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Sitemap\SitemapBuilder.cs,BuildSiteMap,The following statement contains a magic number: providerPriorityValue = float.Parse(PortalController.GetPortalSetting(_provider.Name + "Value"' PortalSettings.PortalId' "50")) / 100;
Magic Number,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,WaitTimeForNextMessage,The following statement contains a magic number: var interval = GetPortalSettingAsDouble("MessagingThrottlingInterval"' sender.PortalID' DefaultMessagingThrottlingInterval) * 60;
Magic Number,DotNetNuke.Services.Social.Messaging.Internal,InternalMessagingControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Internal\InternalMessagingControllerImpl.cs,RecipientLimit,The following statement contains a magic number: return GetPortalSettingAsInteger("MessagingRecipientLimit"' portalId' 5);
Magic Number,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,GetEmailItemContent,The following statement contains a magic number: messageDetails.NotificationTypeID == 3
Magic Number,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,GetProfilePicUrl,The following statement contains a magic number: return string.Format(                  "http://{0}/DnnImageHandler.ashx?mode=profilepic&userId={1}&h={2}&w={3}"'                  portalSettings.DefaultPortalAlias'                  userId'                  64'                  64);
Magic Number,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,GetProfilePicUrl,The following statement contains a magic number: return string.Format(                  "http://{0}/DnnImageHandler.ashx?mode=profilepic&userId={1}&h={2}&w={3}"'                  portalSettings.DefaultPortalAlias'                  userId'                  64'                  64);
Magic Number,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,GetNotificationUrl,The following statement contains a magic number: DataCache.SetCache(cacheKey' messageTabId' TimeSpan.FromMinutes(20));
Magic Number,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,GetMessageTab,The following statement contains a magic number: var cacheItemArgs = new CacheItemArgs(cacheKey' 30' CacheItemPriority.Default' sendingPortal);
Magic Number,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,HandleFrequentDigests,The following statement contains a magic number: handledMessages = this.HandleFrequencyDigest(DateTime.Now.AddDays(-7)' SettingLastWeeklyRun' Frequency.Weekly' schedulerInstance' remainingMessages);
Magic Number,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,HandleFrequentDigests,The following statement contains a magic number: this.HandleFrequencyDigest(DateTime.Now.AddDays(-30)' SettingLastMonthlyRun' Frequency.Monthly' schedulerInstance' remainingMessages);
Magic Number,DotNetNuke.Services.Social.Messaging.Scheduler,CoreMessagingScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Scheduler\CoreMessagingScheduler.cs,ResolveUrl,The following statement contains a magic number: var link = match.Groups[2].Value;
Magic Number,DotNetNuke.Security.Permissions.Controls,DesktopModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\DesktopModulePermissionsGrid.cs,ParseKeys,The following statement contains a magic number: String.IsNullOrEmpty(Settings[2])
Magic Number,DotNetNuke.Security.Permissions.Controls,DesktopModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\DesktopModulePermissionsGrid.cs,LoadViewState,The following statement contains a magic number: string state = Convert.ToString(myState[2]);
Magic Number,DotNetNuke.Security.Permissions.Controls,DesktopModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\DesktopModulePermissionsGrid.cs,LoadViewState,The following statement contains a magic number: myState[2] != null
Magic Number,DotNetNuke.Security.Permissions.Controls,DesktopModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\DesktopModulePermissionsGrid.cs,SaveViewState,The following statement contains a magic number: var allStates = new object[3];
Magic Number,DotNetNuke.Security.Permissions.Controls,DesktopModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\DesktopModulePermissionsGrid.cs,SaveViewState,The following statement contains a magic number: allStates[2] = sb.ToString();
Magic Number,DotNetNuke.Security.Permissions.Controls,FolderPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\FolderPermissionsGrid.cs,ParseKeys,The following statement contains a magic number: String.IsNullOrEmpty(settings[2])
Magic Number,DotNetNuke.Security.Permissions.Controls,FolderPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\FolderPermissionsGrid.cs,LoadViewState,The following statement contains a magic number: string state = Convert.ToString(myState[2]);
Magic Number,DotNetNuke.Security.Permissions.Controls,FolderPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\FolderPermissionsGrid.cs,LoadViewState,The following statement contains a magic number: myState[2] != null
Magic Number,DotNetNuke.Security.Permissions.Controls,FolderPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\FolderPermissionsGrid.cs,SaveViewState,The following statement contains a magic number: var allStates = new object[3];
Magic Number,DotNetNuke.Security.Permissions.Controls,FolderPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\FolderPermissionsGrid.cs,SaveViewState,The following statement contains a magic number: allStates[2] = sb.ToString();
Magic Number,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,ParseKeys,The following statement contains a magic number: String.IsNullOrEmpty(Settings[2])
Magic Number,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,LoadViewState,The following statement contains a magic number: TabId = Convert.ToInt32(myState[2]);
Magic Number,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,LoadViewState,The following statement contains a magic number: myState[2] != null
Magic Number,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,LoadViewState,The following statement contains a magic number: InheritViewPermissionsFromTab = Convert.ToBoolean(myState[3]);
Magic Number,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,LoadViewState,The following statement contains a magic number: myState[3] != null
Magic Number,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,LoadViewState,The following statement contains a magic number: string state = Convert.ToString(myState[4]);
Magic Number,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,LoadViewState,The following statement contains a magic number: myState[4] != null
Magic Number,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,SaveViewState,The following statement contains a magic number: var allStates = new object[5];
Magic Number,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,SaveViewState,The following statement contains a magic number: allStates[2] = TabId;
Magic Number,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,SaveViewState,The following statement contains a magic number: allStates[3] = InheritViewPermissionsFromTab;
Magic Number,DotNetNuke.Security.Permissions.Controls,ModulePermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\ModulePermissionsGrid.cs,SaveViewState,The following statement contains a magic number: allStates[4] = sb.ToString();
Magic Number,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,FillSelectRoleComboBox,The following statement contains a magic number: var groupRoles = (selectedRoleGroupId > -2) ? RoleController.Instance.GetRoles(portalSettings.PortalId' r => r.RoleGroupID == selectedRoleGroupId && r.SecurityMode != SecurityMode.SocialGroup && r.Status == RoleStatus.Approved)                  : RoleController.Instance.GetRoles(portalSettings.PortalId' r => r.SecurityMode != SecurityMode.SocialGroup && r.Status == RoleStatus.Approved);
Magic Number,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,CreateChildControls,The following statement contains a magic number: rolePermissionsGrid = new DataGrid              {                  AutoGenerateColumns = false'                  CellSpacing = 0'                  CellPadding = 2'                  GridLines = GridLines.None'                  CssClass = "dnnPermissionsGrid"              };
Magic Number,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,ParsePermissionKeys,The following statement contains a magic number: permission.RoleID = Convert.ToInt32(Settings[4]);
Magic Number,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,ParsePermissionKeys,The following statement contains a magic number: permission.RoleName = Settings[3];
Magic Number,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,ParsePermissionKeys,The following statement contains a magic number: permission.UserID = Convert.ToInt32(Settings[5]);
Magic Number,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,ParsePermissionKeys,The following statement contains a magic number: permission.DisplayName = Settings[6];
Magic Number,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,UpdateRolePermissions,The following statement contains a magic number: var permissionInfo = (PermissionInfo)_permissions[i - 2];
Magic Number,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,UpdateRolePermissions,The following statement contains a magic number: i <= dgi.Cells.Count - 2
Magic Number,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,UpdateUserPermissions,The following statement contains a magic number: var permissionInfo = (PermissionInfo)_permissions[i - 2];
Magic Number,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,UpdateUserPermissions,The following statement contains a magic number: i <= dgi.Cells.Count - 2
Magic Number,DotNetNuke.Security.Permissions.Controls,TabPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\TabPermissionsGrid.cs,ParseKeys,The following statement contains a magic number: String.IsNullOrEmpty(Settings[2])
Magic Number,DotNetNuke.Security.Permissions.Controls,TabPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\TabPermissionsGrid.cs,LoadViewState,The following statement contains a magic number: string state = Convert.ToString(myState[2]);
Magic Number,DotNetNuke.Security.Permissions.Controls,TabPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\TabPermissionsGrid.cs,LoadViewState,The following statement contains a magic number: myState[2] != null
Magic Number,DotNetNuke.Security.Permissions.Controls,TabPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\TabPermissionsGrid.cs,SaveViewState,The following statement contains a magic number: var allStates = new object[3];
Magic Number,DotNetNuke.Security.Permissions.Controls,TabPermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\TabPermissionsGrid.cs,SaveViewState,The following statement contains a magic number: allStates[2] = sb.ToString();
Magic Number,DotNetNuke.Services.ClientCapability,FacebookRequestController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ClientCapability\FacebookRequestController.cs,GetFacebookDetailsFromRequest,The following statement contains a magic number: var base64JsonArray = Convert.FromBase64String(decodedJson.PadRight(decodedJson.Length + (4 - decodedJson.Length%4)%4' '='));
Magic Number,DotNetNuke.Services.ClientCapability,FacebookRequestController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ClientCapability\FacebookRequestController.cs,GetFacebookDetailsFromRequest,The following statement contains a magic number: var base64JsonArray = Convert.FromBase64String(decodedJson.PadRight(decodedJson.Length + (4 - decodedJson.Length%4)%4' '='));
Magic Number,DotNetNuke.Services.ClientCapability,FacebookRequestController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ClientCapability\FacebookRequestController.cs,GetFacebookDetailsFromRequest,The following statement contains a magic number: var base64JsonArray = Convert.FromBase64String(decodedJson.PadRight(decodedJson.Length + (4 - decodedJson.Length%4)%4' '='));
Magic Number,DotNetNuke.Services.ClientCapability,FacebookRequestController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\ClientCapability\FacebookRequestController.cs,ConvertToTimestamp,The following statement contains a magic number: DateTime epoc = new DateTime(1970' 1' 1' 0' 0' 0' 0);
Magic Number,DotNetNuke.Services.Mobile,RedirectionController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mobile\RedirectionController.cs,IsRedirectAllowedForTheSession,The following statement contains a magic number: var presistCookie = new HttpCookie(DisableRedirectPresistCookieName)  				{  				    Expires = DateTime.Now.AddMinutes(20)'                      Path = (!string.IsNullOrEmpty(Globals.ApplicationPath) ? Globals.ApplicationPath : "/")  				};
Magic Number,DotNetNuke.Services.EventQueue.Config,SubscriberInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\EventQueue\Config\SubscriberInfo.cs,SubscriberInfo,The following statement contains a magic number: PrivateKey = oPortalSecurity.CreateKey(16);
Magic Number,DotNetNuke.Services.Installer,InstallFile,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\InstallFile.cs,ParseFileName,The following statement contains a magic number: Name = fileName.Substring(10' fileName.Length - 10);
Magic Number,DotNetNuke.Services.Installer,InstallFile,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\InstallFile.cs,ParseFileName,The following statement contains a magic number: Name = fileName.Substring(10' fileName.Length - 10);
Magic Number,DotNetNuke.Services.Installer,InstallFile,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\InstallFile.cs,ParseFileName,The following statement contains a magic number: Path = fileName.Substring(0' 10);
Magic Number,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ProcessLegacyLanguages,The following statement contains a magic number: var languagePack = new LanguagePackInfo                                  {                                      LanguageID = language.LanguageId'                                      PackageID = package.PackageID'                                      DependentPackageID = -2                                  };
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,StreamToStream,The following statement contains a magic number: var buf = new byte[1024];
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,StreamToStream,The following statement contains a magic number: count = sourceStream.Read(buf' 0' 1024);
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,InstallURL,The following statement contains a magic number: var parameters = new string[2];
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,InstallURL,The following statement contains a magic number: var parameters = new string[3];
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,InstallURL,The following statement contains a magic number: parameters[2] = "ptype=" + type;
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,InstallURL,The following statement contains a magic number: var parameters = new string[4];
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,InstallURL,The following statement contains a magic number: parameters[2] = "ptype=" + type;
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,InstallURL,The following statement contains a magic number: parameters[3] = "package=" + package;
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,UnInstallURL,The following statement contains a magic number: var parameters = new string[3];
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,UnInstallURL,The following statement contains a magic number: parameters[2] = "packageId=" + packageId;
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,PackageWriterURL,The following statement contains a magic number: var parameters = new string[3];
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,PackageWriterURL,The following statement contains a magic number: parameters[2] = "mid=" + context.ModuleId;
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,UnInstallURL,The following statement contains a magic number: var parameters = new string[2];
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,WriteStream,The following statement contains a magic number: TryToCreateAndExecute(destFileName' (f) => StreamToStream(sourceStream' f)' 3500);
Magic Number,DotNetNuke.Services.Installer,Util,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Util.cs,DeployExtension,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,DotNetNuke.Services.Installer.Log,Logger,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Log\Logger.cs,GetLogsTable,The following statement contains a magic number: spaceTR.Cells.Add(new HtmlTableCell {ColSpan = 2' InnerHtml = "&nbsp;"});
Magic Number,DotNetNuke.Services.Installer.Writers,PackageWriterBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\PackageWriterBase.cs,CreateZipFile,The following statement contains a magic number: int CompressionLevel = 9;
Magic Number,DotNetNuke.Services.Installer.Writers,PackageWriterBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\PackageWriterBase.cs,WritePackageStartElement,The following statement contains a magic number: writer.WriteAttributeString("version"' Package.Version.ToString(3));
Magic Number,DotNetNuke.Services.Installer.Writers,ScriptComponentWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\ScriptComponentWriter.cs,WriteFileElement,The following statement contains a magic number: version = Package.Version.ToString(3);
Magic Number,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMailInternal,The following statement contains a magic number: port < 1 || port > 65535
Magic Number,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,LoadAttachments,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,LoadAttachments,The following statement contains a magic number: var read = attachment.ContentStream.Read(buffer' 0' 4096);
Magic Number,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,SendMails,The following statement contains a magic number: switch (AddressMethod)                  {                      case AddressMethods.Send_TO:                      case AddressMethods.Send_Relay:                          //optimization:                          if (replaceTokens)                          {                              individualBody = (_tokenReplace.Cacheability(_body) == CacheLevel.notCacheable);                              individualSubj = (_tokenReplace.Cacheability(Subject) == CacheLevel.notCacheable);                              if (!individualBody)                              {                                  body = _tokenReplace.ReplaceEnvironmentTokens(body);                              }                              if (!individualSubj)                              {                                  subject = _tokenReplace.ReplaceEnvironmentTokens(subject);                              }                          }                          foreach (UserInfo user in Recipients())                          {                              recipients += 1;                              if (individualBody || individualSubj)                              {                                  _tokenReplace.User = user;                                  _tokenReplace.AccessingUser = user;                                  if (individualBody)                                  {                                      body = _tokenReplace.ReplaceEnvironmentTokens(_body);                                  }                                  if (individualSubj)                                  {                                      subject = _tokenReplace.ReplaceEnvironmentTokens(Subject);                                  }                              }                              string recipient = AddressMethod == AddressMethods.Send_TO ? user.Email : RelayEmailAddress;                                string mailError = Mail.SendMail(_sendingUser.Email'                                                                  recipient'                                                                  ""'                                                                  ""'                                                                  ReplyTo.Email'                                                                  Priority'                                                                  subject'                                                                  BodyFormat'                                                                  Encoding.UTF8'                                                                  body'  																LoadAttachments()'                                                                  _smtpServer'                                                                  _smtpAuthenticationMethod'                                                                  _smtpUsername'                                                                  _smtpPassword'                                                                  _smtpEnableSSL);                              if (!string.IsNullOrEmpty(mailError))                              {                                  mailErrors.Append(mailError);                                  mailErrors.AppendLine();                                  errors += 1;                              }                              else                              {                                  mailRecipients.Append(user.Email);                                  mailRecipients.Append(BodyFormat == MailFormat.Html ? "<br />" : Environment.NewLine);                                  messagesSent += 1;                              }                          }                            break;                      case AddressMethods.Send_BCC:                          var distributionList = new StringBuilder();                          messagesSent = Null.NullInteger;                          foreach (UserInfo user in Recipients())                          {                              recipients += 1;                              distributionList.Append(user.Email + "; ");                              mailRecipients.Append(user.Email);                              mailRecipients.Append(BodyFormat == MailFormat.Html ? "<br />" : Environment.NewLine);                          }                            if (distributionList.Length > 2)                          {                              if (replaceTokens)                              {  								//no access to User properties possible!                                  var tr = new TokenReplace(Scope.Configuration);                                  body = tr.ReplaceEnvironmentTokens(_body);                                  subject = tr.ReplaceEnvironmentTokens(Subject);                              }                              else                              {                                  body = _body;                                  subject = Subject;                              }                              string mailError = Mail.SendMail(_sendingUser.Email'                                                         _sendingUser.Email'                                                         ""'                                                         distributionList.ToString(0' distributionList.Length - 2)'                                                         ReplyTo.Email'                                                         Priority'                                                         subject'                                                         BodyFormat'                                                         Encoding.UTF8'                                                         body'  													   LoadAttachments()'                                                         _smtpServer'                                                         _smtpAuthenticationMethod'                                                         _smtpUsername'                                                         _smtpPassword'                                                         _smtpEnableSSL);                              if (mailError == string.Empty)                              {                                  messagesSent = 1;                              }                              else                              {                                  mailErrors.Append(mailError);                                  errors += 1;                              }                          }                          break;                  }
Magic Number,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,SendMails,The following statement contains a magic number: switch (AddressMethod)                  {                      case AddressMethods.Send_TO:                      case AddressMethods.Send_Relay:                          //optimization:                          if (replaceTokens)                          {                              individualBody = (_tokenReplace.Cacheability(_body) == CacheLevel.notCacheable);                              individualSubj = (_tokenReplace.Cacheability(Subject) == CacheLevel.notCacheable);                              if (!individualBody)                              {                                  body = _tokenReplace.ReplaceEnvironmentTokens(body);                              }                              if (!individualSubj)                              {                                  subject = _tokenReplace.ReplaceEnvironmentTokens(subject);                              }                          }                          foreach (UserInfo user in Recipients())                          {                              recipients += 1;                              if (individualBody || individualSubj)                              {                                  _tokenReplace.User = user;                                  _tokenReplace.AccessingUser = user;                                  if (individualBody)                                  {                                      body = _tokenReplace.ReplaceEnvironmentTokens(_body);                                  }                                  if (individualSubj)                                  {                                      subject = _tokenReplace.ReplaceEnvironmentTokens(Subject);                                  }                              }                              string recipient = AddressMethod == AddressMethods.Send_TO ? user.Email : RelayEmailAddress;                                string mailError = Mail.SendMail(_sendingUser.Email'                                                                  recipient'                                                                  ""'                                                                  ""'                                                                  ReplyTo.Email'                                                                  Priority'                                                                  subject'                                                                  BodyFormat'                                                                  Encoding.UTF8'                                                                  body'  																LoadAttachments()'                                                                  _smtpServer'                                                                  _smtpAuthenticationMethod'                                                                  _smtpUsername'                                                                  _smtpPassword'                                                                  _smtpEnableSSL);                              if (!string.IsNullOrEmpty(mailError))                              {                                  mailErrors.Append(mailError);                                  mailErrors.AppendLine();                                  errors += 1;                              }                              else                              {                                  mailRecipients.Append(user.Email);                                  mailRecipients.Append(BodyFormat == MailFormat.Html ? "<br />" : Environment.NewLine);                                  messagesSent += 1;                              }                          }                            break;                      case AddressMethods.Send_BCC:                          var distributionList = new StringBuilder();                          messagesSent = Null.NullInteger;                          foreach (UserInfo user in Recipients())                          {                              recipients += 1;                              distributionList.Append(user.Email + "; ");                              mailRecipients.Append(user.Email);                              mailRecipients.Append(BodyFormat == MailFormat.Html ? "<br />" : Environment.NewLine);                          }                            if (distributionList.Length > 2)                          {                              if (replaceTokens)                              {  								//no access to User properties possible!                                  var tr = new TokenReplace(Scope.Configuration);                                  body = tr.ReplaceEnvironmentTokens(_body);                                  subject = tr.ReplaceEnvironmentTokens(Subject);                              }                              else                              {                                  body = _body;                                  subject = Subject;                              }                              string mailError = Mail.SendMail(_sendingUser.Email'                                                         _sendingUser.Email'                                                         ""'                                                         distributionList.ToString(0' distributionList.Length - 2)'                                                         ReplyTo.Email'                                                         Priority'                                                         subject'                                                         BodyFormat'                                                         Encoding.UTF8'                                                         body'  													   LoadAttachments()'                                                         _smtpServer'                                                         _smtpAuthenticationMethod'                                                         _smtpUsername'                                                         _smtpPassword'                                                         _smtpEnableSSL);                              if (mailError == string.Empty)                              {                                  messagesSent = 1;                              }                              else                              {                                  mailErrors.Append(mailError);                                  errors += 1;                              }                          }                          break;                  }
Magic Number,DotNetNuke.Services.Syndication,RssHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Syndication\RssHandler.cs,OnPreRender,The following statement contains a magic number: Context.Response.Cache.SetExpires(DateTime.Now.AddSeconds(60));
Magic Number,DotNetNuke.Services.Upgrade.Internals.Steps,IISVerificationStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\IISVerificationStep.cs,Execute,The following statement contains a magic number: !IsDotNetVersionAtLeast(461808)
Magic Number,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallDatabaseStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallDatabaseStep.cs,Execute,The following statement contains a magic number: const int totalSteps = 6;
Magic Number,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallDatabaseStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallDatabaseStep.cs,Execute,The following statement contains a magic number: const int percentForEachStep = 100 / totalSteps;
Magic Number,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallSiteStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallSiteStep.cs,Execute,The following statement contains a magic number: var percentForEachStep = 100 / installConfig.Portals.Count;
Magic Number,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallExtensionsStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallExtensionsStep.cs,Execute,The following statement contains a magic number: Percentage = 100;
Magic Number,DotNetNuke.Services.Upgrade.InternalController.Steps,InstallExtensionsStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InstallExtensionsStep.cs,Execute,The following statement contains a magic number: var percentForEachStep = 100 / packages.Count;
Magic Number,DotNetNuke.Services.Upgrade.InternalController.Steps,FilePermissionCheckStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\FilePermissionCheckStep.cs,Execute,The following statement contains a magic number: Percentage = 100;
Magic Number,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,ProcessRequest,The following statement contains a magic number: var width = 55;
Magic Number,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,ProcessRequest,The following statement contains a magic number: var height = 55;
Magic Number,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,ProcessRequest,The following statement contains a magic number: height = 128;
Magic Number,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,ProcessRequest,The following statement contains a magic number: height > 128
Magic Number,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,ProcessRequest,The following statement contains a magic number: width = 128;
Magic Number,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,ProcessRequest,The following statement contains a magic number: width > 128
Magic Number,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,CalculateSize,The following statement contains a magic number: height = 32;
Magic Number,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,CalculateSize,The following statement contains a magic number: width = 32;
Magic Number,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,CalculateSize,The following statement contains a magic number: height > 0 && height <= 32
Magic Number,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,CalculateSize,The following statement contains a magic number: height = 32;
Magic Number,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,CalculateSize,The following statement contains a magic number: width = 32;
Magic Number,DotNetNuke.Services.UserRequest,UserRequestIPAddressController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserRequest\UserRequestIPAddressController.cs,ValidateIP,The following statement contains a magic number: ipFamily == IPAddressFamily.IPv4 &&                      address.AddressFamily == AddressFamily.InterNetwork &&                       ipString.Split('.').Length == 4
Magic Number,DotNetNuke.Services.Users,PurgeDeletedUsers,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Users\PurgeDeletedUsers.cs,DoWork,The following statement contains a magic number: switch (settings.DataConsentDelayMeasurement)                              {                                  case "h":                                      thresholdDate = DateTime.Now.AddHours(-1 * settings.DataConsentDelay);                                      break;                                  case "d":                                      thresholdDate = DateTime.Now.AddDays(-1 * settings.DataConsentDelay);                                      break;                                  case "w":                                      thresholdDate = DateTime.Now.AddDays(-7 * settings.DataConsentDelay);                                      break;                              }
Magic Number,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,MoveUpDown,The following statement contains a magic number: switch (Command.CommandName)              {                  case ModuleActionType.MoveTop:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' 0' Command.CommandArgument);                      break;                  case ModuleActionType.MoveUp:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' ModuleContext.Configuration.ModuleOrder - 3' Command.CommandArgument);                      break;                  case ModuleActionType.MoveDown:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' ModuleContext.Configuration.ModuleOrder + 3' Command.CommandArgument);                      break;                  case ModuleActionType.MoveBottom:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' (ModuleContext.Configuration.PaneModuleCount * 2) + 1' Command.CommandArgument);                      break;              }
Magic Number,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,MoveUpDown,The following statement contains a magic number: switch (Command.CommandName)              {                  case ModuleActionType.MoveTop:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' 0' Command.CommandArgument);                      break;                  case ModuleActionType.MoveUp:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' ModuleContext.Configuration.ModuleOrder - 3' Command.CommandArgument);                      break;                  case ModuleActionType.MoveDown:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' ModuleContext.Configuration.ModuleOrder + 3' Command.CommandArgument);                      break;                  case ModuleActionType.MoveBottom:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' (ModuleContext.Configuration.PaneModuleCount * 2) + 1' Command.CommandArgument);                      break;              }
Magic Number,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,MoveUpDown,The following statement contains a magic number: switch (Command.CommandName)              {                  case ModuleActionType.MoveTop:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' 0' Command.CommandArgument);                      break;                  case ModuleActionType.MoveUp:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' ModuleContext.Configuration.ModuleOrder - 3' Command.CommandArgument);                      break;                  case ModuleActionType.MoveDown:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' ModuleContext.Configuration.ModuleOrder + 3' Command.CommandArgument);                      break;                  case ModuleActionType.MoveBottom:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' (ModuleContext.Configuration.PaneModuleCount * 2) + 1' Command.CommandArgument);                      break;              }
Magic Number,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,GetClientScriptURL,The following statement contains a magic number: Script = Script.Substring(JSPos + 11);
Magic Number,DotNetNuke.UI.Containers,ActionsMenu,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionsMenu.cs,SetMenuDefaults,The following statement contains a magic number: ProviderControl.StyleIconWidth = 15;
Magic Number,DotNetNuke.UI.Containers,ActionsMenu,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionsMenu.cs,SetMenuDefaults,The following statement contains a magic number: ProviderControl.MouseOutHideDelay = 500;
Magic Number,DotNetNuke.UI.Modules,ModuleHost,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleHost.cs,RestoreCachedClientResourceRegistrations,The following statement contains a magic number: switch (dependencyType)                  {                      case "JAVASCRIPT":                          if (string.IsNullOrEmpty(forceProvider))                          {                              forceProvider = DefaultJsProvider;                          }                            if (priority == Null.NullInteger)                          {                              priority = (int)FileOrder.Js.DefaultPriority;                          }                            ClientResourceManager.RegisterScript(Page' filePath' priority' forceProvider);                          break;                      case "CSS":                          if (string.IsNullOrEmpty(forceProvider))                          {                              forceProvider = DefaultCssProvider;                          }                            if (priority == Null.NullInteger)                          {                              priority = (int)FileOrder.Css.DefaultPriority;                          }                            ClientResourceManager.RegisterStyleSheet(Page' filePath' priority' forceProvider);                          break;                      case "JS-LIBRARY":                          var args = filePath.Split(new[] { '''' }' StringSplitOptions.None);                          if (string.IsNullOrEmpty(args[1]))                          {                              JavaScript.RequestRegistration(args[0]);                          }                          else if (string.IsNullOrEmpty(args[2]))                          {                              JavaScript.RequestRegistration(args[0]' new Version(args[1]));                          }                          else                          {                              JavaScript.RequestRegistration(args[0]' new Version(args[1])' (SpecificVersion)Enum.Parse(typeof(SpecificVersion)' args[2]));                          }                            break;                  }
Magic Number,DotNetNuke.UI.Modules,ModuleHost,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleHost.cs,RestoreCachedClientResourceRegistrations,The following statement contains a magic number: switch (dependencyType)                  {                      case "JAVASCRIPT":                          if (string.IsNullOrEmpty(forceProvider))                          {                              forceProvider = DefaultJsProvider;                          }                            if (priority == Null.NullInteger)                          {                              priority = (int)FileOrder.Js.DefaultPriority;                          }                            ClientResourceManager.RegisterScript(Page' filePath' priority' forceProvider);                          break;                      case "CSS":                          if (string.IsNullOrEmpty(forceProvider))                          {                              forceProvider = DefaultCssProvider;                          }                            if (priority == Null.NullInteger)                          {                              priority = (int)FileOrder.Css.DefaultPriority;                          }                            ClientResourceManager.RegisterStyleSheet(Page' filePath' priority' forceProvider);                          break;                      case "JS-LIBRARY":                          var args = filePath.Split(new[] { '''' }' StringSplitOptions.None);                          if (string.IsNullOrEmpty(args[1]))                          {                              JavaScript.RequestRegistration(args[0]);                          }                          else if (string.IsNullOrEmpty(args[2]))                          {                              JavaScript.RequestRegistration(args[0]' new Version(args[1]));                          }                          else                          {                              JavaScript.RequestRegistration(args[0]' new Version(args[1])' (SpecificVersion)Enum.Parse(typeof(SpecificVersion)' args[2]));                          }                            break;                  }
Magic Number,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,AddHelpActions,The following statement contains a magic number: url = UrlUtils.PopUpUrl(Configuration.ModuleControl.HelpURL' PortalSettings' false' false' 550' 950);
Magic Number,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,AddHelpActions,The following statement contains a magic number: url = UrlUtils.PopUpUrl(Configuration.ModuleControl.HelpURL' PortalSettings' false' false' 550' 950);
Magic Number,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,EditUrl,The following statement contains a magic number: parameters = new string[2 + additionalParameters.Length];
Magic Number,DotNetNuke.UI.Modules,ModuleInstanceContext,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleInstanceContext.cs,EditUrl,The following statement contains a magic number: Array.Copy(additionalParameters' 0' parameters' 2' additionalParameters.Length);
Magic Number,DotNetNuke.UI.Skins.Controls,SkinsEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\SkinsEditControl.cs,RaisePostBackEvent,The following statement contains a magic number: switch (eventArgument.Substring(0' 3))              {                  case "Del":                      args = new PropertyEditorEventArgs(Name);                      args.Value = DictionaryValue;                      args.OldValue = OldDictionaryValue;                      args.Key = int.Parse(eventArgument.Substring(7));                      args.Changed = true;                      base.OnItemDeleted(args);                      break;                  case "Add":                      args = new PropertyEditorEventArgs(Name);                      args.Value = AddedItem;                      args.StringValue = AddedItem;                      args.Changed = true;                      base.OnItemAdded(args);                      break;              }
Magic Number,DotNetNuke.UI.Skins.Controls,SkinsEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\SkinsEditControl.cs,RaisePostBackEvent,The following statement contains a magic number: switch (eventArgument.Substring(0' 3))              {                  case "Del":                      args = new PropertyEditorEventArgs(Name);                      args.Value = DictionaryValue;                      args.OldValue = OldDictionaryValue;                      args.Key = int.Parse(eventArgument.Substring(7));                      args.Changed = true;                      base.OnItemDeleted(args);                      break;                  case "Add":                      args = new PropertyEditorEventArgs(Name);                      args.Value = AddedItem;                      args.StringValue = AddedItem;                      args.Changed = true;                      base.OnItemAdded(args);                      break;              }
Magic Number,DotNetNuke.UI.Skins,SkinControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinControl.cs,OnLoad,The following statement contains a magic number: switch (_SkinSrc.Substring(0' 3))                          {                              case "[L]":                                  optHost.Checked = false;                                  optSite.Checked = true;                                  break;                              case "[G]":                                  optSite.Checked = false;                                  optHost.Checked = true;                                  break;                          }
Magic Number,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,FormatSkinSrc,The following statement contains a magic number: switch (strSkinSrc.Substring(0' 3).ToLowerInvariant())                  {                      case "[g]":                          strSkinSrc = GdirRegex.Replace(strSkinSrc' Globals.HostPath);                          break;                      case "[s]":                          strSkinSrc = SdirRegex.Replace(strSkinSrc' portalSettings.HomeSystemDirectory);                          break;                      case "[l]": //to be compliant with all versions                          strSkinSrc = LdirRegex.Replace(strSkinSrc' portalSettings.HomeDirectory);                          break;                  }
Magic Number,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,UploadLegacySkin,The following statement contains a magic number: int intSize = 2048;
Magic Number,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,UploadLegacySkin,The following statement contains a magic number: var arrData = new byte[2048];
Magic Number,DotNetNuke.UI.Skins,SkinFileProcessor,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,SkinFileProcessor,The following statement contains a magic number: Message += SkinController.FormatMessage(PACKAGE_LOAD' Path.GetFileName(FileName)' 2' false);
Magic Number,DotNetNuke.UI.Skins,SkinFileProcessor,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,SkinFileProcessor,The following statement contains a magic number: Message += SkinController.FormatMessage(string.Format(DUPLICATE_ERROR' Token)'                                                              string.Format(DUPLICATE_DETAIL' m_ControlList[Token]' objSkinControl.ControlSrc)'                                                              2'                                                              true);
Magic Number,DotNetNuke.UI.Skins,ControlParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,TokenMatchHandler,The following statement contains a magic number: Messages += SkinController.FormatMessage(TOKEN_PROC' "[" + AttributeNode + "]"' 2' false);
Magic Number,DotNetNuke.UI.Skins,ControlParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,TokenMatchHandler,The following statement contains a magic number: Messages += SkinController.FormatMessage(TOKEN_SKIN' (string)ControlList[Token]' 2' false);
Magic Number,DotNetNuke.UI.Skins,ControlParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,TokenMatchHandler,The following statement contains a magic number: Messages += SkinController.FormatMessage(TOKEN_FOUND' "[" + AttributeNode + "]"' 2' false);
Magic Number,DotNetNuke.UI.Skins,ControlParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,TokenMatchHandler,The following statement contains a magic number: Messages += SkinController.FormatMessage(TOKEN_FORMAT'                                                                               xmlSkinAttribute.SelectSingleNode("Name").InnerText + "=\"" + xmlSkinAttribute.SelectSingleNode("Value").InnerText + "\""'                                                                               2'                                                                               false);
Magic Number,DotNetNuke.UI.Skins,ControlParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,TokenMatchHandler,The following statement contains a magic number: Messages += SkinController.FormatMessage(CONTROL_FORMAT' "&lt;" + SkinControl + " /&gt;"' 2' false);
Magic Number,DotNetNuke.UI.Skins,ObjectParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,ObjectMatchHandler,The following statement contains a magic number: Messages += SkinController.FormatMessage(OBJECT_PROC' Token' 2' false);
Magic Number,DotNetNuke.UI.Skins,ObjectParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,ObjectMatchHandler,The following statement contains a magic number: Messages += SkinController.FormatMessage(OBJECT_SKIN' (string)ControlList[Token]' 2' false);
Magic Number,DotNetNuke.UI.Skins,ObjectParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,ObjectMatchHandler,The following statement contains a magic number: Messages += SkinController.FormatMessage(CONTROL_FORMAT' "&lt;" + SkinControl + " /&gt;"' 2' false);
Magic Number,DotNetNuke.UI.Skins,PathParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,MatchHandler,The following statement contains a magic number: m_Messages += SkinController.FormatMessage(SUBST' string.Format(SUBST_DETAIL' HttpUtility.HtmlEncode(strOldTag)' HttpUtility.HtmlEncode(strNewTag))' 2' false);
Magic Number,DotNetNuke.UI.Skins,SkinFile,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,SkinFile,The following statement contains a magic number: switch (FileExtension)                  {                      case ".htm":                      case ".html":                          //set output file name to <filename>.ASCX                          m_WriteFileName = FileName.Replace(Path.GetExtension(FileName)' ".ascx");                            //capture warning if file does not contain a id="ContentPane" or [CONTENTPANE]                          if (!PaneCheck1Regex.IsMatch(Contents) && !PaneCheck2Regex.IsMatch(Contents))                          {                              m_Messages += SkinController.FormatMessage(FILE_FORMAT_ERROR' string.Format(FILE_FORMAT_ERROR' FileName)' 2' true);                          }                            //Check for existence of and load skin file level attribute information                           if (File.Exists(FileName.Replace(FileExtension' ".xml")))                          {                              try                              {                                  m_FileAttributes.Load(FileName.Replace(FileExtension' ".xml"));                                  m_Messages += SkinController.FormatMessage(FILE_LOAD' FileName' 2' false);                              }                              catch (Exception exc) //could not load XML file                              {                                  Logger.Error(exc);                                  m_FileAttributes = SkinAttributes;                                  m_Messages += SkinController.FormatMessage(FILE_LOAD_ERROR' FileName' 2' true);                              }                          }                          break;                      default:                          //output file name is same as input file name                          m_WriteFileName = FileName;                          break;                  }
Magic Number,DotNetNuke.UI.Skins,SkinFile,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,SkinFile,The following statement contains a magic number: switch (FileExtension)                  {                      case ".htm":                      case ".html":                          //set output file name to <filename>.ASCX                          m_WriteFileName = FileName.Replace(Path.GetExtension(FileName)' ".ascx");                            //capture warning if file does not contain a id="ContentPane" or [CONTENTPANE]                          if (!PaneCheck1Regex.IsMatch(Contents) && !PaneCheck2Regex.IsMatch(Contents))                          {                              m_Messages += SkinController.FormatMessage(FILE_FORMAT_ERROR' string.Format(FILE_FORMAT_ERROR' FileName)' 2' true);                          }                            //Check for existence of and load skin file level attribute information                           if (File.Exists(FileName.Replace(FileExtension' ".xml")))                          {                              try                              {                                  m_FileAttributes.Load(FileName.Replace(FileExtension' ".xml"));                                  m_Messages += SkinController.FormatMessage(FILE_LOAD' FileName' 2' false);                              }                              catch (Exception exc) //could not load XML file                              {                                  Logger.Error(exc);                                  m_FileAttributes = SkinAttributes;                                  m_Messages += SkinController.FormatMessage(FILE_LOAD_ERROR' FileName' 2' true);                              }                          }                          break;                      default:                          //output file name is same as input file name                          m_WriteFileName = FileName;                          break;                  }
Magic Number,DotNetNuke.UI.Skins,SkinFile,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,SkinFile,The following statement contains a magic number: switch (FileExtension)                  {                      case ".htm":                      case ".html":                          //set output file name to <filename>.ASCX                          m_WriteFileName = FileName.Replace(Path.GetExtension(FileName)' ".ascx");                            //capture warning if file does not contain a id="ContentPane" or [CONTENTPANE]                          if (!PaneCheck1Regex.IsMatch(Contents) && !PaneCheck2Regex.IsMatch(Contents))                          {                              m_Messages += SkinController.FormatMessage(FILE_FORMAT_ERROR' string.Format(FILE_FORMAT_ERROR' FileName)' 2' true);                          }                            //Check for existence of and load skin file level attribute information                           if (File.Exists(FileName.Replace(FileExtension' ".xml")))                          {                              try                              {                                  m_FileAttributes.Load(FileName.Replace(FileExtension' ".xml"));                                  m_Messages += SkinController.FormatMessage(FILE_LOAD' FileName' 2' false);                              }                              catch (Exception exc) //could not load XML file                              {                                  Logger.Error(exc);                                  m_FileAttributes = SkinAttributes;                                  m_Messages += SkinController.FormatMessage(FILE_LOAD_ERROR' FileName' 2' true);                              }                          }                          break;                      default:                          //output file name is same as input file name                          m_WriteFileName = FileName;                          break;                  }
Magic Number,DotNetNuke.UI.Skins,SkinFile,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,Write,The following statement contains a magic number: m_Messages += SkinController.FormatMessage(FILE_WRITE' Path.GetFileName(WriteFileName)' 2' false);
Magic Number,DotNetNuke.UI.Skins,SkinFile,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,PrependASCXDirectives,The following statement contains a magic number: Messages += SkinController.FormatMessage(CONTROL_DIR' HttpUtility.HtmlEncode(Prefix)' 2' false);
Magic Number,DotNetNuke.UI.Skins,SkinFile,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,PrependASCXDirectives,The following statement contains a magic number: Messages += SkinController.FormatMessage(CONTROL_REG' HttpUtility.HtmlEncode(Item)' 2' false);
Magic Number,DotNetNuke.UI.Skins,SkinThumbNailControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinThumbNailControl.cs,CreateThumbnail,The following statement contains a magic number: const int intSize = 140;
Magic Number,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,OnLoad,The following statement contains a magic number: txtCity.TabIndex = Convert.ToInt16(StartTabIndex + 2);
Magic Number,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,OnLoad,The following statement contains a magic number: cboCountry.TabIndex = Convert.ToInt16(StartTabIndex + 3);
Magic Number,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,OnLoad,The following statement contains a magic number: cboRegion.TabIndex = Convert.ToInt16(StartTabIndex + 4);
Magic Number,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,OnLoad,The following statement contains a magic number: txtRegion.TabIndex = Convert.ToInt16(StartTabIndex + 5);
Magic Number,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,OnLoad,The following statement contains a magic number: txtPostal.TabIndex = Convert.ToInt16(StartTabIndex + 6);
Magic Number,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,OnLoad,The following statement contains a magic number: txtTelephone.TabIndex = Convert.ToInt16(StartTabIndex + 7);
Magic Number,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,OnLoad,The following statement contains a magic number: txtCell.TabIndex = Convert.ToInt16(StartTabIndex + 8);
Magic Number,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,OnLoad,The following statement contains a magic number: txtFax.TabIndex = Convert.ToInt16(StartTabIndex + 9);
Magic Number,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,DoChangeURL,The following statement contains a magic number: var objFile = FileManager.Instance.GetFile(int.Parse(_Url.Substring(7)));
Magic Number,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,DoChangeURL,The following statement contains a magic number: UserInfo objUser = UserController.GetUserById(_objPortal.PortalID' int.Parse(_Url.Substring(7)));
Magic Number,DotNetNuke.UI.UserControls,URLTrackingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLTrackingControl.cs,OnLoad,The following statement contains a magic number: txtStartDate.Text = DateTime.Today.AddDays(-6).ToShortDateString();
Magic Number,DotNetNuke.UI.UserControls,User,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\User.cs,OnLoad,The following statement contains a magic number: txtUsername.TabIndex = Convert.ToInt16(_StartTabIndex + 2);
Magic Number,DotNetNuke.UI.UserControls,User,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\User.cs,OnLoad,The following statement contains a magic number: txtPassword.TabIndex = Convert.ToInt16(_StartTabIndex + 3);
Magic Number,DotNetNuke.UI.UserControls,User,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\User.cs,OnLoad,The following statement contains a magic number: txtConfirm.TabIndex = Convert.ToInt16(_StartTabIndex + 4);
Magic Number,DotNetNuke.UI.UserControls,User,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\User.cs,OnLoad,The following statement contains a magic number: txtEmail.TabIndex = Convert.ToInt16(_StartTabIndex + 5);
Magic Number,DotNetNuke.UI.UserControls,User,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\User.cs,OnLoad,The following statement contains a magic number: txtWebsite.TabIndex = Convert.ToInt16(_StartTabIndex + 6);
Magic Number,DotNetNuke.UI.UserControls,User,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\User.cs,OnLoad,The following statement contains a magic number: txtIM.TabIndex = Convert.ToInt16(_StartTabIndex + 7);
Magic Number,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,The following statement contains a magic number: EnableMinMax(objButton' objContent' intModuleId' blnDefaultMin' strMinIconLoc' strMaxIconLoc' ePersistanceType' 5);
Magic Number,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,The following statement contains a magic number: EnableMinMax(objButton' objContent' -1' blnDefaultMin' strMinIconLoc' strMaxIconLoc' ePersistanceType' 5' strPersonalizationNamingCtr' strPersonalizationKey);
Magic Number,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,The following statement contains a magic number: intAnimationFrames != 5
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateImage,The following statement contains a magic number: Brush b = new LinearGradientBrush(rect'                                                Color.FromArgb(_Rand.Next(224)' _Rand.Next(224)' _Rand.Next(224))'                                                Color.FromArgb(_Rand.Next(224)' _Rand.Next(224)' _Rand.Next(224))'  											  Convert.ToSingle(_Rand.NextDouble())*360'  											  false);
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateImage,The following statement contains a magic number: Brush b = new LinearGradientBrush(rect'                                                Color.FromArgb(_Rand.Next(224)' _Rand.Next(224)' _Rand.Next(224))'                                                Color.FromArgb(_Rand.Next(224)' _Rand.Next(224)' _Rand.Next(224))'  											  Convert.ToSingle(_Rand.NextDouble())*360'  											  false);
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateImage,The following statement contains a magic number: Brush b = new LinearGradientBrush(rect'                                                Color.FromArgb(_Rand.Next(224)' _Rand.Next(224)' _Rand.Next(224))'                                                Color.FromArgb(_Rand.Next(224)' _Rand.Next(224)' _Rand.Next(224))'  											  Convert.ToSingle(_Rand.NextDouble())*360'  											  false);
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateImage,The following statement contains a magic number: Brush b = new LinearGradientBrush(rect'                                                Color.FromArgb(_Rand.Next(224)' _Rand.Next(224)' _Rand.Next(224))'                                                Color.FromArgb(_Rand.Next(224)' _Rand.Next(224)' _Rand.Next(224))'  											  Convert.ToSingle(_Rand.NextDouble())*360'  											  false);
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateImage,The following statement contains a magic number: Brush b = new LinearGradientBrush(rect'                                                Color.FromArgb(_Rand.Next(224)' _Rand.Next(224)' _Rand.Next(224))'                                                Color.FromArgb(_Rand.Next(224)' _Rand.Next(224)' _Rand.Next(224))'  											  Convert.ToSingle(_Rand.NextDouble())*360'  											  false);
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateImage,The following statement contains a magic number: Brush b = new LinearGradientBrush(rect'                                                Color.FromArgb(_Rand.Next(224)' _Rand.Next(224)' _Rand.Next(224))'                                                Color.FromArgb(_Rand.Next(224)' _Rand.Next(224)' _Rand.Next(224))'  											  Convert.ToSingle(_Rand.NextDouble())*360'  											  false);
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateImage,The following statement contains a magic number: Brush b = new LinearGradientBrush(rect'                                                Color.FromArgb(_Rand.Next(224)' _Rand.Next(224)' _Rand.Next(224))'                                                Color.FromArgb(_Rand.Next(224)' _Rand.Next(224)' _Rand.Next(224))'  											  Convert.ToSingle(_Rand.NextDouble())*360'  											  false);
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateImage,The following statement contains a magic number: DistortImage(ref bmp' _Rand.Next(5' 20));
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateImage,The following statement contains a magic number: DistortImage(ref bmp' _Rand.Next(5' 20));
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateImage,The following statement contains a magic number: _Rand.Next(2) == 1
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateText,The following statement contains a magic number: var emSize = Convert.ToInt32(width*2/text.Length);
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateText,The following statement contains a magic number: emSize -= 2;
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateText,The following statement contains a magic number: (emSize > 2)
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,CreateText,The following statement contains a magic number: emSize += 8;
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,DistortImage,The following statement contains a magic number: int newX = Convert.ToInt32(x + (distortion*Math.Sin(Math.PI*y/64.0)));
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,DistortImage,The following statement contains a magic number: int newY = Convert.ToInt32(y + (distortion*Math.Cos(Math.PI*x/64.0)));
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,GenerateImage,The following statement contains a magic number: string text = Settings[2];
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,GenerateImage,The following statement contains a magic number: string backgroundImage = Settings[3];
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,WarpText,The following statement contains a magic number: intWarpDivisor = _Rand.Next(4' 8);
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,WarpText,The following statement contains a magic number: intWarpDivisor = _Rand.Next(4' 8);
Magic Number,DotNetNuke.UI.WebControls,CaptchaControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\CaptchaControl.cs,SaveViewState,The following statement contains a magic number: var allStates = new object[2];
Magic Number,DotNetNuke.UI.WebControls,RolesSelectionGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DataGrids\RolesSelectionGrid.cs,GetRoles,The following statement contains a magic number: int roleGroupId = -2;
Magic Number,DotNetNuke.UI.WebControls,RolesSelectionGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DataGrids\RolesSelectionGrid.cs,GetRoles,The following statement contains a magic number: _roles = roleGroupId > -2                      ? RoleController.Instance.GetRoles(PortalController.Instance.GetCurrentPortalSettings().PortalId' r => r.RoleGroupID == roleGroupId && r.SecurityMode != SecurityMode.SocialGroup && r.Status == RoleStatus.Approved)                      : RoleController.Instance.GetRoles(PortalController.Instance.GetCurrentPortalSettings().PortalId' r => r.SecurityMode != SecurityMode.SocialGroup && r.Status == RoleStatus.Approved);
Magic Number,DotNetNuke.UI.WebControls,RolesSelectionGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DataGrids\RolesSelectionGrid.cs,SaveViewState,The following statement contains a magic number: var allStates = new object[2];
Magic Number,DotNetNuke.UI.WebControls,RolesSelectionGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DataGrids\RolesSelectionGrid.cs,UpdateRoleSelections,The following statement contains a magic number: const int i = 2;
Magic Number,DotNetNuke.UI.WebControls,LanguageSelector,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\LanguageSelector.cs,CreateChildControls,The following statement contains a magic number: GetCultures(SelectionObject == LanguageSelectionObject.SpecificCulture).Length < 2
Magic Number,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,BindPageNumbers,The following statement contains a magic number: const int pageLinksPerPage = 10;
Magic Number,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,BindPageNumbers,The following statement contains a magic number: tmpNum = CurrentPage - pageLinksPerPage/2;
Magic Number,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,BindPageNumbers,The following statement contains a magic number: CurrentPage > (pageLinksPerPage/2)
Magic Number,DotNetNuke.UI.WebControls,PagingControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PagingControl.cs,Render,The following statement contains a magic number: var result = new StringBuilder(1024);
Magic Number,DotNetNuke.UI.WebControls,DateTimeEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DateTimeEditControl.cs,CreateChildControls,The following statement contains a magic number: int maxHour = 12;
Magic Number,DotNetNuke.UI.WebControls,DateTimeEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DateTimeEditControl.cs,CreateChildControls,The following statement contains a magic number: maxHour = 23;
Magic Number,DotNetNuke.UI.WebControls,DateTimeEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DateTimeEditControl.cs,CreateChildControls,The following statement contains a magic number: i <= 59
Magic Number,DotNetNuke.UI.WebControls,DateTimeEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DateTimeEditControl.cs,LoadDateControls,The following statement contains a magic number: hour -= 12;
Magic Number,DotNetNuke.UI.WebControls,DateTimeEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DateTimeEditControl.cs,LoadDateControls,The following statement contains a magic number: hour >= 12
Magic Number,DotNetNuke.UI.WebControls,DateTimeEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DateTimeEditControl.cs,LoadDateControls,The following statement contains a magic number: hour = 12;
Magic Number,DotNetNuke.UI.WebControls,DateTimeEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DateTimeEditControl.cs,LoadPostData,The following statement contains a magic number: postedValue = postedValue.AddHours(12);
Magic Number,DotNetNuke.UI.WebControls,DNNRichTextEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNRichTextEditControl.cs,CreateChildControls,The following statement contains a magic number: _richTextEditor.Height = new Unit(250);
Magic Number,DotNetNuke.UI.WebControls,DNNRichTextEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNRichTextEditControl.cs,CreateChildControls,The following statement contains a magic number: _richTextEditor.Width = new Unit(400);
Magic Number,DotNetNuke.UI.WebControls,VersionEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\VersionEditControl.cs,RenderDropDownList,The following statement contains a magic number: i <= 99
Magic Number,DotNetNuke.UI.WebControls,VersionEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\VersionEditControl.cs,RenderViewMode,The following statement contains a magic number: writer.Write(Version.ToString(3));
Magic Number,DotNetNuke.UI.WebControls,FieldEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\FieldEditorControl.cs,BuildTable,The following statement contains a magic number: editorCell.ColumnSpan = 2;
Magic Number,DotNetNuke.UI.WebControls,FieldEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\FieldEditorControl.cs,BuildTable,The following statement contains a magic number: labelCell.ColumnSpan = 2;
Magic Number,DotNetNuke.UI.WebControls,FieldEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\FieldEditorControl.cs,BuildTable,The following statement contains a magic number: validatorsCell.ColumnSpan = 2;
Magic Number,DotNetNuke.Entities.Controllers,HostController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Controllers\HostController.cs,GetSettingsFromDatabase,The following statement contains a magic number: var config = new ConfigurationSetting                                       {                                           Key = key'                                            IsSecure = Convert.ToBoolean(dr[2])'                                            Value = dr.IsDBNull(1) ? string.Empty : dr.GetString(1)                                       };
Duplicate Code,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,AddFileVersion,The method contains a code clone-set at the following line numbers (starting from the method definition): ((4' 23)' (26' 45))
Duplicate Code,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddTabToTabDict,The method contains a code clone-set at the following line numbers (starting from the method definition): ((239' 263)' (258' 282))
Missing Default,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,BuildCrossTabDataSet,The following switch statement is missing a default case: switch (arrField[1])                              {                                  case "Decimal":                                      row[arrField[0]] = 0;                                      break;                                  case "String":                                      row[arrField[0]] = "";                                      break;                              }
Missing Default,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,ImportUrl,The following switch statement is missing a default case: switch (urlType)              {                  case TabType.File:                      if (Int32.TryParse(url.Replace("FileID="' "")' out intId))                      {                          var objFile = FileManager.Instance.GetFile(intId);                          if (objFile == null)                          {                              //fileId does not exist in the portal                              strUrl = "";                          }                      }                      else                      {                          //failed to get fileId                          strUrl = "";                      }                      break;                  case TabType.Member:                      if (Int32.TryParse(url.Replace("UserID="' "")' out intId))                      {                          if (UserController.GetUserById(portalSettings.PortalId' intId) == null)                          {                              //UserId does not exist for this portal                              strUrl = "";                          }                      }                      else                      {                          //failed to get UserId                          strUrl = "";                      }                      break;                  case TabType.Tab:                      if (Int32.TryParse(url' out intId))                      {                          if (TabController.Instance.GetTab(intId' portalSettings.PortalId' false) == null)                          {                              //the tab does not exist                              strUrl = "";                          }                      }                      else                      {                          //failed to get TabId                          strUrl = "";                      }                      break;              }
Missing Default,DotNetNuke.Common,Globals,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Globals.cs,GetRoleName,The following switch statement is missing a default case: switch (Convert.ToString(RoleID))              {                  case glbRoleAllUsers:                      return glbRoleAllUsersName;                  case glbRoleUnauthUser:                      return glbRoleUnauthUserName;              }
Missing Default,DotNetNuke.Common,Initialize,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Initialize.cs,CheckVersion,The following switch statement is missing a default case: switch (Globals.Status)              {                  case Globals.UpgradeStatus.Install:                      if (autoUpgrade || useWizard)                      {                          retValue = useWizard ? "~/Install/InstallWizard.aspx" : "~/Install/Install.aspx?mode=install";                      }                      else                      {                          CreateUnderConstructionPage(Server);                          retValue = "~/Install/UnderConstruction.htm";                          Logger.Info("UnderConstruction page was shown because application needs to be installed' and both the AutoUpgrade and UseWizard AppSettings in web.config are false. Use /install/install.aspx?mode=install to install application. ");                      }                      break;                  case Globals.UpgradeStatus.Upgrade:                      if (autoUpgrade || useWizard)                      {                          retValue = useWizard ? "~/Install/UpgradeWizard.aspx" : "~/Install/Install.aspx?mode=upgrade";                      }                      else                      {                          CreateUnderConstructionPage(Server);                          retValue = "~/Install/UnderConstruction.htm";                          Logger.Info("UnderConstruction page was shown because application needs to be upgraded' and both the AutoUpgrade and UseInstallWizard AppSettings in web.config are false. Use /install/install.aspx?mode=upgrade to upgrade application. ");                      }                      break;                  case Globals.UpgradeStatus.Error:                      // here we need to check if the application is already installed                      // or is in pre-install state.                      // see http://support.dotnetnuke.com/project/DNN/2/item/26053 for scenarios                      bool isInstalled = Globals.IsInstalled();                        if (!isInstalled && (useWizard || autoUpgrade))                      {                          // app has never been installed' and either Wizard or Autoupgrade is configured                          CreateUnderConstructionPage(Server);                          retValue = "~/Install/UnderConstruction.htm";                          Logger.Error("UnderConstruction page was shown because we cannot ascertain the application was ever installed' and there is no working database connection. Check database connectivity before continuing. ");                      }                      else                      {                          //500 Error - Redirect to ErrorPage                          if ((HttpContext.Current != null))                          {                              if (!isInstalled)                              {                                  Logger.Error("The connection to the database has failed' the application is not installed yet' and both AutoUpgrade and UseInstallWizard are not set in web.config' a 500 error page will be shown to visitors");                              }                              else                              {                                  Logger.Error("The connection to the database has failed' however' the application is already completely installed' a 500 error page will be shown to visitors");                              }                              string url = "~/ErrorPage.aspx?status=500&error=Site Unavailable&error2=Connection To The Database Failed";                              HttpContext.Current.Response.Clear();                              HttpContext.Current.Server.Transfer(url);                          }                      }                        break;              }
Missing Default,DotNetNuke.Common.Utilities,DataCache,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\DataCache.cs,ItemRemovedCallback,The following switch statement is missing a default case: switch (removedReason)                      {                          case CacheItemRemovedReason.Removed:                              log.LogTypeKey = EventLogController.EventLogType.CACHE_REMOVED.ToString();                              break;                          case CacheItemRemovedReason.Expired:                              log.LogTypeKey = EventLogController.EventLogType.CACHE_EXPIRED.ToString();                              break;                          case CacheItemRemovedReason.Underused:                              log.LogTypeKey = EventLogController.EventLogType.CACHE_UNDERUSED.ToString();                              break;                          case CacheItemRemovedReason.DependencyChanged:                              log.LogTypeKey = EventLogController.EventLogType.CACHE_DEPENDENCYCHANGED.ToString();                              break;                      }
Missing Default,DotNetNuke.Common.Utilities,PathUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\PathUtils.cs,GetUserFolderPathElementInternal,The following switch statement is missing a default case: switch (mode)              {                  case UserFolderElement.Root:                      element = (Convert.ToInt32(userId) & byteOffset).ToString("000");                      break;                  case UserFolderElement.SubFolder:                      element = userId.ToString("00").Substring(userId.ToString("00").Length - subfolderSeedLength' subfolderSeedLength);                      break;              }
Missing Default,DotNetNuke.Data,DataProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Data\DataProvider.cs,TestDatabaseConnection,The following switch statement is missing a default case: switch (sqlError.Number)                          {                              case 17:                                  filteredMessage = "Sql server does not exist or access denied";                                  break;                              case 4060:                                  filteredMessage = "Invalid Database";                                  break;                              case 18456:                                  filteredMessage = "Sql login failed";                                  break;                              case 1205:                                  filteredMessage = "Sql deadlock victim";                                  break;                          }
Missing Default,DotNetNuke.Entities.Modules,ModuleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleController.cs,DeserializeModule,The following switch statement is missing a default case: switch (XmlUtils.GetNodeValue(nodeModule.CreateNavigator()' "visibility"))              {                  case "Maximized":                      module.Visibility = VisibilityState.Maximized;                      break;                  case "Minimized":                      module.Visibility = VisibilityState.Minimized;                      break;                  case "None":                      module.Visibility = VisibilityState.None;                      break;              }
Missing Default,DotNetNuke.Entities.Modules,ControlInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ControlInfo.cs,ReadXmlInternal,The following switch statement is missing a default case: switch (reader.Name)              {                  case "controlKey":                      ControlKey = reader.ReadElementContentAsString();                      break;                  case "controlSrc":                      ControlSrc = reader.ReadElementContentAsString();                      break;                  case "supportsPartialRendering":                      string elementvalue = reader.ReadElementContentAsString();                      if (!string.IsNullOrEmpty(elementvalue))                      {                          SupportsPartialRendering = bool.Parse(elementvalue);                      }                      break;              }
Missing Default,DotNetNuke.Entities.Modules,DesktopModuleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleInfo.cs,WriteXml,The following switch statement is missing a default case: switch (Shareable)                  {                      case ModuleSharing.Supported:                          writer.WriteString("Supported");                          break;                      case ModuleSharing.Unsupported:                          writer.WriteString("Unsupported");                          break;                  }
Missing Default,DotNetNuke.Entities.Modules,DesktopModuleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\DesktopModuleInfo.cs,ReadSupportedFeatures,The following switch statement is missing a default case: switch (reader.ReadContentAsString())                      {                          case "Portable":                              IsPortable = true;                              break;                          case "Searchable":                              IsSearchable = true;                              break;                          case "Upgradeable":                              IsUpgradeable = true;                              break;                      }
Missing Default,DotNetNuke.Entities.Modules,ModuleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleInfo.cs,Fill,The following switch statement is missing a default case: switch (visible)                      {                          case 0:                              Visibility = VisibilityState.Maximized;                              break;                          case 1:                              Visibility = VisibilityState.Minimized;                              break;                          case 2:                              Visibility = VisibilityState.None;                              break;                      }
Missing Default,DotNetNuke.Entities.Modules,ModuleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\ModuleInfo.cs,GetProperty,The following switch statement is missing a default case: switch (propertyName.ToLowerInvariant())              {                  case "portalid":                      propertyNotFound = false;                      result = (PortalID.ToString(outputFormat' formatProvider));                      break;                  case "displayportalid":                      propertyNotFound = false;                      result = (OwnerPortalID.ToString(outputFormat' formatProvider));                      break;                  case "tabid":                      propertyNotFound = false;                      result = (TabID.ToString(outputFormat' formatProvider));                      break;                  case "tabmoduleid":                      propertyNotFound = false;                      result = (TabModuleID.ToString(outputFormat' formatProvider));                      break;                  case "moduleid":                      propertyNotFound = false;                      result = (ModuleID.ToString(outputFormat' formatProvider));                      break;                  case "moduledefid":                      isPublic = false;                      propertyNotFound = false;                      result = (ModuleDefID.ToString(outputFormat' formatProvider));                      break;                  case "moduleorder":                      isPublic = false;                      propertyNotFound = false;                      result = (ModuleOrder.ToString(outputFormat' formatProvider));                      break;                  case "panename":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(PaneName' format);                      break;                  case "moduletitle":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(ModuleTitle' format);                      break;                  case "cachetime":                      isPublic = false;                      propertyNotFound = false;                      result = (CacheTime.ToString(outputFormat' formatProvider));                      break;                  case "cachemethod":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(CacheMethod' format);                      break;                  case "alignment":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(Alignment' format);                      break;                  case "color":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(Color' format);                      break;                  case "border":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(Border' format);                      break;                  case "iconfile":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(IconFile' format);                      break;                  case "alltabs":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(AllTabs' formatProvider));                      break;                  case "isdeleted":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(IsDeleted' formatProvider));                      break;                  case "header":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(Header' format);                      break;                  case "footer":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(Footer' format);                      break;                  case "startdate":                      isPublic = false;                      propertyNotFound = false;                      result = (StartDate.ToString(outputFormat' formatProvider));                      break;                  case "enddate":                      isPublic = false;                      propertyNotFound = false;                      result = (EndDate.ToString(outputFormat' formatProvider));                      break;                  case "containersrc":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(ContainerSrc' format);                      break;                  case "displaytitle":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(DisplayTitle' formatProvider));                      break;                  case "displayprint":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(DisplayPrint' formatProvider));                      break;                  case "displaysyndicate":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(DisplaySyndicate' formatProvider));                      break;                  case "iswebslice":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(IsWebSlice' formatProvider));                      break;                  case "webslicetitle":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(WebSliceTitle' format);                      break;                  case "websliceexpirydate":                      isPublic = false;                      propertyNotFound = false;                      result = (WebSliceExpiryDate.ToString(outputFormat' formatProvider));                      break;                  case "webslicettl":                      isPublic = false;                      propertyNotFound = false;                      result = (WebSliceTTL.ToString(outputFormat' formatProvider));                      break;                  case "inheritviewpermissions":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(InheritViewPermissions' formatProvider));                      break;                  case "isshareable":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(IsShareable' formatProvider));                      break;                  case "isshareableviewonly":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(IsShareableViewOnly' formatProvider));                      break;                  case "desktopmoduleid":                      isPublic = false;                      propertyNotFound = false;                      result = (DesktopModuleID.ToString(outputFormat' formatProvider));                      break;                  case "friendlyname":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(DesktopModule.FriendlyName' format);                      break;                  case "foldername":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(DesktopModule.FolderName' format);                      break;                  case "description":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(DesktopModule.Description' format);                      break;                  case "version":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(DesktopModule.Version' format);                      break;                  case "ispremium":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(DesktopModule.IsPremium' formatProvider));                      break;                  case "isadmin":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(DesktopModule.IsAdmin' formatProvider));                      break;                  case "businesscontrollerclass":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(DesktopModule.BusinessControllerClass' format);                      break;                  case "modulename":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(DesktopModule.ModuleName' format);                      break;                  case "supportedfeatures":                      isPublic = false;                      propertyNotFound = false;                      result = (DesktopModule.SupportedFeatures.ToString(outputFormat' formatProvider));                      break;                  case "compatibleversions":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(DesktopModule.CompatibleVersions' format);                      break;                  case "dependencies":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(DesktopModule.Dependencies' format);                      break;                  case "permissions":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(DesktopModule.Permissions' format);                      break;                  case "defaultcachetime":                      isPublic = false;                      propertyNotFound = false;                      result = (ModuleDefinition.DefaultCacheTime.ToString(outputFormat' formatProvider));                      break;                  case "modulecontrolid":                      isPublic = false;                      propertyNotFound = false;                      result = (ModuleControlId.ToString(outputFormat' formatProvider));                      break;                  case "controlsrc":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(ModuleControl.ControlSrc' format);                      break;                  case "controltitle":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(ModuleControl.ControlTitle' format);                      break;                  case "helpurl":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(ModuleControl.HelpURL' format);                      break;                  case "supportspartialrendering":                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(ModuleControl.SupportsPartialRendering' formatProvider));                      break;                  case "containerpath":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(ContainerPath' format);                      break;                  case "panemoduleindex":                      isPublic = false;                      propertyNotFound = false;                      result = (PaneModuleIndex.ToString(outputFormat' formatProvider));                      break;                  case "panemodulecount":                      isPublic = false;                      propertyNotFound = false;                      result = (PaneModuleCount.ToString(outputFormat' formatProvider));                      break;                  case "isdefaultmodule":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(IsDefaultModule' formatProvider));                      break;                  case "allmodules":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(AllModules' formatProvider));                      break;                  case "isportable":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(DesktopModule.IsPortable' formatProvider));                      break;                  case "issearchable":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(DesktopModule.IsSearchable' formatProvider));                      break;                  case "isupgradeable":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(DesktopModule.IsUpgradeable' formatProvider));                      break;                  case "adminpage":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(DesktopModule.AdminPage' format);                      break;                  case "hostpage":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(DesktopModule.HostPage' format);                      break;              }
Missing Default,DotNetNuke.Entities.Modules,UserModuleBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\UserModuleBase.cs,CompleteUserCreation,The following switch statement is missing a default case: switch (PortalSettings.UserRegistration)                  {                      case (int) Globals.PortalRegistrationType.PrivateRegistration:                          strMessage += Mail.SendMail(newUser' MessageType.UserRegistrationPrivate' PortalSettings);                            //show a message that a portal administrator has to verify the user credentials                          if (string.IsNullOrEmpty(strMessage))                          {                              strMessage += Localization.GetString("PrivateConfirmationMessage"' Localization.SharedResourceFile);                              message = ModuleMessage.ModuleMessageType.GreenSuccess;                          }                          break;                      case (int) Globals.PortalRegistrationType.PublicRegistration:                          Mail.SendMail(newUser' MessageType.UserRegistrationPublic' PortalSettings);                          UserController.UserLogin(PortalSettings.PortalId' newUser.Username' newUser.Membership.Password' ""' PortalSettings.PortalName' ""' ref loginStatus' false);                          break;                      case (int) Globals.PortalRegistrationType.VerifiedRegistration:                          Mail.SendMail(newUser' MessageType.UserRegistrationVerified' PortalSettings);                          UserController.UserLogin(PortalSettings.PortalId' newUser.Username' newUser.Membership.Password' ""' PortalSettings.PortalName' ""' ref loginStatus' false);                          break;                  }
Missing Default,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseProfileDefinitions,The following switch statement is missing a default case: switch (XmlUtils.GetNodeValueInt(node' "defaultvisibility"' 2))                  {                      case 0:                          objProfileDefinition.DefaultVisibility = UserVisibilityMode.AllUsers;                          break;                      case 1:                          objProfileDefinition.DefaultVisibility = UserVisibilityMode.MembersOnly;                          break;                      case 2:                          objProfileDefinition.DefaultVisibility = UserVisibilityMode.AdminOnly;                          break;                  }
Missing Default,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseRoleGroups,The following switch statement is missing a default case: switch (role.RoleType)                      {                          case RoleType.Administrator:                              administratorRoleId = CreateRole(role);                              break;                          case RoleType.RegisteredUser:                              registeredRoleId = CreateRole(role);                              break;                          case RoleType.Subscriber:                              subscriberRoleId = CreateRole(role);                              break;                          case RoleType.None:                              CreateRole(role);                              break;                          case RoleType.UnverifiedUser:                              unverifiedRoleId = CreateRole(role);                              break;                      }
Missing Default,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseRoles,The following switch statement is missing a default case: switch (role.RoleType)                  {                      case RoleType.Administrator:                          administratorRoleId = CreateRole(role);                          break;                      case RoleType.RegisteredUser:                          registeredRoleId = CreateRole(role);                          break;                      case RoleType.Subscriber:                          subscriberRoleId = CreateRole(role);                          break;                      case RoleType.None:                          CreateRole(role);                          break;                      case RoleType.UnverifiedUser:                          unverifiedRoleId = CreateRole(role);                          break;                  }
Missing Default,DotNetNuke.Entities.Portals,PortalController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalController.cs,ParseTab,The following switch statement is missing a default case: switch (XmlUtils.GetNodeValue(nodeTab' "tabtype"' "").ToLowerInvariant())                  {                      case "splashtab":                          portal.SplashTabId = tab.TabID;                          logType = "SplashTab";                          break;                      case "hometab":                          portal.HomeTabId = tab.TabID;                          logType = "HomeTab";                          break;                      case "logintab":                          portal.LoginTabId = tab.TabID;                          logType = "LoginTab";                          break;                      case "usertab":                          portal.UserTabId = tab.TabID;                          logType = "UserTab";                          break;                      case "searchtab":                          portal.SearchTabId = tab.TabID;                          logType = "SearchTab";                          break;                      case "404tab":                          portal.Custom404TabId = tab.TabID;                          logType = "Custom404Tab";                          break;                      case "500tab":                          portal.Custom500TabId = tab.TabID;                          logType = "Custom500Tab";                          break;                  }
Missing Default,DotNetNuke.Entities.Portals,PortalSettings,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Portals\PortalSettings.cs,GetProperty,The following switch statement is missing a default case: switch (lowerPropertyName)              {                  case "url":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(PortalAlias.HTTPAlias' format);                      break;                  case "fullurl": //return portal alias with protocol                      propertyNotFound = false;                      result = PropertyAccess.FormatString(Globals.AddHTTP(PortalAlias.HTTPAlias)' format);                      break;                  case "passwordreminderurl": //if regsiter page defined in portal settings' then get that page url' otherwise return home page.                      propertyNotFound = false;                      var reminderUrl = Globals.AddHTTP(PortalAlias.HTTPAlias);                      if (RegisterTabId > Null.NullInteger)                      {                          reminderUrl = Globals.RegisterURL(string.Empty' string.Empty);                      }                      result = PropertyAccess.FormatString(reminderUrl' format);                      break;                  case "portalid":                      propertyNotFound = false;                      result = (PortalId.ToString(outputFormat' formatProvider));                      break;                  case "portalname":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(PortalName' format);                      break;                  case "homedirectory":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(HomeDirectory' format);                      break;                  case "homedirectorymappath":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(HomeDirectoryMapPath' format);                      break;                  case "logofile":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(LogoFile' format);                      break;                  case "footertext":                      propertyNotFound = false;                      var footerText = FooterText.Replace("[year]"' DateTime.Now.Year.ToString());                      result = PropertyAccess.FormatString(footerText' format);                      break;                  case "expirydate":                      isPublic = false;                      propertyNotFound = false;                      result = (ExpiryDate.ToString(outputFormat' formatProvider));                      break;                  case "userregistration":                      isPublic = false;                      propertyNotFound = false;                      result = (UserRegistration.ToString(outputFormat' formatProvider));                      break;                  case "banneradvertising":                      isPublic = false;                      propertyNotFound = false;                      result = (BannerAdvertising.ToString(outputFormat' formatProvider));                      break;                  case "currency":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(Currency' format);                      break;                  case "administratorid":                      isPublic = false;                      propertyNotFound = false;                      result = (AdministratorId.ToString(outputFormat' formatProvider));                      break;                  case "email":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(Email' format);                      break;                  case "hostfee":                      isPublic = false;                      propertyNotFound = false;                      result = (HostFee.ToString(outputFormat' formatProvider));                      break;                  case "hostspace":                      isPublic = false;                      propertyNotFound = false;                      result = (HostSpace.ToString(outputFormat' formatProvider));                      break;                  case "pagequota":                      isPublic = false;                      propertyNotFound = false;                      result = (PageQuota.ToString(outputFormat' formatProvider));                      break;                  case "userquota":                      isPublic = false;                      propertyNotFound = false;                      result = (UserQuota.ToString(outputFormat' formatProvider));                      break;                  case "administratorroleid":                      isPublic = false;                      propertyNotFound = false;                      result = (AdministratorRoleId.ToString(outputFormat' formatProvider));                      break;                  case "administratorrolename":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(AdministratorRoleName' format);                      break;                  case "registeredroleid":                      isPublic = false;                      propertyNotFound = false;                      result = (RegisteredRoleId.ToString(outputFormat' formatProvider));                      break;                  case "registeredrolename":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(RegisteredRoleName' format);                      break;                  case "description":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(Description' format);                      break;                  case "keywords":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(KeyWords' format);                      break;                  case "backgroundfile":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(BackgroundFile' format);                      break;                  case "admintabid":                      isPublic = false;                      propertyNotFound = false;                      result = AdminTabId.ToString(outputFormat' formatProvider);                      break;                  case "supertabid":                      isPublic = false;                      propertyNotFound = false;                      result = SuperTabId.ToString(outputFormat' formatProvider);                      break;                  case "splashtabid":                      isPublic = false;                      propertyNotFound = false;                      result = SplashTabId.ToString(outputFormat' formatProvider);                      break;                  case "hometabid":                      isPublic = false;                      propertyNotFound = false;                      result = HomeTabId.ToString(outputFormat' formatProvider);                      break;                  case "logintabid":                      isPublic = false;                      propertyNotFound = false;                      result = LoginTabId.ToString(outputFormat' formatProvider);                      break;                  case "registertabid":                      isPublic = false;                      propertyNotFound = false;                      result = RegisterTabId.ToString(outputFormat' formatProvider);                      break;                  case "usertabid":                      isPublic = false;                      propertyNotFound = false;                      result = UserTabId.ToString(outputFormat' formatProvider);                      break;                  case "defaultlanguage":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(DefaultLanguage' format);                      break;                  case "users":                      isPublic = false;                      propertyNotFound = false;                      result = Users.ToString(outputFormat' formatProvider);                      break;                  case "pages":                      isPublic = false;                      propertyNotFound = false;                      result = Pages.ToString(outputFormat' formatProvider);                      break;                  case "contentvisible":                      isPublic = false;                      break;                  case "controlpanelvisible":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.Boolean2LocalizedYesNo(ControlPanelVisible' formatProvider);                      break;              }
Missing Default,DotNetNuke.Entities.Users,UserRegistrationEmailNotifier,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserRegistrationEmailNotifier.cs,NotifyUser,The following switch statement is missing a default case: switch (PortalSettings.Current.UserRegistration)              {                  case (int)PortalRegistrationType.PrivateRegistration:                      NotifyUser(user' CurrentUser != null && CurrentUser.UserID != Null.NullInteger ?                          MessageType.UserRegistrationPrivateNoApprovalRequired :                          MessageType.UserRegistrationPrivate);                      break;                  case (int)PortalRegistrationType.PublicRegistration:                      NotifyUser(user' MessageType.UserRegistrationPublic);                      break;                  case (int)PortalRegistrationType.VerifiedRegistration:                      NotifyUser(user' MessageType.UserRegistrationVerified);                      break;                  case (int)PortalRegistrationType.NoRegistration:                      NotifyUser(user' MessageType.UserRegistrationPublic);                      break;              }
Missing Default,DotNetNuke.Entities.Users,MembershipPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Membership\MembershipPropertyAccess.cs,GetProperty,The following switch statement is missing a default case: switch (propertyName.ToLowerInvariant())              {                  case "approved":                      return (PropertyAccess.Boolean2LocalizedYesNo(objMembership.Approved' formatProvider));                  case "createdondate":                      return (objMembership.CreatedDate.ToString(OutputFormat' formatProvider));                  case "isonline":                      return (PropertyAccess.Boolean2LocalizedYesNo(objMembership.IsOnLine' formatProvider));                  case "lastactivitydate":                      return (objMembership.LastActivityDate.ToString(OutputFormat' formatProvider));                  case "lastlockoutdate":                      return (objMembership.LastLockoutDate.ToString(OutputFormat' formatProvider));                  case "lastlogindate":                      return (objMembership.LastLoginDate.ToString(OutputFormat' formatProvider));                  case "lastpasswordchangedate":                      return (objMembership.LastPasswordChangeDate.ToString(OutputFormat' formatProvider));                  case "lockedout":                      return (PropertyAccess.Boolean2LocalizedYesNo(objMembership.LockedOut' formatProvider));                  case "objecthydrated":                      return (PropertyAccess.Boolean2LocalizedYesNo(true' formatProvider));                  case "password":                      return PropertyAccess.FormatString(objMembership.Password' format);                  case "passwordanswer":                      return PropertyAccess.FormatString(objMembership.PasswordAnswer' format);                  case "passwordquestion":                      return PropertyAccess.FormatString(objMembership.PasswordQuestion' format);                  case "passwordresettoken":                      return PropertyAccess.FormatString(Convert.ToString(objUser.PasswordResetToken)' format);                  case "passwordresetexpiration":                      return PropertyAccess.FormatString(objUser.PasswordResetExpiration.ToString(formatProvider)' format);                  case "updatepassword":                      return (PropertyAccess.Boolean2LocalizedYesNo(objMembership.UpdatePassword' formatProvider));                  case "username":                      return (PropertyAccess.FormatString(objUser.Username' format));                  case "email":                      return (PropertyAccess.FormatString(objUser.Email' format));              }
Missing Default,DotNetNuke.Entities.Users,ProfilePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Profile\ProfilePropertyAccess.cs,CheckAccessLevel,The following switch statement is missing a default case: switch (property.ProfileVisibility.VisibilityMode)                  {                      case UserVisibilityMode.FriendsAndGroups:                          isVisible = IsUser(accessingUser' targetUser);                          if (!isVisible)                          {                              //Relationships                              foreach (Relationship relationship in property.ProfileVisibility.RelationshipVisibilities)                              {                                  if (targetUser.Social.UserRelationships.Any(userRelationship =>                                                                            (userRelationship.RelationshipId == relationship.RelationshipId                                                                                && userRelationship.Status == RelationshipStatus.Accepted                                                                                && ((userRelationship.RelatedUserId == accessingUser.UserID && userRelationship.UserId == targetUser.UserID)                                                                                      || (userRelationship.RelatedUserId == targetUser.UserID && userRelationship.UserId == accessingUser.UserID)))                                                                        ))                                  {                                      isVisible = true;                                      break;                                  }                              }                              //Groups/Roles                              if (property.ProfileVisibility.RoleVisibilities.Any(role => accessingUser.IsInRole(role.RoleName)))                              {                                  isVisible = true;                              }                          }                          break;                      case UserVisibilityMode.AllUsers:                          // property is visible to everyone so do nothing                          break;                      case UserVisibilityMode.MembersOnly:                          // property visible if accessing user is a member                          isVisible = IsMember(accessingUser);                          break;                      case UserVisibilityMode.AdminOnly:                          //accessing user not admin user so property is hidden (unless it is the user him/herself)                          isVisible = IsUser(accessingUser' targetUser);                          break;                  }
Missing Default,DotNetNuke.Entities.Users,UserInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\UserInfo.cs,GetProperty,The following switch statement is missing a default case: switch (propertyName.ToLowerInvariant())              {                  case "verificationcode":                      if (internScope < Scope.SystemMessages)                      {                          propertyNotFound = true;                          return PropertyAccess.ContentLocked;                      }                      var ps = PortalSecurity.Instance;                      var code = ps.Encrypt(Config.GetDecryptionkey()' PortalID + "-" + GetMembershipUserId());                      return code.Replace("+"' ".").Replace("/"' "-").Replace("="' "_");                  case "affiliateid":                      if (internScope < Scope.SystemMessages)                      {                          propertyNotFound = true;                          return PropertyAccess.ContentLocked;                      }                      return (AffiliateID.ToString(outputFormat' formatProvider));                  case "displayname":                      if (internScope < Scope.Configuration)                      {                          propertyNotFound = true;                          return PropertyAccess.ContentLocked;                      }                      return PropertyAccess.FormatString(DisplayName' format);                  case "email":                      if (internScope < Scope.DefaultSettings)                      {                          propertyNotFound = true;                          return PropertyAccess.ContentLocked;                      }                      return (PropertyAccess.FormatString(Email' format));                  case "firstname": //using profile property is recommended!                      if (internScope < Scope.DefaultSettings)                      {                          propertyNotFound = true;                          return PropertyAccess.ContentLocked;                      }                      return (PropertyAccess.FormatString(FirstName' format));                  case "issuperuser":                      if (internScope < Scope.Debug)                      {                          propertyNotFound = true;                          return PropertyAccess.ContentLocked;                      }                      return (IsSuperUser.ToString(formatProvider));                  case "lastname": //using profile property is recommended!                      if (internScope < Scope.DefaultSettings)                      {                          propertyNotFound = true;                          return PropertyAccess.ContentLocked;                      }                      return (PropertyAccess.FormatString(LastName' format));                  case "portalid":                      if (internScope < Scope.Configuration)                      {                          propertyNotFound = true;                          return PropertyAccess.ContentLocked;                      }                      return (PortalID.ToString(outputFormat' formatProvider));                  case "userid":                      if (internScope < Scope.DefaultSettings)                      {                          propertyNotFound = true;                          return PropertyAccess.ContentLocked;                      }                      return (UserID.ToString(outputFormat' formatProvider));                  case "username":                      if (internScope < Scope.DefaultSettings)                      {                          propertyNotFound = true;                          return PropertyAccess.ContentLocked;                      }                      return (PropertyAccess.FormatString(Username' format));                  case "fullname": //fullname is obsolete' it will return DisplayName                      if (internScope < Scope.Configuration)                      {                          propertyNotFound = true;                          return PropertyAccess.ContentLocked;                      }                      return (PropertyAccess.FormatString(DisplayName' format));                  case "roles":                      if (currentScope < Scope.SystemMessages)                      {                          propertyNotFound = true;                          return PropertyAccess.ContentLocked;                      }                      return (PropertyAccess.FormatString(string.Join("' "' Roles)' format));              }
Missing Default,DotNetNuke.Common.Utils,NetworkUtils,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Common\Utilities\NetworkUtils.cs,GetAddress,The following switch statement is missing a default case: switch (AddressFormat)              {                  case AddressType.IPv4:                      addrFamily = AddressFamily.InterNetwork;                      break;                  case AddressType.IPv6:                      addrFamily = AddressFamily.InterNetworkV6;                      break;              }
Missing Default,DotNetNuke.ComponentModel,SimpleContainer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\ComponentModel\SimpleContainer.cs,RegisterComponent,The following switch statement is missing a default case: switch (lifestyle)              {                  case ComponentLifeStyleType.Transient:                      builder = new TransientComponentBuilder(name' type);                      break;                  case ComponentLifeStyleType.Singleton:                      builder = new SingletonComponentBuilder(name' type);                      break;              }
Missing Default,DotNetNuke.Entities.Content.Taxonomy,Vocabulary,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Content\Taxonomy\Vocabulary.cs,Fill,The following switch statement is missing a default case: switch (Convert.ToInt16(dr["VocabularyTypeID"]))              {                  case 1:                      Type = VocabularyType.Simple;                      break;                  case 2:                      Type = VocabularyType.Hierarchy;                      break;              }
Missing Default,DotNetNuke.Entities.Tabs,TabController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabController.cs,SerializeTab,The following switch statement is missing a default case: switch (tab.TabType)              {                  case TabType.Normal:                      urlNode.Attributes.Append(XmlUtils.CreateAttribute(tabXml' "type"' "Normal"));                      break;                  case TabType.Tab:                      urlNode.Attributes.Append(XmlUtils.CreateAttribute(tabXml' "type"' "Tab"));                      //Get the tab being linked to                      TabInfo tempTab = TabController.Instance.GetTab(Int32.Parse(tab.Url)' tab.PortalID' false);                      if (tempTab != null)                      {                          urlNode.InnerXml = tempTab.TabPath;                      }                      break;                  case TabType.File:                      urlNode.Attributes.Append(XmlUtils.CreateAttribute(tabXml' "type"' "File"));                      IFileInfo file = FileManager.Instance.GetFile(Int32.Parse(tab.Url.Substring(7)));                      urlNode.InnerXml = file.RelativePath;                      break;                  case TabType.Url:                      urlNode.Attributes.Append(XmlUtils.CreateAttribute(tabXml' "type"' "Url"));                      break;              }
Missing Default,DotNetNuke.Entities.Tabs,TabInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabInfo.cs,GetProperty,The following switch statement is missing a default case: switch (lowerPropertyName)              {                  case "tabid":                      propertyNotFound = false;                      result = (TabID.ToString(outputFormat' formatProvider));                      break;                  case "taborder":                      isPublic = false;                      propertyNotFound = false;                      result = (TabOrder.ToString(outputFormat' formatProvider));                      break;                  case "portalid":                      propertyNotFound = false;                      result = (PortalID.ToString(outputFormat' formatProvider));                      break;                  case "tabname":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(LocalizedTabName' format);                      break;                  case "isvisible":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(IsVisible' formatProvider));                      break;                  case "parentid":                      isPublic = false;                      propertyNotFound = false;                      result = (ParentId.ToString(outputFormat' formatProvider));                      break;                  case "level":                      isPublic = false;                      propertyNotFound = false;                      result = (Level.ToString(outputFormat' formatProvider));                      break;                  case "iconfile":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(IconFile' format);                      break;                  case "iconfilelarge":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(IconFileLarge' format);                      break;                  case "disablelink":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(DisableLink' formatProvider));                      break;                  case "title":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(Title' format);                      break;                  case "description":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(Description' format);                      break;                  case "keywords":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(KeyWords' format);                      break;                  case "isdeleted":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(IsDeleted' formatProvider));                      break;                  case "url":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(Url' format);                      break;                  case "skinsrc":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(SkinSrc' format);                      break;                  case "containersrc":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(ContainerSrc' format);                      break;                  case "tabpath":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(TabPath' format);                      break;                  case "startdate":                      isPublic = false;                      propertyNotFound = false;                      result = (StartDate.ToString(outputFormat' formatProvider));                      break;                  case "enddate":                      isPublic = false;                      propertyNotFound = false;                      result = (EndDate.ToString(outputFormat' formatProvider));                      break;                  case "haschildren":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(HasChildren' formatProvider));                      break;                  case "refreshinterval":                      isPublic = false;                      propertyNotFound = false;                      result = (RefreshInterval.ToString(outputFormat' formatProvider));                      break;                  case "pageheadtext":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(PageHeadText' format);                      break;                  case "skinpath":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(SkinPath' format);                      break;                  case "skindoctype":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(SkinDoctype' format);                      break;                  case "containerpath":                      isPublic = false;                      propertyNotFound = false;                      result = PropertyAccess.FormatString(ContainerPath' format);                      break;                  case "issupertab":                      isPublic = false;                      propertyNotFound = false;                      result = (PropertyAccess.Boolean2LocalizedYesNo(IsSuperTab' formatProvider));                      break;                  case "fullurl":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(FullUrl' format);                      break;                  case "sitemappriority":                      propertyNotFound = false;                      result = PropertyAccess.FormatString(SiteMapPriority.ToString()' format);                      break;              }
Missing Default,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,ForceDeleteVersion,The following switch statement is missing a default case: switch (versionToDeleteDetail.Action)                          {                              case TabVersionDetailAction.Added:                                  _moduleController.DeleteTabModule(tabId' versionToDeleteDetail.ModuleId' true);                                  break;                              case TabVersionDetailAction.Modified:                                  var peviousVersionDetail =                                      previousVersionDetails.SingleOrDefault(tv => tv.ModuleId == versionToDeleteDetail.ModuleId);                                  if (peviousVersionDetail != null &&                                      (peviousVersionDetail.PaneName != versionToDeleteDetail.PaneName ||                                        peviousVersionDetail.ModuleOrder != versionToDeleteDetail.ModuleOrder))                                  {                                      _moduleController.UpdateModuleOrder(tabId' peviousVersionDetail.ModuleId'                                          peviousVersionDetail.ModuleOrder' peviousVersionDetail.PaneName);                                  }                                    if (versionToDeleteDetail.ModuleVersion != Null.NullInteger)                                  {                                      DiscardDetail(tabId' versionToDeleteDetail);                                  }                                  break;                          }
Missing Default,DotNetNuke.Entities.Tabs.TabVersions,TabVersionBuilder,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Tabs\TabVersions\TabVersionBuilder.cs,GetSnapShot,The following switch statement is missing a default case: switch (tabVersionDetail.Action)                  {                      case TabVersionDetailAction.Added:                      case TabVersionDetailAction.Modified:                          if (versionModules.ContainsKey(tabVersionDetail.ModuleId))                          {                              versionModules[tabVersionDetail.ModuleId] = JoinVersionDetails(versionModules[tabVersionDetail.ModuleId]' tabVersionDetail);                          }                          else                          {                              versionModules.Add(tabVersionDetail.ModuleId' tabVersionDetail);                          }                          break;                      case TabVersionDetailAction.Deleted:                          if (versionModules.ContainsKey(tabVersionDetail.ModuleId))                          {                              versionModules.Remove(tabVersionDetail.ModuleId);                          }                          break;                      case TabVersionDetailAction.Reset:                          versionModules.Clear();                          break;                  }
Missing Default,DotNetNuke.Entities.Urls,AdvancedFriendlyUrlProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedFriendlyUrlProvider.cs,TransformStandardPath,The following switch statement is missing a default case: switch (lowerNewPath)                  {                      case "/ctl/privacy":                          newTabPath = "Privacy";                          newPath = lowerNewPath.Replace("/ctl/privacy"' "");                          break;                      case "/ctl/login":                          newTabPath = "Login";                          newPath = lowerNewPath.Replace("/ctl/login"' "");                          break;                      case "/ctl/register":                          newTabPath = "Register";                          newPath = lowerNewPath.Replace("/ctl/register"' "");                          break;                      case "/ctl/terms":                          newTabPath = "Terms";                          newPath = lowerNewPath.Replace("/ctl/terms"' "");                          break;                  }
Missing Default,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,ProcessRequest,The following switch statement is missing a default case: switch (result.Action)                              {                                  case ActionType.Redirect301:                                      response.AppendHeader("X-Redirect-Reason"' result.Reason.ToString().Replace("_"' " ") + " Requested");                                      response.RedirectPermanent(result.FinalUrl);                                      break;                                  case ActionType.Redirect302:                                      response.AppendHeader("X-Redirect-Reason"' result.Reason.ToString().Replace("_"' " ") + " Requested");                                      response.Redirect(result.FinalUrl);                                      break;                                  case ActionType.Output404:                                      response.AppendHeader("X-Result-Reason"' result.Reason.ToString().Replace("_"' " "));                                      Handle404OrException(settings' context' null' result' true' showDebug);                                      break;                              }
Missing Default,DotNetNuke.Entities.Urls,AdvancedUrlRewriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\AdvancedUrlRewriter.cs,CheckForDebug,The following switch statement is missing a default case: switch (debugValue.ToLowerInvariant())              {                  case "true":                      retVal = true;                      break;              }
Missing Default,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,The following switch statement is missing a default case: switch (rdr.NodeType)                      {                          case XmlNodeType.Element:                              if (rdr.Name == "parameterReplace")                              {                                  //now set up the action                                  string portalIdRaw = rdr.GetAttribute("portalId");                                  int rulePortalId = -1;                                  if (portalIdRaw != null)                                  {                                      Int32.TryParse(portalIdRaw' out rulePortalId);                                  }                                  //807 : if portal specific then import all regardless of portal id specified                                  if (rulePortalId == portalId || rulePortalId == -1 || portalSpecific)                                  {                                      int actionCount = 0;                                      string tabIdRaw = rdr.GetAttribute("tabIds") ?? rdr.GetAttribute("tabId");                                      string tabNames = rdr.GetAttribute("tabNames");                                      string name = rdr.GetAttribute("name");                                      List<int> tabIds = XmlHelpers.TabIdsFromAttributes(tabIdRaw' tabNames' portalId'                                                                                         ref messages);                                      foreach (int tabId in tabIds)                                      {                                          var action = new ParameterReplaceAction                                          {                                              LookFor = rdr.GetAttribute("lookFor")'                                              ReplaceWith = rdr.GetAttribute("replaceWith")'                                              PortalId = portalId'                                              Name = name'                                              TabId = tabId                                          };                                          string changeToSiteRootRaw = rdr.GetAttribute("changeToSiteRoot");                                          bool changeToSiteRoot;                                          bool.TryParse(changeToSiteRootRaw' out changeToSiteRoot);                                          action.ChangeToSiteRoot = changeToSiteRoot;                                            List<ParameterReplaceAction> tabActionCol;                                          if (actions.ContainsKey(action.TabId))                                          {                                              tabActionCol = actions[action.TabId];                                          }                                          else                                          {                                              tabActionCol = new List<ParameterReplaceAction>();                                              actions.Add(action.TabId' tabActionCol);                                          }                                          tabActionCol.Add(action);                                            actionCount++;                                          messages.Add(name + " replace actions added:" + actionCount.ToString());                                      }                                  }                              }                              break;                            case XmlNodeType.EndElement:                              break;                      }
Missing Default,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,The following switch statement is missing a default case: switch (rdr.NodeType)                      {                          case XmlNodeType.Element:                              if (rdr.Name == "parameterRedirect")                              {                                  var tabMessages = new List<string>();                                  int actionCount = 0;                                  //now set up the action                                  string portalIdRaw = rdr.GetAttribute("rulePortalId");                                  if (string.IsNullOrEmpty(portalIdRaw))                                  {                                      portalIdRaw = rdr.GetAttribute("portalId");                                  }                                  int rulePortalId = -1;                                  if (portalIdRaw != null)                                  {                                      Int32.TryParse(portalIdRaw' out rulePortalId);                                  }                                  if (rulePortalId == portalId || rulePortalId == -1 || portalSpecific)                                  //if portal specific' all rules are assumed to belong to the portal                                  {                                      string tabIdRaw = rdr.GetAttribute("tabIds");                                      string tabNames = rdr.GetAttribute("tabNames");                                      string name = rdr.GetAttribute("name");                                      string fromSiteRootRaw = rdr.GetAttribute("fromSiteRoot");                                      string fromDefaultRaw = rdr.GetAttribute("fromDefault");                                      string changeToSiteRootRaw = rdr.GetAttribute("changeToSiteRoot");                                      bool fromDefault;                                      bool fromSiteRoot;                                      bool changeToSiteRoot;                                      bool.TryParse(fromDefaultRaw' out fromDefault);                                      bool.TryParse(fromSiteRootRaw' out fromSiteRoot);                                      bool.TryParse(changeToSiteRootRaw' out changeToSiteRoot);                                      List<int> tabIds = XmlHelpers.TabIdsFromAttributes(tabIdRaw' tabNames' portalId'                                                                                         ref tabMessages);                                      foreach (int tabId in tabIds)                                      {                                          var action = new ParameterRedirectAction                                          {                                              PortalId = portalId'                                              LookFor = rdr.GetAttribute("lookFor")'                                              RedirectTo = rdr.GetAttribute("redirectTo")'                                              Name = name'                                              Action = rdr.GetAttribute("action")'                                              ChangeToSiteRoot = changeToSiteRoot'                                              TabId = tabId                                          };                                          if (fromDefault)                                          {                                              //check for 'fromDefault' attribute                                              action.ForDefaultPage = true;                                              action.TabId = -2;                                          }                                          else                                          {                                              //or support the older convention' which was to include a tabid of -2                                              action.ForDefaultPage = tabId == -2;                                          }                                          if (fromSiteRoot)                                          {                                              action.TabId = -3; //site root marker                                          }                                          List<ParameterRedirectAction> tabActionCol;                                          if (actions.ContainsKey(action.TabId))                                          {                                              tabActionCol = actions[action.TabId];                                          }                                          else                                          {                                              tabActionCol = new List<ParameterRedirectAction>();                                              actions.Add(action.TabId' tabActionCol);                                          }                                          tabActionCol.Add(action);                                          actionCount++;                                      }                                      messages.Add(name + " redirect actions added:" + actionCount.ToString());                                  }                                  if (tabMessages.Count > 0)                                  {                                      messages.AddRange(tabMessages);                                  }                              }                              break;                            case XmlNodeType.EndElement:                              break;                      }
Missing Default,DotNetNuke.Entities.Urls,CollectionExtensions,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\CollectionExtensions.cs,LoadFromXmlFile,The following switch statement is missing a default case: switch (rdr.NodeType)                      {                          case XmlNodeType.Element:                              if (rdr.Name == "parameterRewrite")                              {                                  string portalIdRaw = rdr.GetAttribute("portalId");                                  int rulePortalId = -1;                                  int actionCount = 0;                                  if (portalIdRaw != null)                                  {                                      Int32.TryParse(portalIdRaw' out rulePortalId);                                  }                                  if (rulePortalId == portalId || rulePortalId == -1 || portalId == -1 || portalSpecific)                                  {                                      //now set up the action                                      string tabIdRaw = rdr.GetAttribute("tabIds");                                      string tabNames = rdr.GetAttribute("tabNames");                                      string name = rdr.GetAttribute("name");                                      string fromSiteRootRaw = rdr.GetAttribute("fromSiteRoot");                                      bool fromSiteRoot;                                      bool.TryParse(fromSiteRootRaw' out fromSiteRoot);                                      List<int> tabIds = XmlHelpers.TabIdsFromAttributes(tabIdRaw' tabNames' portalId'                                                                                         ref messages);                                      foreach (int tabId in tabIds)                                      {                                          var action = new ParameterRewriteAction                                          {                                              LookFor = rdr.GetAttribute("lookFor")'                                              RewriteTo = rdr.GetAttribute("rewriteTo")'                                              Name = name'                                              TabId = tabId                                          };                                          if (fromSiteRoot)                                          {                                              action.ForSiteRoot = true;                                              action.TabId = -3;                                          }                                          else                                          {                                              //older rule specified tabid -3 meant site root                                              action.ForSiteRoot = tabId == -3;                                          }                                            action.PortalId = portalId;                                          SharedList<ParameterRewriteAction> tabActionCol;                                          if (actions.ContainsKey(action.TabId))                                          {                                              tabActionCol = actions[action.TabId];                                          }                                          else                                          {                                              tabActionCol = new SharedList<ParameterRewriteAction>();                                              actions.Add(action.TabId' tabActionCol);                                          }                                          tabActionCol.Add(action);                                          actionCount++;                                      }                                      messages.Add(name + " rewrite actions added:" + actionCount.ToString());                                  }                              }                                  break;                            case XmlNodeType.EndElement:                              break;                      }
Missing Default,DotNetNuke.Entities.Urls,ExtensionUrlProviderController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\ExtensionUrlProviderController.cs,TransformFriendlyUrlPath,The following switch statement is missing a default case: switch (status)                              {                                  case 301:                                      result.Action = ActionType.Redirect301;                                      result.Reason = RedirectReason.Module_Provider_Rewrite_Redirect;                                      result.FinalUrl = location;                                      break;                                  case 302:                                      result.Action = ActionType.Redirect302;                                      result.Reason = RedirectReason.Module_Provider_Rewrite_Redirect;                                      result.FinalUrl = location;                                      break;                                  case 404:                                      result.Action = ActionType.Output404;                                      break;                                  case 500:                                      result.Action = ActionType.Output500;                                      break;                              }
Missing Default,DotNetNuke.Entities.Urls,RedirectController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectController.cs,CheckForParameterRedirect,The following switch statement is missing a default case: switch (parmRedirect.Action)                                  {                                      case "301":                                          result.Action = ActionType.Redirect301;                                          break;                                      case "302":                                          result.Action = ActionType.Redirect302;                                          break;                                      case "404":                                          result.Action = ActionType.Output404;                                          break;                                  }
Missing Default,DotNetNuke.Entities.Urls,RedirectTokens,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectTokens.cs,GetRedirectReasonRewriteToken,The following switch statement is missing a default case: switch (reason)              {                  case RedirectReason.Deleted_Page:                      result = "&rr=dl";                      break;                  case RedirectReason.Disabled_Page:                      //838 : handle disabled page separately                      result = "&rr=db";                      break;                  case RedirectReason.Tab_Permanent_Redirect:                      result = "&rr=pr";                      break;                  case RedirectReason.Spaces_Replaced:                      result = "&rr=sr";                      break;                  case RedirectReason.Site_Root_Home:                      result = "&rr=hp";                      break;                  case RedirectReason.Diacritic_Characters:                      result = "&rr=dc";                      break;                  case RedirectReason.User_Profile_Url:                      result = "&rr=up";                      break;                  case RedirectReason.Custom_Redirect:                      result = "&rr=cr";                      break;              }
Missing Default,DotNetNuke.Entities.Urls,RedirectTokens,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RedirectTokens.cs,GetActionFromRewritePath,The following switch statement is missing a default case: switch (tk)                      {                          case "do301":                              if (val == "true")                              {                                  action = ActionType.Redirect301;                              }                              else                              {                                  if (val == "check")                                  {                                      action = ActionType.CheckFor301;                                  }                              }                              break;                          case "do404":                              if (val == "true")                              {                                  action = ActionType.Output404;                              }                              break;                          case "do302":                              if (val == "true")                              {                                  action = ActionType.Redirect302;                              }                              break;                      }
Missing Default,DotNetNuke.Entities.Urls,RewriteController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\RewriteController.cs,SetRewriteParameters,The following switch statement is missing a default case: switch (key.ToLowerInvariant())                  {                      case "tabid":                          int tabidtemp;                          if (Int32.TryParse(val' out tabidtemp))                          {                              result.TabId = tabidtemp;                          }                          break;                      case "portalid":                          int pid;                          if (Int32.TryParse(val' out pid))                          {                              result.PortalId = pid;                          }                          break;                      case "language":                          result.CultureCode = val;                          break;                      case "ctl":                          //786: force redirect for ctl/terms or ctl/privacy                          RequestRedirectOnBuiltInUrl(val' rewritePath' result);                          break;                  }
Missing Default,DotNetNuke.Entities.Urls,TabIndexController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\TabIndexController.cs,AddCustomRedirectsToDictionary,The following switch statement is missing a default case: switch (redirect.HttpStatus)                  {                      case "301":                          redirectedRewritePath = RedirectTokens.AddRedirectReasonToRewritePath(rewritePath'                                                                                          ActionType.Redirect301'                                                                                          RedirectReason.Custom_Redirect);                          break;                      case "302":                          redirectedRewritePath = RedirectTokens.AddRedirectReasonToRewritePath(rewritePath'                                                                                          ActionType.Redirect302'                                                                                          RedirectReason.Custom_Redirect);                          break;                      case "404":                          redirectedRewritePath = RedirectTokens.AddRedirectReasonToRewritePath(rewritePath'                                                                                          ActionType.Output404'                                                                                          RedirectReason.Custom_Redirect);                          break;                      case "200":                          //when there is a 200' then replace the 'standard' path                          newRewritePath = RedirectTokens.AddRedirectReasonToRewritePath(newRewritePath'                                                                                          ActionType.CheckFor301'                                                                                          RedirectReason.Custom_Redirect);                          //672 : replacement urls have preference over all redirects' deleted tabs and standard urls                          duplicateHandlingPreference = UrlEnums.TabKeyPreference.TabOK;                          break;                  }
Missing Default,DotNetNuke.Entities.Urls,UrlEnumHelpers,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Urls\UrlEnumHelpers.cs,FromString,The following switch statement is missing a default case: switch (value.ToLowerInvariant())              {                  case "mobile":                      result = BrowserTypes.Mobile;                      break;              }
Missing Default,DotNetNuke.Entities.Users.Social,RelationshipControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Users\Social\RelationshipControllerImpl.cs,ManageUserRelationshipStatus,The following switch statement is missing a default case: switch (newStatus)              {                  case RelationshipStatus.None:                      save = true;                      break;                  case RelationshipStatus.Pending:                      save = true;                      break;                  case RelationshipStatus.Accepted:                      save = true;                      break;              }
Missing Default,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,RequestRegistration,The following switch statement is missing a default case: switch (jsname)              {                  case CommonJs.jQuery:                      RequestRegistration(CommonJs.jQueryMigrate);                      break;                  case CommonJs.DnnPlugins:                      RequestRegistration(CommonJs.jQueryUI);                      RequestRegistration(CommonJs.HoverIntent);                      AddPreInstallorLegacyItemRequest(jsname);                      return;                  case CommonJs.HoverIntent:                  case CommonJs.jQueryFileUpload:                      AddPreInstallorLegacyItemRequest(jsname);                      return;              }
Missing Default,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,RequestRegistration,The following switch statement is missing a default case: switch (specific)              {                  case SpecificVersion.Latest:                      RequestHighestVersionLibraryRegistration(jsname);                      return;                  case SpecificVersion.LatestMajor:                  case SpecificVersion.LatestMinor:                      if (RequestLooseVersionLibraryRegistration(jsname' version' specific))                       {                          return;                      }                        break;                  case SpecificVersion.Exact:                      RequestSpecificVersionLibraryRegistration(jsname' version);                      return;              }
Missing Default,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,GetScriptLocation,The following switch statement is missing a default case: switch (js.PreferredScriptLocation)              {                  case ScriptLocation.PageHead:                      return "DnnPageHeaderProvider";                  case ScriptLocation.BodyBottom:                      return "DnnFormBottomProvider";                  case ScriptLocation.BodyTop:                      return "DnnBodyProvider";              }
Missing Default,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,HandlePreInstallorLegacyItemRequests,The following switch statement is missing a default case: switch (legacyScript)                  {                      case CommonJs.DnnPlugins:                          //This method maybe called when Page.Form hasn't initialized yet' in that situation if needed should reference dnn js manually.                          //such as call jQuery.RegisterDnnJQueryPlugins in Control.OnInit.                          if (page.Form != null)                          {                                                        }                            //register dependency                          if (GetHighestVersionLibrary(CommonJs.HoverIntent) == null)                          {                              ClientResourceManager.RegisterScript(page'                                  "~/Resources/Shared/Scripts/jquery/jquery.hoverIntent.min.js"' FileOrder.Js.HoverIntent);                          }                          //no package for this - CRM will deduplicate                          ClientResourceManager.RegisterScript(page' "~/Resources/Shared/Scripts/dnn.jquery.js");                          break;                      case CommonJs.jQueryFileUpload:                          ClientResourceManager.RegisterScript(page'                              "~/Resources/Shared/Scripts/jquery/jquery.iframe-transport.js");                          ClientResourceManager.RegisterScript(page'                              "~/Resources/Shared/Scripts/jquery/jquery.fileupload.js");                          break;                      case CommonJs.HoverIntent:                          if (GetHighestVersionLibrary(CommonJs.HoverIntent) == null)                          {                              ClientResourceManager.RegisterScript(page'                                  "~/Resources/Shared/Scripts/jquery/jquery.hoverIntent.min.js"' FileOrder.Js.HoverIntent);                          }                          break;                  }
Missing Default,DotNetNuke.Framework.JavaScriptLibraries,JavaScript,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\JavaScriptLibraries\JavaScript.cs,RegisterClientReference,The following switch statement is missing a default case: switch (reference)              {                  case ClientAPI.ClientNamespaceReferences.dnn:                  case ClientAPI.ClientNamespaceReferences.dnn_dom:                      if (HttpContextSource.Current.Items.Contains(LegacyPrefix + "dnn.js"))                      {                          break;                      }                        ClientResourceManager.RegisterScript(page' ClientAPI.ScriptPath + "dnn.js"' 12);                      HttpContextSource.Current.Items.Add(LegacyPrefix + "dnn.js"' true);                      page.ClientScript.RegisterClientScriptBlock(page.GetType()' "dnn.js"' "");                        if (!ClientAPI.BrowserSupportsFunctionality(ClientAPI.ClientFunctionality.SingleCharDelimiters))                      {                          ClientAPI.RegisterClientVariable(page' "__scdoff"' "1"' true);                      }                        if (!ClientAPI.UseExternalScripts)                      {                          ClientAPI.RegisterEmbeddedResource(page' "dnn.scripts.js"' typeof (ClientAPI));                      }                      break;                  case ClientAPI.ClientNamespaceReferences.dnn_dom_positioning:                      RegisterClientReference(page' ClientAPI.ClientNamespaceReferences.dnn);                      ClientResourceManager.RegisterScript(page' ClientAPI.ScriptPath + "dnn.dom.positioning.js"' 13);                      break;              }
Missing Default,DotNetNuke.Framework,SecurityPolicy,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\SecurityPolicy.cs,HasPermissions,The following switch statement is missing a default case: switch (permission)                          {                              case AspNetHostingPermission:                                  if (HasAspNetHostingPermission() == false)                                  {                                      _HasPermission = false;                                  }                                  break;                              case ReflectionPermission:                                  if (HasReflectionPermission() == false)                                  {                                      _HasPermission = false;                                  }                                  break;                              case UnManagedCodePermission:                                  if (HasUnManagedCodePermission() == false)                                  {                                      _HasPermission = false;                                  }                                  break;                              case WebPermission:                                  if (HasWebPermission() == false)                                  {                                      _HasPermission = false;                                  }                                  break;                          }
Missing Default,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,Replace,The following switch statement is missing a default case: switch (filterScope)                      {                          case FilterScope.SystemList:                              listEntryHostInfos = listController.GetListEntryInfoItems(listName' ""' Null.NullInteger);                              inputString = listEntryHostInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' removeItem.Value' options));                              break;                          case FilterScope.SystemAndPortalList:                              settings = PortalController.Instance.GetCurrentPortalSettings();                              listEntryHostInfos = listController.GetListEntryInfoItems(listName' ""' Null.NullInteger);                              listEntryPortalInfos = listController.GetListEntryInfoItems(listName + "-" + settings.PortalId' ""' settings.PortalId);                              inputString = listEntryHostInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' removeItem.Value' options));                              inputString = listEntryPortalInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' removeItem.Value' options));                              break;                          case FilterScope.PortalList:                              settings = PortalController.Instance.GetCurrentPortalSettings();                              listEntryPortalInfos = listController.GetListEntryInfoItems(listName + "-" + settings.PortalId' ""' settings.PortalId);                              inputString = listEntryPortalInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' removeItem.Value' options));                              break;                      }
Missing Default,DotNetNuke.Security,PortalSecurity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\PortalSecurity.cs,Remove,The following switch statement is missing a default case: switch (filterScope)                      {                          case FilterScope.SystemList:                              listEntryHostInfos = listController.GetListEntryInfoItems(listName' ""' Null.NullInteger);                              inputString = listEntryHostInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' string.Empty' options));                              break;                          case FilterScope.SystemAndPortalList:                              settings = PortalController.Instance.GetCurrentPortalSettings();                              listEntryHostInfos = listController.GetListEntryInfoItems(listName' ""' Null.NullInteger);                              listEntryPortalInfos = listController.GetListEntryInfoItems(listName + "-" + settings.PortalId' ""' settings.PortalId);                              inputString = listEntryHostInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' string.Empty' options));                              inputString = listEntryPortalInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' string.Empty' options));                              break;                          case FilterScope.PortalList:                              settings = PortalController.Instance.GetCurrentPortalSettings();                              listEntryPortalInfos = listController.GetListEntryInfoItems(listName + "-" + settings.PortalId' ""' settings.PortalId);                              inputString = listEntryPortalInfos.Aggregate(inputString' (current' removeItem) => Regex.Replace(current' @"\b" + Regex.Escape(removeItem.Text) + @"\b"' string.Empty' options));                                      break;                      }
Missing Default,DotNetNuke.Security.Membership,AspNetMembershipProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Membership\AspNetMembershipProvider.cs,CreateMemberhipUser,The following switch statement is missing a default case: switch (status)              {                  case MembershipCreateStatus.DuplicateEmail:                      createStatus = UserCreateStatus.DuplicateEmail;                      break;                  case MembershipCreateStatus.DuplicateProviderUserKey:                      createStatus = UserCreateStatus.DuplicateProviderUserKey;                      break;                  case MembershipCreateStatus.DuplicateUserName:                      createStatus = UserCreateStatus.DuplicateUserName;                      break;                  case MembershipCreateStatus.InvalidAnswer:                      createStatus = UserCreateStatus.InvalidAnswer;                      break;                  case MembershipCreateStatus.InvalidEmail:                      createStatus = UserCreateStatus.InvalidEmail;                      break;                  case MembershipCreateStatus.InvalidPassword:                      createStatus = UserCreateStatus.InvalidPassword;                      break;                  case MembershipCreateStatus.InvalidProviderUserKey:                      createStatus = UserCreateStatus.InvalidProviderUserKey;                      break;                  case MembershipCreateStatus.InvalidQuestion:                      createStatus = UserCreateStatus.InvalidQuestion;                      break;                  case MembershipCreateStatus.InvalidUserName:                      createStatus = UserCreateStatus.InvalidUserName;                      break;                  case MembershipCreateStatus.ProviderError:                      createStatus = UserCreateStatus.ProviderError;                      break;                  case MembershipCreateStatus.UserRejected:                      createStatus = UserCreateStatus.UserRejected;                      break;              }
Missing Default,DotNetNuke.Security.Permissions,PermissionProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\PermissionProvider.cs,HasModuleAccess,The following switch statement is missing a default case: switch (accessLevel)                  {                      case SecurityAccessLevel.Anonymous:                          isAuthorized = true;                          break;                      case SecurityAccessLevel.View:                          if (ModulePermissionController.CanViewModule(moduleConfiguration))                          {                              isAuthorized = true;                          }                          break;                      case SecurityAccessLevel.ViewPermissions:                          isAuthorized = TabPermissionController.CanAddContentToPage(tab);                          break;                      case SecurityAccessLevel.Edit:                          if (!((moduleConfiguration.IsShared && moduleConfiguration.IsShareableViewOnly) && TabPermissionController.CanAddContentToPage(tab)))                          {                              if (string.IsNullOrEmpty(permissionKey))                              {                                  permissionKey = "CONTENT'DELETE'EXPORT'IMPORT'MANAGE";                              }                                if (TabPermissionController.CanAddContentToPage(tab))                              {                                  //Need to check for Deny Edit at the Module Level                                  if (permissionKey == "CONTENT")                                  {                                      isAuthorized = !IsDeniedModulePermission(moduleConfiguration' permissionKey);                                  }                                  else                                  {                                      isAuthorized = true;                                  }                              }                              else                              {                                  // Need to check if it was denied at Tab level                                  if (!IsDeniedTabPermission(tab' "CONTENT'EDIT"))                                  {                                      isAuthorized = HasModulePermission(moduleConfiguration' permissionKey);                                  }                              }                          }                          break;                      case SecurityAccessLevel.Admin:                          if (!((moduleConfiguration.IsShared && moduleConfiguration.IsShareableViewOnly) && TabPermissionController.CanAddContentToPage(tab)))                          {                              isAuthorized = TabPermissionController.CanAddContentToPage(tab);                          }                          break;                      case SecurityAccessLevel.Host:                          break;                  }
Missing Default,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,SendNotification,The following switch statement is missing a default case: switch (Action)              {                  case UserRoleActions.add:                  case UserRoleActions.update:                      string preferredLocale = objUser.Profile.PreferredLocale;                      if (string.IsNullOrEmpty(preferredLocale))                      {                          preferredLocale = PortalSettings.DefaultLanguage;                      }                      var ci = new CultureInfo(preferredLocale);                      UserRoleInfo objUserRole = RoleController.Instance.GetUserRole(PortalSettings.PortalId' objUser.UserID' objRole.RoleID);                      Custom.Add(Null.IsNull(objUserRole.EffectiveDate)                                     ? DateTime.Today.ToString("g"' ci)                                     : objUserRole.EffectiveDate.ToString("g"' ci));                      Custom.Add(Null.IsNull(objUserRole.ExpiryDate) ? "-" : objUserRole.ExpiryDate.ToString("g"' ci));                      break;                  case UserRoleActions.delete:                      Custom.Add("");                      break;              }
Missing Default,DotNetNuke.Security.Roles,RoleController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleController.cs,UpdateUserRole,The following switch statement is missing a default case: switch (Frequency)                      {                          case "N":                              ExpiryDate = Null.NullDate;                              break;                          case "O":                              ExpiryDate = new DateTime(9999' 12' 31);                              break;                          case "D":                              ExpiryDate = ExpiryDate.AddDays(Period);                              break;                          case "W":                              ExpiryDate = ExpiryDate.AddDays(Period * 7);                              break;                          case "M":                              ExpiryDate = ExpiryDate.AddMonths(Period);                              break;                          case "Y":                              ExpiryDate = ExpiryDate.AddYears(Period);                              break;                      }
Missing Default,DotNetNuke.Security.Roles,RoleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleInfo.cs,ReadXml,The following switch statement is missing a default case: switch (reader.ReadElementContentAsString())                              {                                  case "securityrole":                                      SecurityMode = SecurityMode.SecurityRole;                                      break;                                  case "socialgroup":                                      SecurityMode = SecurityMode.SocialGroup;                                      break;                                  case "both":                                      SecurityMode = SecurityMode.Both;                                      break;                              }
Missing Default,DotNetNuke.Security.Roles,RoleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleInfo.cs,WriteXml,The following switch statement is missing a default case: switch (RoleType)              {                  case RoleType.Administrator:                      writer.WriteElementString("roletype"' "adminrole");                      break;                  case RoleType.RegisteredUser:                      writer.WriteElementString("roletype"' "registeredrole");                      break;                  case RoleType.Subscriber:                      writer.WriteElementString("roletype"' "subscriberrole");                      break;                  case RoleType.UnverifiedUser:                      writer.WriteElementString("roletype"' "unverifiedrole");                      break;                  case RoleType.None:                      writer.WriteElementString("roletype"' "none");                      break;              }
Missing Default,DotNetNuke.Security.Roles,RoleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleInfo.cs,WriteXml,The following switch statement is missing a default case: switch (SecurityMode)              {                  case SecurityMode.SecurityRole:                      writer.WriteElementString("securitymode"' "securityrole");                      break;                  case SecurityMode.SocialGroup:                      writer.WriteElementString("securitymode"' "socialgroup");                      break;                  case SecurityMode.Both:                      writer.WriteElementString("securitymode"' "both");                      break;              }
Missing Default,DotNetNuke.Security.Roles,RoleInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Roles\RoleInfo.cs,WriteXml,The following switch statement is missing a default case: switch (Status)              {                  case RoleStatus.Pending:                      writer.WriteElementString("status"' "pending");                      break;                  case RoleStatus.Disabled:                      writer.WriteElementString("status"' "disabled");                      break;                  case RoleStatus.Approved:                      writer.WriteElementString("status"' "approved");                      break;              }
Missing Default,DotNetNuke.Services.Exceptions,ExceptionInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Exceptions\ExceptionInfo.cs,ReadXml,The following switch statement is missing a default case: switch (reader.Name)  				{  					case "AssemblyVersion":  						AssemblyVersion = reader.ReadContentAsString();  						break;  					case "PortalId":  						PortalId = reader.ReadContentAsInt();  						break;  					case "UserId":  						UserId = reader.ReadContentAsInt();  						break;  					case "TabId":  						TabId = reader.ReadContentAsInt();  						break;  					case "RawUrl":  						RawUrl = reader.ReadContentAsString();  						break;  					case "Referrer":  						Referrer = reader.ReadContentAsString();  						break;  					case "UserAgent":  						UserAgent = reader.ReadContentAsString();  						break;  					case "ExceptionHash":  						ExceptionHash = reader.ReadContentAsString();  						break;  					case "Message":  						Message = reader.ReadContentAsString();  						break;  					case "StackTrace":  						StackTrace = reader.ReadContentAsString();  						break;  					case "InnerMessage":  						InnerMessage = reader.ReadContentAsString();  						break;  					case "InnerStackTrace":  						InnerStackTrace = reader.ReadContentAsString();  						break;  					case "Source":  						Source = reader.ReadContentAsString();  						break;  					case "FileName":  						FileName = reader.ReadContentAsString();  						break;  					case "FileLineNumber":  						FileLineNumber = reader.ReadContentAsInt();  						break;  					case "FileColumnNumber":  						FileColumnNumber = reader.ReadContentAsInt();  						break;  					case "Method":  						Method = reader.ReadContentAsString();  						break;  				}
Missing Default,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following switch statement is missing a default case: switch (pi.PropertyType.Name)                                          {                                              case "Int32":                                                  pi.SetValue(imageTransform' Convert.ToInt32(parameters[key])' null);                                                  break;                                              case "String":                                                  pi.SetValue(imageTransform' parameters[key]' null);                                                  break;                                          }
Missing Default,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,GenerateImage,The following switch statement is missing a default case: switch (size)                  {                      case "xxs":                          width = 16;                          height = 16;                          break;                      case "xs":                          width = 32;                          height = 32;                          break;                      case "s":                          width = 50;                          height = 50;                          break;                      case "l":                          width = 64;                          height = 64;                          break;                      case "xl":                          width = 128;                          height = 128;                          break;                      case "xxl":                          width = 256;                          height = 256;                          break;                  }
Missing Default,DotNetNuke.Services.GeneratedImage,DnnImageHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\GeneratedImage\DnnImageHandler.cs,ReadSettings,The following switch statement is missing a default case: switch (name)                  {                      case "enableclientcache":                          EnableClientCache = Convert.ToBoolean(setting[1]);                          break;                      case "clientcacheexpiration":                          ClientCacheExpiration = TimeSpan.FromSeconds(Convert.ToInt32(setting[1]));                          break;                      case "enableservercache":                          EnableServerCache = Convert.ToBoolean(setting[1]);                          break;                      case "servercacheexpiration":                          DiskImageStore.PurgeInterval = TimeSpan.FromSeconds(Convert.ToInt32(setting[1]));                          break;                      case "allowstandalone":                          AllowStandalone = Convert.ToBoolean(setting[1]);                          break;                      case "logsecurity":                          LogSecurity = Convert.ToBoolean(setting[1]);                          break;                      case "imagecompression":                          ImageCompression = Convert.ToInt32(setting[1]);                          break;                      case "alloweddomains":                          AllowedDomains = setting[1].Split(''');                          break;                      case "enableipcount":                          EnableIPCount = Convert.ToBoolean(setting[1]);                          break;                      case "ipcountmax":                          IPCountMaxCount = Convert.ToInt32(setting[1]);                          break;                      case "ipcountpurgeinterval":                          IPCountPurgeInterval = TimeSpan.FromSeconds(Convert.ToInt32(setting[1]));                          break;                  }
Missing Default,DotNetNuke.Services.Installer.Installers,AssemblyInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\AssemblyInstaller.cs,InstallFile,The following switch statement is missing a default case: switch (returnCode)                  {                      case 0:                          //Assembly Does Not Exist                          Log.AddInfo(Util.ASSEMBLY_Added + " - " + file.FullName);                          break;                      case 1:                          //Older version of Assembly Exists                          Log.AddInfo(Util.ASSEMBLY_Updated + " - " + file.FullName);                          break;                      case 2:                      case 3:  						//Assembly already Registered                          Log.AddInfo(Util.ASSEMBLY_Registered + " - " + file.FullName);                          break;                  }
Missing Default,DotNetNuke.Services.Installer.Installers,SkinInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\SkinInstaller.cs,ProcessFile,The following switch statement is missing a default case: switch (file.Extension)              {                  case "htm":                  case "html":                  case "ascx":                  case "css":                      if (file.Path.IndexOf(Globals.glbAboutPage' StringComparison.InvariantCultureIgnoreCase) < 0)                      {                          SkinFiles.Add(PhysicalBasePath + file.FullName);                      }                      break;              }
Missing Default,DotNetNuke.Services.Installer.Installers,SkinInstaller,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installers\SkinInstaller.cs,Install,The following switch statement is missing a default case: switch (Path.GetExtension(skinFile))                          {                              case ".htm":                                  SkinController.AddSkin(SkinPackage.SkinPackageID' skinFile.Replace("htm"' "ascx"));                                  break;                              case ".html":                                  SkinController.AddSkin(SkinPackage.SkinPackageID' skinFile.Replace("html"' "ascx"));                                  break;                              case ".ascx":                                  SkinController.AddSkin(SkinPackage.SkinPackageID' skinFile);                                  break;                          }
Missing Default,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,DeleteExtensionPackage,The following switch statement is missing a default case: switch (package.PackageType)              {                  case "Auth_System":                      AuthenticationInfo authSystem = AuthenticationController.GetAuthenticationServiceByPackageID(package.PackageID);                      if (authSystem != null)                      {                          AuthenticationController.DeleteAuthentication(authSystem);                      }                      break;                  case "CoreLanguagePack":                      LanguagePackInfo languagePack = LanguagePackController.GetLanguagePackByPackage(package.PackageID);                      if (languagePack != null)                      {                          LanguagePackController.DeleteLanguagePack(languagePack);                      }                      break;                  case "Module":                      var controller = new DesktopModuleController();                      DesktopModuleInfo desktopModule = DesktopModuleController.GetDesktopModuleByPackageID(package.PackageID);                      if (desktopModule != null)                      {                          controller.DeleteDesktopModule(desktopModule);                      }                      break;                  case "SkinObject":                      SkinControlInfo skinControl = SkinControlController.GetSkinControlByPackageID(package.PackageID);                      if (skinControl != null)                      {                          SkinControlController.DeleteSkinControl(skinControl);                      }                      break;              }
Missing Default,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,CanDeletePackage,The following switch statement is missing a default case: switch (package.PackageType)                  {                      case "Skin":                      case "Container":                          //Need to get path of skin being deleted so we can call the public CanDeleteSkin function in the SkinController                          string strRootSkin = package.PackageType.Equals("Skin"' StringComparison.OrdinalIgnoreCase) ? SkinController.RootSkin : SkinController.RootContainer;                          SkinPackageInfo _SkinPackageInfo = SkinController.GetSkinByPackageID(package.PackageID);                          string strFolderPath = Path.Combine(_SkinPackageInfo.PortalID == Null.NullInteger ? Path.Combine(Globals.HostMapPath' strRootSkin) : Path.Combine(portalSettings.HomeSystemDirectoryMapPath' strRootSkin)' _SkinPackageInfo.SkinName);                            bCanDelete = SkinController.CanDeleteSkin(strFolderPath' portalSettings.HomeSystemDirectoryMapPath);                          if (_SkinPackageInfo.PortalID != Null.NullInteger)                          {                              //To be compliant with all versions                              strFolderPath = Path.Combine(Path.Combine(portalSettings.HomeDirectoryMapPath' strRootSkin)' _SkinPackageInfo.SkinName);                              bCanDelete = bCanDelete && SkinController.CanDeleteSkin(strFolderPath' portalSettings.HomeDirectoryMapPath);                          }                          break;                      case "Provider":                          //Check if the provider is the default provider                          XmlDocument configDoc = Config.Load();                          string providerName = package.Name;                          if (providerName.IndexOf("."' StringComparison.Ordinal) > Null.NullInteger)                          {                              providerName = providerName.Substring(providerName.IndexOf("."' StringComparison.Ordinal) + 1);                          }                          switch (providerName)                          {                              case "SchedulingProvider":                                  providerName = "DNNScheduler";                                  break;                              case "SearchIndexProvider":                                  providerName = "ModuleIndexProvider";                                  break;                              case "SearchProvider":                                  providerName = "SearchDataStoreProvider";                                  break;                          }                          XPathNavigator providerNavigator = configDoc.CreateNavigator().SelectSingleNode("/configuration/dotnetnuke/*[@defaultProvider='" + providerName + "']");                          bCanDelete = (providerNavigator == null);                          break;                  }
Missing Default,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,CanDeletePackage,The following switch statement is missing a default case: switch (providerName)                          {                              case "SchedulingProvider":                                  providerName = "DNNScheduler";                                  break;                              case "SearchIndexProvider":                                  providerName = "ModuleIndexProvider";                                  break;                              case "SearchProvider":                                  providerName = "SearchDataStoreProvider";                                  break;                          }
Missing Default,DotNetNuke.Services.Installer.Packages,PackageController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Packages\PackageController.cs,ParsePackage,The following switch statement is missing a default case: switch (packageType.ToLowerInvariant())                                  {                                      case "package":                                          nav = rootNav.SelectSingleNode("packages/package");                                          break;                                      case "module":                                      case "languagepack":                                      case "skinobject":                                          nav = Installer.ConvertLegacyNavigator(rootNav' new InstallerInfo()).SelectSingleNode("packages/package");                                          break;                                  }
Missing Default,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,SaveString,The following switch statement is missing a default case: switch (resourceType)                  {                      case CustomizedLocale.Host:                          resourceFileName = resourceFileName.Replace(".resx"' ".Host.resx");                          break;                      case CustomizedLocale.Portal:                          resourceFileName = resourceFileName.Replace(".resx"' ".Portal-" + portalSettings.PortalId + ".resx");                          break;                  }
Missing Default,DotNetNuke.Services.Localization,LocalizationProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Localization\LocalizationProvider.cs,TryGetFromResourceFile,The following switch statement is missing a default case: switch (resourceType)              {                  case CustomizedLocale.Host:                      resourceFileName = resourceFile.Replace(".resx"' ".Host.resx");                      break;                  case CustomizedLocale.Portal:                      resourceFileName = resourceFile.Replace(".resx"' ".Portal-" + portalID + ".resx");                      break;              }
Missing Default,DotNetNuke.Services.Log.EventLog,LogInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogInfo.cs,ReadXml,The following switch statement is missing a default case: switch (reader.Name)                      {                          case "LogGUID":                              LogGUID = reader.ReadContentAsString();                              break;                          case "LogFileID":                              LogFileID = reader.ReadContentAsString();                              break;                          case "LogTypeKey":                              LogTypeKey = reader.ReadContentAsString();                              break;                          case "LogUserID":                              LogUserID = reader.ReadContentAsInt();                              break;                          case "LogEventID":                              LogEventID = reader.ReadContentAsInt();                              break;                          case "LogUserName":                              LogUserName = reader.ReadContentAsString();                              break;                          case "LogPortalID":                              LogPortalID = reader.ReadContentAsInt();                              break;                          case "LogPortalName":                              LogPortalName = reader.ReadContentAsString();                              break;                          case "LogCreateDate":                              LogCreateDate = DateTime.Parse(reader.ReadContentAsString());                              break;                          case "LogCreateDateNum":                              LogCreateDateNum = reader.ReadContentAsLong();                              break;                          case "BypassBuffering":                              BypassBuffering = bool.Parse(reader.ReadContentAsString());                              break;                          case "LogServerName":                              LogServerName = reader.ReadContentAsString();                              break;  						case "LogConfigID":  							LogConfigID = reader.ReadContentAsString();  							break;  					}
Missing Default,DotNetNuke.Services.Log.EventLog,LogInfo,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Log\EventLog\LogInfo.cs,IsSystemType,The following switch statement is missing a default case: switch (PropName)              {                  case "LogGUID":                  case "LogFileID":                  case "LogTypeKey":                  case "LogCreateDate":                  case "LogCreateDateNum":                  case "LogPortalID":                  case "LogPortalName":                  case "LogUserID":                  case "LogUserName":                  case "BypassBuffering":                  case "LogServerName":                      return true;              }
Missing Default,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,RephraseSearchText,The following switch statement is missing a default case: switch (c)                  {                      case '"':                          insideQuote = !insideQuote;                          if (!insideQuote)                          {                              newPhraseBulder.Append(currentWord + " ");                              currentWord.Clear();                          }                          break;                      case ' ':                          if (!insideQuote && useWildCard)                          {                              // end of a word; we need to append a wild card to search when needed                              newPhraseBulder.Append(FixLastWord(currentWord.ToString().Trim()' allowLeadingWildcard) + " ");                              currentWord.Clear();                          }                          break;                  }
Missing Default,DotNetNuke.Services.Search.Internals,SearchHelperImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchHelperImpl.cs,CleanSearchPhrase,The following switch statement is missing a default case: switch (c)                  {                      case '\u02BA': // 'ʺ' Modifier Letter Double Prime                      case '\u02EE': // 'ˮ' Modifier Letter Double Apostrophe                      case '\u00AB': // [LEFT-POINTING DOUBLE ANGLE QUOTATION MARK]                      case '\u00BB': // [RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK]                      case '\u201C': // [LEFT DOUBLE QUOTATION MARK]                      case '\u201D': // [RIGHT DOUBLE QUOTATION MARK]                      case '\u201E': // [DOUBLE LOW-9 QUOTATION MARK]                      case '\u2033': // [DOUBLE PRIME]                      case '\u2036': // [REVERSED DOUBLE PRIME]                      case '\u275D': // [HEAVY DOUBLE TURNED COMMA QUOTATION MARK ORNAMENT]                      case '\u275E': // [HEAVY DOUBLE COMMA QUOTATION MARK ORNAMENT]                      case '\u276E': // [HEAVY LEFT-POINTING ANGLE QUOTATION MARK ORNAMENT]                      case '\u276F': // [HEAVY RIGHT-POINTING ANGLE QUOTATION MARK ORNAMENT]                      case '\uFF02': // [FULLWIDTH QUOTATION MARK]                          chars[pos] = '"';  // Quotation Mark                          hasExactMatch = true;                          break;                      case '\u0009': // HT' Horizontal Tab                      case '\u000A': // LF' Line feed                      case '\u000B': // VT' Vertical Tab                      case '\u000C': // FF' Form feed                      case '\u000D': // CR' Carriage return                      case '\u00A0': // NBSP' No-break space                          chars[pos] = ' ';  // space                          break;                  }
Missing Default,DotNetNuke.Services.Search.Internals,SearchQueryStringParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\SearchQueryStringParser.cs,GetLastModifiedDate,The following switch statement is missing a default case: switch (date.ToLowerInvariant())                  {                      case "day":                          result = DateTime.UtcNow.AddDays(-1);                          break;                      case "week":                          result = DateTime.UtcNow.AddDays(-7);                          break;                      case "month":                          result = DateTime.UtcNow.AddMonths(-1);                          break;                      case "quarter":                          result = DateTime.UtcNow.AddMonths(-3);                          break;                      case "year":                          result = DateTime.UtcNow.AddYears(-1);                          break;                  }
Missing Default,DotNetNuke.Services.Search.Internals,InternalSearchControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Search\Internals\InternalSearchControllerImpl.cs,AddSearchDocumentParamters,The following switch statement is missing a default case: switch (key)                  {                      case Constants.TitleTag:                          if (_titleBoost > 0 && _titleBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _titleBoost / 10f;                          }                          break;                      case Constants.SubjectTag:                          if (_contentBoost > 0 && _contentBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _contentBoost / 10f;                          }                          break;                      case Constants.CommentsTag:                          if (_descriptionBoost > 0 && _descriptionBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _descriptionBoost / 10f;                          }                          break;                      case Constants.AuthorNameTag:                          if (_authorBoost > 0 && _authorBoost != Constants.StandardLuceneBoost)                          {                              field.Boost = _authorBoost / 10f;                          }                          break;                  }
Missing Default,DotNetNuke.Services.Tokens,PropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\PropertyAccess.cs,GetObjectProperty,The following switch statement is missing a default case: switch (objProperty.PropertyType.Name)                      {                          case "String":                              return FormatString(Convert.ToString(propValue)' strFormat);                          case "Boolean":                              return (Boolean2LocalizedYesNo(Convert.ToBoolean(propValue)' formatProvider));                          case "DateTime":                          case "Double":                          case "Single":                          case "Int32":                          case "Int64":                              if (strFormat == string.Empty)                              {                                  strFormat = "g";                              }                              return (((IFormattable) propValue).ToString(strFormat' formatProvider));                      }
Missing Default,DotNetNuke.Services.Tokens,TicksPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Tokens\PropertyAccess\TicksPropertyAccess.cs,GetProperty,The following switch statement is missing a default case: switch (propertyName.ToLowerInvariant())              {                  case "now":                      return DateTime.Now.Ticks.ToString(formatProvider);                  case "today":                      return DateTime.Today.Ticks.ToString(formatProvider);                  case "ticksperday":                      return TimeSpan.TicksPerDay.ToString(formatProvider);              }
Missing Default,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,RemoveCoreModule,The following switch statement is missing a default case: switch (parentTabName)              {                  case "Host":                      var tab = TabController.Instance.GetTabByName("Host"' Null.NullInteger' Null.NullInteger);                        if (tab != null)                      {                          moduleDefId = RemoveModule(desktopModuleName' tabName' tab.TabID' removeTab);                      }                      break;                  case "Admin":                      var portals = PortalController.Instance.GetPortals();                        //Iterate through the Portals to remove the Module from the Tab                      for (int intPortal = 0; intPortal <= portals.Count - 1; intPortal++)                      {                          var portal = (PortalInfo)portals[intPortal];                          moduleDefId = RemoveModule(desktopModuleName' tabName' portal.AdminTabId' removeTab);                      }                      break;              }
Missing Default,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,InitialiseHostSettings,The following switch statement is missing a default case: switch (settingName)                          {                              case "HostURL":                                  if (string.IsNullOrEmpty(settingValue))                                  {                                      settingValue = domainName;                                  }                                  break;                              case "HostEmail":                                  if (string.IsNullOrEmpty(settingValue))                                  {                                      settingValue = "support@" + domainName;                                        //Remove any folders                                      settingValue = settingValue.Substring(0' settingValue.IndexOf("/"));                                        //Remove port number                                      if (settingValue.IndexOf(":") != -1)                                      {                                          settingValue = settingValue.Substring(0' settingValue.IndexOf(":"));                                      }                                  }                                    break;                          }
Missing Default,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,IsNETFrameworkCurrent,The following switch statement is missing a default case: switch (version)              {                  case "3.5":                      //Try and instantiate a 3.5 Class                      if (Reflection.CreateType("System.Data.Linq.DataContext"' true) != null)                      {                          isCurrent = true;                      }                      break;                  case "4.0":                      //Look for requestValidationMode attribute                      XmlDocument configFile = Config.Load();                      XPathNavigator configNavigator = configFile.CreateNavigator().SelectSingleNode("//configuration/system.web/httpRuntime|//configuration/location/system.web/httpRuntime");                      if (configNavigator != null && !string.IsNullOrEmpty(configNavigator.GetAttribute("requestValidationMode"' "")))                      {                          isCurrent = true;                      }                      break;                  case "4.5":                      //Try and instantiate a 4.5 Class                      if (Reflection.CreateType("System.Reflection.ReflectionContext"' true) != null)                      {                          isCurrent = true;                      }                      break;              }
Missing Default,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,TryUpgradeNETFramework,The following switch statement is missing a default case: switch (Globals.NETFrameworkVersion.ToString(2))              {                  case "3.5":                      if (!IsNETFrameworkCurrent("3.5"))                      {                          //Upgrade to .NET 3.5                          string upgradeFile = string.Format("{0}\\Config\\Net35.config"' Globals.InstallMapPath);                          string message = UpdateConfig(upgradeFile' ApplicationVersion' ".NET 3.5 Upgrade");                          if (string.IsNullOrEmpty(message))                          {                              //Remove old AJAX file                              FileSystemUtils.DeleteFile(Path.Combine(Globals.ApplicationMapPath' "bin\\System.Web.Extensions.dll"));                                //Log Upgrade                                EventLogController.Instance.AddLog("UpgradeNet"' "Upgraded Site to .NET 3.5"' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.HOST_ALERT);                          }                          else                          {                              //Log Failed Upgrade                              EventLogController.Instance.AddLog("UpgradeNet"' string.Format("Upgrade to .NET 3.5 failed. Error reported during attempt to update:{0}"' message)' PortalController.Instance.GetCurrentPortalSettings()' UserController.Instance.GetCurrentUserInfo().UserID' EventLogController.EventLogType.HOST_ALERT);                          }                      }                      break;                  case "4.0":                      if (!IsNETFrameworkCurrent("4.0"))                      {                          //Upgrade to .NET 4.0                          string upgradeFile = string.Format("{0}\\Config\\Net40.config"' Globals.InstallMapPath);                          string strMessage = UpdateConfig(upgradeFile' ApplicationVersion' ".NET 4.0 Upgrade");                          EventLogController.Instance.AddLog("UpgradeNet"'                                                    string.IsNullOrEmpty(strMessage)                                                        ? "Upgraded Site to .NET 4.0"                                                        : string.Format("Upgrade to .NET 4.0 failed. Error reported during attempt to update:{0}"' strMessage)'                                                    PortalController.Instance.GetCurrentPortalSettings()'                                                    UserController.Instance.GetCurrentUserInfo().UserID'                                                    EventLogController.EventLogType.HOST_ALERT);                      }                      break;              }
Missing Default,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeApplication,The following switch statement is missing a default case: switch (version.ToString(3))                      {                          case "3.2.3":                              UpgradeToVersion323();                              break;                          case "4.4.0":                              UpgradeToVersion440();                              break;                          case "4.7.0":                              UpgradeToVersion470();                              break;                          case "4.8.2":                              UpgradeToVersion482();                              break;                          case "5.0.0":                              UpgradeToVersion500();                              break;                          case "5.0.1":                              UpgradeToVersion501();                              break;                          case "5.1.0":                              UpgradeToVersion510();                              break;                          case "5.1.1.0":                              UpgradeToVersion511();                              break;                          case "5.1.3":                              UpgradeToVersion513();                              break;                          case "5.2.0":                              UpgradeToVersion520();                              break;                          case "5.2.1":                              UpgradeToVersion521();                              break;                          case "5.3.0":                              UpgradeToVersion530();                              break;                          case "5.4.0":                              UpgradeToVersion540();                              break;                          case "5.4.3":                              UpgradeToVersion543();                              break;                          case "5.5.0":                              UpgradeToVersion550();                              break;                          case "5.6.0":                              UpgradeToVersion560();                              break;                          case "5.6.2":                              UpgradeToVersion562();                              break;                            case "6.0.1":                              UpgradeToVersion601();                              break;                          case "6.0.2":                              UpgradeToVersion602();                              break;                          case "6.1.0":                              UpgradeToVersion610();                              break;                          case "6.1.2":                              UpgradeToVersion612();                              break;                          case "6.1.3":                              UpgradeToVersion613();                              break;                          case "6.2.0":                              UpgradeToVersion620();                              break;                          case "6.2.1":                              UpgradeToVersion621();                              break;                          case "6.2.4":                              UpgradeToVersion624();                              break;                          case "7.0.0":                              UpgradeToVersion700();                              break;                          case "7.1.0":                              UpgradeToVersion710();                              break;                          case "7.1.1":                              UpgradeToVersion711();                              break;                          case "7.1.2":                              UpgradeToVersion712();                              break;                          case "7.2.0":                              UpgradeToVersion720();                              break;                          case "7.2.1":                              UpgradeToVersion721();                              break;                          case "7.2.2":                              UpgradeToVersion722();                              break;                          case "7.3.2":                              UpgradeToVersion732();                              break;                          case "7.3.3":                              UpgradeToVersion733();                              break;                          case "7.4.0":                              UpgradeToVersion740();                              break;                          case "7.4.2":                              UpgradeToVersion742();                              break;                          case "9.1.0":                              UpgradeToVersion910();                              break;                          case "9.2.0":                              UpgradeToVersion920();                              break;                          case "9.2.1":                              UpgradeToVersion921();                              break;                          case "9.3.0":                              UpgradeToVersion930();                              break;                          case "9.4.1":                              UpgradeToVersion941();                              break;                      }
Missing Default,DotNetNuke.Services.Upgrade,Upgrade,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Upgrade.cs,UpgradeApplication,The following switch statement is missing a default case: switch (version.ToString(4))                      {                          case "8.0.0.6":                              UpgradeToVersion8006();                              break;                          case "8.0.0.7":                              UpgradeToVersion8007();                              break;                          case "8.0.0.13":                              UpgradeToVersion80013();                              break;                          case "8.0.0.16":                              UpgradeToVersion80016();                              break;                          case "8.0.0.26":                              UpgradeToVersion80026();                              break;                          case "8.0.0.27":                              UpgradeToVersion80027();                              break;                      }
Missing Default,DotNetNuke.Services.Upgrade.Internals,InstallControllerImpl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\InstallControllerImpl.cs,GetConnectionFromWebConfig,The following switch statement is missing a default case: switch (key.ToLowerInvariant())                      {                          case "server":                          case "data source":                          case "address":                          case "addr":                          case "network address":                              connectionConfig.Server = value;                              break;                          case "database":                          case "initial catalog":                              connectionConfig.Database = value;                              break;                          case "uid":                          case "user id":                          case "user":                              connectionConfig.User = value;                              break;                          case "pwd":                          case "password":                              connectionConfig.Password = value;                              break;                          case "integrated security":                              connectionConfig.Integrated = (value.ToLowerInvariant() == "true");                              break;                          case "attachdbfilename":                              connectionConfig.File = value.Replace("|DataDirectory|"' "");                              break;                      }
Missing Default,DotNetNuke.Services.Cache,CachingProvider,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Cache\CachingProvider.cs,ClearCacheInternal,The following switch statement is missing a default case: switch (cacheType)              {                  case "Prefix":                      ClearCacheInternal(data' clearRuntime);                      break;                  case "Host":                      ClearHostCacheInternal(clearRuntime);                      break;                  case "Folder":                      ClearFolderCacheInternal(int.Parse(data)' clearRuntime);                      break;                  case "Module":                      ClearModuleCacheInternal(int.Parse(data)' clearRuntime);                      break;                  case "ModulePermissionsByPortal":                      ClearModulePermissionsCachesByPortalInternal(int.Parse(data)' clearRuntime);                      break;                  case "Portal":                      ClearPortalCacheInternal(int.Parse(data)' false' clearRuntime);                      break;                  case "PortalCascade":                      ClearPortalCacheInternal(int.Parse(data)' true' clearRuntime);                      break;                  case "Tab":                      ClearTabCacheInternal(int.Parse(data)' clearRuntime);                      break;                  case "ServiceFrameworkRoutes":                      ReloadServicesFrameworkRoutes();                      break;              }
Missing Default,DotNetNuke.Services.Journal,ItemData,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\ItemData.cs,GetProperty,The following switch statement is missing a default case: switch (propertyName) {                      case "url":                          return PropertyAccess.FormatString(Url' format);                      case "title":                          return PropertyAccess.FormatString(Title' format);                      case "description":                          return PropertyAccess.FormatString(Description' format);                      case "imageurl":                          return PropertyAccess.FormatString(ImageUrl' format);                      }
Missing Default,DotNetNuke.Services.Journal,JournalEntity,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalEntity.cs,GetProperty,The following switch statement is missing a default case: switch (propertyName) {                  case "id":                      return PropertyAccess.FormatString(Id.ToString()' format);                  case "name":                      return PropertyAccess.FormatString(Name.ToString()' format);                  case "vanity":                      return PropertyAccess.FormatString(Vanity.ToString()' format);                  case "avatar":                      return PropertyAccess.FormatString(Avatar.ToString()' format);                                  }
Missing Default,DotNetNuke.Services.Journal,JournalItem,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Journal\JournalItem.cs,GetProperty,The following switch statement is missing a default case: switch (propertyName) {                  case "journalid":                      return PropertyAccess.FormatString(JournalId.ToString()' format);                  case "journaltypeid":                      return PropertyAccess.FormatString(JournalTypeId.ToString()' format);                  case "profileid":                      return PropertyAccess.FormatString(ProfileId.ToString()' format);                  case "socialgroupid":                      return PropertyAccess.FormatString(SocialGroupId.ToString()' format);                  case "datecreated":                      return PropertyAccess.FormatString(DateCreated.ToString()' format);                  case "title":                      return PropertyAccess.FormatString(Title' format);                  case "summary":                      return PropertyAccess.FormatString(Summary' format);                  case "body":                      return PropertyAccess.FormatString(Body' format);                  case "timeframe":                      return PropertyAccess.FormatString(TimeFrame' format);                  case "isdeleted":                      return IsDeleted.ToString();              }
Missing Default,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,WorkCompleted,The following switch statement is missing a default case: switch (scheduleHistoryItem.TimeLapseMeasurement)                              {                                  case "s":                                      scheduleHistoryItem.NextStart = scheduleHistoryItem.NextStart.AddSeconds(scheduleHistoryItem.TimeLapse);                                      break;                                  case "m":                                      scheduleHistoryItem.NextStart = scheduleHistoryItem.NextStart.AddMinutes(scheduleHistoryItem.TimeLapse);                                      break;                                  case "h":                                      scheduleHistoryItem.NextStart = scheduleHistoryItem.NextStart.AddHours(scheduleHistoryItem.TimeLapse);                                      break;                                  case "d":                                      scheduleHistoryItem.NextStart = scheduleHistoryItem.NextStart.AddDays(scheduleHistoryItem.TimeLapse);                                      break;                                  case "w":                                      scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddDays(scheduleHistoryItem.TimeLapse * 7);                                      break;                                  case "mo":                                      scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddMonths(scheduleHistoryItem.TimeLapse);                                      break;                                  case "y":                                      scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddYears(scheduleHistoryItem.TimeLapse);                                      break;                              }
Missing Default,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,WorkCompleted,The following switch statement is missing a default case: switch (scheduleHistoryItem.TimeLapseMeasurement)                              {                                  case "s":                                      scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddSeconds(scheduleHistoryItem.TimeLapse);                                      break;                                  case "m":                                      scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddMinutes(scheduleHistoryItem.TimeLapse);                                      break;                                  case "h":                                      scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddHours(scheduleHistoryItem.TimeLapse);                                      break;                                  case "d":                                      scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddDays(scheduleHistoryItem.TimeLapse);                                      break;                                  case "w":                                      scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddDays(scheduleHistoryItem.TimeLapse * 7);                                      break;                                  case "mo":                                      scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddMonths(scheduleHistoryItem.TimeLapse);                                      break;                                  case "y":                                      scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddYears(scheduleHistoryItem.TimeLapse);                                      break;                              }
Missing Default,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,WorkErrored,The following switch statement is missing a default case: switch (scheduleHistoryItem.RetryTimeLapseMeasurement)                          {                              case "s":                                  scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddSeconds(scheduleHistoryItem.RetryTimeLapse);                                  break;                              case "m":                                  scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddMinutes(scheduleHistoryItem.RetryTimeLapse);                                  break;                              case "h":                                  scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddHours(scheduleHistoryItem.RetryTimeLapse);                                  break;                              case "d":                                  scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddDays(scheduleHistoryItem.RetryTimeLapse);                                  break;                              case "w":                                  scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddDays(scheduleHistoryItem.RetryTimeLapse * 7);                                  break;                              case "mo":                                  scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddMonths(scheduleHistoryItem.RetryTimeLapse);                                  break;                              case "y":                                  scheduleHistoryItem.NextStart = scheduleHistoryItem.StartDate.AddYears(scheduleHistoryItem.RetryTimeLapse);                                  break;                          }
Missing Default,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,StopScheduleInProgress,The following switch statement is missing a default case: switch (scheduleHistoryItem.TimeLapseMeasurement)                                  {                                      case "s":                                          scheduleHistoryItem.NextStart =                                              scheduleHistoryItem.NextStart.AddSeconds(scheduleHistoryItem.TimeLapse);                                          break;                                      case "m":                                          scheduleHistoryItem.NextStart =                                              scheduleHistoryItem.NextStart.AddMinutes(scheduleHistoryItem.TimeLapse);                                          break;                                      case "h":                                          scheduleHistoryItem.NextStart =                                              scheduleHistoryItem.NextStart.AddHours(scheduleHistoryItem.TimeLapse);                                          break;                                      case "d":                                          scheduleHistoryItem.NextStart =                                              scheduleHistoryItem.NextStart.AddDays(scheduleHistoryItem.TimeLapse);                                          break;                                      case "w":                                          scheduleHistoryItem.NextStart =                                              scheduleHistoryItem.StartDate.AddDays(scheduleHistoryItem.TimeLapse*7);                                          break;                                      case "mo":                                          scheduleHistoryItem.NextStart =                                              scheduleHistoryItem.StartDate.AddMonths(scheduleHistoryItem.TimeLapse);                                          break;                                      case "y":                                          scheduleHistoryItem.NextStart =                                              scheduleHistoryItem.StartDate.AddYears(scheduleHistoryItem.TimeLapse);                                          break;                                  }
Missing Default,DotNetNuke.Services.Scheduling,CoreScheduler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Scheduling\Scheduler.cs,StopScheduleInProgress,The following switch statement is missing a default case: switch (scheduleHistoryItem.TimeLapseMeasurement)                                  {                                      case "s":                                          scheduleHistoryItem.NextStart =                                              scheduleHistoryItem.StartDate.AddSeconds(scheduleHistoryItem.TimeLapse);                                          break;                                      case "m":                                          scheduleHistoryItem.NextStart =                                              scheduleHistoryItem.StartDate.AddMinutes(scheduleHistoryItem.TimeLapse);                                          break;                                      case "h":                                          scheduleHistoryItem.NextStart =                                              scheduleHistoryItem.StartDate.AddHours(scheduleHistoryItem.TimeLapse);                                          break;                                      case "d":                                          scheduleHistoryItem.NextStart =                                              scheduleHistoryItem.StartDate.AddDays(scheduleHistoryItem.TimeLapse);                                          break;                                      case "w":                                          scheduleHistoryItem.NextStart =                                              scheduleHistoryItem.StartDate.AddDays(scheduleHistoryItem.TimeLapse*7);                                          break;                                      case "mo":                                          scheduleHistoryItem.NextStart =                                              scheduleHistoryItem.StartDate.AddMonths(scheduleHistoryItem.TimeLapse);                                          break;                                      case "y":                                          scheduleHistoryItem.NextStart =                                              scheduleHistoryItem.StartDate.AddYears(scheduleHistoryItem.TimeLapse);                                          break;                                  }
Missing Default,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,GetInBoxView,The following switch statement is missing a default case: switch (readStatus)              {                  case MessageReadStatus.Read:                      read = true;                      break;                  case MessageReadStatus.UnRead:                      read = false;                      break;              }
Missing Default,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,GetInBoxView,The following switch statement is missing a default case: switch (archivedStatus)              {                  case MessageArchivedStatus.Archived:                      archived = true;                      break;                  case MessageArchivedStatus.UnArchived:                      archived = false;                      break;              }
Missing Default,DotNetNuke.Services.Social.Messaging.Data,DataService,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Social\Messaging\Data\DataService.cs,GetInBoxView,The following switch statement is missing a default case: switch (sentStatus)              {                  case MessageSentStatus.Received:                      sent = false;                      break;                  case MessageSentStatus.Sent:                      sent = true;                      break;              }
Missing Default,DotNetNuke.Entities.Modules.Definitions,ModuleDefinitionValidator,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Entities\Modules\Definitions\ModuleDefinitionValidator.cs,GetDnnSchemaPath,The following switch statement is missing a default case: switch (Version)              {                  case ModuleDefinitionVersion.V2:                      schemaPath = "components\\ResourceInstaller\\ModuleDef_V2.xsd";                      break;                  case ModuleDefinitionVersion.V3:                      schemaPath = "components\\ResourceInstaller\\ModuleDef_V3.xsd";                      break;                  case ModuleDefinitionVersion.V2_Skin:                      schemaPath = "components\\ResourceInstaller\\ModuleDef_V2Skin.xsd";                      break;                  case ModuleDefinitionVersion.V2_Provider:                      schemaPath = "components\\ResourceInstaller\\ModuleDef_V2Provider.xsd";                      break;                  case ModuleDefinitionVersion.VUnknown:                      throw new Exception(GetLocalizedString("EXCEPTION_LoadFailed"));              }
Missing Default,DotNetNuke.Framework.Providers,ProviderConfiguration,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Framework\Providers\ProviderConfiguration.cs,GetProviders,The following switch statement is missing a default case: switch (Provider.Name)                  {                      case "add":                          Providers.Add(Provider.Attributes["name"].Value' new Provider(Provider.Attributes));                          break;                      case "remove":                          Providers.Remove(Provider.Attributes["name"].Value);                          break;                      case "clear":                          Providers.Clear();                          break;                  }
Missing Default,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,grid_ItemCommand,The following switch statement is missing a default case: switch (command)              {                  case "DELETE":                      if (entityType == "ROLE")                      {                          DeleteRolePermissions(entityID);                      }                      else if (entityType == "USER")                      {                          DeleteUserPermissions(entityID);                      }                      BindData();                      break;              }
Missing Default,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,UpdatePermission,The following switch statement is missing a default case: switch (stateKey)              {                  case PermissionTypeGrant:                      AddPermission(permission' roleId' roleName' Null.NullInteger' Null.NullString' true);                      break;                  case PermissionTypeDeny:                      AddPermission(permission' roleId' roleName' Null.NullInteger' Null.NullString' false);                      break;              }
Missing Default,DotNetNuke.Security.Permissions.Controls,PermissionsGrid,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Security\Permissions\Controls\PermissionsGrid.cs,UpdatePermission,The following switch statement is missing a default case: switch (stateKey)              {                  case PermissionTypeGrant:                      AddPermission(permission' int.Parse(Globals.glbRoleNothing)' Null.NullString' userId' displayName' true);                      break;                  case PermissionTypeDeny:                      AddPermission(permission' int.Parse(Globals.glbRoleNothing)' Null.NullString' userId' displayName' false);                      break;              }
Missing Default,DotNetNuke.Services.Analytics,GoogleAnalyticsEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Analytics\GoogleAnalyticsEngine.cs,RenderScript,The following switch statement is missing a default case: switch (setting.SettingName.ToLowerInvariant())                  {                      case "trackingid":                          trackingId = setting.SettingValue;                          break;                      case "urlparameter":                          urlParameter = setting.SettingValue;                          break;                      case "trackforadmin":                          if (!bool.TryParse(setting.SettingValue' out trackForAdmin))                          {                              trackForAdmin = true;                          }                          break;                  }
Missing Default,DotNetNuke.Services.Analytics,GoogleAnalyticsEngine,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Analytics\GoogleAnalyticsEngine.cs,RenderCustomScript,The following switch statement is missing a default case: switch (setting.SettingName.ToLowerInvariant())                      {                          case "anonymizeip":                          {                              bool.TryParse(setting.SettingValue' out anonymize);                              break;                          }                          case "trackinguser":                          {                              bool.TryParse(setting.SettingValue' out trackingUserId);                              break;                          }                      }
Missing Default,DotNetNuke.Services.Analytics,GoogleAnalyticsController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Analytics\GoogleAnalyticsController.cs,UpgradeModule,The following switch statement is missing a default case: switch (Version)              {                  case "05.06.00":                      //previous module versions                      using (StreamReader fileReader = GetConfigFile())                      {                          if (fileReader != null)                          {                              var fileEncoding = new ASCIIEncoding();                              using (var md5 = new MD5CryptoServiceProvider())                              {                                  string currFileHashValue = "";                                    //calculate md5 hash of existing file                                  currFileHashValue = Convert.ToBase64String(md5.ComputeHash(fileEncoding.GetBytes(fileReader.ReadToEnd())));                                  fileReader.Close();                                    IEnumerable<string> result = (from h in TRADITIONAL_FILEHASHES where h == currFileHashValue select h);                                    //compare md5 hash                                  if (result.Any())                                  {                                      //Copy new config file from \Config                                      //True causes .config to be overwritten                                      Common.Utilities.Config.GetPathToFile(Common.Utilities.Config.ConfigFileType.SiteAnalytics' true);                                  }                              }                          }                      }                      break;              }
Missing Default,DotNetNuke.Services.Installer,Installer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installer.cs,ReadManifest,The following switch statement is missing a default case: switch (packageType.ToLowerInvariant())              {                  case "package":                      InstallerInfo.IsLegacyMode = false;                      //Parse the package nodes                      ProcessPackages(rootNav);                      break;                  case "module":                  case "languagepack":                  case "skinobject":                      InstallerInfo.IsLegacyMode = true;                      ProcessPackages(ConvertLegacyNavigator(rootNav' InstallerInfo));                      break;              }
Missing Default,DotNetNuke.Services.Installer,Installer,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Installer.cs,ConvertLegacyNavigator,The following switch statement is missing a default case: switch (packageType.ToLowerInvariant())              {                  case "module":                      var sb = new StringBuilder();                      using (var writer = XmlWriter.Create(sb' XmlUtils.GetXmlWriterSettings(ConformanceLevel.Fragment)))                      {                          //Write manifest start element                          PackageWriterBase.WriteManifestStartElement(writer);                            //Legacy Module - Process each folder                          foreach (XPathNavigator folderNav in rootNav.Select("folders/folder"))                          {                              var modulewriter = new ModulePackageWriter(folderNav' info);                              modulewriter.WriteManifest(writer' true);                          }                            //Write manifest end element                          PackageWriterBase.WriteManifestEndElement(writer);                            //Close XmlWriter                          writer.Close();                      }                        //Load manifest into XPathDocument for processing                      legacyDoc = new XPathDocument(new StringReader(sb.ToString()));                        //Parse the package nodes                      nav = legacyDoc.CreateNavigator().SelectSingleNode("dotnetnuke");                      break;                  case "languagepack":                      //Legacy Language Pack                      var languageWriter = new LanguagePackWriter(rootNav' info);                      info.LegacyError = languageWriter.LegacyError;                      if (string.IsNullOrEmpty(info.LegacyError))                      {                          legacyManifest = languageWriter.WriteManifest(false);                          legacyDoc = new XPathDocument(new StringReader(legacyManifest));                            //Parse the package nodes                          nav = legacyDoc.CreateNavigator().SelectSingleNode("dotnetnuke");                      }                      break;                  case "skinobject":                      //Legacy Skin Object                      var skinControlwriter = new SkinControlPackageWriter(rootNav' info);                      legacyManifest = skinControlwriter.WriteManifest(false);                      legacyDoc = new XPathDocument(new StringReader(legacyManifest));                        //Parse the package nodes                      nav = legacyDoc.CreateNavigator().SelectSingleNode("dotnetnuke");                      break;              }
Missing Default,DotNetNuke.Services.Installer,LegacyUtil,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\LegacyUtil.cs,ParsePackageName,The following switch statement is missing a default case: switch (package.PackageType)                      {                          case "Skin":                              package.Name += ".Skin";                              package.FriendlyName += " Skin";                              break;                          case "Container":                              package.Name += ".Container";                              package.FriendlyName += " Container";                              break;                          case "SkinObject":                              package.Name += "SkinObject";                              package.FriendlyName += " SkinObject";                              break;                      }
Missing Default,DotNetNuke.Services.Installer,XmlMerge,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\XmlMerge.cs,InsertNode,The following switch statement is missing a default case: switch (mode)                      {                          case NodeInsertType.Before:                              rootNode.InsertBefore(TargetConfig.ImportNode(child' true)' childRootNode);                              changedNode = true;                              break;                          case NodeInsertType.After:                              rootNode.InsertAfter(TargetConfig.ImportNode(child' true)' childRootNode);                              changedNode = true;                              break;                      }
Missing Default,DotNetNuke.Services.Installer,XmlMerge,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\XmlMerge.cs,UpdateNode,The following switch statement is missing a default case: switch (collisionAction.ToLowerInvariant())                      {                          case "overwrite":                              var oldContent = rootNode.InnerXml;                              rootNode.ReplaceChild(TargetConfig.ImportNode(child' true)' targetNode);                              var newContent = rootNode.InnerXml;                              changedNode = !string.Equals(oldContent' newContent' StringComparison.Ordinal);                              break;                          case "save":                              string commentHeaderText = string.Format(Localization.Localization.GetString("XMLMERGE_Upgrade"' Localization.Localization.SharedResourceFile)'                                                                       Environment.NewLine'                                                                       Sender'                                                                       Version'                                                                       DateTime.Now);                              XmlComment commentHeader = TargetConfig.CreateComment(commentHeaderText);    		                    var targetNodeContent = GetNodeContentWithoutComment(targetNode);  							XmlComment commentNode = TargetConfig.CreateComment(targetNodeContent);                              var newChild = this.TargetConfig.ImportNode(child' true);                              rootNode.ReplaceChild(newChild' targetNode);                              rootNode.InsertBefore(commentHeader' newChild);                              rootNode.InsertBefore(commentNode' newChild);                              changedNode = true;                              break;                          case "ignore":                              break;                      }
Missing Default,DotNetNuke.Services.Installer.Log,Logger,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Log\Logger.cs,GetLogsTable,The following switch statement is missing a default case: switch (entry.Type)                  {                      case LogType.Failure:                      case LogType.Warning:                          tdType.Attributes.Add("class"' ErrorClass);                          tdDescription.Attributes.Add("class"' ErrorClass);                          break;                      case LogType.StartJob:                      case LogType.EndJob:                          tdType.Attributes.Add("class"' HighlightClass);                          tdDescription.Attributes.Add("class"' HighlightClass);                          break;                      case LogType.Info:                          tdType.Attributes.Add("class"' NormalClass);                          tdDescription.Attributes.Add("class"' NormalClass);                          break;                  }
Missing Default,DotNetNuke.Services.Installer.Writers,LanguagePackWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguagePackWriter.cs,ReadLegacyManifest,The following switch statement is missing a default case: switch (fileName.Replace(extendedExtension' ""))                                  {                                      case "authentication.ascx":                                          filePath = "";                                          break;                                      case "friendlyurls.ascx":                                          filePath = "DesktopModules\\Admin\\HostSettings\\App_LocalResources";                                          break;                                      case "hostsettings.ascx":                                          filePath = "DesktopModules\\Admin\\HostSettings\\App_LocalResources";                                          break;                                      case "requestfilters.ascx":                                          filePath = "DesktopModules\\Admin\\HostSettings\\App_LocalResources";                                          break;                                  }
Missing Default,DotNetNuke.Services.Installer.Writers,LanguagePackWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguagePackWriter.cs,ReadLegacyManifest,The following switch statement is missing a default case: switch (fileName.Replace(extendedExtension' ""))                                  {                                      case "editportalalias.ascx":                                          filePath = "DesktopModules\\Admin\\Portals\\App_LocalResources";                                          break;                                      case "portalalias.ascx":                                          filePath = "DesktopModules\\Admin\\Portals\\App_LocalResources";                                          break;                                      case "portals.ascx":                                          filePath = "DesktopModules\\Admin\\Portals\\App_LocalResources";                                          break;                                      case "privacy.ascx":                                          filePath = "Admin\\Portal\\App_LocalResources";                                          break;                                      case "signup.ascx":                                          filePath = "DesktopModules\\Admin\\Portals\\App_LocalResources";                                          break;                                      case "sitesettings.ascx":                                          filePath = "DesktopModules\\Admin\\Portals\\App_LocalResources";                                          break;                                      case "sitewizard.ascx":                                          filePath = "DesktopModules\\Admin\\SiteWizard\\App_LocalResources";                                          break;                                      case "sql.ascx":                                          filePath = "DesktopModules\\Admin\\SQL\\App_LocalResources";                                          break;                                      case "systemmessages.ascx":                                          filePath = "";                                          break;                                      case "template.ascx":                                          filePath = "DesktopModules\\Admin\\Portals\\App_LocalResources";                                          break;                                      case "terms.ascx":                                          filePath = "Admin\\Portal\\App_LocalResources";                                          break;                                  }
Missing Default,DotNetNuke.Services.Installer.Writers,LanguagePackWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguagePackWriter.cs,ReadLegacyManifest,The following switch statement is missing a default case: switch (fileName.Replace(extendedExtension' ""))                                  {                                      case "inputsettings.ascx":                                          filePath = "DesktopModules\\Admin\\SearchInput\\App_LocalResources";                                          break;                                      case "resultssettings.ascx":                                          filePath = "DesktopModules\\Admin\\SearchResults\\App_LocalResources";                                          break;                                      case "searchadmin.ascx":                                          filePath = "DesktopModules\\Admin\\SearchAdmin\\App_LocalResources";                                          break;                                      case "searchinput.ascx":                                          filePath = "DesktopModules\\Admin\\SearchInput\\App_LocalResources";                                          break;                                      case "searchresults.ascx":                                          filePath = "DesktopModules\\Admin\\SearchResults\\App_LocalResources";                                          break;                                  }
Missing Default,DotNetNuke.Services.Installer.Writers,LanguagePackWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguagePackWriter.cs,ReadLegacyManifest,The following switch statement is missing a default case: switch (fileName.Replace(extendedExtension' ""))                                  {                                      case "accessdenied.ascx":                                          filePath = "Admin\\Security\\App_LocalResources";                                          break;                                      case "authenticationsettings.ascx":                                          filePath = "";                                          break;                                      case "editgroups.ascx":                                          filePath = "DesktopModules\\Admin\\Security\\App_LocalResources";                                          break;                                      case "editroles.ascx":                                          filePath = "DesktopModules\\Admin\\Security\\App_LocalResources";                                          break;                                      case "register.ascx":                                          filePath = "";                                          break;                                      case "roles.ascx":                                          filePath = "DesktopModules\\Admin\\Security\\App_LocalResources";                                          break;                                      case "securityroles.ascx":                                          filePath = "DesktopModules\\Admin\\Security\\App_LocalResources";                                          break;                                      case "sendpassword.ascx":                                          filePath = "Admin\\Security\\App_LocalResources";                                          break;                                      case "signin.ascx":                                          filePath = "";                                          break;                                  }
Missing Default,DotNetNuke.Services.Installer.Writers,LanguagePackWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguagePackWriter.cs,ReadLegacyManifest,The following switch statement is missing a default case: switch (fileName.Replace(extendedExtension' ""))                                  {                                      case "export.ascx":                                          filePath = "Admin\\Tabs\\App_LocalResources";                                          break;                                      case "import.ascx":                                          filePath = "Admin\\Tabs\\App_LocalResources";                                          break;                                      case "managetabs.ascx":                                          filePath = "DesktopModules\\Admin\\Tabs\\App_LocalResources";                                          break;                                      case "recyclebin.ascx":                                          filePath = "DesktopModules\\Admin\\RecycleBin\\App_LocalResources";                                          break;                                      case "tabs.ascx":                                          filePath = "DesktopModules\\Admin\\Tabs\\App_LocalResources";                                          break;                                  }
Missing Default,DotNetNuke.Services.Installer.Writers,LanguagePackWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguagePackWriter.cs,ReadLegacyManifest,The following switch statement is missing a default case: switch (fileName.Replace(extendedExtension' ""))                                  {                                      case "bulkemail.ascx":                                          filePath = "DesktopModules\\Admin\\Newsletters\\App_LocalResources";                                          fileName = "Newsletter.ascx" + extendedExtension;                                          break;                                      case "editprofiledefinition.ascx":                                          filePath = "DesktopModules\\Admin\\Security\\App_LocalResources";                                          break;                                      case "manageusers.ascx":                                          filePath = "DesktopModules\\Admin\\Security\\App_LocalResources";                                          break;                                      case "memberservices.ascx":                                          filePath = "DesktopModules\\Admin\\Security\\App_LocalResources";                                          break;                                      case "membership.ascx":                                          filePath = "DesktopModules\\Admin\\Security\\App_LocalResources";                                          break;                                      case "password.ascx":                                          filePath = "DesktopModules\\Admin\\Security\\App_LocalResources";                                          break;                                      case "profile.ascx":                                          filePath = "DesktopModules\\Admin\\Security\\App_LocalResources";                                          break;                                      case "profiledefinitions.ascx":                                          filePath = "DesktopModules\\Admin\\Security\\App_LocalResources";                                          break;                                      case "user.ascx":                                          filePath = "DesktopModules\\Admin\\Security\\App_LocalResources";                                          break;                                      case "users.ascx":                                          filePath = "DesktopModules\\Admin\\Security\\App_LocalResources";                                          break;                                      case "usersettings.ascx":                                          filePath = "DesktopModules\\Admin\\Security\\App_LocalResources";                                          break;                                      case "viewprofile.ascx":                                          filePath = "Admin\\Users\\App_LocalResources";                                          break;                                  }
Missing Default,DotNetNuke.Services.Installer.Writers,LanguagePackWriter,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Installer\Writers\LanguagePackWriter.cs,ReadLegacyManifest,The following switch statement is missing a default case: switch (fileName.Replace(extendedExtension' ""))                                  {                                      case "adsense.ascx":                                          filePath = "";                                          break;                                      case "editadsense.ascx":                                          filePath = "";                                          break;                                      case "affiliates.ascx":                                          filePath = "DesktopModules\\Admin\\Vendors\\App_LocalResources";                                          break;                                      case "banneroptions.ascx":                                          filePath = "DesktopModules\\Admin\\Banners\\App_LocalResources";                                          break;                                      case "banners.ascx":                                          filePath = "DesktopModules\\Admin\\Vendors\\App_LocalResources";                                          break;                                      case "displaybanners.ascx":                                          filePath = "DesktopModules\\Admin\\Banners\\App_LocalResources";                                          break;                                      case "editaffiliate.ascx":                                          filePath = "DesktopModules\\Admin\\Vendors\\App_LocalResources";                                          break;                                      case "editbanner.ascx":                                          filePath = "DesktopModules\\Admin\\Vendors\\App_LocalResources";                                          break;                                      case "editvendors.ascx":                                          filePath = "DesktopModules\\Admin\\Vendors\\App_LocalResources";                                          break;                                      case "vendors.ascx":                                          filePath = "DesktopModules\\Admin\\Vendors\\App_LocalResources";                                          break;                                  }
Missing Default,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMailInternal,The following switch statement is missing a default case: switch (smtpAuthentication)                          {                              case "":                              case "0": //anonymous                                  break;                              case "1": //basic                                  if (!String.IsNullOrEmpty(smtpUsername) && !String.IsNullOrEmpty(smtpPassword))                                  {                                      smtpClient.UseDefaultCredentials = false;                                      smtpClient.Credentials = new NetworkCredential(smtpUsername' smtpPassword);                                  }                                  break;                              case "2": //NTLM                                  smtpClient.UseDefaultCredentials = true;                                  break;                          }
Missing Default,DotNetNuke.Services.Mail,Mail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\Mail.cs,SendMail,The following switch statement is missing a default case: switch (bodyType.ToLowerInvariant())                  {                      case "html":                          bodyFormat = MailFormat.Html;                          break;                      case "text":                          bodyFormat = MailFormat.Text;                          break;                  }
Missing Default,DotNetNuke.Services.Mail,SendTokenizedBulkEmail,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Mail\SendTokenizedBulkEmail.cs,SendMails,The following switch statement is missing a default case: switch (AddressMethod)                  {                      case AddressMethods.Send_TO:                      case AddressMethods.Send_Relay:                          //optimization:                          if (replaceTokens)                          {                              individualBody = (_tokenReplace.Cacheability(_body) == CacheLevel.notCacheable);                              individualSubj = (_tokenReplace.Cacheability(Subject) == CacheLevel.notCacheable);                              if (!individualBody)                              {                                  body = _tokenReplace.ReplaceEnvironmentTokens(body);                              }                              if (!individualSubj)                              {                                  subject = _tokenReplace.ReplaceEnvironmentTokens(subject);                              }                          }                          foreach (UserInfo user in Recipients())                          {                              recipients += 1;                              if (individualBody || individualSubj)                              {                                  _tokenReplace.User = user;                                  _tokenReplace.AccessingUser = user;                                  if (individualBody)                                  {                                      body = _tokenReplace.ReplaceEnvironmentTokens(_body);                                  }                                  if (individualSubj)                                  {                                      subject = _tokenReplace.ReplaceEnvironmentTokens(Subject);                                  }                              }                              string recipient = AddressMethod == AddressMethods.Send_TO ? user.Email : RelayEmailAddress;                                string mailError = Mail.SendMail(_sendingUser.Email'                                                                  recipient'                                                                  ""'                                                                  ""'                                                                  ReplyTo.Email'                                                                  Priority'                                                                  subject'                                                                  BodyFormat'                                                                  Encoding.UTF8'                                                                  body'  																LoadAttachments()'                                                                  _smtpServer'                                                                  _smtpAuthenticationMethod'                                                                  _smtpUsername'                                                                  _smtpPassword'                                                                  _smtpEnableSSL);                              if (!string.IsNullOrEmpty(mailError))                              {                                  mailErrors.Append(mailError);                                  mailErrors.AppendLine();                                  errors += 1;                              }                              else                              {                                  mailRecipients.Append(user.Email);                                  mailRecipients.Append(BodyFormat == MailFormat.Html ? "<br />" : Environment.NewLine);                                  messagesSent += 1;                              }                          }                            break;                      case AddressMethods.Send_BCC:                          var distributionList = new StringBuilder();                          messagesSent = Null.NullInteger;                          foreach (UserInfo user in Recipients())                          {                              recipients += 1;                              distributionList.Append(user.Email + "; ");                              mailRecipients.Append(user.Email);                              mailRecipients.Append(BodyFormat == MailFormat.Html ? "<br />" : Environment.NewLine);                          }                            if (distributionList.Length > 2)                          {                              if (replaceTokens)                              {  								//no access to User properties possible!                                  var tr = new TokenReplace(Scope.Configuration);                                  body = tr.ReplaceEnvironmentTokens(_body);                                  subject = tr.ReplaceEnvironmentTokens(Subject);                              }                              else                              {                                  body = _body;                                  subject = Subject;                              }                              string mailError = Mail.SendMail(_sendingUser.Email'                                                         _sendingUser.Email'                                                         ""'                                                         distributionList.ToString(0' distributionList.Length - 2)'                                                         ReplyTo.Email'                                                         Priority'                                                         subject'                                                         BodyFormat'                                                         Encoding.UTF8'                                                         body'  													   LoadAttachments()'                                                         _smtpServer'                                                         _smtpAuthenticationMethod'                                                         _smtpUsername'                                                         _smtpPassword'                                                         _smtpEnableSSL);                              if (mailError == string.Empty)                              {                                  messagesSent = 1;                              }                              else                              {                                  mailErrors.Append(mailError);                                  errors += 1;                              }                          }                          break;                  }
Missing Default,DotNetNuke.Services.Upgrade.InternalController.Steps,InitializeHostSettingsStep,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Upgrade\Internals\Steps\InitializeHostSettingsStep.cs,Execute,The following switch statement is missing a default case: switch (settingName)                  {                      case "HostURL":                          if (string.IsNullOrEmpty(settingValue))                          {                              settingValue = domainName;                          }                          break;                      case "HostEmail":                          if (string.IsNullOrEmpty(settingValue))                          {                              settingValue = installConfig.SuperUser.Email;                          }                            break;                  }
Missing Default,DotNetNuke.Services.UserProfile,UserProfilePicHandler,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\UserProfile\UserProfilePicHandler.cs,ProcessRequest,The following switch statement is missing a default case: switch (photoFile.Extension.ToLowerInvariant())                      {                          case "png":                              context.Response.ContentType = "image/png";                              break;                          case "jpeg":                          case "jpg":                              context.Response.ContentType = "image/jpeg";                              break;                          case "gif":                              context.Response.ContentType = "image/gif";                              break;                        }
Missing Default,DotNetNuke.Services.Users,PurgeDeletedUsers,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\Services\Users\PurgeDeletedUsers.cs,DoWork,The following switch statement is missing a default case: switch (settings.DataConsentDelayMeasurement)                              {                                  case "h":                                      thresholdDate = DateTime.Now.AddHours(-1 * settings.DataConsentDelay);                                      break;                                  case "d":                                      thresholdDate = DateTime.Now.AddDays(-1 * settings.DataConsentDelay);                                      break;                                  case "w":                                      thresholdDate = DateTime.Now.AddDays(-7 * settings.DataConsentDelay);                                      break;                              }
Missing Default,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,Localize,The following switch statement is missing a default case: switch (Command.CommandName)              {                  case ModuleActionType.LocalizeModule:                      ModuleController.Instance.LocalizeModule(sourceModule' LocaleController.Instance.GetCurrentLocale(ModuleContext.PortalId));                      break;                  case ModuleActionType.DeLocalizeModule:                      ModuleController.Instance.DeLocalizeModule(sourceModule);                      break;              }
Missing Default,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,Translate,The following switch statement is missing a default case: switch (Command.CommandName)              {                  case ModuleActionType.TranslateModule:                      ModuleController.Instance.UpdateTranslationStatus(sourceModule' true);                      break;                  case ModuleActionType.UnTranslateModule:                      ModuleController.Instance.UpdateTranslationStatus(sourceModule' false);                      break;              }
Missing Default,DotNetNuke.UI.Containers,ActionManager,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Containers\ActionManager.cs,MoveUpDown,The following switch statement is missing a default case: switch (Command.CommandName)              {                  case ModuleActionType.MoveTop:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' 0' Command.CommandArgument);                      break;                  case ModuleActionType.MoveUp:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' ModuleContext.Configuration.ModuleOrder - 3' Command.CommandArgument);                      break;                  case ModuleActionType.MoveDown:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' ModuleContext.Configuration.ModuleOrder + 3' Command.CommandArgument);                      break;                  case ModuleActionType.MoveBottom:                      ModuleController.Instance.UpdateModuleOrder(ModuleContext.TabId' ModuleContext.ModuleId' (ModuleContext.Configuration.PaneModuleCount * 2) + 1' Command.CommandArgument);                      break;              }
Missing Default,DotNetNuke.UI.ControlPanels,ControlPanelBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\ControlPanels\ControlPanelBase.cs,AddNewModule,The following switch statement is missing a default case: switch (permissionType)                  {                      case ViewPermissionType.View:                          objModule.InheritViewPermissions = true;                          break;                      case ViewPermissionType.Edit:                          objModule.InheritViewPermissions = false;                          break;                  }
Missing Default,DotNetNuke.UI,Navigation,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Navigation.cs,AddNode,The following switch statement is missing a default case: switch (eToolTips)                  {                      case ToolTipSource.TabName:                          objNode.ToolTip = objTab.LocalizedTabName;                          break;                      case ToolTipSource.Title:                          objNode.ToolTip = objTab.Title;                          break;                      case ToolTipSource.Description:                          objNode.ToolTip = objTab.Description;                          break;                  }
Missing Default,DotNetNuke.UI.Modules,ModuleHost,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleHost.cs,DisplayContent,The following switch statement is missing a default case: switch (Page.Request.QueryString["Content"].ToLowerInvariant())                  {                      case "1":                      case "true":                          content = true;                          break;                      case "0":                      case "false":                          content = false;                          break;                  }
Missing Default,DotNetNuke.UI.Modules,ModuleHost,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\ModuleHost.cs,RestoreCachedClientResourceRegistrations,The following switch statement is missing a default case: switch (dependencyType)                  {                      case "JAVASCRIPT":                          if (string.IsNullOrEmpty(forceProvider))                          {                              forceProvider = DefaultJsProvider;                          }                            if (priority == Null.NullInteger)                          {                              priority = (int)FileOrder.Js.DefaultPriority;                          }                            ClientResourceManager.RegisterScript(Page' filePath' priority' forceProvider);                          break;                      case "CSS":                          if (string.IsNullOrEmpty(forceProvider))                          {                              forceProvider = DefaultCssProvider;                          }                            if (priority == Null.NullInteger)                          {                              priority = (int)FileOrder.Css.DefaultPriority;                          }                            ClientResourceManager.RegisterStyleSheet(Page' filePath' priority' forceProvider);                          break;                      case "JS-LIBRARY":                          var args = filePath.Split(new[] { '''' }' StringSplitOptions.None);                          if (string.IsNullOrEmpty(args[1]))                          {                              JavaScript.RequestRegistration(args[0]);                          }                          else if (string.IsNullOrEmpty(args[2]))                          {                              JavaScript.RequestRegistration(args[0]' new Version(args[1]));                          }                          else                          {                              JavaScript.RequestRegistration(args[0]' new Version(args[1])' (SpecificVersion)Enum.Parse(typeof(SpecificVersion)' args[2]));                          }                            break;                  }
Missing Default,DotNetNuke.UI.Modules.Html5,RequestPropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Modules\Html5\RequestPropertyAccess.cs,GetProperty,The following switch statement is missing a default case: switch (propertyName.ToLowerInvariant())              {                  case "querystring":                      return _request.QueryString.ToString();              }
Missing Default,DotNetNuke.UI.Skins.Controls,LanguagePropertyAccess,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\LanguageTokenReplace.cs,NewUrl,The following switch statement is missing a default case: switch (localizedTab.TabType)                      {                          case TabType.Normal:                              //normal tab                              tabId = localizedTab.TabID;                              break;                          case TabType.Tab:                              //alternate tab url                                                              fullurl = TestableGlobals.Instance.NavigateURL(Convert.ToInt32(localizedTab.Url));                              break;                          case TabType.File:                              //file url                              fullurl = TestableGlobals.Instance.LinkClick(localizedTab.Url' localizedTab.TabID' Null.NullInteger);                              break;                          case TabType.Url:                              //external url                              fullurl = localizedTab.Url;                              break;                      }
Missing Default,DotNetNuke.UI.Skins.Controls,ModuleMessage,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\ModuleMessage.cs,OnLoad,The following switch statement is missing a default case: switch (IconType)                      {                          case ModuleMessageType.GreenSuccess:                              strMessage += Text;                              dnnSkinMessage.CssClass = "dnnFormMessage dnnFormSuccess";                              break;                          case ModuleMessageType.YellowWarning:                              strMessage += Text;                              dnnSkinMessage.CssClass = "dnnFormMessage dnnFormWarning";                              break;                          case ModuleMessageType.BlueInfo:                              strMessage += Text;                              dnnSkinMessage.CssClass = "dnnFormMessage dnnFormInfo";                              break;                          case ModuleMessageType.RedError:                              strMessage += Text;                              dnnSkinMessage.CssClass = "dnnFormMessage dnnFormValidationSummary";                              break;                      }
Missing Default,DotNetNuke.UI.Skins.Controls,SkinsEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Controls\SkinsEditControl.cs,RaisePostBackEvent,The following switch statement is missing a default case: switch (eventArgument.Substring(0' 3))              {                  case "Del":                      args = new PropertyEditorEventArgs(Name);                      args.Value = DictionaryValue;                      args.OldValue = OldDictionaryValue;                      args.Key = int.Parse(eventArgument.Substring(7));                      args.Changed = true;                      base.OnItemDeleted(args);                      break;                  case "Add":                      args = new PropertyEditorEventArgs(Name);                      args.Value = AddedItem;                      args.StringValue = AddedItem;                      args.Changed = true;                      base.OnItemAdded(args);                      break;              }
Missing Default,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,AssignControlProperties,The following switch statement is missing a default case: switch (m_strControlOrientation.ToLowerInvariant())                  {                      case "horizontal":                          Control.ControlOrientation = NavigationProvider.Orientation.Horizontal;                          break;                      case "vertical":                          Control.ControlOrientation = NavigationProvider.Orientation.Vertical;                          break;                  }
Missing Default,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,AssignControlProperties,The following switch statement is missing a default case: switch (m_strControlAlignment.ToLowerInvariant())                  {                      case "left":                          Control.ControlAlignment = NavigationProvider.Alignment.Left;                          break;                      case "right":                          Control.ControlAlignment = NavigationProvider.Alignment.Right;                          break;                      case "center":                          Control.ControlAlignment = NavigationProvider.Alignment.Center;                          break;                      case "justify":                          Control.ControlAlignment = NavigationProvider.Alignment.Justify;                          break;                  }
Missing Default,DotNetNuke.UI.Skins,NavObjectBase,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\NavObjectBase.cs,AssignControlProperties,The following switch statement is missing a default case: switch (m_strMouseOverDisplay.ToLowerInvariant())                  {                      case "highlight":                          Control.MouseOverDisplay = NavigationProvider.HoverDisplay.Highlight;                          break;                      case "outset":                          Control.MouseOverDisplay = NavigationProvider.HoverDisplay.Outset;                          break;                      case "none":                          Control.MouseOverDisplay = NavigationProvider.HoverDisplay.None;                          break;                  }
Missing Default,DotNetNuke.UI.Skins,Skin,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\Skin.cs,LoadPanes,The following switch statement is missing a default case: switch (objPaneControl.TagName.ToLowerInvariant())                      {                          case "td":                          case "div":                          case "span":                          case "p":                          case "section":                          case "header":                          case "footer":                          case "main":                          case "article":                          case "aside":                              //content pane                              if (!objPaneControl.ID.Equals("controlpanel"' StringComparison.InvariantCultureIgnoreCase))                              {                                  //Add to the PortalSettings (for use in the Control Panel)                                  PortalSettings.ActiveTab.Panes.Add(objPaneControl.ID);                                    //Add to the Panes collection                                  Panes.Add(objPaneControl.ID.ToLowerInvariant()' new Pane(objPaneControl));                              }                              else                              {                                  //Control Panel pane                                  _controlPanel = objPaneControl;                              }                              break;                      }
Missing Default,DotNetNuke.UI.Skins,SkinControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinControl.cs,OnLoad,The following switch statement is missing a default case: switch (_SkinSrc.Substring(0' 3))                          {                              case "[L]":                                  optHost.Checked = false;                                  optSite.Checked = true;                                  break;                              case "[G]":                                  optSite.Checked = false;                                  optHost.Checked = true;                                  break;                          }
Missing Default,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,FormatSkinSrc,The following switch statement is missing a default case: switch (strSkinSrc.Substring(0' 3).ToLowerInvariant())                  {                      case "[g]":                          strSkinSrc = GdirRegex.Replace(strSkinSrc' Globals.HostPath);                          break;                      case "[s]":                          strSkinSrc = SdirRegex.Replace(strSkinSrc' portalSettings.HomeSystemDirectory);                          break;                      case "[l]": //to be compliant with all versions                          strSkinSrc = LdirRegex.Replace(strSkinSrc' portalSettings.HomeDirectory);                          break;                  }
Missing Default,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,GetSkins,The following switch statement is missing a default case: switch (scope)              {                  case SkinScope.Host: //load host skins                      skins = GetHostSkins(skinRoot);                      break;                  case SkinScope.Site: //load portal skins                      skins = GetPortalSkins(portalInfo' skinRoot);                      break;                  case SkinScope.All:                      skins = GetHostSkins(skinRoot);                      skins.AddRange(GetPortalSkins(portalInfo' skinRoot));                      break;              }
Missing Default,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,SetSkin,The following switch statement is missing a default case: switch (skinRoot)              {                  case "Skins":                      if (skinType == SkinType.Admin)                      {                          if (portalId == Null.NullInteger)                          {                              HostController.Instance.Update("DefaultAdminSkin"' skinSrc);                          }                          else                          {                              PortalController.UpdatePortalSetting(portalId' "DefaultAdminSkin"' skinSrc' true' selectedCultureCode);                          }                      }                      else                      {                          if (portalId == Null.NullInteger)                          {                              HostController.Instance.Update("DefaultPortalSkin"' skinSrc);                          }                          else                          {                              PortalController.UpdatePortalSetting(portalId' "DefaultPortalSkin"' skinSrc' true' selectedCultureCode);                          }                      }                      break;                  case "Containers":                      if (skinType == SkinType.Admin)                      {                          if (portalId == Null.NullInteger)                          {                              HostController.Instance.Update("DefaultAdminContainer"' skinSrc);                          }                          else                          {                              PortalController.UpdatePortalSetting(portalId' "DefaultAdminContainer"' skinSrc' true' selectedCultureCode);                          }                      }                      else                      {                          if (portalId == Null.NullInteger)                          {                              HostController.Instance.Update("DefaultPortalContainer"' skinSrc);                          }                          else                          {                              PortalController.UpdatePortalSetting(portalId' "DefaultPortalContainer"' skinSrc' true' selectedCultureCode);                          }                      }                      break;              }
Missing Default,DotNetNuke.UI.Skins,SkinController,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinController.cs,UploadLegacySkin,The following switch statement is missing a default case: switch (Path.GetExtension(strFileName))                              {                                  case ".htm":                                  case ".html":                                  case ".ascx":                                  case ".css":                                      if (strFileName.ToLowerInvariant().IndexOf(Globals.glbAboutPage.ToLowerInvariant()) < 0)                                      {                                          arrSkinFiles.Add(strFileName);                                      }                                      break;                              }
Missing Default,DotNetNuke.UI.Skins,SkinFileProcessor,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,ProcessFile,The following switch statement is missing a default case: switch (objSkinFile.FileExtension)              {                  case ".htm":                  case ".html":                      string contents = objSkinFile.Contents;                      strMessage += ObjectFactory.Parse(ref contents);                      strMessage += PathFactory.Parse(ref contents' PathFactory.HTMLList' objSkinFile.SkinRootPath' ParseOption);                      strMessage += ControlFactory.Parse(ref contents' objSkinFile.Attributes);                      objSkinFile.Contents = contents;                      var Registrations = new ArrayList();                      Registrations.AddRange(ControlFactory.Registrations);                      Registrations.AddRange(ObjectFactory.Registrations);                      strMessage += objSkinFile.PrependASCXDirectives(Registrations);                      break;              }
Missing Default,DotNetNuke.UI.Skins,ObjectParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,ObjectMatchHandler,The following switch statement is missing a default case: switch (AttributeName.ToLowerInvariant())                          {                              case "id":                                  ControlName = AttributeValue;                                  break;                              case "codetype":                                  AttributeNode = AttributeValue;                                  break;                              case "codebase":                                  Token = AttributeValue.ToUpper();                                  break;                          }
Missing Default,DotNetNuke.UI.Skins,PathParser,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Skins\SkinFileProcessor.cs,MatchHandler,The following switch statement is missing a default case: switch (ParseOption)                      {                          case SkinParser.Localized:                              //if the tag does not contain the localized path                              if (strNewTag.IndexOf(SkinPath) == -1)                              {                                  //insert the localized path                                  strNewTag = m.Groups["tag"].Value + SkinPath + m.Groups["content"].Value + m.Groups["endtag"].Value;                              }                              break;                          case SkinParser.Portable:                              //if the tag does not contain a reference to the skinpath                              if (strNewTag.IndexOf("<%= skinpath %>"' StringComparison.InvariantCultureIgnoreCase) == -1)                              {                                  //insert the skinpath                                   strNewTag = m.Groups["tag"].Value + "<%= SkinPath %>" + m.Groups["content"].Value + m.Groups["endtag"].Value;                              }                                //if the tag contains the localized path                              if (strNewTag.IndexOf(SkinPath) != -1)                              {                                  //remove the localized path                                  strNewTag = strNewTag.Replace(SkinPath' "");                              }                              break;                      }
Missing Default,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,OnLoad,The following switch statement is missing a default case: switch (_countryData.ToLowerInvariant())  					{  						case "text":  							if (String.IsNullOrEmpty(_country))  							{  								cboCountry.SelectedIndex = 0;  							}  							else  							{  								if (cboCountry.Items.FindByText(_country) != null)  								{  									cboCountry.ClearSelection();  									cboCountry.Items.FindByText(_country).Selected = true;  								}  							}  							break;  						case "value":  							if (cboCountry.Items.FindByValue(_country) != null)  							{  								cboCountry.ClearSelection();  								cboCountry.Items.FindByValue(_country).Selected = true;  							}  							break;  					}
Missing Default,DotNetNuke.UI.UserControls,Address,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\Address.cs,OnLoad,The following switch statement is missing a default case: switch (_regionData.ToLowerInvariant())  						{  							case "text":  								if (String.IsNullOrEmpty(_region))  								{  									cboRegion.SelectedIndex = 0;  								}  								else  								{  									if (cboRegion.Items.FindByText(_region) != null)  									{  										cboRegion.Items.FindByText(_region).Selected = true;  									}  								}  								break;  							case "value":  								if (cboRegion.Items.FindByValue(_region) != null)  								{  									cboRegion.Items.FindByValue(_region).Selected = true;  								}  								break;  						}
Missing Default,DotNetNuke.UI.UserControls,UrlControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\UserControls\URLControl.cs,DoRenderTypeControls,The following switch statement is missing a default case: switch (optType.SelectedItem.Value)                  {                      case "N": //None                          URLRow.Visible = false;                          TabRow.Visible = false;                          FileRow.Visible = false;                          UserRow.Visible = false;                          ImagesRow.Visible = false;                          break;                      case "I": //System Image                          URLRow.Visible = false;                          TabRow.Visible = false;                          FileRow.Visible = false;                          UserRow.Visible = false;                          ImagesRow.Visible = true;                            cboImages.Items.Clear();                            string strImagesFolder = Path.Combine(Globals.ApplicationMapPath' PortalSettings.DefaultIconLocation.Replace('/'' '\\'));                          foreach (string strImage in Directory.GetFiles(strImagesFolder))                          {                              string img = strImage.Replace(strImagesFolder' "").Trim('/').Trim('\\');                              cboImages.Items.Add(new ListItem(img' string.Format("~/{0}/{1}"' PortalSettings.DefaultIconLocation' img).ToLowerInvariant()));                          }                            ListItem selecteItem = cboImages.Items.FindByValue(_Url.ToLowerInvariant());                          if (selecteItem != null)                          {                              selecteItem.Selected = true;                          }                          break;                        case "U": //Url                          URLRow.Visible = true;                          TabRow.Visible = false;                          FileRow.Visible = false;                          UserRow.Visible = false;                          ImagesRow.Visible = false;                          if (String.IsNullOrEmpty(txtUrl.Text))                          {                              txtUrl.Text = _Url;                          }                          if (String.IsNullOrEmpty(txtUrl.Text))                          {                              txtUrl.Text = "http://";                          }                          txtUrl.Visible = true;                            cmdSelect.Visible = true;                            cboUrls.Visible = false;                          cmdAdd.Visible = false;                          cmdDelete.Visible = false;                          break;                      case "T": //tab                          URLRow.Visible = false;                          TabRow.Visible = true;                          FileRow.Visible = false;                          UserRow.Visible = false;                          ImagesRow.Visible = false;                            cboTabs.Items.Clear();                            PortalSettings _settings = PortalController.Instance.GetCurrentPortalSettings();                          cboTabs.DataSource = TabController.GetPortalTabs(_settings.PortalId' Null.NullInteger' !Required' "none available"' true' false' false' true' false);                          cboTabs.DataBind();                          if (cboTabs.Items.FindByValue(_Url) != null)                          {                              cboTabs.Items.FindByValue(_Url).Selected = true;                          }                            if (!IncludeActiveTab && cboTabs.Items.FindByValue(_settings.ActiveTab.TabID.ToString()) != null)                          {                              cboTabs.Items.FindByValue(_settings.ActiveTab.TabID.ToString()).Attributes.Add("disabled"' "disabled");                          }                          break;                      case "F": //file                          URLRow.Visible = false;                          TabRow.Visible = false;                          FileRow.Visible = true;                          UserRow.Visible = false;                          ImagesRow.Visible = false;                            if (ViewState["FoldersLoaded"] == null || _doReloadFolders)                          {                              LoadFolders("BROWSE'ADD");                              ViewState["FoldersLoaded"] = "Y";                          }                          if (cboFolders.Items.Count == 0)                          {                              lblMessage.Text = Localization.GetString("NoPermission"' LocalResourceFile);                              ErrorRow.Visible = true;                              FileRow.Visible = false;                              return;                          }                            //select folder                          //We Must check if selected folder has changed because of a property change (Secure' Database)                          string FileName = string.Empty;                          string FolderPath = string.Empty;                          string LastFileName = string.Empty;                          string LastFolderPath = string.Empty;                          bool _MustRedrawFiles = false;                          //Let's try to remember last selection                          if (ViewState["LastFolderPath"] != null)                          {                              LastFolderPath = Convert.ToString(ViewState["LastFolderPath"]);                          }                          if (ViewState["LastFileName"] != null)                          {                              LastFileName = Convert.ToString(ViewState["LastFileName"]);                          }                          if (_Url != string.Empty)                          {                              //Let's use the new URL                              FileName = _Url.Substring(_Url.LastIndexOf("/") + 1);                              FolderPath = _Url.Replace(FileName' "");                          }                          else                          {                              //Use last settings                              FileName = LastFileName;                              FolderPath = LastFolderPath;                          }                          if (cboFolders.Items.FindByValue(FolderPath) != null)                          {                              cboFolders.ClearSelection();                              cboFolders.Items.FindByValue(FolderPath).Selected = true;                          }                          else if (cboFolders.Items.Count > 0)                          {                              cboFolders.ClearSelection();                              cboFolders.Items[0].Selected = true;                              FolderPath = cboFolders.Items[0].Value;                          }                          if (ViewState["FilesLoaded"] == null || FolderPath != LastFolderPath || _doReloadFiles)                          {                              //Reload files only if property change or not same folder                              _MustRedrawFiles = true;                              ViewState["FilesLoaded"] = "Y";                          }                          else                          {                              if (cboFiles.Items.Count > 0)                              {                                  if ((Required && String.IsNullOrEmpty(cboFiles.Items[0].Value)) || (!Required && !String.IsNullOrEmpty(cboFiles.Items[0].Value)))                                  {                                      //Required state has changed' so we need to reload files                                      _MustRedrawFiles = true;                                  }                              }                              else if (!Required)                              {                                  //Required state has changed' so we need to reload files                                  _MustRedrawFiles = true;                              }                          }                          if (_MustRedrawFiles)                          {                              cboFiles.DataSource = GetFileList(!Required);                              cboFiles.DataBind();                              if (cboFiles.Items.FindByText(FileName) != null)                              {                                  cboFiles.ClearSelection();                                  cboFiles.Items.FindByText(FileName).Selected = true;                              }                          }                          cboFiles.Visible = true;                          txtFile.Visible = false;                            FolderInfo objFolder = (FolderInfo)FolderManager.Instance.GetFolder(_objPortal.PortalID' FolderPath);                          cmdUpload.Visible = ShowUpLoad && FolderPermissionController.CanAddFolder(objFolder);                            SetStorageLocationType();                          txtUrl.Visible = false;                          cmdSave.Visible = false;                          cmdCancel.Visible = false;                            if (cboFolders.SelectedIndex >= 0)                          {                              ViewState["LastFolderPath"] = cboFolders.SelectedValue;                          }                          else                          {                              ViewState["LastFolderPath"] = "";                          }                          if (cboFiles.SelectedIndex >= 0)                          {                              ViewState["LastFileName"] = cboFiles.SelectedValue;                          }                          else                          {                              ViewState["LastFileName"] = "";                          }                          break;                      case "M": //membership users                          URLRow.Visible = false;                          TabRow.Visible = false;                          FileRow.Visible = false;                          UserRow.Visible = true;                          ImagesRow.Visible = false;                          if (String.IsNullOrEmpty(txtUser.Text))                          {                              txtUser.Text = _Url;                          }                          break;                  }
Missing Default,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,EnableMinMax,The following switch statement is missing a default case: switch (ePersistanceType)                  {                      case MinMaxPersistanceType.None:                          AddAttribute(objButton' "onclick"' "if (__dnn_SectionMaxMin(this'  '" + objContent.ClientID + "')) return false;");                          if (!String.IsNullOrEmpty(strMinIconLoc))                          {                              AddAttribute(objButton' "max_icon"' strMaxIconLoc);                              AddAttribute(objButton' "min_icon"' strMinIconLoc);                          }                          break;                      case MinMaxPersistanceType.Page:                          AddAttribute(objButton' "onclick"' "if (__dnn_SectionMaxMin(this'  '" + objContent.ClientID + "')) return false;");                          if (!String.IsNullOrEmpty(strMinIconLoc))                          {                              AddAttribute(objButton' "max_icon"' strMaxIconLoc);                              AddAttribute(objButton' "min_icon"' strMinIconLoc);                          }                          break;                      case MinMaxPersistanceType.Cookie:                          if (intModuleId != -1)                          {                              AddAttribute(objButton' "onclick"' "if (__dnn_ContainerMaxMin_OnClick(this' '" + objContent.ClientID + "')) return false;");                              ClientAPI.RegisterClientVariable(objButton.Page' "containerid_" + objContent.ClientID' intModuleId.ToString()' true);                              ClientAPI.RegisterClientVariable(objButton.Page' "cookieid_" + objContent.ClientID' "_Module" + intModuleId + "_Visible"' true);                                ClientAPI.RegisterClientVariable(objButton.Page' "min_icon_" + intModuleId' strMinIconLoc' true);                              ClientAPI.RegisterClientVariable(objButton.Page' "max_icon_" + intModuleId' strMaxIconLoc' true);                                ClientAPI.RegisterClientVariable(objButton.Page' "max_text"' Localization.GetString("Maximize")' true);                              ClientAPI.RegisterClientVariable(objButton.Page' "min_text"' Localization.GetString("Minimize")' true);                                if (blnDefaultMin)                              {                                  ClientAPI.RegisterClientVariable(objButton.Page' "__dnn_" + intModuleId + ":defminimized"' "true"' true);                              }                          }                          break;                      case MinMaxPersistanceType.Personalization:                          //Regardless if we determine whether or not the browser supports client-side personalization                          //we need to store these keys to properly display or hide the content (They are needed in MinMaxContentVisible)                          AddAttribute(objButton' "userctr"' strPersonalizationNamingCtr);                          AddAttribute(objButton' "userkey"' strPersonalizationKey);                          if (EnableClientPersonalization(strPersonalizationNamingCtr' strPersonalizationKey' objButton.Page))                          {                              AddAttribute(objButton' "onclick"' "if (__dnn_SectionMaxMin(this'  '" + objContent.ClientID + "')) return false;");                              if (!String.IsNullOrEmpty(strMinIconLoc))                              {                                  AddAttribute(objButton' "max_icon"' strMaxIconLoc);                                  AddAttribute(objButton' "min_icon"' strMinIconLoc);                              }                          }                          break;                  }
Missing Default,DotNetNuke.UI.Utilities,DNNClientAPI,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\Utilities\ClientAPI.cs,MinMaxContentVisibile,The following switch statement is missing a default case: switch (ePersistanceType)                  {                      case MinMaxPersistanceType.Page:                          ClientAPI.RegisterClientVariable(objButton.Page' objButton.ClientID + ":exp"' Convert.ToInt32(value).ToString()' true);                          break;                      case MinMaxPersistanceType.Cookie:                          var objModuleVisible = new HttpCookie("_Module" + intModuleId + "_Visible"' value.ToString().ToLowerInvariant())                          {                              Expires = DateTime.MaxValue'                              Path = (!string.IsNullOrEmpty(Common.Globals.ApplicationPath) ? Common.Globals.ApplicationPath : "/")                          };                          HttpContext.Current.Response.AppendCookie(objModuleVisible);                          break;                      case MinMaxPersistanceType.Personalization:                          Personalization.SetProfile(Globals.GetAttribute(objButton' "userctr")' Globals.GetAttribute(objButton' "userkey")' value.ToString());                          break;                  }
Missing Default,DotNetNuke.UI.WebControls,ImageCommandColumnTemplate,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DataGrids\ImageCommandColumnTemplate.cs,InstantiateIn,The following switch statement is missing a default case: switch (ItemType)              {                  case ListItemType.Item:                  case ListItemType.AlternatingItem:                  case ListItemType.SelectedItem:                  case ListItemType.EditItem:                      if (EditMode == ImageCommandColumnEditMode.URL)                      {                          var hypLink = new HyperLink();                          hypLink.ToolTip = Text;                          if (!String.IsNullOrEmpty(ImageURL) && ShowImage)                          {                              var img = new Image();                              if (DesignMode)                              {                                  img.ImageUrl = ImageURL.Replace("~/"' "../../");                              }                              else                              {                                  img.ImageUrl = ImageURL;                              }                              hypLink.Controls.Add(img);                              img.ToolTip = Text;                          }                          else                          {                              hypLink.Text = Text;                          }                          hypLink.DataBinding += Item_DataBinding;                          container.Controls.Add(hypLink);                      }                      else                      {                          if (!String.IsNullOrEmpty(ImageURL) && ShowImage)                          {                              var colIcon = new ImageButton();                              if (DesignMode)                              {                                  colIcon.ImageUrl = ImageURL.Replace("~/"' "../../");                              }                              else                              {                                  colIcon.ImageUrl = ImageURL;                              }                              colIcon.ToolTip = Text;                              if (!String.IsNullOrEmpty(OnClickJS))                              {                                  ClientAPI.AddButtonConfirm(colIcon' OnClickJS);                              }                              colIcon.CommandName = CommandName;                              colIcon.DataBinding += Item_DataBinding;                              container.Controls.Add(colIcon);                          }                          if (!String.IsNullOrEmpty(Text) && !ShowImage)                          {                              var colLink = new LinkButton();                              colLink.ToolTip = Text;                              if (!String.IsNullOrEmpty(OnClickJS))                              {                                  ClientAPI.AddButtonConfirm(colLink' OnClickJS);                              }                              colLink.CommandName = CommandName;                              colLink.Text = Text;                              colLink.DataBinding += Item_DataBinding;                              container.Controls.Add(colLink);                          }                      }                      break;                  case ListItemType.Footer:                  case ListItemType.Header:                      container.Controls.Add(new LiteralControl(Text));                      break;              }
Missing Default,DotNetNuke.UI.WebControls,TextColumnTemplate,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DataGrids\TextColumnTemplate.cs,InstantiateIn,The following switch statement is missing a default case: switch (ItemType)              {                  case ListItemType.Item:                  case ListItemType.AlternatingItem:                  case ListItemType.SelectedItem:                      var lblText = new Label();                      lblText.Width = Width;                      lblText.DataBinding += Item_DataBinding;                      container.Controls.Add(lblText);                      break;                  case ListItemType.EditItem:                      var txtText = new TextBox();                      txtText.Width = Width;                      txtText.DataBinding += Item_DataBinding;                      container.Controls.Add(txtText);                      break;                  case ListItemType.Footer:                  case ListItemType.Header:                      container.Controls.Add(new LiteralControl(Text));                      break;              }
Missing Default,DotNetNuke.UI.WebControls,TextColumnTemplate,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DataGrids\TextColumnTemplate.cs,Item_DataBinding,The following switch statement is missing a default case: switch (ItemType)              {                  case ListItemType.Item:                  case ListItemType.AlternatingItem:                  case ListItemType.SelectedItem:                      var lblText = (Label) sender;                      container = (DataGridItem) lblText.NamingContainer;                      lblText.Text = GetValue(container);                      break;                  case ListItemType.EditItem:                      var txtText = (TextBox) sender;                      container = (DataGridItem) txtText.NamingContainer;                      txtText.Text = GetValue(container);                      break;              }
Missing Default,DotNetNuke.UI.WebControls,DualListBox,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DualListBox.cs,RaisePostBackEvent,The following switch statement is missing a default case: switch (eventArgument)              {                  case "Add":                      OnAddButtonClick(new DualListBoxEventArgs(_AddValues));                      break;                  case "AddAll":                      OnAddAllButtonClick(new EventArgs());                      break;                  case "Remove":                      OnRemoveButtonClick(new DualListBoxEventArgs(_RemoveValues));                      break;                  case "RemoveAll":                      OnRemoveAllButtonClick(new EventArgs());                      break;              }
Missing Default,DotNetNuke.UI.WebControls,DualListBox,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\DualListBox.cs,RenderButton,The following switch statement is missing a default case: switch (buttonType)              {                  case "Add":                      buttonText = string.IsNullOrEmpty(AddKey)                                       ? AddText                                       : Localization.GetString(AddKey' LocalResourceFile);                      imageURL = AddImageURL;                      break;                  case "AddAll":                      buttonText = string.IsNullOrEmpty(AddAllKey)                                       ? AddAllText                                       : Localization.GetString(AddAllKey' LocalResourceFile);                      imageURL = AddAllImageURL;                      break;                  case "Remove":                      buttonText = string.IsNullOrEmpty(RemoveKey)                                       ? RemoveText                                       : Localization.GetString(RemoveKey' LocalResourceFile);                      imageURL = RemoveImageURL;                      break;                  case "RemoveAll":                      buttonText = string.IsNullOrEmpty(RemoveAllKey)                                       ? RemoveAllText                                       : Localization.GetString(RemoveAllKey' LocalResourceFile);                      imageURL = RemoveAllImageURL;                      break;              }
Missing Default,DotNetNuke.UI.WebControls,DNNListEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNListEditControl.cs,RenderViewMode,The following switch statement is missing a default case: switch (ValueField)              {                  case ListBoundField.Id:                      entry = objListController.GetListEntryInfo(ListName' Convert.ToInt32(Value));                      break;                  case ListBoundField.Text:                      entryText = StringValue;                      break;                  case ListBoundField.Value:                      entry = objListController.GetListEntryInfo(ListName' StringValue);                      break;              }
Missing Default,DotNetNuke.UI.WebControls,DNNListEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNListEditControl.cs,RenderViewMode,The following switch statement is missing a default case: switch (TextField)                  {                      case ListBoundField.Id:                          writer.Write(entry.EntryID.ToString());                          break;                      case ListBoundField.Text:                          writer.Write(entry.Text);                          break;                      case ListBoundField.Value:                          writer.Write(entry.Value);                          break;                  }
Missing Default,DotNetNuke.UI.WebControls,DNNListEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNListEditControl.cs,RenderEditMode,The following switch statement is missing a default case: switch (ValueField)                  {                      case ListBoundField.Id:                          itemValue = item.EntryID.ToString();                          break;                      case ListBoundField.Text:                          itemValue = item.Text;                          break;                      case ListBoundField.Value:                          itemValue = item.Value;                          break;                  }
Missing Default,DotNetNuke.UI.WebControls,DNNListEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNListEditControl.cs,RenderEditMode,The following switch statement is missing a default case: switch (TextField)                  {                      case ListBoundField.Id:                          writer.Write(item.EntryID.ToString());                          break;                      case ListBoundField.Text:                          writer.Write(item.Text);                          break;                      case ListBoundField.Value:                          writer.Write(item.Value.Trim());                          break;                  }
Missing Default,DotNetNuke.UI.WebControls,DNNLocaleEditControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\Edit Controls\DNN Edit Controls\DNNLocaleEditControl.cs,RenderEditMode,The following switch statement is missing a default case: switch (ListType)  		    {  		        case LanguagesListType.All:  		            var culturesArray = CultureInfo.GetCultures(CultureTypes.SpecificCultures);  		            Array.Sort(culturesArray' new CultureInfoComparer(DisplayMode));  		            cultures = culturesArray.ToList();                      break;  		        case LanguagesListType.Supported:  		            cultures = LocaleController.Instance.GetLocales(Null.NullInteger).Values  		                .Select(c => CultureInfo.GetCultureInfo(c.Code))  		                .ToList();  		            break;  		        case LanguagesListType.Enabled:  		            cultures = LocaleController.Instance.GetLocales(PortalSettings.PortalId).Values  		                .Select(c => CultureInfo.GetCultureInfo(c.Code))  		                .ToList();  		            break;  		    }
Missing Default,DotNetNuke.UI.WebControls,FieldEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\FieldEditorControl.cs,BuildLabel,The following switch statement is missing a default case: switch (HelpDisplayMode)  			{  				case HelpDisplayMode.Always:  					propLabel.ShowHelp = true;  					break;  				case HelpDisplayMode.EditOnly:  					if (editInfo.EditMode == PropertyEditorMode.Edit || (editInfo.Required && string.IsNullOrEmpty(strValue)))  					{  						propLabel.ShowHelp = true;  					}  					else  					{  						propLabel.ShowHelp = false;  					}  					break;  				case HelpDisplayMode.Never:  					propLabel.ShowHelp = false;  					break;  			}
Missing Default,DotNetNuke.UI.WebControls,PropertyEditorControl,D:\research\architectureSmells\repos\dnnsoftware_Dnn.Platform\DNN Platform\Library\UI\WebControls\PropertyEditor\PropertyEditorControl.cs,GetProperties,The following switch statement is missing a default case: switch (SortMode)                  {                      case PropertySortType.Alphabetical:                          Array.Sort(properties' new PropertyNameComparer());                          break;                      case PropertySortType.Category:                          Array.Sort(properties' new PropertyCategoryComparer());                          break;                      case PropertySortType.SortOrderAttribute:                          Array.Sort(properties' new PropertySortOrderComparer());                          break;                  }
