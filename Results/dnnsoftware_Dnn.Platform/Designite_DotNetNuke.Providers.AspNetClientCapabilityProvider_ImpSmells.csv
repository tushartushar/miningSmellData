Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,DotNetNuke.Providers.AspNetClientCapabilityProvider,AspNetClientCapabilityProvider,C:\repos\dnnsoftware_Dnn.Platform\DNN Platform\Providers\ClientCapabilityProviders\Provider.AspNetClientCapabilityProvider\AspNetClientCapabilityProvider.cs,,The length of the parameter _allClientCapabilityValuesLock is 30.
Long Statement,DotNetNuke.Providers.AspNetClientCapabilityProvider.Components,FeatureController,C:\repos\dnnsoftware_Dnn.Platform\DNN Platform\Providers\ClientCapabilityProviders\Provider.AspNetClientCapabilityProvider\Components\FeatureController.cs,RemoveWurflProvider,The length of the statement  "            var package = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.Name == "DotNetNuke.WURFLClientCapabilityProvider"); " is 138.
Long Statement,DotNetNuke.Providers.AspNetClientCapabilityProvider,AspNetClientCapability,C:\repos\dnnsoftware_Dnn.Platform\DNN Platform\Providers\ClientCapabilityProviders\Provider.AspNetClientCapabilityProvider\AspNetClientCapability.cs,GetCapabilities,The length of the statement  "            return properties.Keys.ToDictionary(key => key' key => String.Join(Constants.ValueSeperator' properties[key].ToArray())); " is 121.
Complex Conditional,DotNetNuke.Providers.AspNetClientCapabilityProvider,AspNetClientCapability,C:\repos\dnnsoftware_Dnn.Platform\DNN Platform\Providers\ClientCapabilityProviders\Provider.AspNetClientCapabilityProvider\AspNetClientCapability.cs,DetectOperatingSystem,The conditional expression  "CheckAgentAndVersion(UnixAgent' userAgent' ref platformVersion) ||                       CheckAgentAndVersion(UnixAgent2' userAgent' ref platformVersion) ||                       CheckAgentAndVersion(UnixAgent3' userAgent' ref platformVersion) ||                       CheckAgentAndVersion(X11Agent' userAgent' ref platformVersion)"  is complex.
Magic Number,DotNetNuke.Providers.AspNetClientCapabilityProvider,AspNetClientCapability,C:\repos\dnnsoftware_Dnn.Platform\DNN Platform\Providers\ClientCapabilityProviders\Provider.AspNetClientCapabilityProvider\AspNetClientCapability.cs,AspNetClientCapability,The following statement contains a magic number: if (browserCaps != null)              {                  ID = browserCaps.Id;                  ScreenResolutionWidthInPixels = browserCaps.ScreenPixelsWidth;                  ScreenResolutionHeightInPixels = browserCaps.ScreenPixelsHeight;                  IsTouchScreen = false;                  BrowserName = browserCaps.Browser;                  if(browserCaps.Capabilities != null)                  {                       Capabilities = browserCaps.Capabilities.Cast<DictionaryEntry>()                          .ToDictionary(kvp => Convert.ToString(kvp.Key)' kvp => Convert.ToString(kvp.Value));                  }                  else                  {                      Capabilities = new Dictionary<string' string>();                  }                  SupportsFlash = false;                  HtmlPreferedDTD = null;                    if (UserAgent.Length < 4)                  {                      return;                  }                    var lowerAgent = UserAgent.ToLowerInvariant();                  IsMobile = browserCaps.IsMobileDevice || GetIfMobile(lowerAgent);                  IsTablet = GetIfTablet(lowerAgent);                    try                  {                      DetectOperatingSystem(lowerAgent' Capabilities);                  }                  catch (Exception ex)                  {                      Logger.Error(ex);                  }              }
Magic Number,DotNetNuke.Providers.AspNetClientCapabilityProvider,AspNetClientCapabilityProvider,C:\repos\dnnsoftware_Dnn.Platform\DNN Platform\Providers\ClientCapabilityProviders\Provider.AspNetClientCapabilityProvider\AspNetClientCapabilityProvider.cs,GetHttpBrowserCapabilities,The following statement contains a magic number: var hashtable = new Hashtable(180' StringComparer.OrdinalIgnoreCase);
Missing Default,DotNetNuke.Providers.AspNetClientCapabilityProvider.Components,FeatureController,C:\repos\dnnsoftware_Dnn.Platform\DNN Platform\Providers\ClientCapabilityProviders\Provider.AspNetClientCapabilityProvider\Components\FeatureController.cs,UpgradeModule,The following switch statement is missing a default case: switch (version)              {                  case "08.00.00":                      var package = PackageController.Instance.GetExtensionPackage(Null.NullInteger' p => p.Name == Constants.PackageName);                      var moduleTabs = TabController.Instance.GetTabsByPackageID(-1' package.PackageID' false);                        if (moduleTabs.Count > 0)                          return string.Empty;                        RemoveWurflProvider();                      break;              }
Missing Default,DotNetNuke.Providers.AspNetClientCapabilityProvider.Components,FeatureController,C:\repos\dnnsoftware_Dnn.Platform\DNN Platform\Providers\ClientCapabilityProviders\Provider.AspNetClientCapabilityProvider\Components\FeatureController.cs,UpdateRules,The following switch statement is missing a default case: switch (rule.Expression)                              {                                  case "true":                                      rule.Expression = "True";                                      break;                                  case "false":                                      rule.Expression = "False";                                      break;                              }
