Implementation smell,Namespace,Class,File,Method,Description
Long Method,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,DoRenderTypeControls,The method has 123 lines of code.
Long Method,DotNetNuke.Web.UI,RibbonBarManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\RibbonBarManager.cs,SaveTabInfoObject,The method has 138 lines of code.
Complex Method,DotNetNuke.Web.Api,DnnAuthorizeAttribute,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\DnnAuthorizeAttribute.cs,IsAuthorized,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Web.Api,TraceWriter,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\TraceWriter.cs,Log,Cyclomatic complexity of the method is 21
Complex Method,DotNetNuke.Web.Api.Internal,ServicesRoutingManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\ServicesRoutingManager.cs,RegisterAuthenticationHandlers,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Web.Common.Internal,DotNetNukeHttpApplication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeHttpApplication.cs,Application_End,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,AddModule,Cyclomatic complexity of the method is 20
Complex Method,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddExistingModule,Cyclomatic complexity of the method is 18
Complex Method,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,GetPaneModuleOrder,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddNewModule,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetTreePathForPageInternal,Cyclomatic complexity of the method is 13
Complex Method,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetTreePathForFolderInternal,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,GetGroupedDetailViews,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,SaveFile,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Web.UI.WebControls,DnnFormItemBase,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFormItemBase.cs,DataBindInternal,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Web.UI.WebControls,DnnFormItemBase,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFormItemBase.cs,UpdateDataSourceInternal,Cyclomatic complexity of the method is 16
Complex Method,DotNetNuke.Web.UI.WebControls,DnnRibbonBarTool,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnRibbonBarTool.cs,ControlPanelTool_OnClick,Cyclomatic complexity of the method is 20
Complex Method,DotNetNuke.Web.UI.WebControls,DnnRibbonBarTool,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnRibbonBarTool.cs,ProcessTool,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Web.UI.WebControls,DnnRibbonBarTool,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnRibbonBarTool.cs,EnableTool,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Web.UI.WebControls,DnnRibbonBarTool,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnRibbonBarTool.cs,HasToolPermissions,Cyclomatic complexity of the method is 39
Complex Method,DotNetNuke.Web.UI.WebControls,DnnRibbonBarTool,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnRibbonBarTool.cs,BuildToolUrl,Cyclomatic complexity of the method is 32
Complex Method,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,DoChangeURL,Cyclomatic complexity of the method is 15
Complex Method,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,DoRenderTypes,Cyclomatic complexity of the method is 23
Complex Method,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,DoRenderTypeControls,Cyclomatic complexity of the method is 80
Complex Method,DotNetNuke.Web.UI.WebControls,DnnFilePicker,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFilePicker.cs,OnPreRender,Cyclomatic complexity of the method is 21
Complex Method,DotNetNuke.Web.UI.WebControls,DnnFilePicker,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFilePicker.cs,SaveFile,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Web.UI.WebControls,DnnLanguageLabel,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnLanguageLabel.cs,OnPreRender,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Web.UI.WebControls,Tags,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Tags.cs,RenderControl,Cyclomatic complexity of the method is 11
Complex Method,DotNetNuke.Web.UI.WebControls,Tags,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Tags.cs,RaisePostBackEvent,Cyclomatic complexity of the method is 12
Complex Method,DotNetNuke.Web.UI,RibbonBarManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\RibbonBarManager.cs,InitTabInfoObject,Cyclomatic complexity of the method is 8
Complex Method,DotNetNuke.Web.UI,RibbonBarManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\RibbonBarManager.cs,SaveTabInfoObject,Cyclomatic complexity of the method is 31
Complex Method,DotNetNuke.Web.UI,RibbonBarManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\RibbonBarManager.cs,DeserializeTabPermissions,Cyclomatic complexity of the method is 14
Complex Method,DotNetNuke.Web.UI,Utilities,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\Utilities.cs,ApplySkin,Cyclomatic complexity of the method is 21
Complex Method,DotNetNuke.Web.UI.WebControls.Internal,DnnFormToggleButtonItem,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Internal\DnnFormToggleButtonItem.cs,CheckedChanged,Cyclomatic complexity of the method is 9
Complex Method,DotNetNuke.Web.UI.WebControls.Internal,DnnFormToggleButtonItem,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Internal\DnnFormToggleButtonItem.cs,CreateControlInternal,Cyclomatic complexity of the method is 10
Long Parameter List,DotNetNuke.Web.Api,StringPassThroughMediaTypeFormatter,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\StringPassThroughMediaTypeFormatter.cs,WriteToStreamAsync,The method has 5 parameters.
Long Parameter List,DotNetNuke.Web.Api,UrlHelperExtensions,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\UrlHelperExtensions.cs,DnnLink,The method has 5 parameters.
Long Parameter List,DotNetNuke.Web.Api,IMapRoute,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\IMapRoute.cs,MapHttpRoute,The method has 6 parameters.
Long Parameter List,DotNetNuke.Web.Api,IMapRoute,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\IMapRoute.cs,MapHttpRoute,The method has 5 parameters.
Long Parameter List,DotNetNuke.Web.Api.Internal,ServicesRoutingManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\ServicesRoutingManager.cs,MapHttpRoute,The method has 6 parameters.
Long Parameter List,DotNetNuke.Web.Api.Internal,ServicesRoutingManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\ServicesRoutingManager.cs,MapHttpRoute,The method has 5 parameters.
Long Parameter List,DotNetNuke.Web.Api.Internal,ServicesRoutingManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\ServicesRoutingManager.cs,MapHttpRouteWithNamespace,The method has 5 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,GetPortalDesktopModules,The method has 7 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddExistingModule,The method has 6 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,AddModulePermission,The method has 5 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddNewModule,The method has 6 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPageDescendants,The method has 10 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetTreePathForPage,The method has 8 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortPages,The method has 9 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortPagesInPortalGroup,The method has 8 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPages,The method has 8 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchPages,The method has 8 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPageDescendantsInPortalGroup,The method has 8 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetTreePathForPageInPortalGroup,The method has 7 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchPagesInPortalGroup,The method has 7 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFolderDescendants,The method has 5 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortFolders,The method has 5 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFiles,The method has 5 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortFiles,The method has 6 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchFiles,The method has 6 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPagesInternal,The method has 8 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPageDescendantsInPortalGroupInternal,The method has 8 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPageDescendantsInternal,The method has 10 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPageDescendantsInternal,The method has 10 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchPagesInternal,The method has 9 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPortalPages,The method has 6 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortPagesInternal,The method has 8 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortPagesInternal,The method has 8 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchPagesInPortalGroupInternal,The method has 7 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchPagesInPortalGroupInternal,The method has 8 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortPagesInPortalGroupInternal,The method has 7 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortPagesInPortalGroupInternal,The method has 7 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetTreePathForPageInternal,The method has 9 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetTreePathForPageInternal,The method has 8 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetTreePathForPageInternal,The method has 10 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortFoldersRecursevely,The method has 5 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFolderDescendantsInternal,The method has 5 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFolderDescendantsInternal,The method has 5 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFilesInternal,The method has 6 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortFilesInternal,The method has 5 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFileItemsDto,The method has 6 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,Search,The method has 5 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,SaveFile,The method has 11 parameters.
Long Parameter List,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The method has 9 parameters.
Long Parameter List,DotNetNuke.Web.UI.WebControls,RibbonBarToolInfo,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\RibbonBarToolInfo.cs,RibbonBarToolInfo,The method has 7 parameters.
Long Parameter List,DotNetNuke.Web.UI.WebControls.Internal,DnnFormComboBoxItem,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Internal\DnnFormComboBoxItem.cs,BindListInternal,The method has 5 parameters.
Long Identifier,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddExistingModule,The length of the parameter arrSystemModuleViewPermissions is 30.
Long Statement,DotNetNuke.Web.Api,AuthFilterContext,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\AuthFilterContext.cs,HandleUnauthorizedRequest,The length of the statement  "	ActionContext.Response = ActionContext.ControllerContext.Request.CreateErrorResponse (HttpStatusCode.Unauthorized' AuthFailureMessage); " is 135.
Long Statement,DotNetNuke.Web.Api,AuthorizeAttributeBase,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\AuthorizeAttributeBase.cs,IsAnonymousAttributePresent,The length of the statement  "	return actionContext.ActionDescriptor.GetCustomAttributes<AllowAnonymousAttribute> ().Any () || (actionContext.ControllerContext.ControllerDescriptor.GetCustomAttributes<AllowAnonymousAttribute> ().Any () && actionContext.ActionDescriptor.GetCustomAttributes<AuthorizeAttributeBase> ().All (t => t is SupportedModulesAttribute)); " is 329.
Long Statement,DotNetNuke.Web.Api,DnnHttpControllerSelector,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\DnnHttpControllerSelector.cs,SelectController,The length of the statement  "		throw new HttpResponseException (request.CreateErrorResponse (HttpStatusCode.NotFound' "Unable to locate a controller for " + request.RequestUri)); " is 147.
Long Statement,DotNetNuke.Web.Api,DnnHttpControllerSelector,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\DnnHttpControllerSelector.cs,SelectController,The length of the statement  "		throw new HttpResponseException (request.CreateErrorResponse (HttpStatusCode.NotFound' string.Format (Localization.GetString ("ControllerNotFound"' Localization.ExceptionsResourceFile)' request.RequestUri' string.Join ("' "' namespaces)))); " is 240.
Long Statement,DotNetNuke.Web.Api,DnnHttpControllerSelector,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\DnnHttpControllerSelector.cs,SelectController,The length of the statement  "	throw new HttpResponseException (request.CreateErrorResponse (HttpStatusCode.Conflict' string.Format (Localization.GetString ("AmbiguousController"' Localization.ExceptionsResourceFile)' controllerName' string.Join ("' "' namespaces)))); " is 237.
Long Statement,DotNetNuke.Web.Api,PortalAliasRouteManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\PortalAliasRouteManager.cs,GetOldRouteUrl,The length of the statement  "	return string.Format ("{0}DesktopModules/{1}/API/{2}"' new PortalAliasRouteManager ().GeneratePrefixString (count)' moduleFolderName' url); " is 139.
Long Statement,DotNetNuke.Web.Api,PortalAliasRouteManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\PortalAliasRouteManager.cs,GetRoutePrefixCounts,The length of the statement  "			IEnumerable<string> aliases = PortalAliasController.Instance.GetPortalAliasesByPortalId (portal.PortalID).Select (x => x.HTTPAlias); " is 132.
Long Statement,DotNetNuke.Web.Api,UrlHelperExtensions,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\UrlHelperExtensions.cs,DnnLink,The length of the statement  "	return DnnLink (urlHelper' moduleFolderName' routeName' routeValues' PortalController.Instance.GetCurrentPortalSettings ().PortalAlias); " is 136.
Long Statement,DotNetNuke.Web.Api,UrlHelperExtensions,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\UrlHelperExtensions.cs,DnnLink,The length of the statement  "	var fullName = parm.GetRouteName (moduleFolderName' routeName' PortalController.Instance.GetCurrentPortalSettings ().PortalAlias); " is 130.
Long Statement,DotNetNuke.Web.Api.Internal,DnnActionFilterProvider,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\DnnActionFilterProvider.cs,GetFilters,The length of the statement  "	var controllerFilters = actionDescriptor.ControllerDescriptor.GetFilters ().Select (instance => new FilterInfo (instance' FilterScope.Controller)); " is 147.
Long Statement,DotNetNuke.Web.Api.Internal,DnnContextMessageHandler,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\DnnContextMessageHandler.cs,InSamePortalGroup,The length of the statement  "	return portal1 != null && portal2 != null && portal1.PortalGroupID > Null.NullInteger && portal2.PortalGroupID > Null.NullInteger && portal1.PortalGroupID == portal2.PortalGroupID; " is 180.
Long Statement,DotNetNuke.Web.Api.Internal,DnnContextMessageHandler,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\DnnContextMessageHandler.cs,ValidateTabAndModuleContext,The length of the statement  "			throw new HttpResponseException (request.CreateErrorResponse (HttpStatusCode.BadRequest' Localization.GetString ("TabNotInPortal"' Localization.ExceptionsResourceFile))); " is 170.
Long Statement,DotNetNuke.Web.Api.Internal,DnnContextMessageHandler,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\DnnContextMessageHandler.cs,ValidateTabAndModuleContext,The length of the statement  "				throw new HttpResponseException (request.CreateErrorResponse (HttpStatusCode.BadRequest' Localization.GetString ("TabModuleNotExist"' Localization.ExceptionsResourceFile))); " is 173.
Long Statement,DotNetNuke.Web.Api.Internal,DnnPageEditorAttribute,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\DnnPageEditorAttribute.cs,IsAuthorized,The length of the statement  "	return PagePermissionsAttributesHelper.HasTabPermission ("EDIT'CONTENT'MANAGE") || IsModuleAdmin (((DnnApiController)context.ActionContext.ControllerContext.Controller).PortalSettings); " is 185.
Long Statement,DotNetNuke.Web.Api.Internal,DnnPageEditorAttribute,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\DnnPageEditorAttribute.cs,IsModuleAdmin,The length of the statement  "			bool blnHasModuleEditPermissions = ModulePermissionController.HasModuleAccess (SecurityAccessLevel.Edit' Null.NullString' objModule); " is 133.
Long Statement,DotNetNuke.Web.Api.Internal,ServicesRoutingManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\ServicesRoutingManager.cs,MapHttpRoute,The length of the statement  "		throw new ArgumentException (Localization.GetExceptionMessage ("ArgumentCannotBeNullOrEmpty"' "The argument '{0}' cannot be null or empty."' "namespaces")); " is 156.
Long Statement,DotNetNuke.Web.Api.Internal,ServicesRoutingManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\ServicesRoutingManager.cs,RegisterRoutes,The length of the statement  "		GlobalConfiguration.Configuration.Services.Replace (typeof(IHttpControllerSelector)' new DnnHttpControllerSelector (GlobalConfiguration.Configuration)); " is 152.
Long Statement,DotNetNuke.Web.Api.Internal,ServicesRoutingManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\ServicesRoutingManager.cs,RegisterRoutes,The length of the statement  "		var defaultprovider = GlobalConfiguration.Configuration.Services.GetFilterProviders ().Where (x => x is ActionDescriptorFilterProvider); " is 136.
Long Statement,DotNetNuke.Web.Api.Internal,ServicesRoutingManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\ServicesRoutingManager.cs,RegisterAuthenticationHandlers,The length of the statement  "			var handler = Activator.CreateInstance (type' handlerEntry.DefaultInclude' handlerEntry.ForceSsl) as AuthMessageHandlerBase; " is 124.
Long Statement,DotNetNuke.Web.Api.Internal,ServicesRoutingManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\ServicesRoutingManager.cs,LocateServicesAndMapRoutes,The length of the statement  "			Logger.ErrorFormat ("{0}.RegisterRoutes threw an exception.  {1}\r\n{2}"' routeMapper.GetType ().FullName' e.Message' e.StackTrace); " is 132.
Long Statement,DotNetNuke.Web.Api.Internal,ServicesRoutingManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\ServicesRoutingManager.cs,GetServiceRouteMappers,The length of the statement  "			Logger.ErrorFormat ("Unable to create {0} while registering service routes.  {1}"' routeMapperType.FullName' e.Message); " is 120.
Long Statement,DotNetNuke.Web.Api.Auth,AuthMessageHandlerBase,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Auth\AuthMessageHandlerBase.cs,SendAsync,The length of the statement  "	return base.SendAsync (request' cancellationToken).ContinueWith (x => OnOutboundResponse (x.Result' cancellationToken)' cancellationToken); " is 139.
Long Statement,DotNetNuke.Web.Api.Auth,BasicAuthMessageHandler,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Auth\BasicAuthMessageHandler.cs,TryToAuthenticate,The length of the statement  "	UserInfo user = UserController.ValidateUser (portalId' credentials.UserName' credentials.Password' "DNN"' ""' "a portal"' ipAddress ?? ""' ref status); " is 151.
Long Statement,DotNetNuke.Web.Api.Auth,DigestAuthMessageHandler,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Auth\DigestAuthMessageHandler.cs,AddWwwAuthenticateHeader,The length of the statement  "	var value = string.Format ("realm=\"DNNAPI\"' nonce=\"{0}\"'  opaque=\"0000000000000000\"' stale={1}' algorithm=MD5' qop=\"auth\""' CreateNewNonce ()' isStale); " is 160.
Long Statement,DotNetNuke.Web.Api.Auth,DigestAuthMessageHandler,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Auth\DigestAuthMessageHandler.cs,TryToAuthenticate,The length of the statement  "	var digestAuthentication = new DigestAuthentication (new DigestAuthenticationRequest (authHeader' request.Method.Method)' portalId' request.GetIPAddress ()); " is 157.
Long Statement,DotNetNuke.Web.Api.Internal.Auth,DigestAuthentication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\Auth\DigestAuthentication.cs,AuthenticateRequest,The length of the statement  "		//Services.Logging.LoggingController.SimpleLog(String.Format("Request hash: {0} - Response Hash: {1}"' _request.RequestParams("response")' HashedDigest)) " is 153.
Long Statement,DotNetNuke.Web.Api.Internal.Auth,DigestAuthentication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\Auth\DigestAuthentication.cs,GenerateUnhashedDigest,The length of the statement  "	string a1 = String.Format ("{0}:{1}:{2}"' _request.RequestParams ["username"].Replace ("\\\\"' "\\")' _request.RequestParams ["realm"]' _password); " is 147.
Long Statement,DotNetNuke.Web.Api.Internal.Auth,DigestAuthentication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\Auth\DigestAuthentication.cs,GenerateUnhashedDigest,The length of the statement  "		unhashedDigest = String.Format ("{0}:{1}:{2}:{3}:{4}:{5}"' ha1' _request.RequestParams ["nonce"]' _request.RequestParams ["nc"]' _request.RequestParams ["cnonce"]' _request.RequestParams ["qop"]' ha2); " is 201.
Long Statement,DotNetNuke.Web.Api.Internal.Auth,DigestAuthentication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\Auth\DigestAuthentication.cs,CreateMd5HashBinHex,The length of the statement  "	//Services.Logging.LoggingController.SimpleLog(String.Format("Back and forth: {0}"' Encoding.Default.GetString(Encoding.Default.GetBytes(val)))) " is 144.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeShutdownOverload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeShutdownOverload.cs,InitializeFcnSettings,The length of the statement  "		var fileChangesMonitor = typeof(HttpRuntime).GetProperty ("FileChangesMonitor"' BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Static).GetValue (null' null); " is 170.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeShutdownOverload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeShutdownOverload.cs,InitializeFcnSettings,The length of the statement  "			var fcnVal = fileChangesMonitor.GetType ().GetField ("_FCNMode"' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.IgnoreCase).GetValue (fileChangesMonitor); " is 169.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeShutdownOverload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeShutdownOverload.cs,InitializeFcnSettings,The length of the statement  "			var dirMonCount = (int)dirMonCompletion.InvokeMember ("_activeDirMonCompletions"' BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.GetField' null' null' null); " is 170.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeHttpApplication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeHttpApplication.cs,Application_Start,The length of the statement  "	ComponentFactory.InstallComponents (new ProviderInstaller ("caching"' typeof(CachingProvider)' typeof(FBCachingProvider))); " is 123.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeHttpApplication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeHttpApplication.cs,Application_Start,The length of the statement  "	ComponentFactory.InstallComponents (new ProviderInstaller ("logging"' typeof(LoggingProvider)' typeof(DBLoggingProvider))); " is 123.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeHttpApplication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeHttpApplication.cs,Application_Start,The length of the statement  "	ComponentFactory.InstallComponents (new ProviderInstaller ("scheduling"' typeof(SchedulingProvider)' typeof(DNNScheduler))); " is 124.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeHttpApplication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeHttpApplication.cs,Application_Start,The length of the statement  "	ComponentFactory.InstallComponents (new ProviderInstaller ("searchIndex"' typeof(IndexingProvider)' typeof(ModuleIndexer))); " is 124.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeHttpApplication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeHttpApplication.cs,Application_Start,The length of the statement  "	ComponentFactory.InstallComponents (new ProviderInstaller ("searchDataStore"' typeof(SearchDataStoreProvider)' typeof(SearchDataStore))); " is 137.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeHttpApplication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeHttpApplication.cs,Application_Start,The length of the statement  "	ComponentFactory.InstallComponents (new ProviderInstaller ("members"' typeof(MembershipProvider)' typeof(AspNetMembershipProvider))); " is 133.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeHttpApplication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeHttpApplication.cs,Application_Start,The length of the statement  "	ComponentFactory.InstallComponents (new ProviderInstaller ("profiles"' typeof(ProfileProvider)' typeof(DNNProfileProvider))); " is 125.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeHttpApplication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeHttpApplication.cs,Application_Start,The length of the statement  "	ComponentFactory.InstallComponents (new ProviderInstaller ("permissions"' typeof(PermissionProvider)' typeof(CorePermissionProvider))); " is 135.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeHttpApplication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeHttpApplication.cs,Application_Start,The length of the statement  "	ComponentFactory.InstallComponents (new ProviderInstaller ("sitemap"' typeof(SitemapProvider)' typeof(CoreSitemapProvider))); " is 125.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeHttpApplication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeHttpApplication.cs,Application_Start,The length of the statement  "	ComponentFactory.InstallComponents (new ProviderInstaller ("htmlEditor"' typeof(HtmlEditorProvider)' ComponentLifeStyleType.Transient)); " is 136.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeHttpApplication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeHttpApplication.cs,Application_Start,The length of the statement  "	ComponentFactory.InstallComponents (new ProviderInstaller ("navigationControl"' typeof(NavigationProvider)' ComponentLifeStyleType.Transient)); " is 143.
Long Statement,DotNetNuke.Web.Common.Internal,DotNetNukeHttpApplication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeHttpApplication.cs,Application_Start,The length of the statement  "	ComponentFactory.InstallComponents (new ProviderInstaller ("cryptography"' typeof(CryptographyProvider)' typeof(CoreCryptographyProvider))); " is 140.
Long Statement,DotNetNuke.Web.Components.Controllers,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Components\Controllers\ControlBarController.cs,GetCategoryDesktopModules,The length of the statement  "	var formattedSearchTerm = String.IsNullOrEmpty (searchTerm) ? string.Empty : searchTerm.ToLower (CultureInfo.InvariantCulture); " is 127.
Long Statement,DotNetNuke.Web.Components.Controllers,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Components\Controllers\ControlBarController.cs,GetCategoryDesktopModules,The length of the statement  "	Func<KeyValuePair<string' PortalDesktopModuleInfo>' bool> Filter = category == "All" ? (kvp => kvp.Key.ToLower (CultureInfo.InvariantCulture).Contains (formattedSearchTerm)) : (Func<KeyValuePair<string' PortalDesktopModuleInfo>' bool>)(kvp => kvp.Value.DesktopModule.Category == category && kvp.Key.ToLower (CultureInfo.InvariantCulture).Contains (formattedSearchTerm)); " is 370.
Long Statement,DotNetNuke.Web.Components.Controllers,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Components\Controllers\ControlBarController.cs,GetBookmarkedDesktopModules,The length of the statement  "	var formattedSearchTerm = String.IsNullOrEmpty (searchTerm) ? string.Empty : searchTerm.ToLower (CultureInfo.InvariantCulture); " is 127.
Long Statement,DotNetNuke.Web.Components.Controllers,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Components\Controllers\ControlBarController.cs,GetBookmarkedDesktopModules,The length of the statement  "	IEnumerable<KeyValuePair<string' PortalDesktopModuleInfo>> bookmarkedModules = GetBookmarkedModules (PortalSettings.Current.PortalId' userId).Where (kvp => kvp.Key.ToLower (CultureInfo.InvariantCulture).Contains (formattedSearchTerm)); " is 235.
Long Statement,DotNetNuke.Web.Components.Controllers,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Components\Controllers\ControlBarController.cs,EnsureBookmarkValue,The length of the statement  "	var ensuredModules = bookmarkValue.Split (''').Where (desktopModuleId => bookmarkCategoryModules.All (m => m.Value.DesktopModuleID.ToString (CultureInfo.InvariantCulture) != desktopModuleId)).ToList (); " is 202.
Long Statement,DotNetNuke.Web.Components.Controllers,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Components\Controllers\ControlBarController.cs,GetBookmarkedModules,The length of the statement  "	var bookmarkedModules = DesktopModuleController.GetPortalDesktopModules (PortalSettings.Current.PortalId).Where (dm => bookmarkItemsKeys.Contains (dm.Value.DesktopModuleID.ToString (CultureInfo.InvariantCulture))); " is 214.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,GetPortalDesktopModules,The length of the statement  "	var bookmarkedModules = Controller.GetBookmarkedDesktopModules (PortalSettings.Current.PortalId' UserController.Instance.GetCurrentUserInfo ().UserID' searchTerm); " is 163.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,GetPortalDesktopModules,The length of the statement  "	var bookmarkCategoryModules = Controller.GetCategoryDesktopModules (PortalSettings.PortalId' bookmarCategory' searchTerm); " is 122.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,GetPortalDesktopModules,The length of the statement  "	var filteredList = bookmarCategory == category ? bookmarkCategoryModules.OrderBy (m => m.Key).Union (bookmarkedModules.OrderBy (m => m.Key)).Distinct () : Controller.GetCategoryDesktopModules (PortalSettings.PortalId' category' searchTerm).OrderBy (m => m.Key); " is 261.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,GetPortalDesktopModules,The length of the statement  "		filteredList = filteredList.Where (kvp => !excludeList.Contains (kvp.Value.DesktopModule.Category.ToLowerInvariant ())); " is 120.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,GetPortalDesktopModules,The length of the statement  "		filteredList = (filteredList.Where (m => m.Key.ToLowerInvariant () == topModule.ToLowerInvariant ())).Concat (filteredList.Except ((filteredList.Where (m => m.Key.ToLowerInvariant () == topModule.ToLowerInvariant ())))); " is 220.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,GetPageList,The length of the statement  "		tabList = TabController.GetPortalTabs (portalSettings.PortalId' PortalSettings.ActiveTab.TabID' false' string.Empty' true' false' false' false' true); " is 150.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,GetPageList,The length of the statement  "			tabList = TabController.GetPortalTabs (portalSettings.PortalId' Null.NullInteger' false' string.Empty' true' false' false' false' false); " is 137.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,GetPageList,The length of the statement  "		if (tab.PortalID == PortalSettings.PortalId || (GetModules (tab.TabID).Count > 0 && tab.TabID != portalSettings.AdminTabId && tab.ParentId != portalSettings.AdminTabId)) { " is 171.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,GetTabModules,The length of the statement  "			Dictionary<int' string> resultDict = pageModules.ToDictionary (module => module.ModuleID' module => module.ModuleTitle); " is 120.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,GetModules,The length of the statement  "	var isRemote = TabController.Instance.GetTab (tabID' Null.NullInteger' false).PortalID != PortalSettings.Current.PortalId; " is 122.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,GetModules,The length of the statement  "	var pageModules = isRemote ? tabModules.Values.Where (m => ModuleSupportsSharing (m) && !m.IsDeleted).ToList () : tabModules.Values.Where (m => ModulePermissionController.HasModuleAccess (SecurityAccessLevel.Edit' "MANAGE"' m) && !m.IsDeleted).ToList (); " is 254.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,CopyPermissionsToChildren,The length of the statement  "	if (TabPermissionController.CanManagePage () && UserController.Instance.GetCurrentUserInfo ().IsInRole ("Administrators") && ActiveTabHasChildren () && !PortalSettings.ActiveTab.IsSuperTab) { " is 191.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,CanAddModuleToPage,The length of the statement  "	//return (string.IsNullOrEmpty(HttpContext.Current.Request.QueryString["mid"])) && (string.IsNullOrEmpty(HttpContext.Current.Request.QueryString["ctl"])); " is 154.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddExistingModule,The length of the statement  "				throw new ApplicationException (string.Format ("Module '{0}' does not support Shareable and should not be listed in Add Existing Module from a different source site"' moduleInfo.DesktopModule.FriendlyName)); " is 207.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddExistingModule,The length of the statement  "				object objObject = DotNetNuke.Framework.Reflection.CreateObject (newModule.DesktopModule.BusinessControllerClass' newModule.DesktopModule.BusinessControllerClass); " is 163.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddExistingModule,The length of the statement  "		if (originalTab != null && originalTab.TabSettings.ContainsKey ("CustomStylesheet") && !string.IsNullOrEmpty (originalTab.TabSettings ["CustomStylesheet"].ToString ()) && (!targetTab.TabSettings.ContainsKey ("CustomStylesheet") || string.IsNullOrEmpty (targetTab.TabSettings ["CustomStylesheet"].ToString ()))) { " is 312.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddExistingModule,The length of the statement  "			TabController.Instance.UpdateTabSetting (targetTab.TabID' "CustomStylesheet"' originalTab.TabSettings ["CustomStylesheet"].ToString ()); " is 136.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddExistingModule,The length of the statement  "			ArrayList arrSystemModuleViewPermissions = permissionController.GetPermissionByCodeAndKey ("SYSTEM_MODULE_DEFINITION"' "VIEW"); " is 127.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddExistingModule,The length of the statement  "			AddModulePermission (newModule' (PermissionInfo)arrSystemModuleViewPermissions [0]' PortalSettings.Current.AdministratorRoleId' Null.NullInteger' true); " is 152.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddExistingModule,The length of the statement  "		EventLogController.Instance.AddLog (newModule' PortalSettings.Current' userID' ""' EventLogController.EventLogType.MODULE_CREATED); " is 131.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddNewModule,The length of the statement  "		if (!DesktopModuleController.GetDesktopModules (PortalSettings.Current.PortalId).TryGetValue (desktopModuleId' out desktopModule)) { " is 132.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddNewModule,The length of the statement  "	foreach (ModuleDefinitionInfo objModuleDefinition in ModuleDefinitionController.GetModuleDefinitionsByDesktopModuleID (desktopModuleId).Values) { " is 145.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddNewModule,The length of the statement  "			if (PortalSettings.Current.DefaultModuleId > Null.NullInteger && PortalSettings.Current.DefaultTabId > Null.NullInteger) { " is 122.
Long Statement,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddNewModule,The length of the statement  "				ModuleInfo defaultModule = ModuleController.Instance.GetModule (PortalSettings.Current.DefaultModuleId' PortalSettings.Current.DefaultTabId' true); " is 147.
Long Statement,DotNetNuke.Web.InternalServices,ContentWorkflowServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ContentWorkflowServiceController.cs,Review,The length of the statement  "			var sourceAction = Reflection.CreateInstance (Reflection.CreateType (workflowSource.SourceType)) as IContentWorkflowAction; " is 123.
Long Statement,DotNetNuke.Web.InternalServices,CountryRegionController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\CountryRegionController.cs,Countries,The length of the statement  "	return Request.CreateResponse (HttpStatusCode.OK' countries.Values.Where (x => x.NormalizedFullName.IndexOf (searchString' StringComparison.CurrentCulture) > -1).OrderBy (x => x.NormalizedFullName)); " is 199.
Long Statement,DotNetNuke.Web.InternalServices,CountryRegionController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\CountryRegionController.cs,Regions,The length of the statement  "	foreach (ListEntryInfo r in (new ListController ()).GetListEntryInfoItems ("Region").Where (l => l.ParentID == country)) { " is 122.
Long Statement,DotNetNuke.Web.InternalServices,EventLogServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\EventLogServiceController.cs,GetPropertiesText,The length of the statement  "			str.Append ("<p><strong>" + ldi.PropertyName + "</strong>:</br><pre>" + HttpUtility.HtmlEncode (ldi.PropertyValue) + "</pre></p>"); " is 131.
Long Statement,DotNetNuke.Web.InternalServices,LanguageServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\LanguageServiceController.cs,GetNonTranslatedPages,The length of the statement  "				EditUrl = DotNetNuke.Common.Globals.NavigateURL (page.TabID' "Tab"' "action=edit"' "returntabid=" + PortalSettings.ActiveTab.TabID) " is 131.
Long Statement,DotNetNuke.Web.InternalServices,PageServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\PageServiceController.cs,UpdateCustomUrl,The length of the statement  "	var options = UrlRewriterUtils.ExtendOptionsForCustomURLs (UrlRewriterUtils.GetOptionsFromSettings (new FriendlyUrlSettings (PortalSettings.PortalId))); " is 152.
Long Statement,DotNetNuke.Web.InternalServices,PageServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\PageServiceController.cs,UpdateCustomUrl,The length of the statement  "	var cultureCode = LocaleController.Instance.GetLocales (PortalId).Where (l => l.Value.KeyID == dto.LocaleKey).Select (l => l.Value.Code).SingleOrDefault (); " is 156.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPageDescendants,The length of the statement  "		Items = GetPageDescendantsInternal (portalId' parentId' sortOrder' searchText' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles' disabledNotSelectable) " is 175.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetTreePathForPage,The length of the statement  "		Tree = GetTreePathForPageInternal (portalId' itemId' sortOrder' false' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles)' " is 145.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortPages,The length of the statement  "		Tree = string.IsNullOrEmpty (searchText) ? SortPagesInternal (portalId' treeAsJson' sortOrder' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles) : SearchPagesInternal (portalId' searchText' sortOrder' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles)' " is 299.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortPagesInPortalGroup,The length of the statement  "		Tree = string.IsNullOrEmpty (searchText) ? SortPagesInPortalGroupInternal (treeAsJson' sortOrder' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles) : SearchPagesInPortalGroupInternal (treeAsJson' searchText' sortOrder' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles)' " is 317.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPages,The length of the statement  "		Tree = GetPagesInternal (portalId' sortOrder' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles' disabledNotSelectable)' " is 143.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchPages,The length of the statement  "		Tree = string.IsNullOrEmpty (searchText) ? GetPagesInternal (portalId' sortOrder' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles' false) : SearchPagesInternal (portalId' searchText' sortOrder' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles)' " is 293.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPageDescendantsInPortalGroup,The length of the statement  "		Items = GetPageDescendantsInPortalGroupInternal (parentId' sortOrder' searchText' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles) " is 155.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetTreePathForPageInPortalGroup,The length of the statement  "		Tree = GetTreePathForPageInternal (itemId' sortOrder' true' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles)' " is 134.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchPagesInPortalGroup,The length of the statement  "		Tree = string.IsNullOrEmpty (searchText) ? GetPagesInPortalGroupInternal (sortOrder) : SearchPagesInPortalGroupInternal (searchText' sortOrder' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles)' " is 218.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortFolders,The length of the statement  "		Tree = string.IsNullOrEmpty (searchText) ? SortFoldersInternal (portalId' treeAsJson' sortOrder' permission) : SearchFoldersInternal (portalId' searchText' sortOrder' permission)' " is 179.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchFolders,The length of the statement  "		Tree = string.IsNullOrEmpty (searchText) ? GetFoldersInternal (portalId' sortOrder' permission) : SearchFoldersInternal (portalId' searchText' sortOrder' permission)' " is 166.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortFiles,The length of the statement  "		Tree = string.IsNullOrEmpty (searchText) ? SortFilesInternal (portalId' parentId' filter' sortOrder' permission) : GetFilesInternal (portalId' parentId' filter' searchText' sortOrder' permission)' " is 196.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPagesInternal,The length of the statement  "	var children = ApplySort (GetChildrenOf (tabs' Null.NullInteger' filterTabs)' sortOrder).Select (dto => new NTree<ItemDto> { " is 124.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPageDescendantsInPortalGroupInternal,The length of the statement  "			return SearchPagesInternal (portalId' searchText' sortOrder' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles).Children.Select (node => node.Data); " is 171.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPageDescendantsInPortalGroupInternal,The length of the statement  "	return GetPageDescendantsInternal (portalId' parentIdAsInt' sortOrder' searchText' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles); " is 157.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPageDescendantsInternal,The length of the statement  "	return GetPageDescendantsInternal (portalId' id' sortOrder' searchText' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles' disabledNotSelectable); " is 169.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPageDescendantsInternal,The length of the statement  "		tabs = TabController.GetPortalTabs (portalId' (includeActive) ? Null.NullInteger : PortalSettings.ActiveTab.TabID' false' null' true' false' false' true' false).Where (tab => searchFunc (tab) && tab.ParentId == parentId && (includeDisabled || !tab.DisableLink) && (includeAllTypes || tab.TabType == TabType.Normal) && !tab.IsSystem).OrderBy (tab => tab.TabOrder).ToList (); " is 373.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPageDescendantsInternal,The length of the statement  "			tabs.AddRange (TabController.Instance.GetTabsByPortal (-1).AsList ().Where (tab => searchFunc (tab) && tab.ParentId == parentId && !tab.IsDeleted && !tab.DisableLink && !tab.IsSystem).OrderBy (tab => tab.TabOrder).ToList ()); " is 225.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPageDescendantsInternal,The length of the statement  "			tabs = TabController.Instance.GetTabsByPortal (-1).AsList ().Where (tab => searchFunc (tab) && tab.ParentId == parentId && !tab.IsDeleted && !tab.DisableLink && !tab.IsSystem).OrderBy (tab => tab.TabOrder).ToList (); " is 216.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchPagesInternal,The length of the statement  "		tabs = TabController.Instance.GetTabsByPortal (portalId).Where (tab => (includeActive || tab.Value.TabID != PortalSettings.ActiveTab.TabID) && (includeDisabled || !tab.Value.DisableLink) && (includeAllTypes || tab.Value.TabType == TabType.Normal) && searchFunc (tab.Value) && !tab.Value.IsSystem).OrderBy (tab => tab.Value.TabOrder).Select (tab => tab.Value).ToList (); " is 369.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchPagesInternal,The length of the statement  "			tabs.AddRange (TabController.Instance.GetTabsByPortal (-1).Where (tab => !tab.Value.DisableLink && searchFunc (tab.Value) && !tab.Value.IsSystem).OrderBy (tab => tab.Value.TabOrder).Select (tab => tab.Value).ToList ()); " is 219.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchPagesInternal,The length of the statement  "			tabs = TabController.Instance.GetTabsByPortal (-1).Where (tab => !tab.Value.DisableLink && searchFunc (tab.Value) && !tab.Value.IsSystem).OrderBy (tab => tab.Value.TabOrder).Select (tab => tab.Value).ToList (); " is 210.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPortalPages,The length of the statement  "		tabs = TabController.GetPortalTabs (portalId' (includeActive) ? Null.NullInteger : PortalSettings.ActiveTab.TabID' false' null' true' false' includeAllTypes' true' false).Where (t => (!t.DisableLink || includeDisabled) && !t.IsSystem).ToList (); " is 245.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPortalPages,The length of the statement  "			tabs.AddRange (TabController.Instance.GetTabsByPortal (-1).AsList ().Where (t => !t.IsDeleted && !t.DisableLink && !t.IsSystem).ToList ()); " is 139.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPortalPages,The length of the statement  "			tabs = TabController.Instance.GetTabsByPortal (-1).AsList ().Where (t => !t.IsDeleted && !t.DisableLink && !t.IsSystem).ToList (); " is 130.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortPagesInternal,The length of the statement  "	return SortPagesInternal (portalId' tree' sortOrder' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles); " is 127.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchPagesInPortalGroupInternal,The length of the statement  "			var pageTree = SearchPagesInternal (portalId' searchText' sortOrder' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles); " is 143.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchPagesInPortalGroupInternal,The length of the statement  "		var treeNodeChild = treeNode.Children.Find (child => String.Equals (child.Data.Key' portalIdString' StringComparison.InvariantCultureIgnoreCase)); " is 146.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchPagesInPortalGroupInternal,The length of the statement  "			var pageTree = SearchPagesInternal (portalId' searchText' sortOrder' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles); " is 143.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortPagesInPortalGroupInternal,The length of the statement  "	return SortPagesInPortalGroupInternal (tree' sortOrder' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles); " is 130.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortPagesInPortalGroupInternal,The length of the statement  "			var treeNodeChild = treeNode.Children.Find (child => String.Equals (child.Data.Key' portalIdString' StringComparison.InvariantCultureIgnoreCase)); " is 146.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortPagesInPortalGroupInternal,The length of the statement  "			var treeOfPages = SortPagesInternal (portalId' openedNodeChild' sortOrder' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles); " is 149.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortPagesRecursevely,The length of the statement  "			var treeNodeChild = treeNode.Children.Find (child => String.Equals (child.Data.Key' openedNodeChild.Data.Id' StringComparison.InvariantCultureIgnoreCase)); " is 155.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetTreePathForPageInternal,The length of the statement  "	return GetTreePathForPageInternal (portalId' itemIdAsInt' sortOrder' includePortalTree' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles); " is 162.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetTreePathForPageInternal,The length of the statement  "	return GetTreePathForPageInternal (portalId' itemIdAsInt' sortOrder' includePortalTree' includeDisabled' includeAllTypes' includeActive' includeHostPages' roles); " is 162.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,FilterTabsByRole,The length of the statement  "		filterTabs.AddRange (tabs.Where (t => t.TabPermissions.Cast<TabPermissionInfo> ().Any (p => roleList.Contains (p.RoleID) && p.UserID == Null.NullInteger && p.PermissionKey == "VIEW" && p.AllowAccess)).ToList ().Where (t => !disabledNotSelectable || !t.DisableLink).Select (t => t.TabID)); " is 288.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFoldersInternal,The length of the statement  "	var children = ApplySort (GetFolderDescendantsInternal (portalId' -1' sortOrder' string.Empty' permissions)' sortOrder).Select (dto => new NTree<ItemDto> { " is 155.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFoldersInternal,The length of the statement  "		children = ApplySort (GetFolderDescendantsInternal (portalId' child.Data.Key' sortOrder' string.Empty' permissions)' sortOrder).Select (dto => new NTree<ItemDto> { " is 163.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortFoldersRecursevely,The length of the statement  "	var children = ApplySort (GetFolderDescendantsInternal (portalId' openedNode.Data.Id' sortOrder' string.Empty' permissions)' sortOrder).Select (dto => new NTree<ItemDto> { " is 171.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortFoldersRecursevely,The length of the statement  "			var treeNodeChild = treeNode.Children.Find (child => String.Equals (child.Data.Key' openedNodeChild.Data.Id' StringComparison.InvariantCultureIgnoreCase)); " is 155.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFolderDescendantsInternal,The length of the statement  "	var parentFolder = parentId > -1 ? FolderManager.Instance.GetFolder (parentId) : FolderManager.Instance.GetFolder (portalId' ""); " is 129.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFolderDescendantsInternal,The length of the statement  "	var hasPermission = string.IsNullOrEmpty (permission) ? (HasPermission (parentFolder' "BROWSE") || HasPermission (parentFolder' "READ")) : HasPermission (parentFolder' permission.ToUpper ()); " is 191.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetTreePathForFolderInternal,The length of the statement  "	var hasPermission = string.IsNullOrEmpty (permission) ? (HasPermission (folder' "BROWSE") || HasPermission (folder' "READ")) : HasPermission (folder' permission.ToUpper ()); " is 173.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFolderDescendants,The length of the statement  "	return FolderManager.Instance.GetFolders (parentFolder).Where (folder => (string.IsNullOrEmpty (permission) ? (HasPermission (folder' "BROWSE") || HasPermission (folder' "READ")) : (HasPermission (folder' permission))) && searchFunc (folder)); " is 243.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetPortalFolders,The length of the statement  "	return FolderManager.Instance.GetFolders (portalId).Where (folder => (string.IsNullOrEmpty (permission) ? (HasPermission (folder' "BROWSE") || HasPermission (folder' "READ")) : (HasPermission (folder' permission))) && searchFunc (folder)); " is 239.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,HasChildren,The length of the statement  "	return FolderManager.Instance.GetFolders (parentFolder).Any (folder => (string.IsNullOrEmpty (permission) ? (HasPermission (folder' "BROWSE") || HasPermission (folder' "READ")) : (HasPermission (folder' permission)))); " is 218.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFilesInternal,The length of the statement  "	var children = GetFileItemsDto (portalId' parentId' filter' searchText' permissions' sortOrder).Select (dto => new NTree<ItemDto> { " is 131.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SortFilesInternal,The length of the statement  "	var children = GetFileItemsDto (portalId' parentId' filter' string.Empty' permissions' sortOrder).Select (dto => new NTree<ItemDto> { " is 133.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFileItemsDto,The length of the statement  "	var parentFolder = parentId > -1 ? FolderManager.Instance.GetFolder (parentId) : FolderManager.Instance.GetFolder (portalId' ""); " is 129.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFileItemsDto,The length of the statement  "	var hasPermission = string.IsNullOrEmpty (permission) ? (HasPermission (parentFolder' "BROWSE") || HasPermission (parentFolder' "READ")) : HasPermission (parentFolder' permission.ToUpper ()); " is 191.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetFiles,The length of the statement  "		searchFunc = f => f.FileName.IndexOf (searchText' StringComparison.InvariantCultureIgnoreCase) > -1 && (filterList == null || filterList.Contains (f.Extension.ToLowerInvariant ())); " is 181.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchUser,The length of the statement  "		// GetUsersAdvancedSearch doesn't accept a comma or a single quote in the query so we have to remove them for now. See issue 20224. " is 131.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchUser,The length of the statement  "		var results = UserController.Instance.GetUsersBasicSearch (portalId' 0' numResults' "DisplayName"' true' "DisplayName"' q).Select (user => new SearchResult { " is 157.
Long Statement,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,GetTerms,The length of the statement  "	where (v.ScopeType.ScopeType == "Application" || (v.ScopeType.ScopeType == "Portal" && v.ScopeId == portalId)) && (!v.IsSystem || includeSystem) && (v.Name != "Tags" || includeTags) " is 181.
Long Statement,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,GetModulesByDefinition,The length of the statement  "	return CBO.GetCachedObject<ArrayList> (new CacheItemArgs (cacheKey' ModuleInfosCacheTimeOut' ModuleInfosCachePriority)' args => CBO.FillCollection (DataProvider.Instance ().GetModuleByDefinition (portalID' friendlyName)' typeof(ModuleInfo))); " is 242.
Long Statement,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,GetSearchModule,The length of the statement  "		findModule = arrModules.Cast<ModuleInfo> ().FirstOrDefault (searchModule => searchModule.CultureCode == PortalSettings.CultureCode); " is 132.
Long Statement,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,GetSearchContentSources,The length of the statement  "		foreach (var contentSources in typesList.Select (t1 => list.Where (src => string.Equals (src.LocalizedName' t1' StringComparison.OrdinalIgnoreCase)))) { " is 152.
Long Statement,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,GetTabTitleFromModuleId,The length of the statement  "	return CBO.GetCachedObject<string> (new CacheItemArgs (cacheKey' ModuleTitleCacheTimeOut' ModuleTitleCachePriority' moduleId)' GetTabTitleCallBack); " is 148.
Long Statement,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,AddSynonymsGroup,The length of the statement  "	var synonymsGroupId = SearchHelper.Instance.AddSynonymsGroup (synonymsGroup.Tags' synonymsGroup.PortalId' synonymsGroup.Culture' out duplicateWord); " is 148.
Long Statement,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,UpdateSynonymsGroup,The length of the statement  "	var synonymsGroupId = SearchHelper.Instance.UpdateSynonymsGroup (synonymsGroup.Id' synonymsGroup.Tags' synonymsGroup.PortalId' synonymsGroup.Culture' out duplicateWord); " is 169.
Long Statement,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,UpdateStopWords,The length of the statement  "	var stopWordsId = SearchHelper.Instance.UpdateSearchStopWords (stopWords.Id' stopWords.Words' stopWords.PortalId' stopWords.Culture); " is 133.
Long Statement,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,PostFile,The length of the statement  "				returnFileDto = SaveFile (stream' portalSettings' userInfo' folder' filter' fileName' overwrite' isHostMenu' extract' out alreadyExists' out errorMessage); " is 155.
Long Statement,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,SaveFile,The length of the statement  "		var effectivePortalId = isHostMenu ? Null.NullInteger : PortalController.GetEffectivePortalId (portalSettings.PortalId); " is 120.
Long Statement,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,SaveFile,The length of the statement  "		if (!PortalSecurity.IsInRoles (userInfo' portalSettings' folderInfo.FolderPermissions.ToString ("WRITE")) && !PortalSecurity.IsInRoles (userInfo' portalSettings' folderInfo.FolderPermissions.ToString ("ADD"))) { " is 211.
Long Statement,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The length of the statement  "		if (!FolderPermissionController.HasFolderPermission (portalId' folder' "WRITE") && !FolderPermissionController.HasFolderPermission (portalId' folder' "ADD")) { " is 159.
Long Statement,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The length of the statement  "			file = FileManager.Instance.AddFile (folderInfo' fileName' stream' true' false' FileContentTypeManager.Instance.GetContentType (Path.GetExtension (fileName))' userInfo.UserID); " is 176.
Long Statement,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The length of the statement  "				var invalidFilesJson = invalidFiles.Count > 0 ? string.Format ("\"{0}\""' string.Join ("\"'\""' invalidFiles)) : string.Empty; " is 126.
Long Statement,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFromUrl,The length of the statement  "		result = UploadFile (responseStream' portalId' UserInfo' dto.Folder.ValueOrEmpty ()' dto.Filter.ValueOrEmpty ()' fileName' dto.Overwrite' dto.IsHostMenu' dto.Unzip); " is 165.
Long Statement,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,VerifySafeUrl,The length of the statement  "			if (NetworkUtils.IsIPInRange (uri.Host' "10.0.0.0"' "8") || NetworkUtils.IsIPInRange (uri.Host' "172.16.0.0"' "12") || NetworkUtils.IsIPInRange (uri.Host' "192.168.0.0"' "16")) { " is 178.
Long Statement,DotNetNuke.Web.InternalServices,ModuleServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ModuleServiceController.cs,DeleteModule,The length of the statement  "	ModuleController.Instance.DeleteTabModule (deleteModuleDto.TabId' deleteModuleDto.ModuleId' deleteModuleDto.SoftDelete); " is 120.
Long Statement,DotNetNuke.Web.InternalServices,ProfileServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ProfileServiceController.cs,Search,The length of the statement  "	foreach (var definition in ProfileController.GetPropertyDefinitionsByPortal (portalId).Cast<ProfilePropertyDefinition> ().Where (definition => definition.DataType != imageType.EntryID)) { " is 187.
Long Statement,DotNetNuke.Web.InternalServices,ProfileServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ProfileServiceController.cs,ProfilePropertyValues,The length of the statement  "	return Request.CreateResponse (HttpStatusCode.OK' Entities.Profile.ProfileController.SearchProfilePropertyValues (portalId' propertyName' searchString)); " is 153.
Long Statement,DotNetNuke.Web.InternalServices,MessagingServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\MessagingServiceController.cs,Create,The length of the statement  "		var roles = roleIdsList != null && roleIdsList.Count > 0 ? roleIdsList.Select (id => RoleController.Instance.GetRole (portalId' r => r.RoleID == id)).Where (role => role != null).ToList () : null; " is 196.
Long Statement,DotNetNuke.Web.InternalServices,MessagingServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\MessagingServiceController.cs,Create,The length of the statement  "			users = userIdsList.Select (id => UserController.Instance.GetUser (portalId' id)).Where (user => user != null).ToList (); " is 121.
Long Statement,DotNetNuke.Web.InternalServices,MessagingServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\MessagingServiceController.cs,Search,The length of the statement  "		// GetUsersAdvancedSearch doesn't accept a comma or a single quote in the query so we have to remove them for now. See issue 20224. " is 131.
Long Statement,DotNetNuke.Web.InternalServices,MessagingServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\MessagingServiceController.cs,Search,The length of the statement  "		var results = UserController.Instance.GetUsersBasicSearch (portalId' 0' numResults' "DisplayName"' true' "DisplayName"' q).Select (user => new SearchResult { " is 157.
Long Statement,DotNetNuke.Web.InternalServices,MessagingServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\MessagingServiceController.cs,Search,The length of the statement  "			iconfile = TestableGlobals.Instance.ResolveUrl (string.IsNullOrEmpty (roleInfo.IconFile) ? "~/images/no_avatar.gif" : PortalSettings.HomeDirectory.TrimEnd ('/') + "/" + roleInfo.IconFile) " is 187.
Long Statement,DotNetNuke.Web.InternalServices,NewUserNotificationServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\NewUserNotificationServiceController.cs,Authorize,The length of the statement  "	if (!user.IsSuperUser && user.IsInRole ("Unverified Users") && PortalSettings.UserRegistration == (int)Globals.PortalRegistrationType.VerifiedRegistration) { " is 157.
Long Statement,DotNetNuke.Web.InternalServices,UserFileController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\UserFileController.cs,GetTypeName,The length of the statement  "	return file.ContentType == null ? string.Empty : (file.ContentType.StartsWith ("image/") ? file.ContentType.Replace ("image/"' string.Empty) : (file.Extension != null ? file.Extension.ToLowerInvariant () : string.Empty)); " is 221.
Long Statement,DotNetNuke.Web.Mvp,ModuleSettingsPresenter,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Mvp\ModuleSettingsPresenterOfT.cs,LoadSettings,The length of the statement  "	View.Model.ModuleSettings = new Dictionary<string' string> (ModuleContext.Configuration.ModuleSettings.Cast<DictionaryEntry> ().ToDictionary (kvp => (string)kvp.Key' kvp => (string)kvp.Value)); " is 193.
Long Statement,DotNetNuke.Web.Mvp,ModuleSettingsPresenter,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Mvp\ModuleSettingsPresenterOfT.cs,LoadSettings,The length of the statement  "	View.Model.TabModuleSettings = new Dictionary<string' string> (ModuleContext.Configuration.TabModuleSettings.Cast<DictionaryEntry> ().ToDictionary (kvp => (string)kvp.Key' kvp => (string)kvp.Value)); " is 199.
Long Statement,DotNetNuke.Web.Mvp,ProfileModuleViewBase,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Mvp\ProfileModuleViewBase.cs,GetRedirectUrl,The length of the statement  "		redirectUrl = TestableGlobals.Instance.GetPortalDomainName (PortalSettings.Current.PortalAlias.HTTPAlias' Request' true) + "/" + Globals.glbDefaultPage; " is 152.
Long Statement,DotNetNuke.Web.Mvp,ProfileModuleViewBase,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Mvp\ProfileModuleViewBase.cs,OnInit,The length of the statement  "	if (ProfileUserId == Null.NullInteger && (ModuleContext.PortalSettings.ActiveTab.TabID == ModuleContext.PortalSettings.UserTabId || ModuleContext.PortalSettings.ActiveTab.ParentId == ModuleContext.PortalSettings.UserTabId)) { " is 225.
Long Statement,DotNetNuke.Web.Mvp,ProfileModuleViewBase,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Mvp\ProfileModuleViewBase.cs,OnInit,The length of the statement  "		Response.Redirect (Request.IsAuthenticated ? Globals.NavigateURL (ModuleContext.PortalSettings.ActiveTab.TabID' ""' "UserId=" + ModuleContext.PortalSettings.UserId.ToString (CultureInfo.InvariantCulture)) : GetRedirectUrl ()' true); " is 232.
Long Statement,DotNetNuke.Web.Mvp,AttributeBasedViewStateSerializer,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Mvp\AttributeBasedViewStateSerializer.cs,DeSerialize,The length of the statement  "		ViewStateAttribute attr = member.GetCustomAttributes (typeof(ViewStateAttribute)' true).OfType<ViewStateAttribute> ().FirstOrDefault (); " is 136.
Long Statement,DotNetNuke.Web.Mvp,AttributeBasedViewStateSerializer,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Mvp\AttributeBasedViewStateSerializer.cs,Serialize,The length of the statement  "		ViewStateAttribute attr = member.GetCustomAttributes (typeof(ViewStateAttribute)' true).OfType<ViewStateAttribute> ().FirstOrDefault (); " is 136.
Long Statement,DotNetNuke.Web.Services,MobileHelperController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Services\MobileHelperController.cs,GetMonikersForList,The length of the statement  "	var modules = modulesController.GetAllTabsModules (portalId' false).OfType<ModuleInfo> ().Where (tabmodule => monikers.ContainsKey (tabmodule.TabModuleID)).ToArray (); " is 167.
Long Statement,DotNetNuke.Web.Services,MobileHelperController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Services\MobileHelperController.cs,GetMonikersForList,The length of the statement  "				var allowedTabs = modules.Where (m => m.DesktopModuleID == dtmRecord.DesktopModuleID).Select (m => m.TabID).Distinct ().Where (tabId => TabPermissionController.CanViewPage (tabsController.GetTab (tabId' portalId))); " is 215.
Long Statement,DotNetNuke.Web.Services,MobileHelperController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Services\MobileHelperController.cs,GetMonikersForList,The length of the statement  "				var allowedTabModules = modules.Where (tabModule => allowedTabs.Contains (tabModule.TabID) && ModulePermissionController.CanViewModule (modulesController.GetModule (tabModule.ModuleID' tabModule.TabID' false))); " is 211.
Long Statement,DotNetNuke.Web.Services,MobileHelperController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Services\MobileHelperController.cs,GetSiteDetails,The length of the statement  "		var modulesCollection = GetTabModules ((moduleName ?? "").Trim ()).Where (tabmodule => TabPermissionController.CanViewPage (tabmodule.TabInfo) && ModulePermissionController.CanViewModule (tabmodule.ModuleInfo)); " is 211.
Long Statement,DotNetNuke.Web.Services,MobileHelperController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Services\MobileHelperController.cs,GetTabModules,The length of the statement  "		var args = new CacheItemArgs (cacheKey' DataCache.DesktopModuleCacheTimeOut' DataCache.DesktopModuleCachePriority' portalId' desktopModule); " is 140.
Long Statement,DotNetNuke.Web.Services,MobileHelperController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Services\MobileHelperController.cs,GetTabModulesCallback,The length of the statement  "		tabModules.AddRange (tab.ChildModules.Values.Where (childModule => childModule.DesktopModuleID == desktopModule.DesktopModuleID).Select (childModule => new TabModule { " is 167.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFileDropDownList,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileDropDownList.cs,OnPreRender,The length of the statement  "		UndefinedItem = new ListItem (DynamicSharedConstants.Unspecified' Null.NullInteger.ToString (CultureInfo.InvariantCulture)); " is 124.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFileUpload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileUpload.cs,RegisterClientScript,The length of the statement  "	ClientResourceManager.RegisterStyleSheet (page' "~/Resources/Shared/Components/FileUpload/dnn.FileUpload.css"' FileOrder.Css.ResourceCss); " is 138.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFileUpload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileUpload.cs,RegisterClientScript,The length of the statement  "		ClientResourceManager.RegisterStyleSheet (page' "~/Resources/Shared/Components/FileUpload/dnn.FileUpload." + skin + ".css"' FileOrder.Css.ResourceCss); " is 151.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFileUpload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileUpload.cs,RegisterClientScript,The length of the statement  "	ClientResourceManager.RegisterScript (page' "~/Resources/Shared/scripts/dnn.WebResourceUrl.js"' FileOrder.Js.DefaultPriority + 2); " is 130.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFileUpload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileUpload.cs,RegisterClientScript,The length of the statement  "	ClientResourceManager.RegisterScript (page' "~/Resources/Shared/scripts/dnn.jquery.extensions.js"' FileOrder.Js.DefaultPriority + 3); " is 133.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFileUpload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileUpload.cs,RegisterClientScript,The length of the statement  "	ClientResourceManager.RegisterScript (page' "~/Resources/Shared/Components/FileUpload/dnn.FileUpload.js"' FileOrder.Js.DefaultPriority + 4); " is 140.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFileUpload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileUpload.cs,RegisterStartupScript,The length of the statement  "		var rootFolder = (SupportHost && portalSettings.ActiveTab.IsSuperTab) ? DynamicSharedConstants.HostRootFolder : DynamicSharedConstants.RootFolder; " is 146.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFileUpload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileUpload.cs,RegisterStartupScript,The length of the statement  "			SelectedItem = (folder != null) ? new SerializableKeyValuePair<string' string> (folder.FolderID.ToString (CultureInfo.InvariantCulture)' rootFolder) : null " is 155.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFileUpload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileUpload.cs,RegisterStartupScript,The length of the statement  "		var extensionsText = Options.Extensions.Aggregate (string.Empty' (current' extension) => current.Append (extension' "' ")); " is 123.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFileUpload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileUpload.cs,RegisterStartupScript,The length of the statement  "		Options.Resources.TooManyFiles = string.Format (Options.Resources.TooManyFiles' Options.MaxFiles.ToString (CultureInfo.InvariantCulture)); " is 138.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnPortalPageDropDownList,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnPortalPageDropDownList.cs,OnInit,The length of the statement  "	SelectItemDefaultText = Localization.GetString ("DropDownList.SelectWebPageDefaultText"' Localization.SharedResourceFile); " is 122.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFolderDropDownList,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFolderDropDownList.cs,OnInit,The length of the statement  "	SelectItemDefaultText = Localization.GetString ("DropDownList.SelectFolderDefaultText"' Localization.SharedResourceFile); " is 121.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnDropDownList,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnDropDownList.cs,RegisterClientScript,The length of the statement  "	ClientResourceManager.RegisterStyleSheet (page' "~/Resources/Shared/components/DropDownList/dnn.DropDownList.css"' FileOrder.Css.ResourceCss); " is 142.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnDropDownList,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnDropDownList.cs,RegisterClientScript,The length of the statement  "		ClientResourceManager.RegisterStyleSheet (page' "~/Resources/Shared/components/DropDownList/dnn.DropDownList." + skin + ".css"' FileOrder.Css.ResourceCss); " is 155.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnDropDownList,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnDropDownList.cs,RegisterClientScript,The length of the statement  "	ClientResourceManager.RegisterStyleSheet (page' "~/Resources/Shared/scripts/jquery/dnn.jScrollBar.css"' FileOrder.Css.ResourceCss); " is 131.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnDropDownList,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnDropDownList.cs,RegisterStartupScript,The length of the statement  "	var script = string.Format ("dnn.createDropDownList('#{0}'' {1}' {2});{3}"' ClientID' optionsAsJsonString' methodsAsJsonString' Environment.NewLine); " is 149.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFormPasswordItem,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFormPasswordItem.cs,OnInit,The length of the statement  "	ClientResourceManager.RegisterStyleSheet (Page' "~/Resources/Shared/stylesheets/dnn.PasswordStrength.css"' FileOrder.Css.ResourceCss); " is 134.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFormPasswordItem,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFormPasswordItem.cs,OnPreRender,The length of the statement  "	var script = string.Format ("dnn.initializePasswordStrength('.{0}'' {1});{2}"' TextBoxCssClass' optionsAsJsonString' Environment.NewLine); " is 138.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFilePickerUploader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFilePickerUploader.cs,OnLoad,The length of the statement  "	FoldersComboBox.SelectItemDefaultText = (SupportHost && PortalSettings.Current.ActiveTab.IsSuperTab) ? DynamicSharedConstants.HostRootFolder : DynamicSharedConstants.RootFolder; " is 177.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFilePickerUploader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFilePickerUploader.cs,OnPreRender,The length of the statement  "	if (FoldersComboBox.SelectedFolder != null && FoldersComboBox.SelectedFolder.FolderPath.StartsWith ("Users/"' StringComparison.InvariantCultureIgnoreCase)) { " is 157.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFilePickerUploader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFilePickerUploader.cs,OnPreRender,The length of the statement  "		var selectedItem = new SerializableKeyValuePair<string' string> (FoldersComboBox.SelectedItem.Value' FoldersComboBox.SelectedItem.Text); " is 136.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnMemberListControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnMemberListControl.cs,Render,The length of the statement  "	var relationship = Filters.ContainsKey ("RelationshipTypeId") && Filters ["RelationshipTypeId"] != null ? new RelationshipType () { " is 131.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnMemberListControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnMemberListControl.cs,Render,The length of the statement  "	//users.Load(_relationshipController.GetUsersAdvancedSearch(_currentUser' filterUser' role' relationship' Filters' additionalFilters)); " is 135.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnMemberListControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnMemberListControl.cs,Render,The length of the statement  "			writer.Write (string.IsNullOrEmpty (AlternatingRowHeaderTemplate) || row % 2 == 0 ? RowHeaderTemplate : AlternatingRowHeaderTemplate); " is 134.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnMemberListControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnMemberListControl.cs,Render,The length of the statement  "			foreach (var col in user.Table.Columns.Cast<DataColumn> ().Where (col => !tokenKeyValues.ContainsKey (col.ColumnName))) { " is 121.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnMemberListControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnMemberListControl.cs,Render,The length of the statement  "			writer.Write (string.IsNullOrEmpty (AlternatingRowFooterTemplate) || row % 2 == 0 ? RowFooterTemplate : AlternatingRowFooterTemplate); " is 134.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnPageDropDownList,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnPageDropDownList.cs,OnInit,The length of the statement  "	SelectItemDefaultText = Localization.GetString ("DropDownList.SelectWebPageDefaultText"' Localization.SharedResourceFile); " is 122.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnPageDropDownList,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnPageDropDownList.cs,OnPreRender,The length of the statement  "	Services.Parameters.Add ("includeHostPages"' (IncludeHostPages && UserController.Instance.GetCurrentUserInfo ().IsSuperUser).ToString ().ToLowerInvariant ()); " is 158.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnPaswordStrengthOptions,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnPaswordStrengthOptions.cs,OnSerializing,The length of the statement  "	int portalId = (PortalController.Instance.GetCurrentPortalSettings ()) != null ? (PortalController.Instance.GetCurrentPortalSettings ().PortalId) : -1; " is 151.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFormRadioButtonListItem,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFormRadioButtonListItem.cs,BindList,The length of the statement  "		string selectedValue = !_radioButtonList.Page.IsPostBack ? Convert.ToString (Value) : _radioButtonList.Page.Request.Form [_radioButtonList.UniqueID]; " is 149.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFormEditor,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFormEditor.cs,SetUpTabs,The length of the statement  "				formTab.ExpandAllScript += "\t\t\t\texpandText: '" + Localization.GetString ("ExpandAll"' Localization.SharedResourceFile) + "''\r\n"; " is 134.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFormEditor,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFormEditor.cs,SetUpTabs,The length of the statement  "				formTab.ExpandAllScript += "\t\t\t\tcollapseText: '" + Localization.GetString ("CollapseAll"' Localization.SharedResourceFile) + "''\r\n"; " is 138.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFormEditor,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFormEditor.cs,CreateControlHierarchy,The length of the statement  "	CssClass = string.IsNullOrEmpty (CssClass) ? "dnnForm" : CssClass.Contains ("dnnForm") ? CssClass : string.Format ("dnnForm {0}"' CssClass); " is 140.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnRibbonBar,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnRibbonBar.cs,Render,The length of the statement  "		Groups [Groups.Count - 1].CssClass = Groups [Groups.Count - 1].CssClass + " " + Groups [Groups.Count - 1].CssClass.Trim () + "Last"; " is 132.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnRibbonBarTool,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnRibbonBarTool.cs,ControlPanelTool_OnClick,The length of the statement  "			TabController.CopyDesignToChildren (PortalSettings.ActiveTab' PortalSettings.ActiveTab.SkinSrc' PortalSettings.ActiveTab.ContainerSrc); " is 135.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnRibbonBarTool,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnRibbonBarTool.cs,ProcessTool,The length of the statement  "					// Prevent PageSettings in a popup if SSL is enabled and enforced' which causes redirection/javascript broswer security issues. " is 127.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnRibbonBarTool,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnRibbonBarTool.cs,ProcessTool,The length of the statement  "							DnnLink.Attributes.Add ("onclick"' "return " + UrlUtils.PopUpUrl (DnnLink.NavigateUrl' this' PortalSettings' true' false)); " is 123.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnRibbonBarTool,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnRibbonBarTool.cs,ProcessTool,The length of the statement  "						DnnLink.Attributes.Add ("onclick"' "return " + UrlUtils.PopUpUrl (DnnLink.NavigateUrl' this' PortalSettings' true' false)); " is 123.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnRibbonBarTool,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnRibbonBarTool.cs,GetTabURL,The length of the statement  "		strURL = Globals.NavigateURL (moduleInfo.TabID' isHostPage' PortalSettings' ToolInfo.ControlKey' currentCulture' additionalParams.ToArray ()); " is 142.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,DoChangeURL,The length of the statement  "		if (_Urltype == "U" && (_Url.StartsWith ("~/" + PortalSettings.DefaultIconLocation' StringComparison.InvariantCultureIgnoreCase))) { " is 132.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,DoRenderTypeControls,The length of the statement  "			string strImagesFolder = Path.Combine (Globals.ApplicationMapPath' PortalSettings.DefaultIconLocation.Replace ('/'' '\\')); " is 123.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,DoRenderTypeControls,The length of the statement  "				cboImages.Items.Add (new ListItem (img' string.Format ("~/{0}/{1}"' PortalSettings.DefaultIconLocation' img).ToLower ())); " is 122.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,OnLoad,The length of the statement  "		if ((Request.QueryString ["pid"] != null) && (Globals.IsHostTab (PortalSettings.ActiveTab.TabID) || UserController.Instance.GetCurrentUserInfo ().IsSuperUser)) { " is 161.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFilePicker,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFilePicker.cs,IsUserFolder,The length of the statement  "	return (folderPath.ToLowerInvariant ().StartsWith ("users/") && folderPath.EndsWith (string.Format ("/{0}/"' user.UserID))); " is 124.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFilePicker,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFilePicker.cs,OnPreRender,The length of the statement  "			if ((FolderPermissionController.HasFolderPermission (PortalId' _cboFolders.SelectedItem.Value' "ADD") || IsUserFolder (_cboFolders.SelectedItem.Value)) && ShowUpLoad) { " is 168.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFilePicker,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFilePicker.cs,SaveFile,The length of the statement  "				_lblMessage.Text += "<br />" + string.Format (Localization.GetString ("InsufficientFolderPermission")' folder.FolderPath); " is 122.
Long Statement,DotNetNuke.Web.UI.WebControls,DnnFilePicker,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFilePicker.cs,SaveFile,The length of the statement  "				_lblMessage.Text += "<br />" + string.Format (Localization.GetString ("RestrictedFileType")' fileName' Host.AllowedExtensionWhitelist.ToDisplayString ()); " is 154.
Long Statement,DotNetNuke.Web.UI.WebControls,Tags,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Tags.cs,RenderControl,The length of the statement  "			RenderTerm (writer' categories.ToList () [i]' i < categories.Count () - 1 && RepeatDirection.ToLower () == "horizontal"); " is 121.
Long Statement,DotNetNuke.Web.UI,RibbonBarManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\RibbonBarManager.cs,GetPagesList,The length of the statement  "			portalTabs = TabController.GetPortalTabs (PortalSettings.Current.PortalId' Null.NullInteger' false' Null.NullString' true' false' true' false' true); " is 149.
Long Statement,DotNetNuke.Web.UI,RibbonBarManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\RibbonBarManager.cs,SaveTabInfoObject,The length of the statement  "				//get the siblings from the selectedtab and iterate through until you find a sibbling with a corresponding defaultlanguagetab " is 125.
Long Statement,DotNetNuke.Web.UI,RibbonBarManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\RibbonBarManager.cs,SaveTabInfoObject,The length of the statement  "				var selectedTabSibblings = TabController.Instance.GetTabsByPortal (tab.PortalID).WithCulture (tab.CultureCode' true).AsList (); " is 127.
Long Statement,DotNetNuke.Web.UI,RibbonBarManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\RibbonBarManager.cs,SaveTabInfoObject,The length of the statement  "					var defaultLanguageTabs = TabController.Instance.GetTabsByPortal (tab.PortalID).WithCulture (PortalSettings.Current.DefaultLanguage' true).AsList (); " is 149.
Long Statement,DotNetNuke.Web.UI,RibbonBarManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\RibbonBarManager.cs,SaveTabInfoObject,The length of the statement  "		if ((IsHostConsolePage (relativeToTab) && (location == TabRelativeLocation.AFTER || location == TabRelativeLocation.BEFORE))) { " is 127.
Long Statement,DotNetNuke.Web.UI,RibbonBarManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\RibbonBarManager.cs,SaveTabInfoObject,The length of the statement  "			throw new DotNetNukeException ("You cannot add or move pages before or after the Host tab."' DotNetNukeErrorCode.HostBeforeAfterError); " is 135.
Long Statement,DotNetNuke.Web.UI,RibbonBarManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\RibbonBarManager.cs,SaveTabInfoObject,The length of the statement  "				throw new DotNetNukeException ("You do not have permissions to add or move pages to this location. You can only add or move pages as children of pages you can edit."' DotNetNukeErrorCode.PageEditorPermissionError); " is 214.
Long Statement,DotNetNuke.Web.UI,RibbonBarManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\RibbonBarManager.cs,SaveTabInfoObject,The length of the statement  "			TabController.DeserializePanes (xmlDoc.SelectSingleNode ("//portal/tabs/tab/panes")' tab.PortalID' tab.TabID' PortalTemplateModuleAction.Ignore' new Hashtable ()); " is 163.
Long Statement,DotNetNuke.Web.UI,RibbonBarManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\RibbonBarManager.cs,DeserializeTabPermissions,The length of the statement  "		if (roleId != int.MinValue && !tab.TabPermissions.Cast<TabPermissionInfo> ().Any (p => p.RoleID == roleId && p.PermissionID == permissionId)) { " is 143.
Long Statement,DotNetNuke.Web.UI,Utilities,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\Utilities.cs,ApplySkin,The length of the statement  "			systemWebControlSkin = Path.Combine (systemWebControlSkin' string.Format ("{0}.{1}.css"' controlName' webControlSkinName)); " is 123.
Long Statement,DotNetNuke.Web.UI,Utilities,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\Utilities.cs,ApplySkin,The length of the statement  "					systemWebControlSkin = Path.Combine (systemWebControlSkin' string.Format ("{0}.{1}.css"' controlName' webControlSkinName)); " is 123.
Long Statement,DotNetNuke.Web.UI,Utilities,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\Utilities.cs,GetClientAlert,The length of the statement  "	return "jQuery(document).ready(function($){$.dnnAlert({ okText: '" + GetLocalizedString ("Ok.Text") + "'' text: '" + message.Message + "'' title: '" + message.Title + "'});});"; " is 177.
Long Statement,DotNetNuke.Web.UI,Utilities,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\Utilities.cs,GetOnClientClickConfirm,The length of the statement  "	return string.Format ("return postBackConfirm('{0}'' event' '{1}'' '{2}'' ''' '{3}');"' message.Message' message.WindowWidth' message.WindowHeight' message.Title); " is 163.
Long Statement,DotNetNuke.Web.UI,Utilities,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\Utilities.cs,RegisterAlertOnPageLoad,The length of the statement  "	ctrl.Page.ClientScript.RegisterClientScriptBlock (ctrl.GetType ()' ctrl.ID + "_AlertOnPageLoad"' GetClientAlert (ctrl' message)' true); " is 135.
Long Statement,DotNetNuke.Web.UI.WebControls.Extensions,ListControlExtensions,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Extensions\ListControlExtensions.cs,FindByTextWithIgnoreCase,The length of the statement  "	return listItems.Cast<ListItem> ().FirstOrDefault (item => item.Text.Equals (text' StringComparison.InvariantCultureIgnoreCase)); " is 129.
Long Statement,DotNetNuke.Web.UI.WebControls.Extensions,ListControlExtensions,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Extensions\ListControlExtensions.cs,FindByValueWithIgnoreCase,The length of the statement  "	return listItems.Cast<ListItem> ().FirstOrDefault (item => item.Value.Equals (value' StringComparison.InvariantCultureIgnoreCase)); " is 131.
Long Statement,DotNetNuke.Web.UI.WebControls.Extensions,WebControlExtensions,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Extensions\WebControlExtensions.cs,Orientation,The length of the statement  "	return size.Width > size.Height ? System.Web.UI.WebControls.Orientation.Horizontal : System.Web.UI.WebControls.Orientation.Vertical; " is 132.
Long Statement,DotNetNuke.Web.UI.WebControls.Internal,DnnFormToggleButtonItem,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Internal\DnnFormToggleButtonItem.cs,CreateControlInternal,The length of the statement  "	//_checkBox = new DnnRadButton {ID = ID + "_CheckBox"' ButtonType = RadButtonType.ToggleButton' ToggleType = ButtonToggleType.CheckBox' AutoPostBack = false}; " is 158.
Long Statement,DotNetNuke.Web.UI.WebControls.Internal,DnnModuleComboBox,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Internal\DnnModuleComboBox.cs,GetPortalDesktopModules,The length of the statement  "		portalModulesList = DesktopModuleController.GetPortalDesktopModules (PortalSettings.Current.PortalId).Where (kvp => kvp.Value.DesktopModule.Category == "Uncategorised" || String.IsNullOrEmpty (kvp.Value.DesktopModule.Category)).OrderBy (c => c.Key); " is 249.
Long Statement,DotNetNuke.Web.UI.WebControls.Internal,DnnModuleComboBox,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Internal\DnnModuleComboBox.cs,GetPortalDesktopModules,The length of the statement  "		portalModulesList = DesktopModuleController.GetPortalDesktopModules (PortalSettings.Current.PortalId).Where (Filter).OrderBy (c => c.Key); " is 138.
Long Statement,DotNetNuke.Web.UI.WebControls.Internal,DnnModuleComboBox,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Internal\DnnModuleComboBox.cs,GetPortalDesktopModules,The length of the statement  "	return portalModulesList.ToDictionary (portalModule => portalModule.Value.DesktopModuleID' portalModule => portalModule.Key); " is 125.
Long Statement,DotNetNuke.Web.UI.WebControls.Internal,DnnModuleComboBox,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Internal\DnnModuleComboBox.cs,GetTabModules,The length of the statement  "	var isRemote = TabController.Instance.GetTab (tabID' Null.NullInteger' false).PortalID != PortalSettings.Current.PortalId; " is 122.
Long Statement,DotNetNuke.Web.UI.WebControls.Internal,DnnModuleComboBox,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Internal\DnnModuleComboBox.cs,GetTabModules,The length of the statement  "	var pageModules = tabModules.Values.Where (m => !isRemote || ModuleSuportsSharing (m)).Where (m => ModulePermissionController.CanAdminModule (m) && m.IsDeleted == false).ToList (); " is 180.
Long Statement,DotNetNuke.Web.UI.WebControls.Internal,DnnModuleComboBox,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Internal\DnnModuleComboBox.cs,BindTabModuleImages,The length of the statement  "	//                       join modDefs in moduleDefnitions on portMods.Value.DesktopModuleID equals modDefs.Value.DesktopModuleID " is 128.
Long Statement,DotNetNuke.Web.UI.WebControls.Internal,DnnModuleComboBox,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Internal\DnnModuleComboBox.cs,BindTabModuleImages,The length of the statement  "	//                       join tabMods in tabModules on modDefs.Value.DesktopModuleID equals tabMods.Value.DesktopModuleID " is 121.
Long Statement,DotNetNuke.Web.UI.WebControls.Internal.PropertyEditorControls,DateTimeEditControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\Internal\PropertyEditorControls\DateTimeEditControl.cs,LoadPostData,The length of the statement  "			if (DateTime.TryParseExact (postedValue' "yyyy-MM-dd-HH-mm-ss"' CultureInfo.InvariantCulture' DateTimeStyles.None' out value)) { " is 128.
Long Statement,DotNetNuke.Web.Validators,AttributeBasedObjectValidator,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Validators\AttributeBasedObjectValidator.cs,ValidateProperty,The length of the statement  "	return targetProperty.GetCustomAttributes (true).OfType<TAttribute> ().Aggregate (ValidationResult.Successful' (result' attribute) => result.CombineWith (ValidateAttribute (target' targetProperty' attribute) ?? ValidationResult.Successful)); " is 241.
Long Statement,DotNetNuke.Web.Validators,PropertyBasedObjectValidator,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Validators\PropertyBasedObjectValidator.cs,ValidateObject,The length of the statement  "	return target.GetType ().GetProperties ().Aggregate (ValidationResult.Successful' (result' member) => result.CombineWith (ValidateProperty (target' member) ?? ValidationResult.Successful)); " is 189.
Long Statement,DotNetNuke.Web.Validators,Validator,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Validators\Validator.cs,ValidateObject,The length of the statement  "	return _Validators.Aggregate (ValidationResult.Successful' (result' validator) => result.CombineWith (validator.ValidateObject (target) ?? ValidationResult.Successful)); " is 169.
Complex Conditional,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,GetPageList,The conditional expression  "tab.PortalID == PortalSettings.PortalId || (GetModules (tab.TabID).Count > 0 && tab.TabID != portalSettings.AdminTabId && tab.ParentId != portalSettings.AdminTabId)"  is complex.
Complex Conditional,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,CopyPermissionsToChildren,The conditional expression  "TabPermissionController.CanManagePage () && UserController.Instance.GetCurrentUserInfo ().IsInRole ("Administrators") && ActiveTabHasChildren () && !PortalSettings.ActiveTab.IsSuperTab"  is complex.
Complex Conditional,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddExistingModule,The conditional expression  "originalTab != null && originalTab.TabSettings.ContainsKey ("CustomStylesheet") && !string.IsNullOrEmpty (originalTab.TabSettings ["CustomStylesheet"].ToString ()) && (!targetTab.TabSettings.ContainsKey ("CustomStylesheet") || string.IsNullOrEmpty (targetTab.TabSettings ["CustomStylesheet"].ToString ()))"  is complex.
Complex Conditional,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,Preview,The conditional expression  "portalIds.Any () && searchTypeIds.Any () && (!string.IsNullOrEmpty (cleanedKeywords) || tags.Any ())"  is complex.
Complex Conditional,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,Search,The conditional expression  "portalIds.Any () && searchTypeIds.Any () && (!string.IsNullOrEmpty (cleanedKeywords) || tags.Any ())"  is complex.
Empty Catch Block,DotNetNuke.Web.Api.Internal.Auth,DigestAuthenticationRequest,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\Auth\DigestAuthenticationRequest.cs,DigestAuthenticationRequest,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,SwitchSite,The method has an empty catch block.
Empty Catch Block,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,SwitchLanguage,The method has an empty catch block.
Magic Number,DotNetNuke.Web.Api.Auth,BasicAuthMessageHandler,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Auth\BasicAuthMessageHandler.cs,GetCredentials,The following statement contains a magic number: if (parts.Length < 2) {  	return null;  }  
Magic Number,DotNetNuke.Web.Api.Internal.Auth,DigestAuthentication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\Auth\DigestAuthentication.cs,CreateMd5HashBinHex,The following statement contains a magic number: for (int i = 0; i <= 15; i++) {  	ha1 += String.Format ("{0:x02}"' bha1 [i]);  }  
Magic Number,DotNetNuke.Web.Api.Internal.Auth,DigestAuthentication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\Auth\DigestAuthentication.cs,IsNonceValid,The following statement contains a magic number: if (numPadChars > 0) {  	numPadChars = 4 - numPadChars;  }  
Magic Number,DotNetNuke.Web.Api.Internal.Auth,DigestAuthentication,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\Auth\DigestAuthentication.cs,IsNonceValid,The following statement contains a magic number: numPadChars = 4 - numPadChars;  
Magic Number,DotNetNuke.Web.Api.Internal.Auth,DigestAuthenticationRequest,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\Auth\DigestAuthenticationRequest.cs,DigestAuthenticationRequest,The following statement contains a magic number: try {  	RequestParams = new NameValueCollection ();  	foreach (Match m in AuthHeaderRegex.Matches (authorizationHeader)) {  		RequestParams.Add (m.Groups ["name"].Value' m.Groups ["value"].Value);  	}  	HttpMethod = httpMethod;  	RawUsername = RequestParams ["username"].Replace ("\\\\"' "\\");  	CleanUsername = RawUsername;  	if (CleanUsername.LastIndexOf ("\\"' System.StringComparison.Ordinal) > 0) {  		CleanUsername = CleanUsername.Substring (CleanUsername.LastIndexOf ("\\"' System.StringComparison.Ordinal) + 2 - 1);  	}  } catch (Exception) {  	//suppress any issue e.g. another 401 from a different auth method  }  
Magic Number,DotNetNuke.Web.Api.Internal.Auth,DigestAuthenticationRequest,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\Auth\DigestAuthenticationRequest.cs,DigestAuthenticationRequest,The following statement contains a magic number: if (CleanUsername.LastIndexOf ("\\"' System.StringComparison.Ordinal) > 0) {  	CleanUsername = CleanUsername.Substring (CleanUsername.LastIndexOf ("\\"' System.StringComparison.Ordinal) + 2 - 1);  }  
Magic Number,DotNetNuke.Web.Api.Internal.Auth,DigestAuthenticationRequest,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\Internal\Auth\DigestAuthenticationRequest.cs,DigestAuthenticationRequest,The following statement contains a magic number: CleanUsername = CleanUsername.Substring (CleanUsername.LastIndexOf ("\\"' System.StringComparison.Ordinal) + 2 - 1);  
Magic Number,DotNetNuke.Web.Common.Internal,DotNetNukeShutdownOverload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeShutdownOverload.cs,ShceduleShutdown,The following statement contains a magic number: if (_handleShutdowns && !_shutdownInprogress) {  	_shutdownInprogress = true;  	// delay for a very short period  	_shutDownDelayTimer.Change (1500' Timeout.Infinite);  }  
Magic Number,DotNetNuke.Web.Common.Internal,DotNetNukeShutdownOverload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Common\DotNetNukeShutdownOverload.cs,ShceduleShutdown,The following statement contains a magic number: _shutDownDelayTimer.Change (1500' Timeout.Infinite);  
Magic Number,DotNetNuke.Web.InternalServices,ContentWorkflowServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ContentWorkflowServiceController.cs,Reject,The following statement contains a magic number: try {  	var notification = NotificationsController.Instance.GetNotification (postData.NotificationId);  	if (notification != null) {  		if (string.IsNullOrEmpty (notification.Context)) {  			return Request.CreateResponse (HttpStatusCode.OK' new {  				Result = "success"  			});  		}  		string[] parameters = notification.Context.Split (':');  		var stateTransiction = new StateTransaction {  			ContentItemId = int.Parse (parameters [0])'  			CurrentStateId = int.Parse (parameters [2])'  			Message = new StateTransactionMessage ()'  			UserId = UserInfo.UserID  		};  		_workflowEngine.DiscardState (stateTransiction);  		return Request.CreateResponse (HttpStatusCode.OK' new {  			Result = "success"  		});  	}  } catch (Exception exc) {  	Exceptions.LogException (exc);  }  
Magic Number,DotNetNuke.Web.InternalServices,ContentWorkflowServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ContentWorkflowServiceController.cs,Reject,The following statement contains a magic number: if (notification != null) {  	if (string.IsNullOrEmpty (notification.Context)) {  		return Request.CreateResponse (HttpStatusCode.OK' new {  			Result = "success"  		});  	}  	string[] parameters = notification.Context.Split (':');  	var stateTransiction = new StateTransaction {  		ContentItemId = int.Parse (parameters [0])'  		CurrentStateId = int.Parse (parameters [2])'  		Message = new StateTransactionMessage ()'  		UserId = UserInfo.UserID  	};  	_workflowEngine.DiscardState (stateTransiction);  	return Request.CreateResponse (HttpStatusCode.OK' new {  		Result = "success"  	});  }  
Magic Number,DotNetNuke.Web.InternalServices,ContentWorkflowServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ContentWorkflowServiceController.cs,Approve,The following statement contains a magic number: try {  	var notification = NotificationsController.Instance.GetNotification (postData.NotificationId);  	if (notification != null) {  		if (string.IsNullOrEmpty (notification.Context)) {  			return Request.CreateResponse (HttpStatusCode.OK' new {  				Result = "success"  			});  		}  		string[] parameters = notification.Context.Split (':');  		var stateTransiction = new StateTransaction {  			ContentItemId = int.Parse (parameters [0])'  			CurrentStateId = int.Parse (parameters [2])'  			Message = new StateTransactionMessage ()'  			UserId = UserInfo.UserID  		};  		_workflowEngine.CompleteState (stateTransiction);  		return Request.CreateResponse (HttpStatusCode.OK' new {  			Result = "success"  		});  	}  } catch (Exception exc) {  	Exceptions.LogException (exc);  }  
Magic Number,DotNetNuke.Web.InternalServices,ContentWorkflowServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ContentWorkflowServiceController.cs,Approve,The following statement contains a magic number: if (notification != null) {  	if (string.IsNullOrEmpty (notification.Context)) {  		return Request.CreateResponse (HttpStatusCode.OK' new {  			Result = "success"  		});  	}  	string[] parameters = notification.Context.Split (':');  	var stateTransiction = new StateTransaction {  		ContentItemId = int.Parse (parameters [0])'  		CurrentStateId = int.Parse (parameters [2])'  		Message = new StateTransactionMessage ()'  		UserId = UserInfo.UserID  	};  	_workflowEngine.CompleteState (stateTransiction);  	return Request.CreateResponse (HttpStatusCode.OK' new {  		Result = "success"  	});  }  
Magic Number,DotNetNuke.Web.InternalServices,ImageHeader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ImageHeader.cs,DecodeBitmap,The following statement contains a magic number: binaryReader.ReadBytes (16);  
Magic Number,DotNetNuke.Web.InternalServices,ImageHeader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ImageHeader.cs,DecodePng,The following statement contains a magic number: binaryReader.ReadBytes (8);  
Magic Number,DotNetNuke.Web.InternalServices,ImageHeader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ImageHeader.cs,DecodeJfif,The following statement contains a magic number: while (binaryReader.ReadByte () == 0xff) {  	byte marker = binaryReader.ReadByte ();  	short chunkLength = ReadLittleEndianInt16 (binaryReader);  	if (marker == 0xc0 || marker == 0xc2) {  		binaryReader.ReadByte ();  		int height = ReadLittleEndianInt16 (binaryReader);  		int width = ReadLittleEndianInt16 (binaryReader);  		return new Size (width' height);  	}  	if (chunkLength < 0) {  		var uchunkLength = (ushort)chunkLength;  		binaryReader.ReadBytes (uchunkLength - 2);  	} else {  		binaryReader.ReadBytes (chunkLength - 2);  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,ImageHeader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ImageHeader.cs,DecodeJfif,The following statement contains a magic number: while (binaryReader.ReadByte () == 0xff) {  	byte marker = binaryReader.ReadByte ();  	short chunkLength = ReadLittleEndianInt16 (binaryReader);  	if (marker == 0xc0 || marker == 0xc2) {  		binaryReader.ReadByte ();  		int height = ReadLittleEndianInt16 (binaryReader);  		int width = ReadLittleEndianInt16 (binaryReader);  		return new Size (width' height);  	}  	if (chunkLength < 0) {  		var uchunkLength = (ushort)chunkLength;  		binaryReader.ReadBytes (uchunkLength - 2);  	} else {  		binaryReader.ReadBytes (chunkLength - 2);  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,ImageHeader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ImageHeader.cs,DecodeJfif,The following statement contains a magic number: if (chunkLength < 0) {  	var uchunkLength = (ushort)chunkLength;  	binaryReader.ReadBytes (uchunkLength - 2);  } else {  	binaryReader.ReadBytes (chunkLength - 2);  }  
Magic Number,DotNetNuke.Web.InternalServices,ImageHeader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ImageHeader.cs,DecodeJfif,The following statement contains a magic number: if (chunkLength < 0) {  	var uchunkLength = (ushort)chunkLength;  	binaryReader.ReadBytes (uchunkLength - 2);  } else {  	binaryReader.ReadBytes (chunkLength - 2);  }  
Magic Number,DotNetNuke.Web.InternalServices,ImageHeader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ImageHeader.cs,DecodeJfif,The following statement contains a magic number: binaryReader.ReadBytes (uchunkLength - 2);  
Magic Number,DotNetNuke.Web.InternalServices,ImageHeader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ImageHeader.cs,DecodeJfif,The following statement contains a magic number: binaryReader.ReadBytes (chunkLength - 2);  
Magic Number,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchUser,The following statement contains a magic number: try {  	var portalId = PortalController.GetEffectivePortalId (PortalSettings.PortalId);  	const int numResults = 5;  	// GetUsersAdvancedSearch doesn't accept a comma or a single quote in the query so we have to remove them for now. See issue 20224.  	q = q.Replace ("'"' "").Replace ("'"' "");  	if (q.Length == 0)  		return Request.CreateResponse<SearchResult> (HttpStatusCode.OK' null);  	var results = UserController.Instance.GetUsersBasicSearch (portalId' 0' numResults' "DisplayName"' true' "DisplayName"' q).Select (user => new SearchResult {  		id = user.UserID'  		name = user.DisplayName'  		iconfile = UserController.Instance.GetUserProfilePictureUrl (user.UserID' 32' 32)'  	}).ToList ();  	return Request.CreateResponse (HttpStatusCode.OK' results.OrderBy (sr => sr.name));  } catch (Exception exc) {  	Logger.Error (exc);  	return Request.CreateErrorResponse (HttpStatusCode.InternalServerError' exc);  }  
Magic Number,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchUser,The following statement contains a magic number: try {  	var portalId = PortalController.GetEffectivePortalId (PortalSettings.PortalId);  	const int numResults = 5;  	// GetUsersAdvancedSearch doesn't accept a comma or a single quote in the query so we have to remove them for now. See issue 20224.  	q = q.Replace ("'"' "").Replace ("'"' "");  	if (q.Length == 0)  		return Request.CreateResponse<SearchResult> (HttpStatusCode.OK' null);  	var results = UserController.Instance.GetUsersBasicSearch (portalId' 0' numResults' "DisplayName"' true' "DisplayName"' q).Select (user => new SearchResult {  		id = user.UserID'  		name = user.DisplayName'  		iconfile = UserController.Instance.GetUserProfilePictureUrl (user.UserID' 32' 32)'  	}).ToList ();  	return Request.CreateResponse (HttpStatusCode.OK' results.OrderBy (sr => sr.name));  } catch (Exception exc) {  	Logger.Error (exc);  	return Request.CreateErrorResponse (HttpStatusCode.InternalServerError' exc);  }  
Magic Number,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,SearchUser,The following statement contains a magic number: try {  	var portalId = PortalController.GetEffectivePortalId (PortalSettings.PortalId);  	const int numResults = 5;  	// GetUsersAdvancedSearch doesn't accept a comma or a single quote in the query so we have to remove them for now. See issue 20224.  	q = q.Replace ("'"' "").Replace ("'"' "");  	if (q.Length == 0)  		return Request.CreateResponse<SearchResult> (HttpStatusCode.OK' null);  	var results = UserController.Instance.GetUsersBasicSearch (portalId' 0' numResults' "DisplayName"' true' "DisplayName"' q).Select (user => new SearchResult {  		id = user.UserID'  		name = user.DisplayName'  		iconfile = UserController.Instance.GetUserProfilePictureUrl (user.UserID' 32' 32)'  	}).ToList ();  	return Request.CreateResponse (HttpStatusCode.OK' results.OrderBy (sr => sr.name));  } catch (Exception exc) {  	Logger.Error (exc);  	return Request.CreateErrorResponse (HttpStatusCode.InternalServerError' exc);  }  
Magic Number,DotNetNuke.Web.InternalServices,ItemListServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ItemListServiceController.cs,ApplySort,The following statement contains a magic number: switch (sortOrder) {  case 1:  	// sort by a-z  	return items.OrderBy (item => item.Value).ToList ();  case 2:  	// sort by z-a  	return items.OrderByDescending (item => item.Value).ToList ();  default:  	// no sort  	return items;  }  
Magic Number,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,GetGroupedBasicViews,The following statement contains a magic number: foreach (var preview in previews) {  	//if the document type is user' then try to add user pic into preview's custom attributes.  	if (userSearchSource != null && preview.DocumentTypeName == userSearchSource.LocalizedName) {  		var match = GroupedBasicViewRegex.Match (preview.DocumentUrl);  		if (match.Success) {  			var userid = Convert.ToInt32 (match.Groups [2].Value);  			var user = UserController.Instance.GetUserById (portalId' userid);  			if (user != null) {  				preview.Attributes.Add ("Avatar"' user.Profile.PhotoURL);  			}  		}  	}  	var groupedResult = results.SingleOrDefault (g => g.DocumentTypeName == preview.DocumentTypeName);  	if (groupedResult != null) {  		if (!groupedResult.Results.Any (r => string.Equals (r.DocumentUrl' preview.DocumentUrl)))  			groupedResult.Results.Add (new BasicView {  				Title = preview.Title'  				Snippet = preview.Snippet'  				DocumentUrl = preview.DocumentUrl'  				Attributes = preview.Attributes  			});  	} else {  		results.Add (new GroupedBasicView (preview));  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,GetGroupedBasicViews,The following statement contains a magic number: if (userSearchSource != null && preview.DocumentTypeName == userSearchSource.LocalizedName) {  	var match = GroupedBasicViewRegex.Match (preview.DocumentUrl);  	if (match.Success) {  		var userid = Convert.ToInt32 (match.Groups [2].Value);  		var user = UserController.Instance.GetUserById (portalId' userid);  		if (user != null) {  			preview.Attributes.Add ("Avatar"' user.Profile.PhotoURL);  		}  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,GetGroupedBasicViews,The following statement contains a magic number: if (match.Success) {  	var userid = Convert.ToInt32 (match.Groups [2].Value);  	var user = UserController.Instance.GetUserById (portalId' userid);  	if (user != null) {  		preview.Attributes.Add ("Avatar"' user.Profile.PhotoURL);  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,Preview,The following statement contains a magic number: if (portalIds.Any () && searchTypeIds.Any () && (!string.IsNullOrEmpty (cleanedKeywords) || tags.Any ())) {  	var query = new SearchQuery {  		KeyWords = cleanedKeywords'  		Tags = tags'  		PortalIds = portalIds'  		SearchTypeIds = searchTypeIds'  		ModuleDefIds = moduleDefids'  		BeginModifiedTimeUtc = beginModifiedTimeUtc'  		PageIndex = 1'  		PageSize = 5'  		TitleSnippetLength = 40'  		BodySnippetLength = 100'  		CultureCode = culture'  		WildCardSearch = forceWild > 0  	};  	try {  		results = GetGroupedBasicViews (query' userSearchSource' PortalSettings.PortalId);  	} catch (Exception ex) {  		DotNetNuke.Services.Exceptions.Exceptions.LogException (ex);  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,Preview,The following statement contains a magic number: if (portalIds.Any () && searchTypeIds.Any () && (!string.IsNullOrEmpty (cleanedKeywords) || tags.Any ())) {  	var query = new SearchQuery {  		KeyWords = cleanedKeywords'  		Tags = tags'  		PortalIds = portalIds'  		SearchTypeIds = searchTypeIds'  		ModuleDefIds = moduleDefids'  		BeginModifiedTimeUtc = beginModifiedTimeUtc'  		PageIndex = 1'  		PageSize = 5'  		TitleSnippetLength = 40'  		BodySnippetLength = 100'  		CultureCode = culture'  		WildCardSearch = forceWild > 0  	};  	try {  		results = GetGroupedBasicViews (query' userSearchSource' PortalSettings.PortalId);  	} catch (Exception ex) {  		DotNetNuke.Services.Exceptions.Exceptions.LogException (ex);  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,Preview,The following statement contains a magic number: if (portalIds.Any () && searchTypeIds.Any () && (!string.IsNullOrEmpty (cleanedKeywords) || tags.Any ())) {  	var query = new SearchQuery {  		KeyWords = cleanedKeywords'  		Tags = tags'  		PortalIds = portalIds'  		SearchTypeIds = searchTypeIds'  		ModuleDefIds = moduleDefids'  		BeginModifiedTimeUtc = beginModifiedTimeUtc'  		PageIndex = 1'  		PageSize = 5'  		TitleSnippetLength = 40'  		BodySnippetLength = 100'  		CultureCode = culture'  		WildCardSearch = forceWild > 0  	};  	try {  		results = GetGroupedBasicViews (query' userSearchSource' PortalSettings.PortalId);  	} catch (Exception ex) {  		DotNetNuke.Services.Exceptions.Exceptions.LogException (ex);  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,Search,The following statement contains a magic number: if (portalIds.Any () && searchTypeIds.Any () && (!string.IsNullOrEmpty (cleanedKeywords) || tags.Any ())) {  	var query = new SearchQuery {  		KeyWords = cleanedKeywords'  		Tags = tags'  		PortalIds = portalIds'  		SearchTypeIds = searchTypeIds'  		ModuleDefIds = moduleDefids'  		BeginModifiedTimeUtc = beginModifiedTimeUtc'  		EndModifiedTimeUtc = beginModifiedTimeUtc > DateTime.MinValue ? DateTime.MaxValue : DateTime.MinValue'  		PageIndex = pageIndex'  		PageSize = pageSize'  		SortField = (SortFields)sortOption'  		TitleSnippetLength = 120'  		BodySnippetLength = 300'  		CultureCode = culture'  		WildCardSearch = IsWildCardEnabledForModule ()  	};  	try {  		results = GetGroupedDetailViews (query' userSearchTypeId' out totalHits' out more).ToList ();  	} catch (Exception ex) {  		DotNetNuke.Services.Exceptions.Exceptions.LogException (ex);  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,SearchServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\SearchServiceController.cs,Search,The following statement contains a magic number: if (portalIds.Any () && searchTypeIds.Any () && (!string.IsNullOrEmpty (cleanedKeywords) || tags.Any ())) {  	var query = new SearchQuery {  		KeyWords = cleanedKeywords'  		Tags = tags'  		PortalIds = portalIds'  		SearchTypeIds = searchTypeIds'  		ModuleDefIds = moduleDefids'  		BeginModifiedTimeUtc = beginModifiedTimeUtc'  		EndModifiedTimeUtc = beginModifiedTimeUtc > DateTime.MinValue ? DateTime.MaxValue : DateTime.MinValue'  		PageIndex = pageIndex'  		PageSize = pageSize'  		SortField = (SortFields)sortOption'  		TitleSnippetLength = 120'  		BodySnippetLength = 300'  		CultureCode = culture'  		WildCardSearch = IsWildCardEnabledForModule ()  	};  	try {  		results = GetGroupedDetailViews (query' userSearchTypeId' out totalHits' out more).ToList ();  	} catch (Exception ex) {  		DotNetNuke.Services.Exceptions.Exceptions.LogException (ex);  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: try {  	var extension = Path.GetExtension (fileName).ValueOrEmpty ().Replace ("."' "");  	result.FileIconUrl = IconController.GetFileIconUrl (extension);  	if (!string.IsNullOrEmpty (filter) && !filter.ToLower ().Contains (extension.ToLower ())) {  		result.Message = GetLocalizedString ("ExtensionNotAllowed");  		return result;  	}  	var folderManager = FolderManager.Instance;  	var effectivePortalId = isHostPortal ? Null.NullInteger : portalId;  	// Check if this is a User Folder                  	int userId;  	var folderInfo = folderManager.GetFolder (effectivePortalId' folder);  	if (IsUserFolder (folder' out userId)) {  		var user = UserController.GetUserById (effectivePortalId' userId);  		if (user != null) {  			folderInfo = folderManager.GetUserFolder (user);  		}  	}  	if (!FolderPermissionController.HasFolderPermission (portalId' folder' "WRITE") && !FolderPermissionController.HasFolderPermission (portalId' folder' "ADD")) {  		result.Message = GetLocalizedString ("NoPermission");  		return result;  	}  	IFileInfo file;  	if (!overwrite && FileManager.Instance.FileExists (folderInfo' fileName' true)) {  		result.Message = GetLocalizedString ("AlreadyExists");  		result.AlreadyExists = true;  		file = FileManager.Instance.GetFile (folderInfo' fileName' true);  		result.FileId = file.FileId;  	} else {  		file = FileManager.Instance.AddFile (folderInfo' fileName' stream' true' false' FileContentTypeManager.Instance.GetContentType (Path.GetExtension (fileName))' userInfo.UserID);  		if (extract && extension.ToLower () == "zip") {  			var destinationFolder = FolderManager.Instance.GetFolder (file.FolderId);  			var invalidFiles = new List<string> ();  			var filesCount = FileManager.Instance.UnzipFile (file' destinationFolder' invalidFiles);  			var invalidFilesJson = invalidFiles.Count > 0 ? string.Format ("\"{0}\""' string.Join ("\"'\""' invalidFiles)) : string.Empty;  			result.Prompt = string.Format ("{{\"invalidFiles\":[{0}]' \"totalCount\": {1}}}"' invalidFilesJson' filesCount);  		}  		result.FileId = file.FileId;  	}  	fileContent = FileManager.Instance.GetFileContent (file);  	var path = GetUrl (result.FileId);  	using (reader = new BinaryReader (fileContent)) {  		Size size;  		if (IsImage (fileName)) {  			try {  				size = ImageHeader.GetDimensions (reader);  			} catch (ArgumentException exc) {  				Logger.Warn ("Unable to get image dimensions for image file"' exc);  				size = new Size (32' 32);  			}  		} else {  			size = new Size (32' 32);  		}  		result.Orientation = size.Orientation ();  	}  	result.Path = result.FileId > 0 ? path : string.Empty;  	result.FileName = fileName;  	if (extract && extension.ToLower () == "zip") {  		FileManager.Instance.DeleteFile (file);  	}  	return result;  } catch (InvalidFileExtensionException) {  	result.Message = GetLocalizedString ("ExtensionNotAllowed");  	return result;  } catch (Exception exe) {  	Logger.Error (exe);  	result.Message = exe.Message;  	return result;  } finally {  	if (reader != null) {  		reader.Close ();  		reader.Dispose ();  	}  	if (fileContent != null) {  		fileContent.Close ();  		fileContent.Dispose ();  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: try {  	var extension = Path.GetExtension (fileName).ValueOrEmpty ().Replace ("."' "");  	result.FileIconUrl = IconController.GetFileIconUrl (extension);  	if (!string.IsNullOrEmpty (filter) && !filter.ToLower ().Contains (extension.ToLower ())) {  		result.Message = GetLocalizedString ("ExtensionNotAllowed");  		return result;  	}  	var folderManager = FolderManager.Instance;  	var effectivePortalId = isHostPortal ? Null.NullInteger : portalId;  	// Check if this is a User Folder                  	int userId;  	var folderInfo = folderManager.GetFolder (effectivePortalId' folder);  	if (IsUserFolder (folder' out userId)) {  		var user = UserController.GetUserById (effectivePortalId' userId);  		if (user != null) {  			folderInfo = folderManager.GetUserFolder (user);  		}  	}  	if (!FolderPermissionController.HasFolderPermission (portalId' folder' "WRITE") && !FolderPermissionController.HasFolderPermission (portalId' folder' "ADD")) {  		result.Message = GetLocalizedString ("NoPermission");  		return result;  	}  	IFileInfo file;  	if (!overwrite && FileManager.Instance.FileExists (folderInfo' fileName' true)) {  		result.Message = GetLocalizedString ("AlreadyExists");  		result.AlreadyExists = true;  		file = FileManager.Instance.GetFile (folderInfo' fileName' true);  		result.FileId = file.FileId;  	} else {  		file = FileManager.Instance.AddFile (folderInfo' fileName' stream' true' false' FileContentTypeManager.Instance.GetContentType (Path.GetExtension (fileName))' userInfo.UserID);  		if (extract && extension.ToLower () == "zip") {  			var destinationFolder = FolderManager.Instance.GetFolder (file.FolderId);  			var invalidFiles = new List<string> ();  			var filesCount = FileManager.Instance.UnzipFile (file' destinationFolder' invalidFiles);  			var invalidFilesJson = invalidFiles.Count > 0 ? string.Format ("\"{0}\""' string.Join ("\"'\""' invalidFiles)) : string.Empty;  			result.Prompt = string.Format ("{{\"invalidFiles\":[{0}]' \"totalCount\": {1}}}"' invalidFilesJson' filesCount);  		}  		result.FileId = file.FileId;  	}  	fileContent = FileManager.Instance.GetFileContent (file);  	var path = GetUrl (result.FileId);  	using (reader = new BinaryReader (fileContent)) {  		Size size;  		if (IsImage (fileName)) {  			try {  				size = ImageHeader.GetDimensions (reader);  			} catch (ArgumentException exc) {  				Logger.Warn ("Unable to get image dimensions for image file"' exc);  				size = new Size (32' 32);  			}  		} else {  			size = new Size (32' 32);  		}  		result.Orientation = size.Orientation ();  	}  	result.Path = result.FileId > 0 ? path : string.Empty;  	result.FileName = fileName;  	if (extract && extension.ToLower () == "zip") {  		FileManager.Instance.DeleteFile (file);  	}  	return result;  } catch (InvalidFileExtensionException) {  	result.Message = GetLocalizedString ("ExtensionNotAllowed");  	return result;  } catch (Exception exe) {  	Logger.Error (exe);  	result.Message = exe.Message;  	return result;  } finally {  	if (reader != null) {  		reader.Close ();  		reader.Dispose ();  	}  	if (fileContent != null) {  		fileContent.Close ();  		fileContent.Dispose ();  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: try {  	var extension = Path.GetExtension (fileName).ValueOrEmpty ().Replace ("."' "");  	result.FileIconUrl = IconController.GetFileIconUrl (extension);  	if (!string.IsNullOrEmpty (filter) && !filter.ToLower ().Contains (extension.ToLower ())) {  		result.Message = GetLocalizedString ("ExtensionNotAllowed");  		return result;  	}  	var folderManager = FolderManager.Instance;  	var effectivePortalId = isHostPortal ? Null.NullInteger : portalId;  	// Check if this is a User Folder                  	int userId;  	var folderInfo = folderManager.GetFolder (effectivePortalId' folder);  	if (IsUserFolder (folder' out userId)) {  		var user = UserController.GetUserById (effectivePortalId' userId);  		if (user != null) {  			folderInfo = folderManager.GetUserFolder (user);  		}  	}  	if (!FolderPermissionController.HasFolderPermission (portalId' folder' "WRITE") && !FolderPermissionController.HasFolderPermission (portalId' folder' "ADD")) {  		result.Message = GetLocalizedString ("NoPermission");  		return result;  	}  	IFileInfo file;  	if (!overwrite && FileManager.Instance.FileExists (folderInfo' fileName' true)) {  		result.Message = GetLocalizedString ("AlreadyExists");  		result.AlreadyExists = true;  		file = FileManager.Instance.GetFile (folderInfo' fileName' true);  		result.FileId = file.FileId;  	} else {  		file = FileManager.Instance.AddFile (folderInfo' fileName' stream' true' false' FileContentTypeManager.Instance.GetContentType (Path.GetExtension (fileName))' userInfo.UserID);  		if (extract && extension.ToLower () == "zip") {  			var destinationFolder = FolderManager.Instance.GetFolder (file.FolderId);  			var invalidFiles = new List<string> ();  			var filesCount = FileManager.Instance.UnzipFile (file' destinationFolder' invalidFiles);  			var invalidFilesJson = invalidFiles.Count > 0 ? string.Format ("\"{0}\""' string.Join ("\"'\""' invalidFiles)) : string.Empty;  			result.Prompt = string.Format ("{{\"invalidFiles\":[{0}]' \"totalCount\": {1}}}"' invalidFilesJson' filesCount);  		}  		result.FileId = file.FileId;  	}  	fileContent = FileManager.Instance.GetFileContent (file);  	var path = GetUrl (result.FileId);  	using (reader = new BinaryReader (fileContent)) {  		Size size;  		if (IsImage (fileName)) {  			try {  				size = ImageHeader.GetDimensions (reader);  			} catch (ArgumentException exc) {  				Logger.Warn ("Unable to get image dimensions for image file"' exc);  				size = new Size (32' 32);  			}  		} else {  			size = new Size (32' 32);  		}  		result.Orientation = size.Orientation ();  	}  	result.Path = result.FileId > 0 ? path : string.Empty;  	result.FileName = fileName;  	if (extract && extension.ToLower () == "zip") {  		FileManager.Instance.DeleteFile (file);  	}  	return result;  } catch (InvalidFileExtensionException) {  	result.Message = GetLocalizedString ("ExtensionNotAllowed");  	return result;  } catch (Exception exe) {  	Logger.Error (exe);  	result.Message = exe.Message;  	return result;  } finally {  	if (reader != null) {  		reader.Close ();  		reader.Dispose ();  	}  	if (fileContent != null) {  		fileContent.Close ();  		fileContent.Dispose ();  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: try {  	var extension = Path.GetExtension (fileName).ValueOrEmpty ().Replace ("."' "");  	result.FileIconUrl = IconController.GetFileIconUrl (extension);  	if (!string.IsNullOrEmpty (filter) && !filter.ToLower ().Contains (extension.ToLower ())) {  		result.Message = GetLocalizedString ("ExtensionNotAllowed");  		return result;  	}  	var folderManager = FolderManager.Instance;  	var effectivePortalId = isHostPortal ? Null.NullInteger : portalId;  	// Check if this is a User Folder                  	int userId;  	var folderInfo = folderManager.GetFolder (effectivePortalId' folder);  	if (IsUserFolder (folder' out userId)) {  		var user = UserController.GetUserById (effectivePortalId' userId);  		if (user != null) {  			folderInfo = folderManager.GetUserFolder (user);  		}  	}  	if (!FolderPermissionController.HasFolderPermission (portalId' folder' "WRITE") && !FolderPermissionController.HasFolderPermission (portalId' folder' "ADD")) {  		result.Message = GetLocalizedString ("NoPermission");  		return result;  	}  	IFileInfo file;  	if (!overwrite && FileManager.Instance.FileExists (folderInfo' fileName' true)) {  		result.Message = GetLocalizedString ("AlreadyExists");  		result.AlreadyExists = true;  		file = FileManager.Instance.GetFile (folderInfo' fileName' true);  		result.FileId = file.FileId;  	} else {  		file = FileManager.Instance.AddFile (folderInfo' fileName' stream' true' false' FileContentTypeManager.Instance.GetContentType (Path.GetExtension (fileName))' userInfo.UserID);  		if (extract && extension.ToLower () == "zip") {  			var destinationFolder = FolderManager.Instance.GetFolder (file.FolderId);  			var invalidFiles = new List<string> ();  			var filesCount = FileManager.Instance.UnzipFile (file' destinationFolder' invalidFiles);  			var invalidFilesJson = invalidFiles.Count > 0 ? string.Format ("\"{0}\""' string.Join ("\"'\""' invalidFiles)) : string.Empty;  			result.Prompt = string.Format ("{{\"invalidFiles\":[{0}]' \"totalCount\": {1}}}"' invalidFilesJson' filesCount);  		}  		result.FileId = file.FileId;  	}  	fileContent = FileManager.Instance.GetFileContent (file);  	var path = GetUrl (result.FileId);  	using (reader = new BinaryReader (fileContent)) {  		Size size;  		if (IsImage (fileName)) {  			try {  				size = ImageHeader.GetDimensions (reader);  			} catch (ArgumentException exc) {  				Logger.Warn ("Unable to get image dimensions for image file"' exc);  				size = new Size (32' 32);  			}  		} else {  			size = new Size (32' 32);  		}  		result.Orientation = size.Orientation ();  	}  	result.Path = result.FileId > 0 ? path : string.Empty;  	result.FileName = fileName;  	if (extract && extension.ToLower () == "zip") {  		FileManager.Instance.DeleteFile (file);  	}  	return result;  } catch (InvalidFileExtensionException) {  	result.Message = GetLocalizedString ("ExtensionNotAllowed");  	return result;  } catch (Exception exe) {  	Logger.Error (exe);  	result.Message = exe.Message;  	return result;  } finally {  	if (reader != null) {  		reader.Close ();  		reader.Dispose ();  	}  	if (fileContent != null) {  		fileContent.Close ();  		fileContent.Dispose ();  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: using (reader = new BinaryReader (fileContent)) {  	Size size;  	if (IsImage (fileName)) {  		try {  			size = ImageHeader.GetDimensions (reader);  		} catch (ArgumentException exc) {  			Logger.Warn ("Unable to get image dimensions for image file"' exc);  			size = new Size (32' 32);  		}  	} else {  		size = new Size (32' 32);  	}  	result.Orientation = size.Orientation ();  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: using (reader = new BinaryReader (fileContent)) {  	Size size;  	if (IsImage (fileName)) {  		try {  			size = ImageHeader.GetDimensions (reader);  		} catch (ArgumentException exc) {  			Logger.Warn ("Unable to get image dimensions for image file"' exc);  			size = new Size (32' 32);  		}  	} else {  		size = new Size (32' 32);  	}  	result.Orientation = size.Orientation ();  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: using (reader = new BinaryReader (fileContent)) {  	Size size;  	if (IsImage (fileName)) {  		try {  			size = ImageHeader.GetDimensions (reader);  		} catch (ArgumentException exc) {  			Logger.Warn ("Unable to get image dimensions for image file"' exc);  			size = new Size (32' 32);  		}  	} else {  		size = new Size (32' 32);  	}  	result.Orientation = size.Orientation ();  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: using (reader = new BinaryReader (fileContent)) {  	Size size;  	if (IsImage (fileName)) {  		try {  			size = ImageHeader.GetDimensions (reader);  		} catch (ArgumentException exc) {  			Logger.Warn ("Unable to get image dimensions for image file"' exc);  			size = new Size (32' 32);  		}  	} else {  		size = new Size (32' 32);  	}  	result.Orientation = size.Orientation ();  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: if (IsImage (fileName)) {  	try {  		size = ImageHeader.GetDimensions (reader);  	} catch (ArgumentException exc) {  		Logger.Warn ("Unable to get image dimensions for image file"' exc);  		size = new Size (32' 32);  	}  } else {  	size = new Size (32' 32);  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: if (IsImage (fileName)) {  	try {  		size = ImageHeader.GetDimensions (reader);  	} catch (ArgumentException exc) {  		Logger.Warn ("Unable to get image dimensions for image file"' exc);  		size = new Size (32' 32);  	}  } else {  	size = new Size (32' 32);  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: if (IsImage (fileName)) {  	try {  		size = ImageHeader.GetDimensions (reader);  	} catch (ArgumentException exc) {  		Logger.Warn ("Unable to get image dimensions for image file"' exc);  		size = new Size (32' 32);  	}  } else {  	size = new Size (32' 32);  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: if (IsImage (fileName)) {  	try {  		size = ImageHeader.GetDimensions (reader);  	} catch (ArgumentException exc) {  		Logger.Warn ("Unable to get image dimensions for image file"' exc);  		size = new Size (32' 32);  	}  } else {  	size = new Size (32' 32);  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: try {  	size = ImageHeader.GetDimensions (reader);  } catch (ArgumentException exc) {  	Logger.Warn ("Unable to get image dimensions for image file"' exc);  	size = new Size (32' 32);  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: try {  	size = ImageHeader.GetDimensions (reader);  } catch (ArgumentException exc) {  	Logger.Warn ("Unable to get image dimensions for image file"' exc);  	size = new Size (32' 32);  }  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: size = new Size (32' 32);  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: size = new Size (32' 32);  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: size = new Size (32' 32);  
Magic Number,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFile,The following statement contains a magic number: size = new Size (32' 32);  
Magic Number,DotNetNuke.Web.InternalServices,ModuleServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ModuleServiceController.cs,MoveModule,The following statement contains a magic number: if (moduleOrder > 0) {  	//DNN-7099: the deleted modules won't show in page' so when the module index calculated from client' it will lost the   	//index count of deleted modules and will cause order issue.  	var deletedModules = ModuleController.Instance.GetTabModules (postData.TabId).Values.Where (m => m.IsDeleted);  	foreach (var module in deletedModules) {  		if (module.ModuleOrder < moduleOrder && module.PaneName == postData.Pane) {  			moduleOrder += 2;  		}  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,ModuleServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ModuleServiceController.cs,MoveModule,The following statement contains a magic number: foreach (var module in deletedModules) {  	if (module.ModuleOrder < moduleOrder && module.PaneName == postData.Pane) {  		moduleOrder += 2;  	}  }  
Magic Number,DotNetNuke.Web.InternalServices,ModuleServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ModuleServiceController.cs,MoveModule,The following statement contains a magic number: if (module.ModuleOrder < moduleOrder && module.PaneName == postData.Pane) {  	moduleOrder += 2;  }  
Magic Number,DotNetNuke.Web.InternalServices,ModuleServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ModuleServiceController.cs,MoveModule,The following statement contains a magic number: moduleOrder += 2;  
Magic Number,DotNetNuke.Web.InternalServices,NotificationsServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\NotificationsServiceController.cs,GetToasts,The following statement contains a magic number: return Request.CreateResponse (HttpStatusCode.OK' new {  	Success = true'  	Toasts = convertedObjects.Take (3)  });  
Magic Number,DotNetNuke.Web.InternalServices,MessagingServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\MessagingServiceController.cs,Search,The following statement contains a magic number: try {  	var portalId = PortalController.GetEffectivePortalId (PortalSettings.PortalId);  	var isAdmin = UserInfo.IsSuperUser || UserInfo.IsInRole ("Administrators");  	const int numResults = 10;  	// GetUsersAdvancedSearch doesn't accept a comma or a single quote in the query so we have to remove them for now. See issue 20224.  	q = q.Replace ("'"' "").Replace ("'"' "");  	if (q.Length == 0)  		return Request.CreateResponse<SearchResult> (HttpStatusCode.OK' null);  	var results = UserController.Instance.GetUsersBasicSearch (portalId' 0' numResults' "DisplayName"' true' "DisplayName"' q).Select (user => new SearchResult {  		id = "user-" + user.UserID'  		name = user.DisplayName'  		iconfile = UserController.Instance.GetUserProfilePictureUrl (user.UserID' 32' 32)  	}).ToList ();  	//Roles should be visible to Administrators or User in the Role.  	var roles = RoleController.Instance.GetRolesBasicSearch (portalId' numResults' q);  	results.AddRange (from roleInfo in roles  	where isAdmin || UserInfo.Social.Roles.SingleOrDefault (ur => ur.RoleID == roleInfo.RoleID && ur.IsOwner) != null  	select new SearchResult {  		id = "role-" + roleInfo.RoleID'  		name = roleInfo.RoleName'  		iconfile = TestableGlobals.Instance.ResolveUrl (string.IsNullOrEmpty (roleInfo.IconFile) ? "~/images/no_avatar.gif" : PortalSettings.HomeDirectory.TrimEnd ('/') + "/" + roleInfo.IconFile)  	});  	return Request.CreateResponse (HttpStatusCode.OK' results.OrderBy (sr => sr.name));  } catch (Exception exc) {  	Logger.Error (exc);  	return Request.CreateErrorResponse (HttpStatusCode.InternalServerError' exc);  }  
Magic Number,DotNetNuke.Web.InternalServices,MessagingServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\MessagingServiceController.cs,Search,The following statement contains a magic number: try {  	var portalId = PortalController.GetEffectivePortalId (PortalSettings.PortalId);  	var isAdmin = UserInfo.IsSuperUser || UserInfo.IsInRole ("Administrators");  	const int numResults = 10;  	// GetUsersAdvancedSearch doesn't accept a comma or a single quote in the query so we have to remove them for now. See issue 20224.  	q = q.Replace ("'"' "").Replace ("'"' "");  	if (q.Length == 0)  		return Request.CreateResponse<SearchResult> (HttpStatusCode.OK' null);  	var results = UserController.Instance.GetUsersBasicSearch (portalId' 0' numResults' "DisplayName"' true' "DisplayName"' q).Select (user => new SearchResult {  		id = "user-" + user.UserID'  		name = user.DisplayName'  		iconfile = UserController.Instance.GetUserProfilePictureUrl (user.UserID' 32' 32)  	}).ToList ();  	//Roles should be visible to Administrators or User in the Role.  	var roles = RoleController.Instance.GetRolesBasicSearch (portalId' numResults' q);  	results.AddRange (from roleInfo in roles  	where isAdmin || UserInfo.Social.Roles.SingleOrDefault (ur => ur.RoleID == roleInfo.RoleID && ur.IsOwner) != null  	select new SearchResult {  		id = "role-" + roleInfo.RoleID'  		name = roleInfo.RoleName'  		iconfile = TestableGlobals.Instance.ResolveUrl (string.IsNullOrEmpty (roleInfo.IconFile) ? "~/images/no_avatar.gif" : PortalSettings.HomeDirectory.TrimEnd ('/') + "/" + roleInfo.IconFile)  	});  	return Request.CreateResponse (HttpStatusCode.OK' results.OrderBy (sr => sr.name));  } catch (Exception exc) {  	Logger.Error (exc);  	return Request.CreateErrorResponse (HttpStatusCode.InternalServerError' exc);  }  
Magic Number,DotNetNuke.Web.InternalServices,MessagingServiceController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\MessagingServiceController.cs,Search,The following statement contains a magic number: try {  	var portalId = PortalController.GetEffectivePortalId (PortalSettings.PortalId);  	var isAdmin = UserInfo.IsSuperUser || UserInfo.IsInRole ("Administrators");  	const int numResults = 10;  	// GetUsersAdvancedSearch doesn't accept a comma or a single quote in the query so we have to remove them for now. See issue 20224.  	q = q.Replace ("'"' "").Replace ("'"' "");  	if (q.Length == 0)  		return Request.CreateResponse<SearchResult> (HttpStatusCode.OK' null);  	var results = UserController.Instance.GetUsersBasicSearch (portalId' 0' numResults' "DisplayName"' true' "DisplayName"' q).Select (user => new SearchResult {  		id = "user-" + user.UserID'  		name = user.DisplayName'  		iconfile = UserController.Instance.GetUserProfilePictureUrl (user.UserID' 32' 32)  	}).ToList ();  	//Roles should be visible to Administrators or User in the Role.  	var roles = RoleController.Instance.GetRolesBasicSearch (portalId' numResults' q);  	results.AddRange (from roleInfo in roles  	where isAdmin || UserInfo.Social.Roles.SingleOrDefault (ur => ur.RoleID == roleInfo.RoleID && ur.IsOwner) != null  	select new SearchResult {  		id = "role-" + roleInfo.RoleID'  		name = roleInfo.RoleName'  		iconfile = TestableGlobals.Instance.ResolveUrl (string.IsNullOrEmpty (roleInfo.IconFile) ? "~/images/no_avatar.gif" : PortalSettings.HomeDirectory.TrimEnd ('/') + "/" + roleInfo.IconFile)  	});  	return Request.CreateResponse (HttpStatusCode.OK' results.OrderBy (sr => sr.name));  } catch (Exception exc) {  	Logger.Error (exc);  	return Request.CreateErrorResponse (HttpStatusCode.InternalServerError' exc);  }  
Magic Number,DotNetNuke.Web.InternalServices,UserFileController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\UserFileController.cs,GetFileSize,The following statement contains a magic number: if (biggerThanAMegabyte) {  	size = (size / 1024);  }  
Magic Number,DotNetNuke.Web.InternalServices,UserFileController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\UserFileController.cs,GetFileSize,The following statement contains a magic number: size = (size / 1024);  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnFileUploadOptions,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileUploadOptions.cs,DnnFileUploadOptions,The following statement contains a magic number: Resources = new DnnFileUploadResources {  	Title = Utilities.GetLocalizedString ("FileUpload.Title.Text")'  	DecompressLabel = Utilities.GetLocalizedString ("FileUpload.DecompressLabel.Text")'  	UploadToFolderLabel = Utilities.GetLocalizedString ("FileUpload.UploadToFolderLabel.Text")'  	DragAndDropAreaTitle = Utilities.GetLocalizedString ("FileUpload.DragAndDropAreaTitle.Text")'  	UploadFileMethod = Utilities.GetLocalizedString ("FileUpload.UploadFileMethod.Text")'  	UploadFromWebMethod = Utilities.GetLocalizedString ("FileUpload.UploadFromWebMethod.Text")'  	CloseButtonText = Utilities.GetLocalizedString ("FileUpload.CloseButton.Text")'  	UploadFromWebButtonText = Utilities.GetLocalizedString ("FileUpload.UploadFromWebButton.Text")'  	DecompressingFile = Utilities.GetLocalizedString ("FileUpload.DecompressingFile.Text")'  	FileIsTooLarge = string.Format (Utilities.GetLocalizedString ("FileUpload.FileIsTooLarge.Error") + " Mb"' (MaxFileSize / (1024 * 1024)).ToString (CultureInfo.InvariantCulture))'  	FileUploadCancelled = Utilities.GetLocalizedString ("FileUpload.FileUploadCancelled.Error")'  	FileUploadFailed = Utilities.GetLocalizedString ("FileUpload.FileUploadFailed.Error")'  	TooManyFiles = Utilities.GetLocalizedString ("FileUpload.TooManyFiles.Error")'  	InvalidFileExtensions = Utilities.GetLocalizedString ("FileUpload.InvalidFileExtensions.Error")'  	FileUploaded = Utilities.GetLocalizedString ("FileUpload.FileUploaded.Text")'  	EmptyFileUpload = Utilities.GetLocalizedString ("FileUpload.EmptyFileUpload.Error")'  	FileAlreadyExists = Utilities.GetLocalizedString ("FileUpload.FileAlreadyExists.Error")'  	ErrorDialogTitle = Utilities.GetLocalizedString ("FileUpload.ErrorDialogTitle.Text")'  	UploadStopped = Utilities.GetLocalizedString ("FileUpload.UploadStopped.Text")'  	UrlTooltip = Utilities.GetLocalizedString ("FileUpload.UrlTooltip.Text")'  	KeepButtonText = Utilities.GetLocalizedString ("FileUpload.KeepButton.Text")'  	ReplaceButtonText = Utilities.GetLocalizedString ("FileUpload.ReplaceButton.Text")'  	UnzipFilePromptTitle = Utilities.GetLocalizedString ("FileUpload.UnzipFilePromptTitle.Text")'  	UnzipFileFailedPromptBody = Utilities.GetLocalizedString ("FileUpload.UnzipFileFailedPromptBody.Text")'  	UnzipFileSuccessPromptBody = Utilities.GetLocalizedString ("FileUpload.UnzipFileSuccessPromptBody.Text")  };  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnFileUploadOptions,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileUploadOptions.cs,DnnFileUploadOptions,The following statement contains a magic number: Resources = new DnnFileUploadResources {  	Title = Utilities.GetLocalizedString ("FileUpload.Title.Text")'  	DecompressLabel = Utilities.GetLocalizedString ("FileUpload.DecompressLabel.Text")'  	UploadToFolderLabel = Utilities.GetLocalizedString ("FileUpload.UploadToFolderLabel.Text")'  	DragAndDropAreaTitle = Utilities.GetLocalizedString ("FileUpload.DragAndDropAreaTitle.Text")'  	UploadFileMethod = Utilities.GetLocalizedString ("FileUpload.UploadFileMethod.Text")'  	UploadFromWebMethod = Utilities.GetLocalizedString ("FileUpload.UploadFromWebMethod.Text")'  	CloseButtonText = Utilities.GetLocalizedString ("FileUpload.CloseButton.Text")'  	UploadFromWebButtonText = Utilities.GetLocalizedString ("FileUpload.UploadFromWebButton.Text")'  	DecompressingFile = Utilities.GetLocalizedString ("FileUpload.DecompressingFile.Text")'  	FileIsTooLarge = string.Format (Utilities.GetLocalizedString ("FileUpload.FileIsTooLarge.Error") + " Mb"' (MaxFileSize / (1024 * 1024)).ToString (CultureInfo.InvariantCulture))'  	FileUploadCancelled = Utilities.GetLocalizedString ("FileUpload.FileUploadCancelled.Error")'  	FileUploadFailed = Utilities.GetLocalizedString ("FileUpload.FileUploadFailed.Error")'  	TooManyFiles = Utilities.GetLocalizedString ("FileUpload.TooManyFiles.Error")'  	InvalidFileExtensions = Utilities.GetLocalizedString ("FileUpload.InvalidFileExtensions.Error")'  	FileUploaded = Utilities.GetLocalizedString ("FileUpload.FileUploaded.Text")'  	EmptyFileUpload = Utilities.GetLocalizedString ("FileUpload.EmptyFileUpload.Error")'  	FileAlreadyExists = Utilities.GetLocalizedString ("FileUpload.FileAlreadyExists.Error")'  	ErrorDialogTitle = Utilities.GetLocalizedString ("FileUpload.ErrorDialogTitle.Text")'  	UploadStopped = Utilities.GetLocalizedString ("FileUpload.UploadStopped.Text")'  	UrlTooltip = Utilities.GetLocalizedString ("FileUpload.UrlTooltip.Text")'  	KeepButtonText = Utilities.GetLocalizedString ("FileUpload.KeepButton.Text")'  	ReplaceButtonText = Utilities.GetLocalizedString ("FileUpload.ReplaceButton.Text")'  	UnzipFilePromptTitle = Utilities.GetLocalizedString ("FileUpload.UnzipFilePromptTitle.Text")'  	UnzipFileFailedPromptBody = Utilities.GetLocalizedString ("FileUpload.UnzipFileFailedPromptBody.Text")'  	UnzipFileSuccessPromptBody = Utilities.GetLocalizedString ("FileUpload.UnzipFileSuccessPromptBody.Text")  };  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnFileUpload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileUpload.cs,RegisterClientScript,The following statement contains a magic number: ClientResourceManager.RegisterScript (page' "~/Resources/Shared/scripts/dnn.WebResourceUrl.js"' FileOrder.Js.DefaultPriority + 2);  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnFileUpload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileUpload.cs,RegisterClientScript,The following statement contains a magic number: ClientResourceManager.RegisterScript (page' "~/Resources/Shared/scripts/dnn.jquery.extensions.js"' FileOrder.Js.DefaultPriority + 3);  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnFileUpload,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFileUpload.cs,RegisterClientScript,The following statement contains a magic number: ClientResourceManager.RegisterScript (page' "~/Resources/Shared/Components/FileUpload/dnn.FileUpload.js"' FileOrder.Js.DefaultPriority + 4);  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnFormPasswordItem,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFormPasswordItem.cs,CreateControlInternal,The following statement contains a magic number: _password = new TextBox () {  	ID = ID + "_TextBox"'  	TextMode = TextBoxMode.Password'  	CssClass = TextBoxCssClass'  	MaxLength = 39'  	//ensure password cannot be cut if too long  	Text = Convert.ToString (Value)  // Load from ControlState  };  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnFilePickerUploader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFilePickerUploader.cs,OnLoad,The following statement contains a magic number: if (UrlUtils.InPopUp ()) {  	FileUploadControl.Width = 630;  	FileUploadControl.Height = 400;  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnFilePickerUploader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFilePickerUploader.cs,OnLoad,The following statement contains a magic number: if (UrlUtils.InPopUp ()) {  	FileUploadControl.Width = 630;  	FileUploadControl.Height = 400;  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnFilePickerUploader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFilePickerUploader.cs,OnLoad,The following statement contains a magic number: FileUploadControl.Width = 630;  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnFilePickerUploader,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFilePickerUploader.cs,OnLoad,The following statement contains a magic number: FileUploadControl.Height = 400;  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnMemberListControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnMemberListControl.cs,Render,The following statement contains a magic number: if (users.Rows.Count > 0) {  	foreach (DataRow user in users.Rows) {  		//Row Header  		writer.Write (string.IsNullOrEmpty (AlternatingRowHeaderTemplate) || row % 2 == 0 ? RowHeaderTemplate : AlternatingRowHeaderTemplate);  		var tokenReplace = new TokenReplace ();  		var tokenKeyValues = new Dictionary<string' string> ();  		foreach (var col in user.Table.Columns.Cast<DataColumn> ().Where (col => !tokenKeyValues.ContainsKey (col.ColumnName))) {  			tokenKeyValues.Add (col.ColumnName' user [col.ColumnName].ToString ());  		}  		var listItem = string.IsNullOrEmpty (AlternatingItemTemplate) || row % 2 == 0 ? ItemTemplate : AlternatingItemTemplate;  		listItem = tokenReplace.ReplaceEnvironmentTokens (listItem' tokenKeyValues' "Member");  		writer.Write (listItem);  		//Row Footer  		writer.Write (string.IsNullOrEmpty (AlternatingRowFooterTemplate) || row % 2 == 0 ? RowFooterTemplate : AlternatingRowFooterTemplate);  		row++;  	}  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnMemberListControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnMemberListControl.cs,Render,The following statement contains a magic number: if (users.Rows.Count > 0) {  	foreach (DataRow user in users.Rows) {  		//Row Header  		writer.Write (string.IsNullOrEmpty (AlternatingRowHeaderTemplate) || row % 2 == 0 ? RowHeaderTemplate : AlternatingRowHeaderTemplate);  		var tokenReplace = new TokenReplace ();  		var tokenKeyValues = new Dictionary<string' string> ();  		foreach (var col in user.Table.Columns.Cast<DataColumn> ().Where (col => !tokenKeyValues.ContainsKey (col.ColumnName))) {  			tokenKeyValues.Add (col.ColumnName' user [col.ColumnName].ToString ());  		}  		var listItem = string.IsNullOrEmpty (AlternatingItemTemplate) || row % 2 == 0 ? ItemTemplate : AlternatingItemTemplate;  		listItem = tokenReplace.ReplaceEnvironmentTokens (listItem' tokenKeyValues' "Member");  		writer.Write (listItem);  		//Row Footer  		writer.Write (string.IsNullOrEmpty (AlternatingRowFooterTemplate) || row % 2 == 0 ? RowFooterTemplate : AlternatingRowFooterTemplate);  		row++;  	}  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnMemberListControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnMemberListControl.cs,Render,The following statement contains a magic number: if (users.Rows.Count > 0) {  	foreach (DataRow user in users.Rows) {  		//Row Header  		writer.Write (string.IsNullOrEmpty (AlternatingRowHeaderTemplate) || row % 2 == 0 ? RowHeaderTemplate : AlternatingRowHeaderTemplate);  		var tokenReplace = new TokenReplace ();  		var tokenKeyValues = new Dictionary<string' string> ();  		foreach (var col in user.Table.Columns.Cast<DataColumn> ().Where (col => !tokenKeyValues.ContainsKey (col.ColumnName))) {  			tokenKeyValues.Add (col.ColumnName' user [col.ColumnName].ToString ());  		}  		var listItem = string.IsNullOrEmpty (AlternatingItemTemplate) || row % 2 == 0 ? ItemTemplate : AlternatingItemTemplate;  		listItem = tokenReplace.ReplaceEnvironmentTokens (listItem' tokenKeyValues' "Member");  		writer.Write (listItem);  		//Row Footer  		writer.Write (string.IsNullOrEmpty (AlternatingRowFooterTemplate) || row % 2 == 0 ? RowFooterTemplate : AlternatingRowFooterTemplate);  		row++;  	}  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnMemberListControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnMemberListControl.cs,Render,The following statement contains a magic number: foreach (DataRow user in users.Rows) {  	//Row Header  	writer.Write (string.IsNullOrEmpty (AlternatingRowHeaderTemplate) || row % 2 == 0 ? RowHeaderTemplate : AlternatingRowHeaderTemplate);  	var tokenReplace = new TokenReplace ();  	var tokenKeyValues = new Dictionary<string' string> ();  	foreach (var col in user.Table.Columns.Cast<DataColumn> ().Where (col => !tokenKeyValues.ContainsKey (col.ColumnName))) {  		tokenKeyValues.Add (col.ColumnName' user [col.ColumnName].ToString ());  	}  	var listItem = string.IsNullOrEmpty (AlternatingItemTemplate) || row % 2 == 0 ? ItemTemplate : AlternatingItemTemplate;  	listItem = tokenReplace.ReplaceEnvironmentTokens (listItem' tokenKeyValues' "Member");  	writer.Write (listItem);  	//Row Footer  	writer.Write (string.IsNullOrEmpty (AlternatingRowFooterTemplate) || row % 2 == 0 ? RowFooterTemplate : AlternatingRowFooterTemplate);  	row++;  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnMemberListControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnMemberListControl.cs,Render,The following statement contains a magic number: foreach (DataRow user in users.Rows) {  	//Row Header  	writer.Write (string.IsNullOrEmpty (AlternatingRowHeaderTemplate) || row % 2 == 0 ? RowHeaderTemplate : AlternatingRowHeaderTemplate);  	var tokenReplace = new TokenReplace ();  	var tokenKeyValues = new Dictionary<string' string> ();  	foreach (var col in user.Table.Columns.Cast<DataColumn> ().Where (col => !tokenKeyValues.ContainsKey (col.ColumnName))) {  		tokenKeyValues.Add (col.ColumnName' user [col.ColumnName].ToString ());  	}  	var listItem = string.IsNullOrEmpty (AlternatingItemTemplate) || row % 2 == 0 ? ItemTemplate : AlternatingItemTemplate;  	listItem = tokenReplace.ReplaceEnvironmentTokens (listItem' tokenKeyValues' "Member");  	writer.Write (listItem);  	//Row Footer  	writer.Write (string.IsNullOrEmpty (AlternatingRowFooterTemplate) || row % 2 == 0 ? RowFooterTemplate : AlternatingRowFooterTemplate);  	row++;  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnMemberListControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnMemberListControl.cs,Render,The following statement contains a magic number: foreach (DataRow user in users.Rows) {  	//Row Header  	writer.Write (string.IsNullOrEmpty (AlternatingRowHeaderTemplate) || row % 2 == 0 ? RowHeaderTemplate : AlternatingRowHeaderTemplate);  	var tokenReplace = new TokenReplace ();  	var tokenKeyValues = new Dictionary<string' string> ();  	foreach (var col in user.Table.Columns.Cast<DataColumn> ().Where (col => !tokenKeyValues.ContainsKey (col.ColumnName))) {  		tokenKeyValues.Add (col.ColumnName' user [col.ColumnName].ToString ());  	}  	var listItem = string.IsNullOrEmpty (AlternatingItemTemplate) || row % 2 == 0 ? ItemTemplate : AlternatingItemTemplate;  	listItem = tokenReplace.ReplaceEnvironmentTokens (listItem' tokenKeyValues' "Member");  	writer.Write (listItem);  	//Row Footer  	writer.Write (string.IsNullOrEmpty (AlternatingRowFooterTemplate) || row % 2 == 0 ? RowFooterTemplate : AlternatingRowFooterTemplate);  	row++;  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnMemberListControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnMemberListControl.cs,Render,The following statement contains a magic number: writer.Write (string.IsNullOrEmpty (AlternatingRowHeaderTemplate) || row % 2 == 0 ? RowHeaderTemplate : AlternatingRowHeaderTemplate);  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnMemberListControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnMemberListControl.cs,Render,The following statement contains a magic number: writer.Write (string.IsNullOrEmpty (AlternatingRowFooterTemplate) || row % 2 == 0 ? RowFooterTemplate : AlternatingRowFooterTemplate);  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnFormEditor,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFormEditor.cs,SetUpItems,The following statement contains a magic number: foreach (DnnFormItemBase item in items) {  	if (encryptIds) {  		item.ID = (Host.GUID.Substring (0' 7) + item.ID + DateTime.Now.Day).GenerateHash ();  	}  	parentControl.Controls.Add (item);  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnFormEditor,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFormEditor.cs,SetUpItems,The following statement contains a magic number: if (encryptIds) {  	item.ID = (Host.GUID.Substring (0' 7) + item.ID + DateTime.Now.Day).GenerateHash ();  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnFormEditor,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFormEditor.cs,SetUpItems,The following statement contains a magic number: item.ID = (Host.GUID.Substring (0' 7) + item.ID + DateTime.Now.Day).GenerateHash ();  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,DoChangeURL,The following statement contains a magic number: if (!String.IsNullOrEmpty (_Url)) {  	var objUrls = new UrlController ();  	string TrackingUrl = _Url;  	_Urltype = Globals.GetURLType (_Url).ToString ("g").Substring (0' 1);  	if (_Urltype == "U" && (_Url.StartsWith ("~/" + PortalSettings.DefaultIconLocation' StringComparison.InvariantCultureIgnoreCase))) {  		_Urltype = "I";  	}  	ViewState ["UrlType"] = _Urltype;  	if (_Urltype == "F") {  		if (_Url.ToLower ().StartsWith ("fileid=")) {  			TrackingUrl = _Url;  			var objFile = FileManager.Instance.GetFile (int.Parse (_Url.Substring (7)));  			if (objFile != null) {  				_Url = objFile.Folder + objFile.FileName;  			}  		} else {  			//to handle legacy scenarios before the introduction of the FileServerHandler  			var fileName = Path.GetFileName (_Url);  			var folderPath = _Url.Substring (0' _Url.LastIndexOf (fileName));  			var folder = FolderManager.Instance.GetFolder (_objPortal.PortalID' folderPath);  			var fileId = -1;  			if (folder != null) {  				var file = FileManager.Instance.GetFile (folder' fileName);  				if (file != null) {  					fileId = file.FileId;  				}  			}  			TrackingUrl = "FileID=" + fileId.ToString ();  		}  	}  	if (_Urltype == "M") {  		if (_Url.ToLower ().StartsWith ("userid=")) {  			UserInfo objUser = UserController.GetUserById (_objPortal.PortalID' int.Parse (_Url.Substring (7)));  			if (objUser != null) {  				_Url = objUser.Username;  			}  		}  	}  	UrlTrackingInfo objUrlTracking = objUrls.GetUrlTracking (_objPortal.PortalID' TrackingUrl' ModuleID);  	if (objUrlTracking != null) {  		chkNewWindow.Checked = objUrlTracking.NewWindow;  		chkTrack.Checked = objUrlTracking.TrackClicks;  		chkLog.Checked = objUrlTracking.LogActivity;  	} else//the url does not exist in the tracking table  	 {  		chkTrack.Checked = false;  		chkLog.Checked = false;  	}  	ViewState ["Url"] = _Url;  } else {  	if (!String.IsNullOrEmpty (_Urltype)) {  		optType.ClearSelection ();  		if (optType.Items.FindByValue (_Urltype) != null) {  			optType.Items.FindByValue (_Urltype).Selected = true;  		} else {  			optType.Items [0].Selected = true;  		}  	} else {  		if (optType.Items.Count > 0) {  			optType.ClearSelection ();  			optType.Items [0].Selected = true;  		}  	}  	chkNewWindow.Checked = false;  	//Need check  	chkTrack.Checked = false;  	//Need check  	chkLog.Checked = false;  	//Need check  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,DoChangeURL,The following statement contains a magic number: if (!String.IsNullOrEmpty (_Url)) {  	var objUrls = new UrlController ();  	string TrackingUrl = _Url;  	_Urltype = Globals.GetURLType (_Url).ToString ("g").Substring (0' 1);  	if (_Urltype == "U" && (_Url.StartsWith ("~/" + PortalSettings.DefaultIconLocation' StringComparison.InvariantCultureIgnoreCase))) {  		_Urltype = "I";  	}  	ViewState ["UrlType"] = _Urltype;  	if (_Urltype == "F") {  		if (_Url.ToLower ().StartsWith ("fileid=")) {  			TrackingUrl = _Url;  			var objFile = FileManager.Instance.GetFile (int.Parse (_Url.Substring (7)));  			if (objFile != null) {  				_Url = objFile.Folder + objFile.FileName;  			}  		} else {  			//to handle legacy scenarios before the introduction of the FileServerHandler  			var fileName = Path.GetFileName (_Url);  			var folderPath = _Url.Substring (0' _Url.LastIndexOf (fileName));  			var folder = FolderManager.Instance.GetFolder (_objPortal.PortalID' folderPath);  			var fileId = -1;  			if (folder != null) {  				var file = FileManager.Instance.GetFile (folder' fileName);  				if (file != null) {  					fileId = file.FileId;  				}  			}  			TrackingUrl = "FileID=" + fileId.ToString ();  		}  	}  	if (_Urltype == "M") {  		if (_Url.ToLower ().StartsWith ("userid=")) {  			UserInfo objUser = UserController.GetUserById (_objPortal.PortalID' int.Parse (_Url.Substring (7)));  			if (objUser != null) {  				_Url = objUser.Username;  			}  		}  	}  	UrlTrackingInfo objUrlTracking = objUrls.GetUrlTracking (_objPortal.PortalID' TrackingUrl' ModuleID);  	if (objUrlTracking != null) {  		chkNewWindow.Checked = objUrlTracking.NewWindow;  		chkTrack.Checked = objUrlTracking.TrackClicks;  		chkLog.Checked = objUrlTracking.LogActivity;  	} else//the url does not exist in the tracking table  	 {  		chkTrack.Checked = false;  		chkLog.Checked = false;  	}  	ViewState ["Url"] = _Url;  } else {  	if (!String.IsNullOrEmpty (_Urltype)) {  		optType.ClearSelection ();  		if (optType.Items.FindByValue (_Urltype) != null) {  			optType.Items.FindByValue (_Urltype).Selected = true;  		} else {  			optType.Items [0].Selected = true;  		}  	} else {  		if (optType.Items.Count > 0) {  			optType.ClearSelection ();  			optType.Items [0].Selected = true;  		}  	}  	chkNewWindow.Checked = false;  	//Need check  	chkTrack.Checked = false;  	//Need check  	chkLog.Checked = false;  	//Need check  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,DoChangeURL,The following statement contains a magic number: if (_Urltype == "F") {  	if (_Url.ToLower ().StartsWith ("fileid=")) {  		TrackingUrl = _Url;  		var objFile = FileManager.Instance.GetFile (int.Parse (_Url.Substring (7)));  		if (objFile != null) {  			_Url = objFile.Folder + objFile.FileName;  		}  	} else {  		//to handle legacy scenarios before the introduction of the FileServerHandler  		var fileName = Path.GetFileName (_Url);  		var folderPath = _Url.Substring (0' _Url.LastIndexOf (fileName));  		var folder = FolderManager.Instance.GetFolder (_objPortal.PortalID' folderPath);  		var fileId = -1;  		if (folder != null) {  			var file = FileManager.Instance.GetFile (folder' fileName);  			if (file != null) {  				fileId = file.FileId;  			}  		}  		TrackingUrl = "FileID=" + fileId.ToString ();  	}  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,DoChangeURL,The following statement contains a magic number: if (_Url.ToLower ().StartsWith ("fileid=")) {  	TrackingUrl = _Url;  	var objFile = FileManager.Instance.GetFile (int.Parse (_Url.Substring (7)));  	if (objFile != null) {  		_Url = objFile.Folder + objFile.FileName;  	}  } else {  	//to handle legacy scenarios before the introduction of the FileServerHandler  	var fileName = Path.GetFileName (_Url);  	var folderPath = _Url.Substring (0' _Url.LastIndexOf (fileName));  	var folder = FolderManager.Instance.GetFolder (_objPortal.PortalID' folderPath);  	var fileId = -1;  	if (folder != null) {  		var file = FileManager.Instance.GetFile (folder' fileName);  		if (file != null) {  			fileId = file.FileId;  		}  	}  	TrackingUrl = "FileID=" + fileId.ToString ();  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,DoChangeURL,The following statement contains a magic number: if (_Urltype == "M") {  	if (_Url.ToLower ().StartsWith ("userid=")) {  		UserInfo objUser = UserController.GetUserById (_objPortal.PortalID' int.Parse (_Url.Substring (7)));  		if (objUser != null) {  			_Url = objUser.Username;  		}  	}  }  
Magic Number,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,DoChangeURL,The following statement contains a magic number: if (_Url.ToLower ().StartsWith ("userid=")) {  	UserInfo objUser = UserController.GetUserById (_objPortal.PortalID' int.Parse (_Url.Substring (7)));  	if (objUser != null) {  		_Url = objUser.Username;  	}  }  
Magic Number,DotNetNuke.Web.UI,Utilities,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\Utilities.cs,ApplySkin,The following statement contains a magic number: try {  	skinProperty = telerikControl.GetType ().GetProperty ("Skin");  	enableEmbeddedSkinsProperty = telerikControl.GetType ().GetProperty ("EnableEmbeddedSkins");  	if ((string.IsNullOrEmpty (controlName))) {  		controlName = telerikControl.GetType ().BaseType.Name;  		if ((controlName.StartsWith ("Rad") || controlName.StartsWith ("Dnn"))) {  			controlName = controlName.Substring (3);  		}  	}  	string skinVirtualFolder = "";  	if (PortalSettings.Current != null)  		skinVirtualFolder = PortalSettings.Current.ActiveTab.SkinPath.Replace ('\\'' '/').Replace ("//"' "/");  	else  		skinVirtualFolder = telerikControl.ResolveUrl ("~/Portals/_default/skins/_default/Aphelia");  	// developer skin Aphelia  	string skinName = "";  	string webControlSkinName = "";  	if (skinProperty != null) {  		var v = skinProperty.GetValue (telerikControl' null);  		if (v != null)  			webControlSkinName = v.ToString ();  	}  	if (string.IsNullOrEmpty (webControlSkinName))  		webControlSkinName = "default";  	if ((skinVirtualFolder.EndsWith ("/"))) {  		skinVirtualFolder = skinVirtualFolder.Substring (0' skinVirtualFolder.Length - 1);  	}  	int lastIndex = skinVirtualFolder.LastIndexOf ("/");  	if ((lastIndex > -1 && skinVirtualFolder.Length > lastIndex)) {  		skinName = skinVirtualFolder.Substring (skinVirtualFolder.LastIndexOf ("/") + 1);  	}  	string systemWebControlSkin = string.Empty;  	if ((!string.IsNullOrEmpty (skinName) && !string.IsNullOrEmpty (skinVirtualFolder))) {  		systemWebControlSkin = HttpContext.Current.Server.MapPath (skinVirtualFolder);  		systemWebControlSkin = Path.Combine (systemWebControlSkin' "WebControlSkin");  		systemWebControlSkin = Path.Combine (systemWebControlSkin' skinName);  		systemWebControlSkin = Path.Combine (systemWebControlSkin' webControlSkinSubFolderName);  		systemWebControlSkin = Path.Combine (systemWebControlSkin' string.Format ("{0}.{1}.css"' controlName' webControlSkinName));  		//Check if the selected skin has the webcontrol skin  		if ((!File.Exists (systemWebControlSkin))) {  			systemWebControlSkin = "";  		}  		//No skin' try default folder  		if ((string.IsNullOrEmpty (systemWebControlSkin))) {  			skinVirtualFolder = telerikControl.ResolveUrl ("~/Portals/_default/Skins/_default");  			skinName = "Default";  			if ((skinVirtualFolder.EndsWith ("/"))) {  				skinVirtualFolder = skinVirtualFolder.Substring (0' skinVirtualFolder.Length - 1);  			}  			if ((!string.IsNullOrEmpty (skinName) && !string.IsNullOrEmpty (skinVirtualFolder))) {  				systemWebControlSkin = HttpContext.Current.Server.MapPath (skinVirtualFolder);  				systemWebControlSkin = Path.Combine (systemWebControlSkin' "WebControlSkin");  				systemWebControlSkin = Path.Combine (systemWebControlSkin' skinName);  				systemWebControlSkin = Path.Combine (systemWebControlSkin' webControlSkinSubFolderName);  				systemWebControlSkin = Path.Combine (systemWebControlSkin' string.Format ("{0}.{1}.css"' controlName' webControlSkinName));  				if ((!File.Exists (systemWebControlSkin))) {  					systemWebControlSkin = "";  				}  			}  		}  	}  	if ((!string.IsNullOrEmpty (systemWebControlSkin))) {  		string filePath = Path.Combine (skinVirtualFolder' "WebControlSkin");  		filePath = Path.Combine (filePath' skinName);  		filePath = Path.Combine (filePath' webControlSkinSubFolderName);  		filePath = Path.Combine (filePath' string.Format ("{0}.{1}.css"' controlName' webControlSkinName));  		filePath = filePath.Replace ('\\'' '/').Replace ("//"' "/").TrimEnd ('/');  		if (HttpContext.Current != null && HttpContext.Current.Handler is Page) {  			ClientResourceManager.RegisterStyleSheet (HttpContext.Current.Handler as Page' filePath' FileOrder.Css.ResourceCss);  		}  		if (((skinProperty != null) && (enableEmbeddedSkinsProperty != null))) {  			skinApplied = true;  			skinProperty.SetValue (telerikControl' webControlSkinName' null);  			enableEmbeddedSkinsProperty.SetValue (telerikControl' false' null);  		}  	}  } catch (Exception ex) {  	Exceptions.LogException (ex);  }  
Magic Number,DotNetNuke.Web.UI,Utilities,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\Utilities.cs,ApplySkin,The following statement contains a magic number: if ((string.IsNullOrEmpty (controlName))) {  	controlName = telerikControl.GetType ().BaseType.Name;  	if ((controlName.StartsWith ("Rad") || controlName.StartsWith ("Dnn"))) {  		controlName = controlName.Substring (3);  	}  }  
Magic Number,DotNetNuke.Web.UI,Utilities,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\Utilities.cs,ApplySkin,The following statement contains a magic number: if ((controlName.StartsWith ("Rad") || controlName.StartsWith ("Dnn"))) {  	controlName = controlName.Substring (3);  }  
Magic Number,DotNetNuke.Web.UI,Utilities,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\Utilities.cs,ApplySkin,The following statement contains a magic number: controlName = controlName.Substring (3);  
Missing Default,DotNetNuke.Web.Api,TraceWriter,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\Api\TraceWriter.cs,Log,The following switch statement is missing a default case: switch (rec.Level) {  case TraceLevel.Debug:  	Logger.Debug (output);  	break;  case TraceLevel.Info:  	Logger.Info (output);  	break;  case TraceLevel.Warn:  	Logger.Warn (output);  	break;  case TraceLevel.Error:  	Logger.Error (output);  	break;  case TraceLevel.Fatal:  	Logger.Fatal (output);  	break;  }  
Missing Default,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,AddModule,The following switch statement is missing a default case: switch (dto.Position) {  case "TOP":  case "0":  	positionID = 0;  	break;  case "BOTTOM":  case "-1":  	positionID = -1;  	break;  }  
Missing Default,DotNetNuke.Web.InternalServices,ControlBarController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\ControlBarController.cs,DoAddExistingModule,The following switch statement is missing a default case: switch (moduleInfo.DesktopModule.Shareable) {  case ModuleSharing.Unsupported:  	// Should never happen since the module should not be listed in the first place.  	throw new ApplicationException (string.Format ("Module '{0}' does not support Shareable and should not be listed in Add Existing Module from a different source site"' moduleInfo.DesktopModule.FriendlyName));  case ModuleSharing.Supported:  	break;  case ModuleSharing.Unknown:  	break;  }  
Missing Default,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,PostFile,The following switch statement is missing a default case: switch (name.ToUpper ()) {  case "\"FOLDER\"":  	folder = item.ReadAsStringAsync ().Result ?? "";  	break;  case "\"FILTER\"":  	filter = item.ReadAsStringAsync ().Result ?? "";  	break;  case "\"OVERWRITE\"":  	bool.TryParse (item.ReadAsStringAsync ().Result' out overwrite);  	break;  case "\"ISHOSTMENU\"":  	bool.TryParse (item.ReadAsStringAsync ().Result' out isHostMenu);  	break;  case "\"EXTRACT\"":  	bool.TryParse (item.ReadAsStringAsync ().Result' out extract);  	break;  case "\"POSTFILE\"":  	fileName = item.Headers.ContentDisposition.FileName.Replace ("\""' "");  	if (fileName.IndexOf ("\\"' StringComparison.Ordinal) != -1) {  		fileName = Path.GetFileName (fileName);  	}  	stream = item.ReadAsStreamAsync ().Result;  	break;  }  
Missing Default,DotNetNuke.Web.InternalServices,FileUploadController,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\InternalServices\FileUploadController.cs,UploadFromLocal,The following switch statement is missing a default case: switch (name.ToUpper ()) {  case "\"FOLDER\"":  	folder = item.ReadAsStringAsync ().Result ?? "";  	break;  case "\"FILTER\"":  	filter = item.ReadAsStringAsync ().Result ?? "";  	break;  case "\"OVERWRITE\"":  	bool.TryParse (item.ReadAsStringAsync ().Result' out overwrite);  	break;  case "\"ISHOSTPORTAL\"":  	bool.TryParse (item.ReadAsStringAsync ().Result' out isHostPortal);  	break;  case "\"EXTRACT\"":  	bool.TryParse (item.ReadAsStringAsync ().Result' out extract);  	break;  case "\"PORTALID\"":  	if (userInfo.IsSuperUser) {  		int.TryParse (item.ReadAsStringAsync ().Result' out portalId);  	}  	break;  case "\"POSTFILE\"":  	fileName = item.Headers.ContentDisposition.FileName.Replace ("\""' "");  	if (fileName.IndexOf ("\\"' StringComparison.Ordinal) != -1) {  		fileName = Path.GetFileName (fileName);  	}  	if (Globals.FileEscapingRegex.Match (fileName).Success == false) {  		stream = item.ReadAsStreamAsync ().Result;  	}  	break;  }  
Missing Default,DotNetNuke.Web.UI.WebControls,DnnRibbonBarTool,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnRibbonBarTool.cs,ControlPanelTool_OnClick,The following switch statement is missing a default case: switch (ToolInfo.ToolName) {  case "DeletePage":  	if ((HasToolPermissions ("DeletePage"))) {  		string url = TestableGlobals.Instance.NavigateURL (PortalSettings.ActiveTab.TabID' "Tab"' "action=delete");  		Page.Response.Redirect (url' true);  	}  	break;  case "CopyPermissionsToChildren":  	if ((HasToolPermissions ("CopyPermissionsToChildren"))) {  		TabController.CopyPermissionsToChildren (PortalSettings.ActiveTab' PortalSettings.ActiveTab.TabPermissions);  		Page.Response.Redirect (Page.Request.RawUrl);  	}  	break;  case "CopyDesignToChildren":  	if ((HasToolPermissions ("CopyDesignToChildren"))) {  		TabController.CopyDesignToChildren (PortalSettings.ActiveTab' PortalSettings.ActiveTab.SkinSrc' PortalSettings.ActiveTab.ContainerSrc);  		Page.Response.Redirect (Page.Request.RawUrl);  	}  	break;  case "ClearCache":  	if ((HasToolPermissions ("ClearCache"))) {  		ClearCache ();  		ClientResourceManager.ClearCache ();  		Page.Response.Redirect (Page.Request.RawUrl);  	}  	break;  case "RecycleApp":  	if ((HasToolPermissions ("RecycleApp"))) {  		RestartApplication ();  		Page.Response.Redirect (Page.Request.RawUrl);  	}  	break;  }  
Missing Default,DotNetNuke.Web.UI.WebControls,DnnRibbonBarTool,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnRibbonBarTool.cs,EnableTool,The following switch statement is missing a default case: switch (ToolInfo.ToolName) {  case "DeletePage":  	if ((TabController.IsSpecialTab (TabController.CurrentPage.TabID' PortalSettings.PortalId))) {  		returnValue = false;  	}  	break;  case "CopyDesignToChildren":  case "CopyPermissionsToChildren":  	returnValue = ActiveTabHasChildren ();  	if ((returnValue && ToolInfo.ToolName == "CopyPermissionsToChildren")) {  		if ((PortalSettings.ActiveTab.IsSuperTab)) {  			returnValue = false;  		}  	}  	break;  }  
Missing Default,DotNetNuke.Web.UI.WebControls,DnnUrlControl,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnUrlControl.cs,DoRenderTypeControls,The following switch statement is missing a default case: switch (optType.SelectedItem.Value) {  case "N":  	//None  	URLRow.Visible = false;  	TabRow.Visible = false;  	FileRow.Visible = false;  	UserRow.Visible = false;  	ImagesRow.Visible = false;  	break;  case "I":  	//System Image  	URLRow.Visible = false;  	TabRow.Visible = false;  	FileRow.Visible = false;  	UserRow.Visible = false;  	ImagesRow.Visible = true;  	cboImages.Items.Clear ();  	string strImagesFolder = Path.Combine (Globals.ApplicationMapPath' PortalSettings.DefaultIconLocation.Replace ('/'' '\\'));  	foreach (string strImage in Directory.GetFiles (strImagesFolder)) {  		string img = strImage.Replace (strImagesFolder' "").Trim ('/').Trim ('\\');  		cboImages.Items.Add (new ListItem (img' string.Format ("~/{0}/{1}"' PortalSettings.DefaultIconLocation' img).ToLower ()));  	}  	ListItem selecteItem = cboImages.Items.FindByValue (_Url.ToLower ());  	if (selecteItem != null) {  		selecteItem.Selected = true;  	}  	break;  case "U":  	//Url  	URLRow.Visible = true;  	TabRow.Visible = false;  	FileRow.Visible = false;  	UserRow.Visible = false;  	ImagesRow.Visible = false;  	if (String.IsNullOrEmpty (txtUrl.Text)) {  		txtUrl.Text = _Url;  	}  	if (String.IsNullOrEmpty (txtUrl.Text)) {  		txtUrl.Text = "http://";  	}  	txtUrl.Visible = true;  	cmdSelect.Visible = true;  	cboUrls.Visible = false;  	cmdAdd.Visible = false;  	cmdDelete.Visible = false;  	break;  case "T":  	//tab  	URLRow.Visible = false;  	TabRow.Visible = true;  	FileRow.Visible = false;  	UserRow.Visible = false;  	ImagesRow.Visible = false;  	cboTabs.IncludeAllTabTypes = false;  	cboTabs.IncludeActiveTab = IncludeActiveTab;  	cboTabs.IncludeDisabledTabs = true;  	cboTabs.DisabledNotSelectable = true;  	cboTabs.UndefinedItem = new ListItem (DynamicSharedConstants.Unspecified' string.Empty);  	if (!string.IsNullOrEmpty (_Url)) {  		PortalSettings _settings = PortalController.Instance.GetCurrentPortalSettings ();  		var tabId = Int32.Parse (_Url);  		var page = TabController.Instance.GetTab (tabId' _settings.PortalId);  		cboTabs.SelectedPage = page;  	}  	break;  case "F":  	//file  	URLRow.Visible = false;  	TabRow.Visible = false;  	FileRow.Visible = true;  	UserRow.Visible = false;  	ImagesRow.Visible = false;  	//select folder  	//We Must check if selected folder has changed because of a property change (Secure' Database)  	string FileName = string.Empty;  	string FolderPath = string.Empty;  	string LastFileName = string.Empty;  	string LastFolderPath = string.Empty;  	//Let's try to remember last selection  	if (ViewState ["LastFolderPath"] != null) {  		LastFolderPath = Convert.ToString (ViewState ["LastFolderPath"]);  	}  	if (ViewState ["LastFileName"] != null) {  		LastFileName = Convert.ToString (ViewState ["LastFileName"]);  	}  	if (_Url != string.Empty) {  		//Let's use the new URL  		FileName = _Url.Substring (_Url.LastIndexOf ("/") + 1);  		FolderPath = _Url.Replace (FileName' "");  	} else {  		//Use last settings  		FileName = LastFileName;  		FolderPath = LastFolderPath;  	}  	ctlFile.FilePath = FolderPath + FileName;  	txtUrl.Visible = false;  	break;  case "M":  	//membership users  	URLRow.Visible = false;  	TabRow.Visible = false;  	FileRow.Visible = false;  	UserRow.Visible = true;  	ImagesRow.Visible = false;  	if (String.IsNullOrEmpty (txtUser.Text)) {  		txtUser.Text = _Url;  	}  	break;  }  
Missing Default,DotNetNuke.Web.UI.WebControls,DnnFilePicker,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\WebControls\DnnFilePicker.cs,OnPreRender,The following switch statement is missing a default case: switch (Mode) {  case FileControlMode.Normal:  	_pnlFile.Visible = true;  	_pnlUpload.Visible = false;  	_pnlRightDiv.Visible = true;  	ShowImage ();  	if ((FolderPermissionController.HasFolderPermission (PortalId' _cboFolders.SelectedItem.Value' "ADD") || IsUserFolder (_cboFolders.SelectedItem.Value)) && ShowUpLoad) {  		ShowButton (_cmdUpload' "Upload");  	}  	break;  case FileControlMode.UpLoadFile:  	_pnlFile.Visible = false;  	_pnlUpload.Visible = true;  	_pnlRightDiv.Visible = false;  	ShowButton (_cmdSave' "Save");  	ShowButton (_cmdCancel' "Cancel");  	break;  }  
Missing Default,DotNetNuke.Web.UI,RibbonBarManager,F:\newReposMay17\dnnsoftware_Dnn.Platform\DNN Platform\DotNetNuke.Web\UI\RibbonBarManager.cs,SaveTabInfoObject,The following switch statement is missing a default case: switch (invalidType) {  case "EmptyTabName":  	throw new DotNetNukeException ("Page name is required."' DotNetNukeErrorCode.PageNameRequired);  case "InvalidTabName":  	throw new DotNetNukeException ("Page name is invalid."' DotNetNukeErrorCode.PageNameInvalid);  }  
