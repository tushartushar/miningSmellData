Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,framework.Core.Implementation,CBundle,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Bundle\CBundle.cs,CBundle,The method has 5 parameters.
Long Statement,framework.Core.Implementation,CBundle,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Bundle\CBundle.cs,PreStart,The length of the statement  "			if ((attrs & TypeAttributes.Interface) == TypeAttributes.Interface || (attrs & TypeAttributes.Abstract) == TypeAttributes.Abstract) " is 131.
Long Statement,framework.Core.Implementation,CBundleRepository,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Framework\CBundleRepository.cs,InstallBundle,The length of the statement  "			1.If a bundle containing the same location identifier is already installed' the Bundle object for that bundle is returned." is 122.
Long Statement,framework.Core.Implementation,CSystemBundle,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Framework\CSystemBundle.cs,Init,The length of the statement  "			This method does nothing if called when this Framework is in the Bundle.STARTING' Bundle.ACTIVE or Bundle.STOPPING states." is 122.
Long Statement,framework.Core.Implementation,CSystemBundle,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Framework\CSystemBundle.cs,WaitForStop,The length of the statement  "		while (getState () == BundleState.STARTING || getState () == BundleState.ACTIVE || getState () == BundleState.STOPPING) { " is 121.
Long Statement,framework.Tests,TestFrameworkInitShutdown,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Tests\fwk_init_shutdown.cs,InitShutdown,The length of the statement  "	Expect.Once.On (mock_fwk_listener).Method ("FrameworkEvent").With (new FrameworkEvent (FrameworkEvent.Type.STARTED' fwk' null)); " is 128.
Long Statement,framework.Tests,TestFrameworkInitShutdown,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Tests\fwk_init_shutdown.cs,MultipleInits,The length of the statement  "	Expect.Exactly (2).On (mock_fwk_listener).Method ("FrameworkEvent").With (new FrameworkEvent (FrameworkEvent.Type.STARTED' fwk' null)); " is 135.
Magic Number,framework.Core.Implementation,TestListenerQueue,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Events\ListenerQueue.cs,TestCOWBehaviour,The following statement contains a magic number: listeners.Add (2);  
Magic Number,framework.Core.Implementation,TestListenerQueue,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Events\ListenerQueue.cs,TestCOWBehaviour,The following statement contains a magic number: using (ListenerQueue<int>.View view = listeners.getView ()) {  	Assert.AreEqual (view.getListeners ().Count' 2);  	listeners.Add (3);  	Assert.AreEqual (view.getListeners ().Count' 2);  }  
Magic Number,framework.Core.Implementation,TestListenerQueue,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Events\ListenerQueue.cs,TestCOWBehaviour,The following statement contains a magic number: using (ListenerQueue<int>.View view = listeners.getView ()) {  	Assert.AreEqual (view.getListeners ().Count' 2);  	listeners.Add (3);  	Assert.AreEqual (view.getListeners ().Count' 2);  }  
Magic Number,framework.Core.Implementation,TestListenerQueue,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Events\ListenerQueue.cs,TestCOWBehaviour,The following statement contains a magic number: using (ListenerQueue<int>.View view = listeners.getView ()) {  	Assert.AreEqual (view.getListeners ().Count' 2);  	listeners.Add (3);  	Assert.AreEqual (view.getListeners ().Count' 2);  }  
Magic Number,framework.Core.Implementation,TestListenerQueue,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Events\ListenerQueue.cs,TestCOWBehaviour,The following statement contains a magic number: Assert.AreEqual (view.getListeners ().Count' 2);  
Magic Number,framework.Core.Implementation,TestListenerQueue,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Events\ListenerQueue.cs,TestCOWBehaviour,The following statement contains a magic number: listeners.Add (3);  
Magic Number,framework.Core.Implementation,TestListenerQueue,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Events\ListenerQueue.cs,TestCOWBehaviour,The following statement contains a magic number: Assert.AreEqual (view.getListeners ().Count' 2);  
Magic Number,framework.Core.Implementation,TestListenerQueue,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Events\ListenerQueue.cs,TestCOWBehaviour,The following statement contains a magic number: Assert.AreEqual (listeners.getView ().getListeners ().Count' 3);  
Magic Number,framework.Core.Implementation,CBundleRepository,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Framework\CBundleRepository.cs,InstallBundle,The following statement contains a magic number: lock (m_lock) {  	if (input != null)  		throw new NotImplementedException ();  	CBundle bndl = getBundle (location);  	if (bndl != null)  		return bndl;  	CManifest manifest = new CManifest ();  	manifest.SymbolicName = "<symbolic_name>";  	manifest.Version = new Version (6' 6' 6' 6);  	manifest.AssemblyPath = Path.Combine (m_systemBundle.getConfig ().BundleRegistryPath' location);  	manifest.AssemblyPath = Path.Combine (manifest.AssemblyPath' location + ".dll");  	bndl = new CBundle (m_firstFreeID++' location' manifest' DateTime.Now' m_systemBundle);  	m_bundlesByID.Add (bndl.getBundleId ()' bndl);  	m_bundlesByLocation.Add (bndl.getLocation ()' bndl);  	m_systemBundle.RaiseBundleEvent (new BundleEvent (BundleEvent.Type.INSTALLED' bndl));  	return bndl;  }  
Magic Number,framework.Core.Implementation,CBundleRepository,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Framework\CBundleRepository.cs,InstallBundle,The following statement contains a magic number: lock (m_lock) {  	if (input != null)  		throw new NotImplementedException ();  	CBundle bndl = getBundle (location);  	if (bndl != null)  		return bndl;  	CManifest manifest = new CManifest ();  	manifest.SymbolicName = "<symbolic_name>";  	manifest.Version = new Version (6' 6' 6' 6);  	manifest.AssemblyPath = Path.Combine (m_systemBundle.getConfig ().BundleRegistryPath' location);  	manifest.AssemblyPath = Path.Combine (manifest.AssemblyPath' location + ".dll");  	bndl = new CBundle (m_firstFreeID++' location' manifest' DateTime.Now' m_systemBundle);  	m_bundlesByID.Add (bndl.getBundleId ()' bndl);  	m_bundlesByLocation.Add (bndl.getLocation ()' bndl);  	m_systemBundle.RaiseBundleEvent (new BundleEvent (BundleEvent.Type.INSTALLED' bndl));  	return bndl;  }  
Magic Number,framework.Core.Implementation,CBundleRepository,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Framework\CBundleRepository.cs,InstallBundle,The following statement contains a magic number: lock (m_lock) {  	if (input != null)  		throw new NotImplementedException ();  	CBundle bndl = getBundle (location);  	if (bndl != null)  		return bndl;  	CManifest manifest = new CManifest ();  	manifest.SymbolicName = "<symbolic_name>";  	manifest.Version = new Version (6' 6' 6' 6);  	manifest.AssemblyPath = Path.Combine (m_systemBundle.getConfig ().BundleRegistryPath' location);  	manifest.AssemblyPath = Path.Combine (manifest.AssemblyPath' location + ".dll");  	bndl = new CBundle (m_firstFreeID++' location' manifest' DateTime.Now' m_systemBundle);  	m_bundlesByID.Add (bndl.getBundleId ()' bndl);  	m_bundlesByLocation.Add (bndl.getLocation ()' bndl);  	m_systemBundle.RaiseBundleEvent (new BundleEvent (BundleEvent.Type.INSTALLED' bndl));  	return bndl;  }  
Magic Number,framework.Core.Implementation,CBundleRepository,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Framework\CBundleRepository.cs,InstallBundle,The following statement contains a magic number: lock (m_lock) {  	if (input != null)  		throw new NotImplementedException ();  	CBundle bndl = getBundle (location);  	if (bndl != null)  		return bndl;  	CManifest manifest = new CManifest ();  	manifest.SymbolicName = "<symbolic_name>";  	manifest.Version = new Version (6' 6' 6' 6);  	manifest.AssemblyPath = Path.Combine (m_systemBundle.getConfig ().BundleRegistryPath' location);  	manifest.AssemblyPath = Path.Combine (manifest.AssemblyPath' location + ".dll");  	bndl = new CBundle (m_firstFreeID++' location' manifest' DateTime.Now' m_systemBundle);  	m_bundlesByID.Add (bndl.getBundleId ()' bndl);  	m_bundlesByLocation.Add (bndl.getLocation ()' bndl);  	m_systemBundle.RaiseBundleEvent (new BundleEvent (BundleEvent.Type.INSTALLED' bndl));  	return bndl;  }  
Magic Number,framework.Core.Implementation,CBundleRepository,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Framework\CBundleRepository.cs,InstallBundle,The following statement contains a magic number: manifest.Version = new Version (6' 6' 6' 6);  
Magic Number,framework.Core.Implementation,CBundleRepository,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Framework\CBundleRepository.cs,InstallBundle,The following statement contains a magic number: manifest.Version = new Version (6' 6' 6' 6);  
Magic Number,framework.Core.Implementation,CBundleRepository,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Framework\CBundleRepository.cs,InstallBundle,The following statement contains a magic number: manifest.Version = new Version (6' 6' 6' 6);  
Magic Number,framework.Core.Implementation,CBundleRepository,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Core\Implementation\Framework\CBundleRepository.cs,InstallBundle,The following statement contains a magic number: manifest.Version = new Version (6' 6' 6' 6);  
Magic Number,framework.Tests,TestFrameworkInitShutdown,C:\repos\mikhtonyuk_SekaiFrameworkNet\src\framework\Tests\fwk_init_shutdown.cs,MultipleInits,The following statement contains a magic number: Expect.Exactly (2).On (mock_fwk_listener).Method ("FrameworkEvent").With (new FrameworkEvent (FrameworkEvent.Type.STARTED' fwk' null));  
