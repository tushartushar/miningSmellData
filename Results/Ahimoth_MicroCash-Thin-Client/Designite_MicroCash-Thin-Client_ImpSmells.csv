Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MicroCash.Client.Thin,Account,C:\repos\Ahimoth_MicroCash-Thin-Client\account.cs,AccountXMLLoad,Cyclomatic complexity of the method is 12
Complex Method,MicroCash.Client.Thin,ThinUser,C:\repos\Ahimoth_MicroCash-Thin-Client\user.cs,LoadFromFile,Cyclomatic complexity of the method is 8
Complex Method,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,Cyclomatic complexity of the method is 20
Complex Method,MicroCash.Client.Thin,GradientPanel,C:\repos\Ahimoth_MicroCash-Thin-Client\gradientpanel.cs,PaintGradient,Cyclomatic complexity of the method is 9
Complex Method,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Dispose,Cyclomatic complexity of the method is 13
Complex Method,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,Cyclomatic complexity of the method is 13
Complex Method,MicroCash.Client.Thin.JsonRpc,JsonHelper,C:\repos\Ahimoth_MicroCash-Thin-Client\JsonRpc\JsonHelper.cs,GetObjectFromJsonRPC,Cyclomatic complexity of the method is 8
Long Parameter List,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The method has 9 parameters.
Long Parameter List,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,G,The method has 6 parameters.
Long Parameter List,MicroCash.Client.Thin.JsonRpc,JsonHelper,C:\repos\Ahimoth_MicroCash-Thin-Client\JsonRpc\JsonHelper.cs,GetObjectFromJsonRPC,The method has 5 parameters.
Long Statement,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The length of the statement  "	m_ConnectLogoBMP = new Bitmap (System.Reflection.Assembly.GetEntryAssembly ().GetManifestResourceStream ("MicroCash.Client.Thin.pngs.logosmall.png")); " is 150.
Long Statement,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The length of the statement  "	m_ConnectArrowBMP = new Bitmap (System.Reflection.Assembly.GetEntryAssembly ().GetManifestResourceStream ("MicroCash.Client.Thin.pngs.downarrow.png")); " is 151.
Long Statement,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,Form2_Load,The length of the statement  "	m_tick = new Bitmap (System.Reflection.Assembly.GetEntryAssembly ().GetManifestResourceStream ("MicroCash.Client.Thin.pngs.tick.png")); " is 135.
Long Statement,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,Form2_Load,The length of the statement  "	m_cross = new Bitmap (System.Reflection.Assembly.GetEntryAssembly ().GetManifestResourceStream ("MicroCash.Client.Thin.pngs.cross.png")); " is 137.
Long Statement,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,Form2_Load,The length of the statement  "	ToolTip1.SetToolTip (m_Images [0]' "*) Must be at least 3 characters in length.\r\n*) Must only contain characters which can be used on the filesystem."); " is 154.
Long Statement,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,Form2_Load,The length of the statement  "	ToolTip3.SetToolTip (m_Images [2]' "*) Must be at least 8 characters in length.\r\n*) Must not be the same as password 1"); " is 123.
Long Statement,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The length of the statement  "		e.Graphics.DrawLine (new Pen (Color.Black' 2)' new Point (e.Bounds.X + 5' e.Bounds.Y + 7)' new Point ((e.Bounds.Width - 5)' e.Bounds.Y + 7)); " is 141.
Long Statement,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The length of the statement  "		e.Graphics.DrawString (mi.Text' menuFont' menuBrush' rectText.X' rectText.Y + ((e.Bounds.Height - menuFont.Height) / 2)' strfmt); " is 129.
Long Statement,MicroCash.Client.Thin,GradientPanel,C:\repos\Ahimoth_MicroCash-Thin-Client\gradientpanel.cs,PaintGradient,The length of the statement  "		gradBrush = new System.Drawing.Drawing2D.LinearGradientBrush (new Point (0' 0)' new Point (0' this.Height)' mStartColor' mEndColor); " is 132.
Long Statement,MicroCash.Client.Thin,GradientPanel,C:\repos\Ahimoth_MicroCash-Thin-Client\gradientpanel.cs,PaintGradient,The length of the statement  "		gradBrush = new System.Drawing.Drawing2D.LinearGradientBrush (new Point (0' 0)' new Point (this.Width' 0)' mStartColor' mEndColor); " is 131.
Long Statement,MicroCash.Client.Thin,GradientPanel,C:\repos\Ahimoth_MicroCash-Thin-Client\gradientpanel.cs,PaintGradient,The length of the statement  "		gradBrush = new System.Drawing.Drawing2D.LinearGradientBrush (new Point (0' 0)' new Point (this.Width' this.Height)' mStartColor' mEndColor); " is 141.
Long Statement,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,BytesToUInt64,The length of the statement  "	return ((ulong)pb [iOffset + 7] | ((ulong)pb [iOffset + 6] << 8) | ((ulong)pb [iOffset + 5] << 16) | ((ulong)pb [iOffset + 4] << 24) | ((ulong)pb [iOffset + 3] << 32) | ((ulong)pb [iOffset + 2] << 40) | ((ulong)pb [iOffset + 1] << 48) | ((ulong)pb [iOffset] << 56)); " is 266.
Long Statement,MicroCash.Client.Thin.JsonRpc,MicroCashRpcClient,C:\repos\Ahimoth_MicroCash-Thin-Client\JsonRpc\MicroCashRpc.cs,GetInfo,The length of the statement  "	JsonResponse<GetInfoRpcResponse> response = JsonHelper.GetObjectFromJsonRPC<GetInfoRpcResponse> (m_RPCurl' "sc_getinfo"' "thin"' "client"' parameters); " is 151.
Long Statement,MicroCash.Client.Thin.JsonRpc,MicroCashRpcClient,C:\repos\Ahimoth_MicroCash-Thin-Client\JsonRpc\MicroCashRpc.cs,GetBalance,The length of the statement  "	JsonResponse<GetBalanceRpcResponse> response = JsonHelper.GetObjectFromJsonRPC<GetBalanceRpcResponse> (m_RPCurl' "sc_getbalance"' "thin"' "client"' parameters); " is 160.
Long Statement,MicroCash.Client.Thin.JsonRpc,MicroCashRpcClient,C:\repos\Ahimoth_MicroCash-Thin-Client\JsonRpc\MicroCashRpc.cs,GetHistory,The length of the statement  "	JsonResponse<GetHistoryRpcResponse> response = JsonHelper.GetObjectFromJsonRPC<GetHistoryRpcResponse> (m_RPCurl' "sc_gethistory"' "thin"' "client"' parameters); " is 160.
Long Statement,MicroCash.Client.Thin.JsonRpc,MicroCashRpcClient,C:\repos\Ahimoth_MicroCash-Thin-Client\JsonRpc\MicroCashRpc.cs,SendTransaction,The length of the statement  "	JsonResponse<SendTransactionRpcResponse> response = JsonHelper.GetObjectFromJsonRPC<SendTransactionRpcResponse> (m_RPCurl' "sc_sendtransaction"' "thin"' "client"' parameters); " is 175.
Long Statement,MicroCash.Client.Thin.JsonRpc,MicroCashRpcClient,C:\repos\Ahimoth_MicroCash-Thin-Client\JsonRpc\MicroCashRpc.cs,GetTransactions,The length of the statement  "	JsonResponse<GetInfoRpcResponse> response = JsonHelper.GetObjectFromJsonRPC<GetInfoRpcResponse> (m_RPCurl' "sc_getinfo"' "thin"' "client"' parameters); " is 151.
Magic Number,MicroCash.Client.Thin,Account,C:\repos\Ahimoth_MicroCash-Thin-Client\account.cs,SendTx,The following statement contains a magic number: Array.Copy (paymentCodeAddress.GetInfoBytes ()' info' 8);  
Magic Number,MicroCash.Client.Thin,Account,C:\repos\Ahimoth_MicroCash-Thin-Client\account.cs,SendTx,The following statement contains a magic number: Array.Copy (m_KeyPair.PublicKeyBytes' 1' tx.m_Extra1' 0' 64);  
Magic Number,MicroCash.Client.Thin,Account,C:\repos\Ahimoth_MicroCash-Thin-Client\account.cs,SendTx,The following statement contains a magic number: tx.m_qAmount = (Int64)(amount * 10000);  
Magic Number,MicroCash.Client.Thin,Account,C:\repos\Ahimoth_MicroCash-Thin-Client\account.cs,SendTx,The following statement contains a magic number: if (info != null) {  	int nLen = info.Length;  	if (nLen > 8)  		nLen = 8;  	for (int x = 0; x < 8; x++)  		tx.m_Info [x] = 0;  	Array.Copy (info' tx.m_Info' nLen);  }  
Magic Number,MicroCash.Client.Thin,Account,C:\repos\Ahimoth_MicroCash-Thin-Client\account.cs,SendTx,The following statement contains a magic number: if (info != null) {  	int nLen = info.Length;  	if (nLen > 8)  		nLen = 8;  	for (int x = 0; x < 8; x++)  		tx.m_Info [x] = 0;  	Array.Copy (info' tx.m_Info' nLen);  }  
Magic Number,MicroCash.Client.Thin,Account,C:\repos\Ahimoth_MicroCash-Thin-Client\account.cs,SendTx,The following statement contains a magic number: if (info != null) {  	int nLen = info.Length;  	if (nLen > 8)  		nLen = 8;  	for (int x = 0; x < 8; x++)  		tx.m_Info [x] = 0;  	Array.Copy (info' tx.m_Info' nLen);  }  
Magic Number,MicroCash.Client.Thin,Account,C:\repos\Ahimoth_MicroCash-Thin-Client\account.cs,SendTx,The following statement contains a magic number: if (nLen > 8)  	nLen = 8;  
Magic Number,MicroCash.Client.Thin,Account,C:\repos\Ahimoth_MicroCash-Thin-Client\account.cs,SendTx,The following statement contains a magic number: if (nLen > 8)  	nLen = 8;  
Magic Number,MicroCash.Client.Thin,Account,C:\repos\Ahimoth_MicroCash-Thin-Client\account.cs,SendTx,The following statement contains a magic number: nLen = 8;  
Magic Number,MicroCash.Client.Thin,Account,C:\repos\Ahimoth_MicroCash-Thin-Client\account.cs,SendTx,The following statement contains a magic number: for (int x = 0; x < 8; x++)  	tx.m_Info [x] = 0;  
Magic Number,MicroCash.Client.Thin,MicroCashHelper,C:\repos\Ahimoth_MicroCash-Thin-Client\MicroCashHelper.cs,MoneyToString,The following statement contains a magic number: return (money / 10000.0).ToString ();  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectPanelTop = new GradientPanel (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80)' 0);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectPanelTop = new GradientPanel (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80)' 0);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectPanelTop = new GradientPanel (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80)' 0);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectPanelTop = new GradientPanel (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80)' 0);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectPanelTop = new GradientPanel (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80)' 0);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectPanelTop = new GradientPanel (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80)' 0);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectPanel = new GradientPanel (Color.FromArgb (255' 255' 255)' Color.FromArgb (192' 192' 192)' 0);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectPanel = new GradientPanel (Color.FromArgb (255' 255' 255)' Color.FromArgb (192' 192' 192)' 0);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectPanel = new GradientPanel (Color.FromArgb (255' 255' 255)' Color.FromArgb (192' 192' 192)' 0);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectPanel = new GradientPanel (Color.FromArgb (255' 255' 255)' Color.FromArgb (192' 192' 192)' 0);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectPanel = new GradientPanel (Color.FromArgb (255' 255' 255)' Color.FromArgb (192' 192' 192)' 0);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectPanel = new GradientPanel (Color.FromArgb (255' 255' 255)' Color.FromArgb (192' 192' 192)' 0);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectLogo.Location = new Point (3' 2);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectLogo.Location = new Point (3' 2);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectLogo.Size = new Size (200' 40);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectLogo.Size = new Size (200' 40);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectionArrow.Location = new Point (8' 5);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectionArrow.Location = new Point (8' 5);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectionArrow.Size = new Size (108' 30);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectionArrow.Size = new Size (108' 30);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectInfo.Font = new Font (Constants.FONTNAME' 8' FontStyle.Bold);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectType.Font = new Font (Constants.FONTNAME' 8' FontStyle.Bold);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectTypeInfo.Padding = new Padding (10);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectTypeIP.Font = new Font (Constants.FONTNAME' 8' FontStyle.Bold);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectLog.BackColor = Color.FromArgb (192' 192' 192);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectLog.BackColor = Color.FromArgb (192' 192' 192);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,DoConnectionPanel,The following statement contains a magic number: m_ConnectLog.BackColor = Color.FromArgb (192' 192' 192);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectPanelTop.Size = new Size (nPanelWidth' 46);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectionArrow.Location = new Point (nPanelWidth - 30' 10);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectionArrow.Location = new Point (nPanelWidth - 30' 10);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectionArrow.Size = new Size (20' 20);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectionArrow.Size = new Size (20' 20);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectTypeInfo.Location = new Point (10' 10);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectTypeInfo.Location = new Point (10' 10);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectTypeInfo.Size = new Size (m_ConnectPanel.ClientSize.Width - 20' 60);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectTypeInfo.Size = new Size (m_ConnectPanel.ClientSize.Width - 20' 60);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: nOffset = 20 + 60;  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: nOffset = 20 + 60;  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectType.Location = new Point (10' nOffset);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectType.Size = new Size (m_ConnectPanel.ClientSize.Width - 20' 0);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectTypeIP.Location = new Point (10' nOffset);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectTypeIP.Size = new Size (m_ConnectPanel.ClientSize.Width - 20' 0);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: nOffset += 10 + m_ConnectTypeIP.Size.Height;  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectLog.Location = new Point (10' nOffset);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectLog.Size = new Size (m_ConnectPanel.ClientSize.Width - 20' m_ConnectPanel.ClientSize.Height - (nOffset + 10));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectLog.Size = new Size (m_ConnectPanel.ClientSize.Width - 20' m_ConnectPanel.ClientSize.Height - (nOffset + 10));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectLog.Columns [0].Width = m_ConnectLog.ClientSize.Width - 30;  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectInfo.Location = new Point (205' 5);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectInfo.Location = new Point (205' 5);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,ResizeConnectionPanel,The following statement contains a magic number: m_ConnectInfo.Size = new Size (m_ConnectPanelTop.ClientSize.Width' 36);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bUpdateConnectionLog) {  	m_RPCMutex.WaitOne ();  	if (m_bLoggedInGUI != m_bLoggedIn) {  		m_bLoggedInGUI = m_bLoggedIn;  		if (m_bLoggedInGUI) {  			m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  			m_ConnectInfo.Text = "Connected";  			m_ConnectLogo.Image = m_ConnectLogoBMP;  		}  		else {  			m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  			m_ConnectInfo.Text = "Connecting";  			m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  		}  	}  	m_bUpdateConnectionLog = false;  	foreach (string s in m_LogItems) {  		AddLogItem (s);  	}  	m_LogItems.Clear ();  	m_RPCMutex.ReleaseMutex ();  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bUpdateConnectionLog) {  	m_RPCMutex.WaitOne ();  	if (m_bLoggedInGUI != m_bLoggedIn) {  		m_bLoggedInGUI = m_bLoggedIn;  		if (m_bLoggedInGUI) {  			m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  			m_ConnectInfo.Text = "Connected";  			m_ConnectLogo.Image = m_ConnectLogoBMP;  		}  		else {  			m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  			m_ConnectInfo.Text = "Connecting";  			m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  		}  	}  	m_bUpdateConnectionLog = false;  	foreach (string s in m_LogItems) {  		AddLogItem (s);  	}  	m_LogItems.Clear ();  	m_RPCMutex.ReleaseMutex ();  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bUpdateConnectionLog) {  	m_RPCMutex.WaitOne ();  	if (m_bLoggedInGUI != m_bLoggedIn) {  		m_bLoggedInGUI = m_bLoggedIn;  		if (m_bLoggedInGUI) {  			m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  			m_ConnectInfo.Text = "Connected";  			m_ConnectLogo.Image = m_ConnectLogoBMP;  		}  		else {  			m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  			m_ConnectInfo.Text = "Connecting";  			m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  		}  	}  	m_bUpdateConnectionLog = false;  	foreach (string s in m_LogItems) {  		AddLogItem (s);  	}  	m_LogItems.Clear ();  	m_RPCMutex.ReleaseMutex ();  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bUpdateConnectionLog) {  	m_RPCMutex.WaitOne ();  	if (m_bLoggedInGUI != m_bLoggedIn) {  		m_bLoggedInGUI = m_bLoggedIn;  		if (m_bLoggedInGUI) {  			m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  			m_ConnectInfo.Text = "Connected";  			m_ConnectLogo.Image = m_ConnectLogoBMP;  		}  		else {  			m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  			m_ConnectInfo.Text = "Connecting";  			m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  		}  	}  	m_bUpdateConnectionLog = false;  	foreach (string s in m_LogItems) {  		AddLogItem (s);  	}  	m_LogItems.Clear ();  	m_RPCMutex.ReleaseMutex ();  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bUpdateConnectionLog) {  	m_RPCMutex.WaitOne ();  	if (m_bLoggedInGUI != m_bLoggedIn) {  		m_bLoggedInGUI = m_bLoggedIn;  		if (m_bLoggedInGUI) {  			m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  			m_ConnectInfo.Text = "Connected";  			m_ConnectLogo.Image = m_ConnectLogoBMP;  		}  		else {  			m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  			m_ConnectInfo.Text = "Connecting";  			m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  		}  	}  	m_bUpdateConnectionLog = false;  	foreach (string s in m_LogItems) {  		AddLogItem (s);  	}  	m_LogItems.Clear ();  	m_RPCMutex.ReleaseMutex ();  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bUpdateConnectionLog) {  	m_RPCMutex.WaitOne ();  	if (m_bLoggedInGUI != m_bLoggedIn) {  		m_bLoggedInGUI = m_bLoggedIn;  		if (m_bLoggedInGUI) {  			m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  			m_ConnectInfo.Text = "Connected";  			m_ConnectLogo.Image = m_ConnectLogoBMP;  		}  		else {  			m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  			m_ConnectInfo.Text = "Connecting";  			m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  		}  	}  	m_bUpdateConnectionLog = false;  	foreach (string s in m_LogItems) {  		AddLogItem (s);  	}  	m_LogItems.Clear ();  	m_RPCMutex.ReleaseMutex ();  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bUpdateConnectionLog) {  	m_RPCMutex.WaitOne ();  	if (m_bLoggedInGUI != m_bLoggedIn) {  		m_bLoggedInGUI = m_bLoggedIn;  		if (m_bLoggedInGUI) {  			m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  			m_ConnectInfo.Text = "Connected";  			m_ConnectLogo.Image = m_ConnectLogoBMP;  		}  		else {  			m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  			m_ConnectInfo.Text = "Connecting";  			m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  		}  	}  	m_bUpdateConnectionLog = false;  	foreach (string s in m_LogItems) {  		AddLogItem (s);  	}  	m_LogItems.Clear ();  	m_RPCMutex.ReleaseMutex ();  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bUpdateConnectionLog) {  	m_RPCMutex.WaitOne ();  	if (m_bLoggedInGUI != m_bLoggedIn) {  		m_bLoggedInGUI = m_bLoggedIn;  		if (m_bLoggedInGUI) {  			m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  			m_ConnectInfo.Text = "Connected";  			m_ConnectLogo.Image = m_ConnectLogoBMP;  		}  		else {  			m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  			m_ConnectInfo.Text = "Connecting";  			m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  		}  	}  	m_bUpdateConnectionLog = false;  	foreach (string s in m_LogItems) {  		AddLogItem (s);  	}  	m_LogItems.Clear ();  	m_RPCMutex.ReleaseMutex ();  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bUpdateConnectionLog) {  	m_RPCMutex.WaitOne ();  	if (m_bLoggedInGUI != m_bLoggedIn) {  		m_bLoggedInGUI = m_bLoggedIn;  		if (m_bLoggedInGUI) {  			m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  			m_ConnectInfo.Text = "Connected";  			m_ConnectLogo.Image = m_ConnectLogoBMP;  		}  		else {  			m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  			m_ConnectInfo.Text = "Connecting";  			m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  		}  	}  	m_bUpdateConnectionLog = false;  	foreach (string s in m_LogItems) {  		AddLogItem (s);  	}  	m_LogItems.Clear ();  	m_RPCMutex.ReleaseMutex ();  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bUpdateConnectionLog) {  	m_RPCMutex.WaitOne ();  	if (m_bLoggedInGUI != m_bLoggedIn) {  		m_bLoggedInGUI = m_bLoggedIn;  		if (m_bLoggedInGUI) {  			m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  			m_ConnectInfo.Text = "Connected";  			m_ConnectLogo.Image = m_ConnectLogoBMP;  		}  		else {  			m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  			m_ConnectInfo.Text = "Connecting";  			m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  		}  	}  	m_bUpdateConnectionLog = false;  	foreach (string s in m_LogItems) {  		AddLogItem (s);  	}  	m_LogItems.Clear ();  	m_RPCMutex.ReleaseMutex ();  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bUpdateConnectionLog) {  	m_RPCMutex.WaitOne ();  	if (m_bLoggedInGUI != m_bLoggedIn) {  		m_bLoggedInGUI = m_bLoggedIn;  		if (m_bLoggedInGUI) {  			m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  			m_ConnectInfo.Text = "Connected";  			m_ConnectLogo.Image = m_ConnectLogoBMP;  		}  		else {  			m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  			m_ConnectInfo.Text = "Connecting";  			m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  		}  	}  	m_bUpdateConnectionLog = false;  	foreach (string s in m_LogItems) {  		AddLogItem (s);  	}  	m_LogItems.Clear ();  	m_RPCMutex.ReleaseMutex ();  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bUpdateConnectionLog) {  	m_RPCMutex.WaitOne ();  	if (m_bLoggedInGUI != m_bLoggedIn) {  		m_bLoggedInGUI = m_bLoggedIn;  		if (m_bLoggedInGUI) {  			m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  			m_ConnectInfo.Text = "Connected";  			m_ConnectLogo.Image = m_ConnectLogoBMP;  		}  		else {  			m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  			m_ConnectInfo.Text = "Connecting";  			m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  		}  	}  	m_bUpdateConnectionLog = false;  	foreach (string s in m_LogItems) {  		AddLogItem (s);  	}  	m_LogItems.Clear ();  	m_RPCMutex.ReleaseMutex ();  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI != m_bLoggedIn) {  	m_bLoggedInGUI = m_bLoggedIn;  	if (m_bLoggedInGUI) {  		m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  		m_ConnectInfo.Text = "Connected";  		m_ConnectLogo.Image = m_ConnectLogoBMP;  	}  	else {  		m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  		m_ConnectInfo.Text = "Connecting";  		m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  	}  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI != m_bLoggedIn) {  	m_bLoggedInGUI = m_bLoggedIn;  	if (m_bLoggedInGUI) {  		m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  		m_ConnectInfo.Text = "Connected";  		m_ConnectLogo.Image = m_ConnectLogoBMP;  	}  	else {  		m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  		m_ConnectInfo.Text = "Connecting";  		m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  	}  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI != m_bLoggedIn) {  	m_bLoggedInGUI = m_bLoggedIn;  	if (m_bLoggedInGUI) {  		m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  		m_ConnectInfo.Text = "Connected";  		m_ConnectLogo.Image = m_ConnectLogoBMP;  	}  	else {  		m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  		m_ConnectInfo.Text = "Connecting";  		m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  	}  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI != m_bLoggedIn) {  	m_bLoggedInGUI = m_bLoggedIn;  	if (m_bLoggedInGUI) {  		m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  		m_ConnectInfo.Text = "Connected";  		m_ConnectLogo.Image = m_ConnectLogoBMP;  	}  	else {  		m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  		m_ConnectInfo.Text = "Connecting";  		m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  	}  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI != m_bLoggedIn) {  	m_bLoggedInGUI = m_bLoggedIn;  	if (m_bLoggedInGUI) {  		m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  		m_ConnectInfo.Text = "Connected";  		m_ConnectLogo.Image = m_ConnectLogoBMP;  	}  	else {  		m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  		m_ConnectInfo.Text = "Connecting";  		m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  	}  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI != m_bLoggedIn) {  	m_bLoggedInGUI = m_bLoggedIn;  	if (m_bLoggedInGUI) {  		m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  		m_ConnectInfo.Text = "Connected";  		m_ConnectLogo.Image = m_ConnectLogoBMP;  	}  	else {  		m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  		m_ConnectInfo.Text = "Connecting";  		m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  	}  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI != m_bLoggedIn) {  	m_bLoggedInGUI = m_bLoggedIn;  	if (m_bLoggedInGUI) {  		m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  		m_ConnectInfo.Text = "Connected";  		m_ConnectLogo.Image = m_ConnectLogoBMP;  	}  	else {  		m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  		m_ConnectInfo.Text = "Connecting";  		m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  	}  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI != m_bLoggedIn) {  	m_bLoggedInGUI = m_bLoggedIn;  	if (m_bLoggedInGUI) {  		m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  		m_ConnectInfo.Text = "Connected";  		m_ConnectLogo.Image = m_ConnectLogoBMP;  	}  	else {  		m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  		m_ConnectInfo.Text = "Connecting";  		m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  	}  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI != m_bLoggedIn) {  	m_bLoggedInGUI = m_bLoggedIn;  	if (m_bLoggedInGUI) {  		m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  		m_ConnectInfo.Text = "Connected";  		m_ConnectLogo.Image = m_ConnectLogoBMP;  	}  	else {  		m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  		m_ConnectInfo.Text = "Connecting";  		m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  	}  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI != m_bLoggedIn) {  	m_bLoggedInGUI = m_bLoggedIn;  	if (m_bLoggedInGUI) {  		m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  		m_ConnectInfo.Text = "Connected";  		m_ConnectLogo.Image = m_ConnectLogoBMP;  	}  	else {  		m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  		m_ConnectInfo.Text = "Connecting";  		m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  	}  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI != m_bLoggedIn) {  	m_bLoggedInGUI = m_bLoggedIn;  	if (m_bLoggedInGUI) {  		m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  		m_ConnectInfo.Text = "Connected";  		m_ConnectLogo.Image = m_ConnectLogoBMP;  	}  	else {  		m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  		m_ConnectInfo.Text = "Connecting";  		m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  	}  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI != m_bLoggedIn) {  	m_bLoggedInGUI = m_bLoggedIn;  	if (m_bLoggedInGUI) {  		m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  		m_ConnectInfo.Text = "Connected";  		m_ConnectLogo.Image = m_ConnectLogoBMP;  	}  	else {  		m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  		m_ConnectInfo.Text = "Connecting";  		m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  	}  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI) {  	m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  	m_ConnectInfo.Text = "Connected";  	m_ConnectLogo.Image = m_ConnectLogoBMP;  }  else {  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  	m_ConnectInfo.Text = "Connecting";  	m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI) {  	m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  	m_ConnectInfo.Text = "Connected";  	m_ConnectLogo.Image = m_ConnectLogoBMP;  }  else {  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  	m_ConnectInfo.Text = "Connecting";  	m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI) {  	m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  	m_ConnectInfo.Text = "Connected";  	m_ConnectLogo.Image = m_ConnectLogoBMP;  }  else {  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  	m_ConnectInfo.Text = "Connecting";  	m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI) {  	m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  	m_ConnectInfo.Text = "Connected";  	m_ConnectLogo.Image = m_ConnectLogoBMP;  }  else {  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  	m_ConnectInfo.Text = "Connecting";  	m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI) {  	m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  	m_ConnectInfo.Text = "Connected";  	m_ConnectLogo.Image = m_ConnectLogoBMP;  }  else {  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  	m_ConnectInfo.Text = "Connecting";  	m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI) {  	m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  	m_ConnectInfo.Text = "Connected";  	m_ConnectLogo.Image = m_ConnectLogoBMP;  }  else {  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  	m_ConnectInfo.Text = "Connecting";  	m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI) {  	m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  	m_ConnectInfo.Text = "Connected";  	m_ConnectLogo.Image = m_ConnectLogoBMP;  }  else {  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  	m_ConnectInfo.Text = "Connecting";  	m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI) {  	m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  	m_ConnectInfo.Text = "Connected";  	m_ConnectLogo.Image = m_ConnectLogoBMP;  }  else {  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  	m_ConnectInfo.Text = "Connecting";  	m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI) {  	m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  	m_ConnectInfo.Text = "Connected";  	m_ConnectLogo.Image = m_ConnectLogoBMP;  }  else {  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  	m_ConnectInfo.Text = "Connecting";  	m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI) {  	m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  	m_ConnectInfo.Text = "Connected";  	m_ConnectLogo.Image = m_ConnectLogoBMP;  }  else {  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  	m_ConnectInfo.Text = "Connecting";  	m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI) {  	m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  	m_ConnectInfo.Text = "Connected";  	m_ConnectLogo.Image = m_ConnectLogoBMP;  }  else {  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  	m_ConnectInfo.Text = "Connecting";  	m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: if (m_bLoggedInGUI) {  	m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  	m_ConnectInfo.Text = "Connected";  	m_ConnectLogo.Image = m_ConnectLogoBMP;  }  else {  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  	m_ConnectInfo.Text = "Connecting";  	m_ConnectLogo.Image = Grayscale (m_ConnectLogoBMP);  }  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (40' 30' 30)' Color.FromArgb (80' 80' 110));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectionPanelTimerEvent,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseEnter,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (160' 100' 100)' Color.FromArgb (255' 150' 150));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: if (m_bLoggedInGUI)  	m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  else  	m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (30' 30' 40)' Color.FromArgb (80' 80' 110));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,connectMouseLeave,The following statement contains a magic number: m_ConnectPanelTop.SetColor (Color.FromArgb (120' 30' 30)' Color.FromArgb (255' 80' 80));  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,AddLogItem,The following statement contains a magic number: if (m_ConnectLog.Items.Count > 100)  	m_ConnectLog.Items.RemoveAt (100);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,AddLogItem,The following statement contains a magic number: if (m_ConnectLog.Items.Count > 100)  	m_ConnectLog.Items.RemoveAt (100);  
Magic Number,MicroCash.Client.Thin,Form1,C:\repos\Ahimoth_MicroCash-Thin-Client\connectionpanel.cs,AddLogItem,The following statement contains a magic number: m_ConnectLog.Items.RemoveAt (100);  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,Form2_Load,The following statement contains a magic number: m_Images = new PictureBox[3];  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,Form2_Load,The following statement contains a magic number: for (int x = 0; x < 3; x++) {  	m_Images [x] = new PictureBox ();  	m_Images [x].SizeMode = PictureBoxSizeMode.StretchImage;  	m_Images [x].BackColor = Color.Transparent;  	m_Images [x].Image = m_cross;  	this.Controls.Add (m_Images [x]);  }  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,Form2_Load,The following statement contains a magic number: m_Images [0].Location = new Point (username.Location.X + username.Size.Width + 5' username.Location.Y);  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,Form2_Load,The following statement contains a magic number: m_Images [1].Location = new Point (password1.Location.X + password1.Size.Width + 5' password1.Location.Y);  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,Form2_Load,The following statement contains a magic number: m_Images [2].Location = new Point (password2.Location.X + password2.Size.Width + 5' password2.Location.Y);  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,Form2_Load,The following statement contains a magic number: m_Images [2].Location = new Point (password2.Location.X + password2.Size.Width + 5' password2.Location.Y);  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,Form2_Load,The following statement contains a magic number: m_Images [2].Size = new Size (username.Size.Height' username.Size.Height);  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,Form2_Load,The following statement contains a magic number: ToolTip3.SetToolTip (m_Images [2]' "*) Must be at least 8 characters in length.\r\n*) Must not be the same as password 1");  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,VerifyDetails,The following statement contains a magic number: if (user.Length >= 3 && IsValidFilename (user) == true) {  	nRet |= 1;  }  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,VerifyDetails,The following statement contains a magic number: if (pass1.Length >= 8) {  	nRet |= 2;  }  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,VerifyDetails,The following statement contains a magic number: if (pass1.Length >= 8) {  	nRet |= 2;  }  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,VerifyDetails,The following statement contains a magic number: nRet |= 2;  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,VerifyDetails,The following statement contains a magic number: if (pass2.Length >= 8 && pass2 != pass1) {  	nRet |= 4;  }  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,VerifyDetails,The following statement contains a magic number: if (pass2.Length >= 8 && pass2 != pass1) {  	nRet |= 4;  }  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,VerifyDetails,The following statement contains a magic number: nRet |= 4;  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,button1_Click,The following statement contains a magic number: if (nRet != 7)  	return;  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,OnTextChanged,The following statement contains a magic number: if (nRet == 7)  	createbutton.Enabled = true;  else  	createbutton.Enabled = false;  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,OnTextChanged,The following statement contains a magic number: if ((nRet & 2) == 2)  	m_Images [1].Image = m_tick;  else  	m_Images [1].Image = m_cross;  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,OnTextChanged,The following statement contains a magic number: if ((nRet & 2) == 2)  	m_Images [1].Image = m_tick;  else  	m_Images [1].Image = m_cross;  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,OnTextChanged,The following statement contains a magic number: if ((nRet & 4) == 4)  	m_Images [2].Image = m_tick;  else  	m_Images [2].Image = m_cross;  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,OnTextChanged,The following statement contains a magic number: if ((nRet & 4) == 4)  	m_Images [2].Image = m_tick;  else  	m_Images [2].Image = m_cross;  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,OnTextChanged,The following statement contains a magic number: if ((nRet & 4) == 4)  	m_Images [2].Image = m_tick;  else  	m_Images [2].Image = m_cross;  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,OnTextChanged,The following statement contains a magic number: if ((nRet & 4) == 4)  	m_Images [2].Image = m_tick;  else  	m_Images [2].Image = m_cross;  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,OnTextChanged,The following statement contains a magic number: m_Images [2].Image = m_tick;  
Magic Number,MicroCash.Client.Thin,Form2,C:\repos\Ahimoth_MicroCash-Thin-Client\Form2.cs,OnTextChanged,The following statement contains a magic number: m_Images [2].Image = m_cross;  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,MeasureItemMenuItemCopy,The following statement contains a magic number: if (mi.Tag == null && (mi.Text == null || mi.Text.Length == 0)) {  	//separator  	miea.ItemWidth = 150;  	miea.ItemHeight = 16;  	return;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,MeasureItemMenuItemCopy,The following statement contains a magic number: if (mi.Tag == null && (mi.Text == null || mi.Text.Length == 0)) {  	//separator  	miea.ItemWidth = 150;  	miea.ItemHeight = 16;  	return;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,MeasureItemMenuItemCopy,The following statement contains a magic number: miea.ItemWidth = 150;  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,MeasureItemMenuItemCopy,The following statement contains a magic number: miea.ItemHeight = 16;  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,MeasureItemMenuItemCopy,The following statement contains a magic number: if (bmp != null) {  	miea.ItemWidth += bmp.Width + 10;  	if (miea.ItemHeight < bmp.Height + 10)  		miea.ItemHeight = bmp.Height + 10;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,MeasureItemMenuItemCopy,The following statement contains a magic number: if (bmp != null) {  	miea.ItemWidth += bmp.Width + 10;  	if (miea.ItemHeight < bmp.Height + 10)  		miea.ItemHeight = bmp.Height + 10;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,MeasureItemMenuItemCopy,The following statement contains a magic number: if (bmp != null) {  	miea.ItemWidth += bmp.Width + 10;  	if (miea.ItemHeight < bmp.Height + 10)  		miea.ItemHeight = bmp.Height + 10;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,MeasureItemMenuItemCopy,The following statement contains a magic number: miea.ItemWidth += bmp.Width + 10;  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,MeasureItemMenuItemCopy,The following statement contains a magic number: if (miea.ItemHeight < bmp.Height + 10)  	miea.ItemHeight = bmp.Height + 10;  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,MeasureItemMenuItemCopy,The following statement contains a magic number: if (miea.ItemHeight < bmp.Height + 10)  	miea.ItemHeight = bmp.Height + 10;  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,MeasureItemMenuItemCopy,The following statement contains a magic number: miea.ItemHeight = bmp.Height + 10;  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Tag != null) {  	Bitmap bmp = (Bitmap)mi.Tag;  	// Rectangle for image portion  	Rectangle rectImage = e.Bounds;  	// Set image rectangle same dimensions as image  	if (mi.Text.Length > 0) {  		rectImage.X += 5;  		rectImage.Y += 5;  	}  	else {  		rectImage.X += (rectImage.Width - bmp.Width) / 2;  		rectImage.Y += (rectImage.Height - bmp.Height) / 2;  	}  	rectImage.Width = bmp.Width;  	rectImage.Height = bmp.Height;  	rectText.X += rectImage.X + rectImage.Width + 5;  	e.Graphics.DrawImage (bmp' rectImage);  }  else {  	rectText.X += 5;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Tag != null) {  	Bitmap bmp = (Bitmap)mi.Tag;  	// Rectangle for image portion  	Rectangle rectImage = e.Bounds;  	// Set image rectangle same dimensions as image  	if (mi.Text.Length > 0) {  		rectImage.X += 5;  		rectImage.Y += 5;  	}  	else {  		rectImage.X += (rectImage.Width - bmp.Width) / 2;  		rectImage.Y += (rectImage.Height - bmp.Height) / 2;  	}  	rectImage.Width = bmp.Width;  	rectImage.Height = bmp.Height;  	rectText.X += rectImage.X + rectImage.Width + 5;  	e.Graphics.DrawImage (bmp' rectImage);  }  else {  	rectText.X += 5;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Tag != null) {  	Bitmap bmp = (Bitmap)mi.Tag;  	// Rectangle for image portion  	Rectangle rectImage = e.Bounds;  	// Set image rectangle same dimensions as image  	if (mi.Text.Length > 0) {  		rectImage.X += 5;  		rectImage.Y += 5;  	}  	else {  		rectImage.X += (rectImage.Width - bmp.Width) / 2;  		rectImage.Y += (rectImage.Height - bmp.Height) / 2;  	}  	rectImage.Width = bmp.Width;  	rectImage.Height = bmp.Height;  	rectText.X += rectImage.X + rectImage.Width + 5;  	e.Graphics.DrawImage (bmp' rectImage);  }  else {  	rectText.X += 5;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Tag != null) {  	Bitmap bmp = (Bitmap)mi.Tag;  	// Rectangle for image portion  	Rectangle rectImage = e.Bounds;  	// Set image rectangle same dimensions as image  	if (mi.Text.Length > 0) {  		rectImage.X += 5;  		rectImage.Y += 5;  	}  	else {  		rectImage.X += (rectImage.Width - bmp.Width) / 2;  		rectImage.Y += (rectImage.Height - bmp.Height) / 2;  	}  	rectImage.Width = bmp.Width;  	rectImage.Height = bmp.Height;  	rectText.X += rectImage.X + rectImage.Width + 5;  	e.Graphics.DrawImage (bmp' rectImage);  }  else {  	rectText.X += 5;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Tag != null) {  	Bitmap bmp = (Bitmap)mi.Tag;  	// Rectangle for image portion  	Rectangle rectImage = e.Bounds;  	// Set image rectangle same dimensions as image  	if (mi.Text.Length > 0) {  		rectImage.X += 5;  		rectImage.Y += 5;  	}  	else {  		rectImage.X += (rectImage.Width - bmp.Width) / 2;  		rectImage.Y += (rectImage.Height - bmp.Height) / 2;  	}  	rectImage.Width = bmp.Width;  	rectImage.Height = bmp.Height;  	rectText.X += rectImage.X + rectImage.Width + 5;  	e.Graphics.DrawImage (bmp' rectImage);  }  else {  	rectText.X += 5;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Tag != null) {  	Bitmap bmp = (Bitmap)mi.Tag;  	// Rectangle for image portion  	Rectangle rectImage = e.Bounds;  	// Set image rectangle same dimensions as image  	if (mi.Text.Length > 0) {  		rectImage.X += 5;  		rectImage.Y += 5;  	}  	else {  		rectImage.X += (rectImage.Width - bmp.Width) / 2;  		rectImage.Y += (rectImage.Height - bmp.Height) / 2;  	}  	rectImage.Width = bmp.Width;  	rectImage.Height = bmp.Height;  	rectText.X += rectImage.X + rectImage.Width + 5;  	e.Graphics.DrawImage (bmp' rectImage);  }  else {  	rectText.X += 5;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Text.Length > 0) {  	rectImage.X += 5;  	rectImage.Y += 5;  }  else {  	rectImage.X += (rectImage.Width - bmp.Width) / 2;  	rectImage.Y += (rectImage.Height - bmp.Height) / 2;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Text.Length > 0) {  	rectImage.X += 5;  	rectImage.Y += 5;  }  else {  	rectImage.X += (rectImage.Width - bmp.Width) / 2;  	rectImage.Y += (rectImage.Height - bmp.Height) / 2;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Text.Length > 0) {  	rectImage.X += 5;  	rectImage.Y += 5;  }  else {  	rectImage.X += (rectImage.Width - bmp.Width) / 2;  	rectImage.Y += (rectImage.Height - bmp.Height) / 2;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Text.Length > 0) {  	rectImage.X += 5;  	rectImage.Y += 5;  }  else {  	rectImage.X += (rectImage.Width - bmp.Width) / 2;  	rectImage.Y += (rectImage.Height - bmp.Height) / 2;  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: rectImage.X += 5;  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: rectImage.Y += 5;  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: rectImage.X += (rectImage.Width - bmp.Width) / 2;  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: rectImage.Y += (rectImage.Height - bmp.Height) / 2;  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: rectText.X += rectImage.X + rectImage.Width + 5;  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: rectText.X += 5;  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Text.Length == 0 && mi.Tag == null) {  	e.Graphics.DrawLine (new Pen (Color.Black' 2)' new Point (e.Bounds.X + 5' e.Bounds.Y + 7)' new Point ((e.Bounds.Width - 5)' e.Bounds.Y + 7));  }  else if (mi.Text.Length > 0) {  	Font menuFont = SystemInformation.MenuFont;  	if (m_Font != null)  		menuFont = m_Font;  	e.Graphics.DrawString (mi.Text' menuFont' menuBrush' rectText.X' rectText.Y + ((e.Bounds.Height - menuFont.Height) / 2)' strfmt);  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Text.Length == 0 && mi.Tag == null) {  	e.Graphics.DrawLine (new Pen (Color.Black' 2)' new Point (e.Bounds.X + 5' e.Bounds.Y + 7)' new Point ((e.Bounds.Width - 5)' e.Bounds.Y + 7));  }  else if (mi.Text.Length > 0) {  	Font menuFont = SystemInformation.MenuFont;  	if (m_Font != null)  		menuFont = m_Font;  	e.Graphics.DrawString (mi.Text' menuFont' menuBrush' rectText.X' rectText.Y + ((e.Bounds.Height - menuFont.Height) / 2)' strfmt);  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Text.Length == 0 && mi.Tag == null) {  	e.Graphics.DrawLine (new Pen (Color.Black' 2)' new Point (e.Bounds.X + 5' e.Bounds.Y + 7)' new Point ((e.Bounds.Width - 5)' e.Bounds.Y + 7));  }  else if (mi.Text.Length > 0) {  	Font menuFont = SystemInformation.MenuFont;  	if (m_Font != null)  		menuFont = m_Font;  	e.Graphics.DrawString (mi.Text' menuFont' menuBrush' rectText.X' rectText.Y + ((e.Bounds.Height - menuFont.Height) / 2)' strfmt);  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Text.Length == 0 && mi.Tag == null) {  	e.Graphics.DrawLine (new Pen (Color.Black' 2)' new Point (e.Bounds.X + 5' e.Bounds.Y + 7)' new Point ((e.Bounds.Width - 5)' e.Bounds.Y + 7));  }  else if (mi.Text.Length > 0) {  	Font menuFont = SystemInformation.MenuFont;  	if (m_Font != null)  		menuFont = m_Font;  	e.Graphics.DrawString (mi.Text' menuFont' menuBrush' rectText.X' rectText.Y + ((e.Bounds.Height - menuFont.Height) / 2)' strfmt);  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Text.Length == 0 && mi.Tag == null) {  	e.Graphics.DrawLine (new Pen (Color.Black' 2)' new Point (e.Bounds.X + 5' e.Bounds.Y + 7)' new Point ((e.Bounds.Width - 5)' e.Bounds.Y + 7));  }  else if (mi.Text.Length > 0) {  	Font menuFont = SystemInformation.MenuFont;  	if (m_Font != null)  		menuFont = m_Font;  	e.Graphics.DrawString (mi.Text' menuFont' menuBrush' rectText.X' rectText.Y + ((e.Bounds.Height - menuFont.Height) / 2)' strfmt);  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Text.Length == 0 && mi.Tag == null) {  	e.Graphics.DrawLine (new Pen (Color.Black' 2)' new Point (e.Bounds.X + 5' e.Bounds.Y + 7)' new Point ((e.Bounds.Width - 5)' e.Bounds.Y + 7));  }  else if (mi.Text.Length > 0) {  	Font menuFont = SystemInformation.MenuFont;  	if (m_Font != null)  		menuFont = m_Font;  	e.Graphics.DrawString (mi.Text' menuFont' menuBrush' rectText.X' rectText.Y + ((e.Bounds.Height - menuFont.Height) / 2)' strfmt);  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: e.Graphics.DrawLine (new Pen (Color.Black' 2)' new Point (e.Bounds.X + 5' e.Bounds.Y + 7)' new Point ((e.Bounds.Width - 5)' e.Bounds.Y + 7));  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: e.Graphics.DrawLine (new Pen (Color.Black' 2)' new Point (e.Bounds.X + 5' e.Bounds.Y + 7)' new Point ((e.Bounds.Width - 5)' e.Bounds.Y + 7));  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: e.Graphics.DrawLine (new Pen (Color.Black' 2)' new Point (e.Bounds.X + 5' e.Bounds.Y + 7)' new Point ((e.Bounds.Width - 5)' e.Bounds.Y + 7));  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: e.Graphics.DrawLine (new Pen (Color.Black' 2)' new Point (e.Bounds.X + 5' e.Bounds.Y + 7)' new Point ((e.Bounds.Width - 5)' e.Bounds.Y + 7));  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: e.Graphics.DrawLine (new Pen (Color.Black' 2)' new Point (e.Bounds.X + 5' e.Bounds.Y + 7)' new Point ((e.Bounds.Width - 5)' e.Bounds.Y + 7));  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: if (mi.Text.Length > 0) {  	Font menuFont = SystemInformation.MenuFont;  	if (m_Font != null)  		menuFont = m_Font;  	e.Graphics.DrawString (mi.Text' menuFont' menuBrush' rectText.X' rectText.Y + ((e.Bounds.Height - menuFont.Height) / 2)' strfmt);  }  
Magic Number,MicroCash.Client.Thin,ImageMenu,C:\repos\Ahimoth_MicroCash-Thin-Client\imagemenu.cs,DrawMenuItemCopy,The following statement contains a magic number: e.Graphics.DrawString (mi.Text' menuFont' menuBrush' rectText.X' rectText.Y + ((e.Bounds.Height - menuFont.Height) / 2)' strfmt);  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,MicroCashKeyPair,The following statement contains a magic number: if (bGenerate) {  	ECKeyPairGenerator gen = new ECKeyPairGenerator ();  	var secureRandom = new SecureRandom ();  	var ps = Org.BouncyCastle.Asn1.Sec.SecNamedCurves.GetByName ("secp256k1");  	var ecParams = new ECDomainParameters (ps.Curve' ps.G' ps.N' ps.H);  	var keyGenParam = new ECKeyGenerationParameters (ecParams' secureRandom);  	gen.Init (keyGenParam);  	AsymmetricCipherKeyPair kp = gen.GenerateKeyPair ();  	ECPrivateKeyParameters priv = (ECPrivateKeyParameters)kp.Private;  	ECPublicKeyParameters pub = (ECPublicKeyParameters)kp.Public;  	byte[] hexpriv = priv.D.ToByteArrayUnsigned ();  	//byte[] hexPub = pub  	Org.BouncyCastle.Math.BigInteger Db = new Org.BouncyCastle.Math.BigInteger (1' hexpriv);  	ECPoint dd = ps.G.Multiply (Db);  	byte[] pubaddr = new byte[65];  	byte[] Y = dd.Y.ToBigInteger ().ToByteArray ();  	Array.Copy (Y' 0' pubaddr' 64 - Y.Length + 1' Y.Length);  	byte[] X = dd.X.ToBigInteger ().ToByteArray ();  	Array.Copy (X' 0' pubaddr' 32 - X.Length + 1' X.Length);  	pubaddr [0] = 4;  	m_Priv = new BigInteger (hexpriv);  	m_Pub = pubaddr;  	m_Address = ConvertPubKeyToAddress (m_Pub);  	m_PubKeyString = bytesToHexString (m_Pub);  	m_PrivKeyString = bytesToHexString (m_Priv.ToByteArray ());  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,MicroCashKeyPair,The following statement contains a magic number: if (bGenerate) {  	ECKeyPairGenerator gen = new ECKeyPairGenerator ();  	var secureRandom = new SecureRandom ();  	var ps = Org.BouncyCastle.Asn1.Sec.SecNamedCurves.GetByName ("secp256k1");  	var ecParams = new ECDomainParameters (ps.Curve' ps.G' ps.N' ps.H);  	var keyGenParam = new ECKeyGenerationParameters (ecParams' secureRandom);  	gen.Init (keyGenParam);  	AsymmetricCipherKeyPair kp = gen.GenerateKeyPair ();  	ECPrivateKeyParameters priv = (ECPrivateKeyParameters)kp.Private;  	ECPublicKeyParameters pub = (ECPublicKeyParameters)kp.Public;  	byte[] hexpriv = priv.D.ToByteArrayUnsigned ();  	//byte[] hexPub = pub  	Org.BouncyCastle.Math.BigInteger Db = new Org.BouncyCastle.Math.BigInteger (1' hexpriv);  	ECPoint dd = ps.G.Multiply (Db);  	byte[] pubaddr = new byte[65];  	byte[] Y = dd.Y.ToBigInteger ().ToByteArray ();  	Array.Copy (Y' 0' pubaddr' 64 - Y.Length + 1' Y.Length);  	byte[] X = dd.X.ToBigInteger ().ToByteArray ();  	Array.Copy (X' 0' pubaddr' 32 - X.Length + 1' X.Length);  	pubaddr [0] = 4;  	m_Priv = new BigInteger (hexpriv);  	m_Pub = pubaddr;  	m_Address = ConvertPubKeyToAddress (m_Pub);  	m_PubKeyString = bytesToHexString (m_Pub);  	m_PrivKeyString = bytesToHexString (m_Priv.ToByteArray ());  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,MicroCashKeyPair,The following statement contains a magic number: if (bGenerate) {  	ECKeyPairGenerator gen = new ECKeyPairGenerator ();  	var secureRandom = new SecureRandom ();  	var ps = Org.BouncyCastle.Asn1.Sec.SecNamedCurves.GetByName ("secp256k1");  	var ecParams = new ECDomainParameters (ps.Curve' ps.G' ps.N' ps.H);  	var keyGenParam = new ECKeyGenerationParameters (ecParams' secureRandom);  	gen.Init (keyGenParam);  	AsymmetricCipherKeyPair kp = gen.GenerateKeyPair ();  	ECPrivateKeyParameters priv = (ECPrivateKeyParameters)kp.Private;  	ECPublicKeyParameters pub = (ECPublicKeyParameters)kp.Public;  	byte[] hexpriv = priv.D.ToByteArrayUnsigned ();  	//byte[] hexPub = pub  	Org.BouncyCastle.Math.BigInteger Db = new Org.BouncyCastle.Math.BigInteger (1' hexpriv);  	ECPoint dd = ps.G.Multiply (Db);  	byte[] pubaddr = new byte[65];  	byte[] Y = dd.Y.ToBigInteger ().ToByteArray ();  	Array.Copy (Y' 0' pubaddr' 64 - Y.Length + 1' Y.Length);  	byte[] X = dd.X.ToBigInteger ().ToByteArray ();  	Array.Copy (X' 0' pubaddr' 32 - X.Length + 1' X.Length);  	pubaddr [0] = 4;  	m_Priv = new BigInteger (hexpriv);  	m_Pub = pubaddr;  	m_Address = ConvertPubKeyToAddress (m_Pub);  	m_PubKeyString = bytesToHexString (m_Pub);  	m_PrivKeyString = bytesToHexString (m_Priv.ToByteArray ());  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,MicroCashKeyPair,The following statement contains a magic number: if (bGenerate) {  	ECKeyPairGenerator gen = new ECKeyPairGenerator ();  	var secureRandom = new SecureRandom ();  	var ps = Org.BouncyCastle.Asn1.Sec.SecNamedCurves.GetByName ("secp256k1");  	var ecParams = new ECDomainParameters (ps.Curve' ps.G' ps.N' ps.H);  	var keyGenParam = new ECKeyGenerationParameters (ecParams' secureRandom);  	gen.Init (keyGenParam);  	AsymmetricCipherKeyPair kp = gen.GenerateKeyPair ();  	ECPrivateKeyParameters priv = (ECPrivateKeyParameters)kp.Private;  	ECPublicKeyParameters pub = (ECPublicKeyParameters)kp.Public;  	byte[] hexpriv = priv.D.ToByteArrayUnsigned ();  	//byte[] hexPub = pub  	Org.BouncyCastle.Math.BigInteger Db = new Org.BouncyCastle.Math.BigInteger (1' hexpriv);  	ECPoint dd = ps.G.Multiply (Db);  	byte[] pubaddr = new byte[65];  	byte[] Y = dd.Y.ToBigInteger ().ToByteArray ();  	Array.Copy (Y' 0' pubaddr' 64 - Y.Length + 1' Y.Length);  	byte[] X = dd.X.ToBigInteger ().ToByteArray ();  	Array.Copy (X' 0' pubaddr' 32 - X.Length + 1' X.Length);  	pubaddr [0] = 4;  	m_Priv = new BigInteger (hexpriv);  	m_Pub = pubaddr;  	m_Address = ConvertPubKeyToAddress (m_Pub);  	m_PubKeyString = bytesToHexString (m_Pub);  	m_PrivKeyString = bytesToHexString (m_Priv.ToByteArray ());  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,MicroCashKeyPair,The following statement contains a magic number: Array.Copy (Y' 0' pubaddr' 64 - Y.Length + 1' Y.Length);  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,MicroCashKeyPair,The following statement contains a magic number: Array.Copy (X' 0' pubaddr' 32 - X.Length + 1' X.Length);  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,MicroCashKeyPair,The following statement contains a magic number: pubaddr [0] = 4;  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,ConvertPubKeyToAddress,The following statement contains a magic number: using (Blake512 blake512 = new Blake512 ()) {  	//first compute blake hash of pubkey  	byte[] pbHash = blake512.ComputeHash (bytes);  	//then copy into our "Message and hash" buffer  	Array.Copy (pbHash' 0' messageANDbytes' 0' 64);  	Array.Copy (bytes' 0' messageANDbytes' 64' bytes.Length);  	//do some rounds of blake512  	for (int x = 0; x < 100; x++) {  		pbHash = blake512.ComputeHash (messageANDbytes);  		//compute hash  		Array.Copy (pbHash' 0' messageANDbytes' 0' 64);  		//copy new hash into it  	}  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,ConvertPubKeyToAddress,The following statement contains a magic number: using (Blake512 blake512 = new Blake512 ()) {  	//first compute blake hash of pubkey  	byte[] pbHash = blake512.ComputeHash (bytes);  	//then copy into our "Message and hash" buffer  	Array.Copy (pbHash' 0' messageANDbytes' 0' 64);  	Array.Copy (bytes' 0' messageANDbytes' 64' bytes.Length);  	//do some rounds of blake512  	for (int x = 0; x < 100; x++) {  		pbHash = blake512.ComputeHash (messageANDbytes);  		//compute hash  		Array.Copy (pbHash' 0' messageANDbytes' 0' 64);  		//copy new hash into it  	}  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,ConvertPubKeyToAddress,The following statement contains a magic number: using (Blake512 blake512 = new Blake512 ()) {  	//first compute blake hash of pubkey  	byte[] pbHash = blake512.ComputeHash (bytes);  	//then copy into our "Message and hash" buffer  	Array.Copy (pbHash' 0' messageANDbytes' 0' 64);  	Array.Copy (bytes' 0' messageANDbytes' 64' bytes.Length);  	//do some rounds of blake512  	for (int x = 0; x < 100; x++) {  		pbHash = blake512.ComputeHash (messageANDbytes);  		//compute hash  		Array.Copy (pbHash' 0' messageANDbytes' 0' 64);  		//copy new hash into it  	}  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,ConvertPubKeyToAddress,The following statement contains a magic number: using (Blake512 blake512 = new Blake512 ()) {  	//first compute blake hash of pubkey  	byte[] pbHash = blake512.ComputeHash (bytes);  	//then copy into our "Message and hash" buffer  	Array.Copy (pbHash' 0' messageANDbytes' 0' 64);  	Array.Copy (bytes' 0' messageANDbytes' 64' bytes.Length);  	//do some rounds of blake512  	for (int x = 0; x < 100; x++) {  		pbHash = blake512.ComputeHash (messageANDbytes);  		//compute hash  		Array.Copy (pbHash' 0' messageANDbytes' 0' 64);  		//copy new hash into it  	}  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,ConvertPubKeyToAddress,The following statement contains a magic number: Array.Copy (pbHash' 0' messageANDbytes' 0' 64);  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,ConvertPubKeyToAddress,The following statement contains a magic number: Array.Copy (bytes' 0' messageANDbytes' 64' bytes.Length);  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,ConvertPubKeyToAddress,The following statement contains a magic number: for (int x = 0; x < 100; x++) {  	pbHash = blake512.ComputeHash (messageANDbytes);  	//compute hash  	Array.Copy (pbHash' 0' messageANDbytes' 0' 64);  	//copy new hash into it  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,ConvertPubKeyToAddress,The following statement contains a magic number: for (int x = 0; x < 100; x++) {  	pbHash = blake512.ComputeHash (messageANDbytes);  	//compute hash  	Array.Copy (pbHash' 0' messageANDbytes' 0' 64);  	//copy new hash into it  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,ConvertPubKeyToAddress,The following statement contains a magic number: Array.Copy (pbHash' 0' messageANDbytes' 0' 64);  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,ConvertPubKeyToAddress,The following statement contains a magic number: using (SHA256 hash256 = SHA256.Create ()) {  	hash256.Initialize ();  	hash256.TransformFinalBlock (messageANDbytes' 0' messageANDbytes.Length);  	byte[] address = new byte[10];  	Array.Copy (hash256.Hash' 0' address' 0' 10);  	return address;  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,ConvertPubKeyToAddress,The following statement contains a magic number: using (SHA256 hash256 = SHA256.Create ()) {  	hash256.Initialize ();  	hash256.TransformFinalBlock (messageANDbytes' 0' messageANDbytes.Length);  	byte[] address = new byte[10];  	Array.Copy (hash256.Hash' 0' address' 0' 10);  	return address;  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,ConvertPubKeyToAddress,The following statement contains a magic number: Array.Copy (hash256.Hash' 0' address' 0' 10);  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,HexString2Bytes,The following statement contains a magic number: if (len % 2 == 1)  	return null;  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,HexString2Bytes,The following statement contains a magic number: for (int i = 0; i != len_half; i++) {  	bs [i] = (byte)Int32.Parse (hexString.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber);  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,HexString2Bytes,The following statement contains a magic number: for (int i = 0; i != len_half; i++) {  	bs [i] = (byte)Int32.Parse (hexString.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber);  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,HexString2Bytes,The following statement contains a magic number: bs [i] = (byte)Int32.Parse (hexString.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber);  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,HexString2Bytes,The following statement contains a magic number: bs [i] = (byte)Int32.Parse (hexString.Substring (i * 2' 2)' System.Globalization.NumberStyles.HexNumber);  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,bytesToHexString,The following statement contains a magic number: foreach (byte b in bytes) {  	String s = ((int)0xFF & b).ToString ("x");  	//  Integer.toString(0xFF & b' 16);    // TODO: correct?  	if (s.Length < 2) {  		buf.Append ('0');  	}  	buf.Append (s);  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,bytesToHexString,The following statement contains a magic number: if (s.Length < 2) {  	buf.Append ('0');  }  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,Sign,The following statement contains a magic number: for (int x = 0; x < 64; x++)  	sig [x] = 0;  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,Sign,The following statement contains a magic number: Array.Copy (sig1' 0' sig' 0 + (32 - sig1.Length)' sig1.Length);  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,Sign,The following statement contains a magic number: Array.Copy (sig2' 0' sig' 32 + (32 - sig2.Length)' sig2.Length);  
Magic Number,MicroCash.Client.Thin,MicroCashKeyPair,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,Sign,The following statement contains a magic number: Array.Copy (sig2' 0' sig' 32 + (32 - sig2.Length)' sig2.Length);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,MicroCashAddress,The following statement contains a magic number: m_Address80 = new byte[10];  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,MicroCashAddress,The following statement contains a magic number: Array.Copy (address10bytes' m_Address80' 10);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,GetPaymentAmountInfoString,The following statement contains a magic number: foreach (Byte b in m_Info) {  	if (b >= 32 && b < 127)  		ret += (char)b;  	else  		ret += " ";  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,GetPaymentAmountInfoString,The following statement contains a magic number: foreach (Byte b in m_Info) {  	if (b >= 32 && b < 127)  		ret += (char)b;  	else  		ret += " ";  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,GetPaymentAmountInfoString,The following statement contains a magic number: if (b >= 32 && b < 127)  	ret += (char)b;  else  	ret += " ";  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,GetPaymentAmountInfoString,The following statement contains a magic number: if (b >= 32 && b < 127)  	ret += (char)b;  else  	ret += " ";  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bLongAddress) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	CheckBytes = new byte[18];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  }  else if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: Array.Copy (m_Info' infobytes' 8);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: CheckBytes = new byte[18];  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: Array.Copy (infobytes' 0' CheckBytes' 10' 8);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: Array.Copy (infobytes' 0' CheckBytes' 10' 8);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: if (bPayMentCode) {  	byte[] infobytes = new byte[8];  	Array.Copy (m_Info' infobytes' 8);  	info = EncodeBase32 (infobytes);  	byte[] amountbytes = new byte[4];  	amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  	amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  	amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  	amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  	amount = "-" + EncodeBase32 (amountbytes);  	CheckBytes = new byte[22];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  	Array.Copy (infobytes' 0' CheckBytes' 10' 8);  	Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  }  else {  	CheckBytes = new byte[10];  	Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: Array.Copy (m_Info' infobytes' 8);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: amountbytes [0] = (byte)((m_nAmount >> 24) & 0xFF);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: amountbytes [1] = (byte)((m_nAmount >> 16) & 0xFF);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: amountbytes [2] = (byte)((m_nAmount >> 8) & 0xFF);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: amountbytes [3] = (byte)((m_nAmount >> 0) & 0xFF);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: CheckBytes = new byte[22];  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: Array.Copy (infobytes' 0' CheckBytes' 10' 8);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: Array.Copy (infobytes' 0' CheckBytes' 10' 8);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: Array.Copy (amountbytes' 0' CheckBytes' 18' 4);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: CheckBytes = new byte[10];  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeAddress,The following statement contains a magic number: Array.Copy (m_Address80' 0' CheckBytes' 0' 10);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetInfo,The following statement contains a magic number: m_Info = new byte[8];  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetInfo,The following statement contains a magic number: for (int x = 0; x < 8; x++)  	m_Info [x] = 0;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetInfo,The following statement contains a magic number: if (nLen > 8)  	nLen = 8;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetInfo,The following statement contains a magic number: if (nLen > 8)  	nLen = 8;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetInfo,The following statement contains a magic number: nLen = 8;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (nStart >= 0)  	nStart += 6;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: nStart += 6;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (nStart < 0) {  	nStart = address.IndexOf ("icro(");  	if (nStart >= 0)  		nStart += 5;  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (nStart >= 0)  	nStart += 5;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: nStart += 5;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (nStart < 0) {  	nStart = address.IndexOf ("cro(");  	if (nStart >= 0)  		nStart += 4;  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (nStart >= 0)  	nStart += 4;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: nStart += 4;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (nStart < 0) {  	nStart = address.IndexOf ("ro(");  	if (nStart >= 0)  		nStart += 3;  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (nStart >= 0)  	nStart += 3;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: nStart += 3;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (nStart < 0) {  	nStart = address.IndexOf ("o(");  	if (nStart >= 0)  		nStart += 2;  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (nStart >= 0)  	nStart += 2;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: nStart += 2;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length != 17 && inner.Length != 30 && inner.Length != 38)  	return false;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length != 17 && inner.Length != 30 && inner.Length != 38)  	return false;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length != 17 && inner.Length != 30 && inner.Length != 38)  	return false;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (addrbytes == null || addrbytes.Length != 10)  	return false;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 17) {  	m_Info = null;  	m_nAmount = 0;  	checkBytes = new byte[10];  	Array.Copy (addrbytes' checkBytes' 10);  	checksumByte = DecodeChar (inner [16]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 17) {  	m_Info = null;  	m_nAmount = 0;  	checkBytes = new byte[10];  	Array.Copy (addrbytes' checkBytes' 10);  	checksumByte = DecodeChar (inner [16]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 17) {  	m_Info = null;  	m_nAmount = 0;  	checkBytes = new byte[10];  	Array.Copy (addrbytes' checkBytes' 10);  	checksumByte = DecodeChar (inner [16]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 17) {  	m_Info = null;  	m_nAmount = 0;  	checkBytes = new byte[10];  	Array.Copy (addrbytes' checkBytes' 10);  	checksumByte = DecodeChar (inner [16]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: checkBytes = new byte[10];  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: Array.Copy (addrbytes' checkBytes' 10);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: checksumByte = DecodeChar (inner [16]);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30 || inner.Length == 38) {  	infoBytes = DecodeBase32 (inner.Substring (16' 13));  	m_Info = new byte[8];  	Array.Copy (infoBytes' m_Info' 8);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30 || inner.Length == 38) {  	infoBytes = DecodeBase32 (inner.Substring (16' 13));  	m_Info = new byte[8];  	Array.Copy (infoBytes' m_Info' 8);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30 || inner.Length == 38) {  	infoBytes = DecodeBase32 (inner.Substring (16' 13));  	m_Info = new byte[8];  	Array.Copy (infoBytes' m_Info' 8);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30 || inner.Length == 38) {  	infoBytes = DecodeBase32 (inner.Substring (16' 13));  	m_Info = new byte[8];  	Array.Copy (infoBytes' m_Info' 8);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30 || inner.Length == 38) {  	infoBytes = DecodeBase32 (inner.Substring (16' 13));  	m_Info = new byte[8];  	Array.Copy (infoBytes' m_Info' 8);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30 || inner.Length == 38) {  	infoBytes = DecodeBase32 (inner.Substring (16' 13));  	m_Info = new byte[8];  	Array.Copy (infoBytes' m_Info' 8);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: infoBytes = DecodeBase32 (inner.Substring (16' 13));  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: infoBytes = DecodeBase32 (inner.Substring (16' 13));  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: m_Info = new byte[8];  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: Array.Copy (infoBytes' m_Info' 8);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 30) {  	m_nAmount = 0;  	checkBytes = new byte[18];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	checksumByte = DecodeChar (inner [29]);  	m_bIsLongAddress = true;  }  else if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: checkBytes = new byte[18];  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: Array.Copy (addrbytes' 0' checkBytes' 0' 10);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: Array.Copy (infoBytes' 0' checkBytes' 10' 8);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: Array.Copy (infoBytes' 0' checkBytes' 10' 8);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: checksumByte = DecodeChar (inner [29]);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner.Length == 38) {  	if (inner [29] != '-')  		return false;  	byte[] bytes = DecodeBase32 (inner.Substring (30' 7));  	if (bytes.Length != 5)  		return false;  	//we actually only have 4 bytes in there' but 7 characters ends up as 4.3 bytes  	m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  	m_bIsPaymentCode = true;  	checkBytes = new byte[22];  	Array.Copy (addrbytes' 0' checkBytes' 0' 10);  	Array.Copy (infoBytes' 0' checkBytes' 10' 8);  	Array.Copy (bytes' 0' checkBytes' 18' 4);  	checksumByte = DecodeChar (inner [37]);  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (inner [29] != '-')  	return false;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: if (bytes.Length != 5)  	return false;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: m_nAmount = (int)(((uint)bytes [0] << 24) | ((uint)bytes [1] << 16) | ((uint)bytes [2] << 8) | ((uint)bytes [3] << 0));  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: checkBytes = new byte[22];  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: Array.Copy (addrbytes' 0' checkBytes' 0' 10);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: Array.Copy (infoBytes' 0' checkBytes' 10' 8);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: Array.Copy (infoBytes' 0' checkBytes' 10' 8);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: Array.Copy (bytes' 0' checkBytes' 18' 4);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: Array.Copy (bytes' 0' checkBytes' 18' 4);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,SetString,The following statement contains a magic number: checksumByte = DecodeChar (inner [37]);  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeBase32,The following statement contains a magic number: foreach (byte b in input) {  	dwBits <<= 8;  	dwBits |= b;  	nBitCount += 8;  	while (nBitCount >= 5) {  		ret += _base32Alphabet [(int)((dwBits >> (nBitCount - 5)) & 0x1F)];  		nBitCount -= 5;  	}  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeBase32,The following statement contains a magic number: foreach (byte b in input) {  	dwBits <<= 8;  	dwBits |= b;  	nBitCount += 8;  	while (nBitCount >= 5) {  		ret += _base32Alphabet [(int)((dwBits >> (nBitCount - 5)) & 0x1F)];  		nBitCount -= 5;  	}  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeBase32,The following statement contains a magic number: foreach (byte b in input) {  	dwBits <<= 8;  	dwBits |= b;  	nBitCount += 8;  	while (nBitCount >= 5) {  		ret += _base32Alphabet [(int)((dwBits >> (nBitCount - 5)) & 0x1F)];  		nBitCount -= 5;  	}  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeBase32,The following statement contains a magic number: foreach (byte b in input) {  	dwBits <<= 8;  	dwBits |= b;  	nBitCount += 8;  	while (nBitCount >= 5) {  		ret += _base32Alphabet [(int)((dwBits >> (nBitCount - 5)) & 0x1F)];  		nBitCount -= 5;  	}  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeBase32,The following statement contains a magic number: foreach (byte b in input) {  	dwBits <<= 8;  	dwBits |= b;  	nBitCount += 8;  	while (nBitCount >= 5) {  		ret += _base32Alphabet [(int)((dwBits >> (nBitCount - 5)) & 0x1F)];  		nBitCount -= 5;  	}  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeBase32,The following statement contains a magic number: dwBits <<= 8;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeBase32,The following statement contains a magic number: nBitCount += 8;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeBase32,The following statement contains a magic number: while (nBitCount >= 5) {  	ret += _base32Alphabet [(int)((dwBits >> (nBitCount - 5)) & 0x1F)];  	nBitCount -= 5;  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeBase32,The following statement contains a magic number: while (nBitCount >= 5) {  	ret += _base32Alphabet [(int)((dwBits >> (nBitCount - 5)) & 0x1F)];  	nBitCount -= 5;  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeBase32,The following statement contains a magic number: while (nBitCount >= 5) {  	ret += _base32Alphabet [(int)((dwBits >> (nBitCount - 5)) & 0x1F)];  	nBitCount -= 5;  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeBase32,The following statement contains a magic number: ret += _base32Alphabet [(int)((dwBits >> (nBitCount - 5)) & 0x1F)];  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,EncodeBase32,The following statement contains a magic number: nBitCount -= 5;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,DecodeBase32,The following statement contains a magic number: foreach (char c in address) {  	int n = _base32Alphabet.IndexOf (c);  	if (n == -1)  		return null;  	dwBits <<= 5;  	dwBits |= (byte)n;  	nBitCount += 5;  	if (nBitCount >= 8) {  		bb = AddByte (bb' (byte)((dwBits >> (nBitCount - 8)) & 0xFF));  		nBitCount -= 8;  		dwBits &= (uint)((1 << nBitCount) - 1);  		//clear bits we just saved  	}  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,DecodeBase32,The following statement contains a magic number: foreach (char c in address) {  	int n = _base32Alphabet.IndexOf (c);  	if (n == -1)  		return null;  	dwBits <<= 5;  	dwBits |= (byte)n;  	nBitCount += 5;  	if (nBitCount >= 8) {  		bb = AddByte (bb' (byte)((dwBits >> (nBitCount - 8)) & 0xFF));  		nBitCount -= 8;  		dwBits &= (uint)((1 << nBitCount) - 1);  		//clear bits we just saved  	}  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,DecodeBase32,The following statement contains a magic number: foreach (char c in address) {  	int n = _base32Alphabet.IndexOf (c);  	if (n == -1)  		return null;  	dwBits <<= 5;  	dwBits |= (byte)n;  	nBitCount += 5;  	if (nBitCount >= 8) {  		bb = AddByte (bb' (byte)((dwBits >> (nBitCount - 8)) & 0xFF));  		nBitCount -= 8;  		dwBits &= (uint)((1 << nBitCount) - 1);  		//clear bits we just saved  	}  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,DecodeBase32,The following statement contains a magic number: foreach (char c in address) {  	int n = _base32Alphabet.IndexOf (c);  	if (n == -1)  		return null;  	dwBits <<= 5;  	dwBits |= (byte)n;  	nBitCount += 5;  	if (nBitCount >= 8) {  		bb = AddByte (bb' (byte)((dwBits >> (nBitCount - 8)) & 0xFF));  		nBitCount -= 8;  		dwBits &= (uint)((1 << nBitCount) - 1);  		//clear bits we just saved  	}  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,DecodeBase32,The following statement contains a magic number: foreach (char c in address) {  	int n = _base32Alphabet.IndexOf (c);  	if (n == -1)  		return null;  	dwBits <<= 5;  	dwBits |= (byte)n;  	nBitCount += 5;  	if (nBitCount >= 8) {  		bb = AddByte (bb' (byte)((dwBits >> (nBitCount - 8)) & 0xFF));  		nBitCount -= 8;  		dwBits &= (uint)((1 << nBitCount) - 1);  		//clear bits we just saved  	}  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,DecodeBase32,The following statement contains a magic number: dwBits <<= 5;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,DecodeBase32,The following statement contains a magic number: nBitCount += 5;  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,DecodeBase32,The following statement contains a magic number: if (nBitCount >= 8) {  	bb = AddByte (bb' (byte)((dwBits >> (nBitCount - 8)) & 0xFF));  	nBitCount -= 8;  	dwBits &= (uint)((1 << nBitCount) - 1);  	//clear bits we just saved  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,DecodeBase32,The following statement contains a magic number: if (nBitCount >= 8) {  	bb = AddByte (bb' (byte)((dwBits >> (nBitCount - 8)) & 0xFF));  	nBitCount -= 8;  	dwBits &= (uint)((1 << nBitCount) - 1);  	//clear bits we just saved  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,DecodeBase32,The following statement contains a magic number: if (nBitCount >= 8) {  	bb = AddByte (bb' (byte)((dwBits >> (nBitCount - 8)) & 0xFF));  	nBitCount -= 8;  	dwBits &= (uint)((1 << nBitCount) - 1);  	//clear bits we just saved  }  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,DecodeBase32,The following statement contains a magic number: bb = AddByte (bb' (byte)((dwBits >> (nBitCount - 8)) & 0xFF));  
Magic Number,MicroCash.Client.Thin,MicroCashAddress,C:\repos\Ahimoth_MicroCash-Thin-Client\eckey.cs,DecodeBase32,The following statement contains a magic number: nBitCount -= 8;  
Magic Number,MicroCash.Client.Thin,GradientPanel,C:\repos\Ahimoth_MicroCash-Thin-Client\gradientpanel.cs,PaintGradient,The following statement contains a magic number: switch (m_Mode) {  default:  	gradBrush = new System.Drawing.Drawing2D.LinearGradientBrush (new Point (0' 0)' new Point (0' this.Height)' mStartColor' mEndColor);  	break;  case 1:  	gradBrush = new System.Drawing.Drawing2D.LinearGradientBrush (new Point (0' 0)' new Point (this.Width' 0)' mStartColor' mEndColor);  	break;  case 2:  	gradBrush = new System.Drawing.Drawing2D.LinearGradientBrush (new Point (0' 0)' new Point (this.Width' this.Height)' mStartColor' mEndColor);  	break;  }  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Inner = new GradientPanel (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16)' 0);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Inner = new GradientPanel (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16)' 0);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Inner = new GradientPanel (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16)' 0);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Inner = new GradientPanel (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16)' 0);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Inner = new GradientPanel (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16)' 0);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Inner = new GradientPanel (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16)' 0);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Inner.Location = new Point (0' (nNumber * 70));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_AccountName.Font = new Font (Constants.FONTNAME' 12);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_EditName.Font = new Font (Constants.FONTNAME' 12);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_EditName.BackColor = Color.FromArgb (192' 192' 192);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_EditName.BackColor = Color.FromArgb (192' 192' 192);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_EditName.BackColor = Color.FromArgb (192' 192' 192);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Address.Font = new Font ("Courier New"' 9);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Address.ForeColor = Color.FromArgb (192' 192' 192);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Address.ForeColor = Color.FromArgb (192' 192' 192);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Address.ForeColor = Color.FromArgb (192' 192' 192);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Amount.Font = new Font (Constants.FONTNAME' 12);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Amount.ForeColor = Color.FromArgb (255' 255' 220);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Amount.ForeColor = Color.FromArgb (255' 255' 220);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,AccountItemGUI,The following statement contains a magic number: m_Amount.ForeColor = Color.FromArgb (255' 255' 220);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: if (m_bEnabled) {  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  	m_Image.Image = m_IconBmpList [m_icon];  }  else {  	m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  	m_Image.Image = Form1.Grayscale (m_IconBmpList [m_icon]);  }  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: if (m_bEnabled) {  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  	m_Image.Image = m_IconBmpList [m_icon];  }  else {  	m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  	m_Image.Image = Form1.Grayscale (m_IconBmpList [m_icon]);  }  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: if (m_bEnabled) {  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  	m_Image.Image = m_IconBmpList [m_icon];  }  else {  	m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  	m_Image.Image = Form1.Grayscale (m_IconBmpList [m_icon]);  }  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: if (m_bEnabled) {  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  	m_Image.Image = m_IconBmpList [m_icon];  }  else {  	m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  	m_Image.Image = Form1.Grayscale (m_IconBmpList [m_icon]);  }  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: if (m_bEnabled) {  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  	m_Image.Image = m_IconBmpList [m_icon];  }  else {  	m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  	m_Image.Image = Form1.Grayscale (m_IconBmpList [m_icon]);  }  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: if (m_bEnabled) {  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  	m_Image.Image = m_IconBmpList [m_icon];  }  else {  	m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  	m_Image.Image = Form1.Grayscale (m_IconBmpList [m_icon]);  }  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: if (m_bEnabled) {  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  	m_Image.Image = m_IconBmpList [m_icon];  }  else {  	m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  	m_Image.Image = Form1.Grayscale (m_IconBmpList [m_icon]);  }  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: if (m_bEnabled) {  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  	m_Image.Image = m_IconBmpList [m_icon];  }  else {  	m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  	m_Image.Image = Form1.Grayscale (m_IconBmpList [m_icon]);  }  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: if (m_bEnabled) {  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  	m_Image.Image = m_IconBmpList [m_icon];  }  else {  	m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  	m_Image.Image = Form1.Grayscale (m_IconBmpList [m_icon]);  }  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: if (m_bEnabled) {  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  	m_Image.Image = m_IconBmpList [m_icon];  }  else {  	m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  	m_Image.Image = Form1.Grayscale (m_IconBmpList [m_icon]);  }  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: if (m_bEnabled) {  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  	m_Image.Image = m_IconBmpList [m_icon];  }  else {  	m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  	m_Image.Image = Form1.Grayscale (m_IconBmpList [m_icon]);  }  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: if (m_bEnabled) {  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  	m_Image.Image = m_IconBmpList [m_icon];  }  else {  	m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  	m_Image.Image = Form1.Grayscale (m_IconBmpList [m_icon]);  }  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetEnabled,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (160' 160' 160)' Color.FromArgb (140' 140' 140));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,SetBalance,The following statement contains a magic number: m_Amount.Text = "$" + (m_balance / 10000.0).ToString ("0.0000");  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_Inner.Size = new Size (w' 70);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_Image.Location = new Point (5' 10);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_Image.Location = new Point (5' 10);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_Image.Size = new Size (50' 50);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_Image.Size = new Size (50' 50);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_AccountName.Location = new Point (60' 10);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_AccountName.Location = new Point (60' 10);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_AccountName.Size = new Size (w - (65 + m_Amount.Size.Width)' 30);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_AccountName.Size = new Size (w - (65 + m_Amount.Size.Width)' 30);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_EditName.Location = new Point (65' 10 + ((30 - m_EditName.Size.Height) / 2));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_EditName.Location = new Point (65' 10 + ((30 - m_EditName.Size.Height) / 2));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_EditName.Location = new Point (65' 10 + ((30 - m_EditName.Size.Height) / 2));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_EditName.Location = new Point (65' 10 + ((30 - m_EditName.Size.Height) / 2));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_Address.Location = new Point (65' 40);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_Address.Location = new Point (65' 40);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_Address.Size = new Size (w - 70' 20);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_Address.Size = new Size (w - 70' 20);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,Resize,The following statement contains a magic number: m_Amount.Location = new Point (w - m_Amount.Size.Width' 14);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseEnter,The following statement contains a magic number: if (m_bEnabled)  	m_Inner.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseEnter,The following statement contains a magic number: if (m_bEnabled)  	m_Inner.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseEnter,The following statement contains a magic number: if (m_bEnabled)  	m_Inner.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseEnter,The following statement contains a magic number: if (m_bEnabled)  	m_Inner.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseEnter,The following statement contains a magic number: if (m_bEnabled)  	m_Inner.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseEnter,The following statement contains a magic number: if (m_bEnabled)  	m_Inner.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseEnter,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseEnter,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseEnter,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseEnter,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseEnter,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseEnter,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (60' 60' 160)' Color.FromArgb (100' 100' 240));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseLeave,The following statement contains a magic number: if (m_bEnabled)  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseLeave,The following statement contains a magic number: if (m_bEnabled)  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseLeave,The following statement contains a magic number: if (m_bEnabled)  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseLeave,The following statement contains a magic number: if (m_bEnabled)  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseLeave,The following statement contains a magic number: if (m_bEnabled)  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseLeave,The following statement contains a magic number: if (m_bEnabled)  	m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseLeave,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseLeave,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseLeave,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseLeave,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseLeave,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,iconMouseLeave,The following statement contains a magic number: m_Inner.SetColor (Color.FromArgb (96' 96' 96)' Color.FromArgb (16' 16' 16));  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,addressMouseEnter,The following statement contains a magic number: m_Address.ForeColor = Color.FromArgb (255' 255' 255);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,addressMouseEnter,The following statement contains a magic number: m_Address.ForeColor = Color.FromArgb (255' 255' 255);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,addressMouseEnter,The following statement contains a magic number: m_Address.ForeColor = Color.FromArgb (255' 255' 255);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,addressMouseEnter,The following statement contains a magic number: m_Address.BackColor = Color.FromArgb (80' 80' 220);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,addressMouseEnter,The following statement contains a magic number: m_Address.BackColor = Color.FromArgb (80' 80' 220);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,addressMouseEnter,The following statement contains a magic number: m_Address.BackColor = Color.FromArgb (80' 80' 220);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,addressMouseLeave,The following statement contains a magic number: m_Address.ForeColor = Color.FromArgb (192' 192' 192);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,addressMouseLeave,The following statement contains a magic number: m_Address.ForeColor = Color.FromArgb (192' 192' 192);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,addressMouseLeave,The following statement contains a magic number: m_Address.ForeColor = Color.FromArgb (192' 192' 192);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,accountMouseEnter,The following statement contains a magic number: m_AccountName.ForeColor = Color.FromArgb (255' 255' 255);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,accountMouseEnter,The following statement contains a magic number: m_AccountName.ForeColor = Color.FromArgb (255' 255' 255);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,accountMouseEnter,The following statement contains a magic number: m_AccountName.ForeColor = Color.FromArgb (255' 255' 255);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,accountMouseEnter,The following statement contains a magic number: m_AccountName.BackColor = Color.FromArgb (80' 80' 220);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,accountMouseEnter,The following statement contains a magic number: m_AccountName.BackColor = Color.FromArgb (80' 80' 220);  
Magic Number,MicroCash.Client.Thin,AccountItemGUI,C:\repos\Ahimoth_MicroCash-Thin-Client\Form1.cs,accountMouseEnter,The following statement contains a magic number: m_AccountName.BackColor = Color.FromArgb (80' 80' 220);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Blake512,The following statement contains a magic number: this.HashSizeValue = 512;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,BytesToUInt64,The following statement contains a magic number: return ((ulong)pb [iOffset + 7] | ((ulong)pb [iOffset + 6] << 8) | ((ulong)pb [iOffset + 5] << 16) | ((ulong)pb [iOffset + 4] << 24) | ((ulong)pb [iOffset + 3] << 32) | ((ulong)pb [iOffset + 2] << 40) | ((ulong)pb [iOffset + 1] << 48) | ((ulong)pb [iOffset] << 56));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,BytesToUInt64,The following statement contains a magic number: return ((ulong)pb [iOffset + 7] | ((ulong)pb [iOffset + 6] << 8) | ((ulong)pb [iOffset + 5] << 16) | ((ulong)pb [iOffset + 4] << 24) | ((ulong)pb [iOffset + 3] << 32) | ((ulong)pb [iOffset + 2] << 40) | ((ulong)pb [iOffset + 1] << 48) | ((ulong)pb [iOffset] << 56));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,BytesToUInt64,The following statement contains a magic number: return ((ulong)pb [iOffset + 7] | ((ulong)pb [iOffset + 6] << 8) | ((ulong)pb [iOffset + 5] << 16) | ((ulong)pb [iOffset + 4] << 24) | ((ulong)pb [iOffset + 3] << 32) | ((ulong)pb [iOffset + 2] << 40) | ((ulong)pb [iOffset + 1] << 48) | ((ulong)pb [iOffset] << 56));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,BytesToUInt64,The following statement contains a magic number: return ((ulong)pb [iOffset + 7] | ((ulong)pb [iOffset + 6] << 8) | ((ulong)pb [iOffset + 5] << 16) | ((ulong)pb [iOffset + 4] << 24) | ((ulong)pb [iOffset + 3] << 32) | ((ulong)pb [iOffset + 2] << 40) | ((ulong)pb [iOffset + 1] << 48) | ((ulong)pb [iOffset] << 56));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,BytesToUInt64,The following statement contains a magic number: return ((ulong)pb [iOffset + 7] | ((ulong)pb [iOffset + 6] << 8) | ((ulong)pb [iOffset + 5] << 16) | ((ulong)pb [iOffset + 4] << 24) | ((ulong)pb [iOffset + 3] << 32) | ((ulong)pb [iOffset + 2] << 40) | ((ulong)pb [iOffset + 1] << 48) | ((ulong)pb [iOffset] << 56));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,BytesToUInt64,The following statement contains a magic number: return ((ulong)pb [iOffset + 7] | ((ulong)pb [iOffset + 6] << 8) | ((ulong)pb [iOffset + 5] << 16) | ((ulong)pb [iOffset + 4] << 24) | ((ulong)pb [iOffset + 3] << 32) | ((ulong)pb [iOffset + 2] << 40) | ((ulong)pb [iOffset + 1] << 48) | ((ulong)pb [iOffset] << 56));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,BytesToUInt64,The following statement contains a magic number: return ((ulong)pb [iOffset + 7] | ((ulong)pb [iOffset + 6] << 8) | ((ulong)pb [iOffset + 5] << 16) | ((ulong)pb [iOffset + 4] << 24) | ((ulong)pb [iOffset + 3] << 32) | ((ulong)pb [iOffset + 2] << 40) | ((ulong)pb [iOffset + 1] << 48) | ((ulong)pb [iOffset] << 56));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,BytesToUInt64,The following statement contains a magic number: return ((ulong)pb [iOffset + 7] | ((ulong)pb [iOffset + 6] << 8) | ((ulong)pb [iOffset + 5] << 16) | ((ulong)pb [iOffset + 4] << 24) | ((ulong)pb [iOffset + 3] << 32) | ((ulong)pb [iOffset + 2] << 40) | ((ulong)pb [iOffset + 1] << 48) | ((ulong)pb [iOffset] << 56));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,BytesToUInt64,The following statement contains a magic number: return ((ulong)pb [iOffset + 7] | ((ulong)pb [iOffset + 6] << 8) | ((ulong)pb [iOffset + 5] << 16) | ((ulong)pb [iOffset + 4] << 24) | ((ulong)pb [iOffset + 3] << 32) | ((ulong)pb [iOffset + 2] << 40) | ((ulong)pb [iOffset + 1] << 48) | ((ulong)pb [iOffset] << 56));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,BytesToUInt64,The following statement contains a magic number: return ((ulong)pb [iOffset + 7] | ((ulong)pb [iOffset + 6] << 8) | ((ulong)pb [iOffset + 5] << 16) | ((ulong)pb [iOffset + 4] << 24) | ((ulong)pb [iOffset + 3] << 32) | ((ulong)pb [iOffset + 2] << 40) | ((ulong)pb [iOffset + 1] << 48) | ((ulong)pb [iOffset] << 56));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,BytesToUInt64,The following statement contains a magic number: return ((ulong)pb [iOffset + 7] | ((ulong)pb [iOffset + 6] << 8) | ((ulong)pb [iOffset + 5] << 16) | ((ulong)pb [iOffset + 4] << 24) | ((ulong)pb [iOffset + 3] << 32) | ((ulong)pb [iOffset + 2] << 40) | ((ulong)pb [iOffset + 1] << 48) | ((ulong)pb [iOffset] << 56));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,BytesToUInt64,The following statement contains a magic number: return ((ulong)pb [iOffset + 7] | ((ulong)pb [iOffset + 6] << 8) | ((ulong)pb [iOffset + 5] << 16) | ((ulong)pb [iOffset + 4] << 24) | ((ulong)pb [iOffset + 3] << 32) | ((ulong)pb [iOffset + 2] << 40) | ((ulong)pb [iOffset + 1] << 48) | ((ulong)pb [iOffset] << 56));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,BytesToUInt64,The following statement contains a magic number: return ((ulong)pb [iOffset + 7] | ((ulong)pb [iOffset + 6] << 8) | ((ulong)pb [iOffset + 5] << 16) | ((ulong)pb [iOffset + 4] << 24) | ((ulong)pb [iOffset + 3] << 32) | ((ulong)pb [iOffset + 2] << 40) | ((ulong)pb [iOffset + 1] << 48) | ((ulong)pb [iOffset] << 56));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,UInt64ToBytes,The following statement contains a magic number: for (int i = 7; i >= 0; --i) {  	pbOut [iOffset + i] = (byte)(u & 0xFF);  	u >>= 8;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,UInt64ToBytes,The following statement contains a magic number: for (int i = 7; i >= 0; --i) {  	pbOut [iOffset + i] = (byte)(u & 0xFF);  	u >>= 8;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,UInt64ToBytes,The following statement contains a magic number: u >>= 8;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,RotateRight,The following statement contains a magic number: return ((u >> nBits) | (u << (64 - nBits)));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,G,The following statement contains a magic number: m_v [d] = RotateRight (m_v [d] ^ m_v [a]' 32);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,G,The following statement contains a magic number: m_v [b] = RotateRight (m_v [b] ^ m_v [c]' 25);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,G,The following statement contains a magic number: m_v [d] = RotateRight (m_v [d] ^ m_v [a]' 16);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,G,The following statement contains a magic number: m_v [b] = RotateRight (m_v [b] ^ m_v [c]' 11);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int i = 0; i < 16; ++i)  	m_m [i] = BytesToUInt64 (pbBlock' iOffset + (i << 3));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int i = 0; i < 16; ++i)  	m_m [i] = BytesToUInt64 (pbBlock' iOffset + (i << 3));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_m [i] = BytesToUInt64 (pbBlock' iOffset + (i << 3));  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: Array.Copy (m_h' m_v' 8);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_v [8] = m_s [0] ^ 0x243F6A8885A308D3UL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_v [9] = m_s [1] ^ 0x13198A2E03707344UL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_v [10] = m_s [2] ^ 0xA4093822299F31D0UL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_v [10] = m_s [2] ^ 0xA4093822299F31D0UL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_v [11] = m_s [3] ^ 0x082EFA98EC4E6C89UL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_v [11] = m_s [3] ^ 0x082EFA98EC4E6C89UL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_v [12] = 0x452821E638D01377UL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_v [13] = 0xBE5466CF34E90C6CUL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_v [14] = 0xC0AC29B7C97C50DDUL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_v [15] = 0x3F84D5B5B5470917UL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: if (!m_bNullT) {  	m_v [12] ^= m_t;  	m_v [13] ^= m_t;  	// m_v[14] ^= m_t[1];  	// m_v[15] ^= m_t[1];  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: if (!m_bNullT) {  	m_v [12] ^= m_t;  	m_v [13] ^= m_t;  	// m_v[14] ^= m_t[1];  	// m_v[15] ^= m_t[1];  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_v [12] ^= m_t;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_v [13] ^= m_t;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int r = 0; r < NbRounds; ++r) {  	G (0' 4' 8' 12' r' 0);  	G (1' 5' 9' 13' r' 2);  	G (2' 6' 10' 14' r' 4);  	G (3' 7' 11' 15' r' 6);  	G (3' 4' 9' 14' r' 14);  	G (2' 7' 8' 13' r' 12);  	G (0' 5' 10' 15' r' 8);  	G (1' 6' 11' 12' r' 10);  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (0' 4' 8' 12' r' 0);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (0' 4' 8' 12' r' 0);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (0' 4' 8' 12' r' 0);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (1' 5' 9' 13' r' 2);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (1' 5' 9' 13' r' 2);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (1' 5' 9' 13' r' 2);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (1' 5' 9' 13' r' 2);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (2' 6' 10' 14' r' 4);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (2' 6' 10' 14' r' 4);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (2' 6' 10' 14' r' 4);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (2' 6' 10' 14' r' 4);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (2' 6' 10' 14' r' 4);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (3' 7' 11' 15' r' 6);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (3' 7' 11' 15' r' 6);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (3' 7' 11' 15' r' 6);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (3' 7' 11' 15' r' 6);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (3' 7' 11' 15' r' 6);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (3' 4' 9' 14' r' 14);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (3' 4' 9' 14' r' 14);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (3' 4' 9' 14' r' 14);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (3' 4' 9' 14' r' 14);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (3' 4' 9' 14' r' 14);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (2' 7' 8' 13' r' 12);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (2' 7' 8' 13' r' 12);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (2' 7' 8' 13' r' 12);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (2' 7' 8' 13' r' 12);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (2' 7' 8' 13' r' 12);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (0' 5' 10' 15' r' 8);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (0' 5' 10' 15' r' 8);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (0' 5' 10' 15' r' 8);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (0' 5' 10' 15' r' 8);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (1' 6' 11' 12' r' 10);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (1' 6' 11' 12' r' 10);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (1' 6' 11' 12' r' 10);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: G (1' 6' 11' 12' r' 10);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int i = 0; i < 8; ++i)  	m_h [i] ^= m_v [i];  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int i = 0; i < 8; ++i)  	m_h [i] ^= m_v [i + 8];  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int i = 0; i < 8; ++i)  	m_h [i] ^= m_v [i + 8];  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_h [i] ^= m_v [i + 8];  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int i = 0; i < 4; ++i)  	m_h [i] ^= m_s [i];  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int i = 0; i < 4; ++i)  	m_h [i + 4] ^= m_s [i];  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: for (int i = 0; i < 4; ++i)  	m_h [i + 4] ^= m_s [i];  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Compress,The following statement contains a magic number: m_h [i + 4] ^= m_s [i];  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Initialize,The following statement contains a magic number: m_h [2] = 0x3C6EF372FE94F82BUL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Initialize,The following statement contains a magic number: m_h [3] = 0xA54FF53A5F1D36F1UL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Initialize,The following statement contains a magic number: m_h [4] = 0x510E527FADE682D1UL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Initialize,The following statement contains a magic number: m_h [5] = 0x9B05688C2B3E6C1FUL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Initialize,The following statement contains a magic number: m_h [6] = 0x1F83D9ABFB41BD6BUL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,Initialize,The following statement contains a magic number: m_h [7] = 0x5BE0CD19137E2179UL;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashCore,The following statement contains a magic number: if ((m_nBufLen > 0) && (cbSize >= nFill)) {  	Array.Copy (array' iOffset' m_buf' m_nBufLen' nFill);  	m_t += 1024;  	Compress (m_buf' 0);  	iOffset += nFill;  	cbSize -= nFill;  	m_nBufLen = 0;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashCore,The following statement contains a magic number: m_t += 1024;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashCore,The following statement contains a magic number: while (cbSize >= 128) {  	m_t += 1024;  	Compress (array' iOffset);  	iOffset += 128;  	cbSize -= 128;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashCore,The following statement contains a magic number: while (cbSize >= 128) {  	m_t += 1024;  	Compress (array' iOffset);  	iOffset += 128;  	cbSize -= 128;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashCore,The following statement contains a magic number: while (cbSize >= 128) {  	m_t += 1024;  	Compress (array' iOffset);  	iOffset += 128;  	cbSize -= 128;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashCore,The following statement contains a magic number: while (cbSize >= 128) {  	m_t += 1024;  	Compress (array' iOffset);  	iOffset += 128;  	cbSize -= 128;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashCore,The following statement contains a magic number: m_t += 1024;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashCore,The following statement contains a magic number: iOffset += 128;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashCore,The following statement contains a magic number: cbSize -= 128;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: UInt64ToBytes (m_t + ((ulong)m_nBufLen << 3)' pbMsgLen' 8);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: UInt64ToBytes (m_t + ((ulong)m_nBufLen << 3)' pbMsgLen' 8);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen == 111) {  	m_t -= 8;  	HashCore (new byte[1] {  		0x81  	}' 0' 1);  }  else {  	if (m_nBufLen < 111) {  		if (m_nBufLen == 0)  			m_bNullT = true;  		m_t -= 888UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 111 - m_nBufLen);  	}  	else {  		m_t -= 1024UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 128 - m_nBufLen);  		m_t -= 888UL;  		HashCore (g_padding' 1' 111);  		m_bNullT = true;  	}  	HashCore (new byte[1] {  		0x01  	}' 0' 1);  	m_t -= 8;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen == 111) {  	m_t -= 8;  	HashCore (new byte[1] {  		0x81  	}' 0' 1);  }  else {  	if (m_nBufLen < 111) {  		if (m_nBufLen == 0)  			m_bNullT = true;  		m_t -= 888UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 111 - m_nBufLen);  	}  	else {  		m_t -= 1024UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 128 - m_nBufLen);  		m_t -= 888UL;  		HashCore (g_padding' 1' 111);  		m_bNullT = true;  	}  	HashCore (new byte[1] {  		0x01  	}' 0' 1);  	m_t -= 8;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen == 111) {  	m_t -= 8;  	HashCore (new byte[1] {  		0x81  	}' 0' 1);  }  else {  	if (m_nBufLen < 111) {  		if (m_nBufLen == 0)  			m_bNullT = true;  		m_t -= 888UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 111 - m_nBufLen);  	}  	else {  		m_t -= 1024UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 128 - m_nBufLen);  		m_t -= 888UL;  		HashCore (g_padding' 1' 111);  		m_bNullT = true;  	}  	HashCore (new byte[1] {  		0x01  	}' 0' 1);  	m_t -= 8;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen == 111) {  	m_t -= 8;  	HashCore (new byte[1] {  		0x81  	}' 0' 1);  }  else {  	if (m_nBufLen < 111) {  		if (m_nBufLen == 0)  			m_bNullT = true;  		m_t -= 888UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 111 - m_nBufLen);  	}  	else {  		m_t -= 1024UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 128 - m_nBufLen);  		m_t -= 888UL;  		HashCore (g_padding' 1' 111);  		m_bNullT = true;  	}  	HashCore (new byte[1] {  		0x01  	}' 0' 1);  	m_t -= 8;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen == 111) {  	m_t -= 8;  	HashCore (new byte[1] {  		0x81  	}' 0' 1);  }  else {  	if (m_nBufLen < 111) {  		if (m_nBufLen == 0)  			m_bNullT = true;  		m_t -= 888UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 111 - m_nBufLen);  	}  	else {  		m_t -= 1024UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 128 - m_nBufLen);  		m_t -= 888UL;  		HashCore (g_padding' 1' 111);  		m_bNullT = true;  	}  	HashCore (new byte[1] {  		0x01  	}' 0' 1);  	m_t -= 8;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen == 111) {  	m_t -= 8;  	HashCore (new byte[1] {  		0x81  	}' 0' 1);  }  else {  	if (m_nBufLen < 111) {  		if (m_nBufLen == 0)  			m_bNullT = true;  		m_t -= 888UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 111 - m_nBufLen);  	}  	else {  		m_t -= 1024UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 128 - m_nBufLen);  		m_t -= 888UL;  		HashCore (g_padding' 1' 111);  		m_bNullT = true;  	}  	HashCore (new byte[1] {  		0x01  	}' 0' 1);  	m_t -= 8;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen == 111) {  	m_t -= 8;  	HashCore (new byte[1] {  		0x81  	}' 0' 1);  }  else {  	if (m_nBufLen < 111) {  		if (m_nBufLen == 0)  			m_bNullT = true;  		m_t -= 888UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 111 - m_nBufLen);  	}  	else {  		m_t -= 1024UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 128 - m_nBufLen);  		m_t -= 888UL;  		HashCore (g_padding' 1' 111);  		m_bNullT = true;  	}  	HashCore (new byte[1] {  		0x01  	}' 0' 1);  	m_t -= 8;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen == 111) {  	m_t -= 8;  	HashCore (new byte[1] {  		0x81  	}' 0' 1);  }  else {  	if (m_nBufLen < 111) {  		if (m_nBufLen == 0)  			m_bNullT = true;  		m_t -= 888UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 111 - m_nBufLen);  	}  	else {  		m_t -= 1024UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 128 - m_nBufLen);  		m_t -= 888UL;  		HashCore (g_padding' 1' 111);  		m_bNullT = true;  	}  	HashCore (new byte[1] {  		0x01  	}' 0' 1);  	m_t -= 8;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen == 111) {  	m_t -= 8;  	HashCore (new byte[1] {  		0x81  	}' 0' 1);  }  else {  	if (m_nBufLen < 111) {  		if (m_nBufLen == 0)  			m_bNullT = true;  		m_t -= 888UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 111 - m_nBufLen);  	}  	else {  		m_t -= 1024UL - ((ulong)m_nBufLen << 3);  		HashCore (g_padding' 0' 128 - m_nBufLen);  		m_t -= 888UL;  		HashCore (g_padding' 1' 111);  		m_bNullT = true;  	}  	HashCore (new byte[1] {  		0x01  	}' 0' 1);  	m_t -= 8;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: m_t -= 8;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen < 111) {  	if (m_nBufLen == 0)  		m_bNullT = true;  	m_t -= 888UL - ((ulong)m_nBufLen << 3);  	HashCore (g_padding' 0' 111 - m_nBufLen);  }  else {  	m_t -= 1024UL - ((ulong)m_nBufLen << 3);  	HashCore (g_padding' 0' 128 - m_nBufLen);  	m_t -= 888UL;  	HashCore (g_padding' 1' 111);  	m_bNullT = true;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen < 111) {  	if (m_nBufLen == 0)  		m_bNullT = true;  	m_t -= 888UL - ((ulong)m_nBufLen << 3);  	HashCore (g_padding' 0' 111 - m_nBufLen);  }  else {  	m_t -= 1024UL - ((ulong)m_nBufLen << 3);  	HashCore (g_padding' 0' 128 - m_nBufLen);  	m_t -= 888UL;  	HashCore (g_padding' 1' 111);  	m_bNullT = true;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen < 111) {  	if (m_nBufLen == 0)  		m_bNullT = true;  	m_t -= 888UL - ((ulong)m_nBufLen << 3);  	HashCore (g_padding' 0' 111 - m_nBufLen);  }  else {  	m_t -= 1024UL - ((ulong)m_nBufLen << 3);  	HashCore (g_padding' 0' 128 - m_nBufLen);  	m_t -= 888UL;  	HashCore (g_padding' 1' 111);  	m_bNullT = true;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen < 111) {  	if (m_nBufLen == 0)  		m_bNullT = true;  	m_t -= 888UL - ((ulong)m_nBufLen << 3);  	HashCore (g_padding' 0' 111 - m_nBufLen);  }  else {  	m_t -= 1024UL - ((ulong)m_nBufLen << 3);  	HashCore (g_padding' 0' 128 - m_nBufLen);  	m_t -= 888UL;  	HashCore (g_padding' 1' 111);  	m_bNullT = true;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen < 111) {  	if (m_nBufLen == 0)  		m_bNullT = true;  	m_t -= 888UL - ((ulong)m_nBufLen << 3);  	HashCore (g_padding' 0' 111 - m_nBufLen);  }  else {  	m_t -= 1024UL - ((ulong)m_nBufLen << 3);  	HashCore (g_padding' 0' 128 - m_nBufLen);  	m_t -= 888UL;  	HashCore (g_padding' 1' 111);  	m_bNullT = true;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: if (m_nBufLen < 111) {  	if (m_nBufLen == 0)  		m_bNullT = true;  	m_t -= 888UL - ((ulong)m_nBufLen << 3);  	HashCore (g_padding' 0' 111 - m_nBufLen);  }  else {  	m_t -= 1024UL - ((ulong)m_nBufLen << 3);  	HashCore (g_padding' 0' 128 - m_nBufLen);  	m_t -= 888UL;  	HashCore (g_padding' 1' 111);  	m_bNullT = true;  }  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: m_t -= 888UL - ((ulong)m_nBufLen << 3);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: HashCore (g_padding' 0' 111 - m_nBufLen);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: m_t -= 1024UL - ((ulong)m_nBufLen << 3);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: HashCore (g_padding' 0' 128 - m_nBufLen);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: HashCore (g_padding' 1' 111);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: m_t -= 8;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: m_t -= 128;  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: HashCore (pbMsgLen' 0' 16);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: for (int i = 0; i < 8; ++i)  	UInt64ToBytes (m_h [i]' pbDigest' i << 3);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: for (int i = 0; i < 8; ++i)  	UInt64ToBytes (m_h [i]' pbDigest' i << 3);  
Magic Number,BlakeSharp,Blake512,C:\repos\Ahimoth_MicroCash-Thin-Client\Blake512.cs,HashFinal,The following statement contains a magic number: UInt64ToBytes (m_h [i]' pbDigest' i << 3);  
Magic Number,MicroCash.Client.Thin.JsonRpc.Contracts,MicroCashTransaction,C:\repos\Ahimoth_MicroCash-Thin-Client\JsonRpc\Contracts\MicroCashTransaction.cs,MicroCashTransaction,The following statement contains a magic number: m_Info = new byte[8];  
Magic Number,MicroCash.Client.Thin.JsonRpc.Contracts,MicroCashTransaction,C:\repos\Ahimoth_MicroCash-Thin-Client\JsonRpc\Contracts\MicroCashTransaction.cs,MicroCashTransaction,The following statement contains a magic number: m_FromAddress = new byte[10];  
Magic Number,MicroCash.Client.Thin.JsonRpc.Contracts,MicroCashTransaction,C:\repos\Ahimoth_MicroCash-Thin-Client\JsonRpc\Contracts\MicroCashTransaction.cs,MicroCashTransaction,The following statement contains a magic number: m_RecvAddress = new byte[10];  
Magic Number,MicroCash.Client.Thin.JsonRpc.Contracts,MicroCashTransaction,C:\repos\Ahimoth_MicroCash-Thin-Client\JsonRpc\Contracts\MicroCashTransaction.cs,MicroCashTransaction,The following statement contains a magic number: m_Signature = new byte[64];  
Magic Number,MicroCash.Client.Thin.JsonRpc.Contracts,MicroCashTransaction,C:\repos\Ahimoth_MicroCash-Thin-Client\JsonRpc\Contracts\MicroCashTransaction.cs,MicroCashTransaction,The following statement contains a magic number: m_Extra1 = new byte[64];  
Magic Number,MicroCash.Client.Thin.JsonRpc.Contracts,MicroCashTransaction,C:\repos\Ahimoth_MicroCash-Thin-Client\JsonRpc\Contracts\MicroCashTransaction.cs,MicroCashTransaction,The following statement contains a magic number: m_Extra2 = new byte[64];  
Missing Default,MicroCash.Client.Thin,Account,C:\repos\Ahimoth_MicroCash-Thin-Client\account.cs,AccountXMLLoad,The following switch statement is missing a default case: switch (reader.NodeType) {  case XmlNodeType.Element:  	string name = reader.Name;  	string value = "";  	if (name == "transactions" || name == "tx") {  	}  	else {  		reader.MoveToContent ();  		value = reader.ReadElementContentAsString ();  	}  	//reader.read  	switch (name) {  	case "name":  		m_name = value;  		break;  	case "privkey":  		priv = value;  		break;  	case "pubkey":  		pub = value;  		break;  	case "icon":  		m_icon = Convert.ToInt32 (value);  		break;  	case "numtx":  		m_txCount = Convert.ToInt32 (value);  		break;  	case "addressid":  		m_addressid = Convert.ToUInt32 (value);  		break;  	case "balance":  		m_balance = Convert.ToInt64 (value);  		break;  	case "enabled":  		m_bEnabled = Convert.ToBoolean (value);  		break;  	case "tx":  		{  			AddressHistory tx = new AddressHistory ();  			tx.hash = reader.GetAttribute ("hash");  			tx.amount = Convert.ToInt64 (reader.GetAttribute ("amnt"));  			tx.fromto = reader.GetAttribute ("from");  			tx.info = reader.GetAttribute ("info");  			tx.type = Convert.ToInt32 (reader.GetAttribute ("type"));  			tx.time = Convert.ToInt64 (reader.GetAttribute ("time"));  			m_txhistory.Add (tx);  		}  		break;  	}  	break;  case XmlNodeType.EndElement:  	if (reader.Name == "account") {  		m_KeyPair.SetKeyByString (priv' pub);  		return true;  	}  	break;  }  
Missing Default,MicroCash.Client.Thin,Account,C:\repos\Ahimoth_MicroCash-Thin-Client\account.cs,AccountXMLLoad,The following switch statement is missing a default case: switch (name) {  case "name":  	m_name = value;  	break;  case "privkey":  	priv = value;  	break;  case "pubkey":  	pub = value;  	break;  case "icon":  	m_icon = Convert.ToInt32 (value);  	break;  case "numtx":  	m_txCount = Convert.ToInt32 (value);  	break;  case "addressid":  	m_addressid = Convert.ToUInt32 (value);  	break;  case "balance":  	m_balance = Convert.ToInt64 (value);  	break;  case "enabled":  	m_bEnabled = Convert.ToBoolean (value);  	break;  case "tx":  	{  		AddressHistory tx = new AddressHistory ();  		tx.hash = reader.GetAttribute ("hash");  		tx.amount = Convert.ToInt64 (reader.GetAttribute ("amnt"));  		tx.fromto = reader.GetAttribute ("from");  		tx.info = reader.GetAttribute ("info");  		tx.type = Convert.ToInt32 (reader.GetAttribute ("type"));  		tx.time = Convert.ToInt64 (reader.GetAttribute ("time"));  		m_txhistory.Add (tx);  	}  	break;  }  
Missing Default,MicroCash.Client.Thin,ThinUser,C:\repos\Ahimoth_MicroCash-Thin-Client\user.cs,LoadFromFile,The following switch statement is missing a default case: switch (reader.NodeType) {  case XmlNodeType.Element:  	// The node is an element.  	switch (reader.Name) {  	case "name":  		reader.MoveToContent ();  		m_name = reader.ReadElementContentAsString ();  		break;  	case "pass1":  		reader.MoveToContent ();  		m_pass1 = reader.ReadElementContentAsString ();  		break;  	case "pass2":  		reader.MoveToContent ();  		m_pass2 = reader.ReadElementContentAsString ();  		break;  	case "icon":  		reader.MoveToContent ();  		m_icon = reader.ReadElementContentAsInt ();  		break;  	case "account": {  		Account newAccount = new Account ();  		if (newAccount.AccountXMLLoad (reader)) {  			m_Accounts.Add (newAccount);  		}  		break;  	}  	}  	break;  case XmlNodeType.EndElement:  	break;  }  
Missing Default,MicroCash.Client.Thin,ThinUser,C:\repos\Ahimoth_MicroCash-Thin-Client\user.cs,LoadFromFile,The following switch statement is missing a default case: switch (reader.Name) {  case "name":  	reader.MoveToContent ();  	m_name = reader.ReadElementContentAsString ();  	break;  case "pass1":  	reader.MoveToContent ();  	m_pass1 = reader.ReadElementContentAsString ();  	break;  case "pass2":  	reader.MoveToContent ();  	m_pass2 = reader.ReadElementContentAsString ();  	break;  case "icon":  	reader.MoveToContent ();  	m_icon = reader.ReadElementContentAsInt ();  	break;  case "account": {  	Account newAccount = new Account ();  	if (newAccount.AccountXMLLoad (reader)) {  		m_Accounts.Add (newAccount);  	}  	break;  }  }  
