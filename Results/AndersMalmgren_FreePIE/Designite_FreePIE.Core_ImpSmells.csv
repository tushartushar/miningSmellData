Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,GetInterpolatedCubicSplinedCurve,Cyclomatic complexity of the method is 9
Complex Method,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,SolveCubicSpline,Cyclomatic complexity of the method is 10
Long Parameter List,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,SolveTridiag,The method has 5 parameters. Parameters: sub' diag' sup' b' n
Long Parameter List,FreePIE.Core.ScriptEngine.Globals.ScriptHelpers,FilterHelper,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\Globals\ScriptHelpers\FilterHelper.cs,mapRange,The method has 5 parameters. Parameters: x' xMin' xMax' yMin' yMax
Long Parameter List,FreePIE.Core.ScriptEngine.Globals.ScriptHelpers,FilterHelper,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\Globals\ScriptHelpers\FilterHelper.cs,ensureMapRange,The method has 5 parameters. Parameters: x' xMin' xMax' yMin' yMax
Long Parameter List,FreePIE.Core.ScriptEngine.Python,PythonScriptEngine,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\Python\PythonScriptEngine.cs,PythonScriptEngine,The method has 6 parameters. Parameters: parser' globalProviders' eventAggregator' threadTimingFactory' paths' log
Long Statement,FreePIE.Core.Common.Extensions,TypeExtensions,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\Extensions\TypeExtensions.cs,GetTypes,The length of the statement  "                .Where(t => !t.IsAbstract && (type.IsGenericType ? t.IsAssignableFrom(type.GetGenericTypeDefinition()) : type.IsAssignableFrom(t))) " is 131.
Long Statement,FreePIE.Core.Common,Log,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\Log.cs,Error,The length of the statement  "            var log = string.Format("{0}{1}{2} - {3}: {5}{4}{5}"' new string('\t'' indentation)' delimiter' e.GetType().FullName' e.Message' PrependTabsToLinebreaks(e.StackTrace' indentation)' Environment.NewLine); " is 202.
Long Statement,FreePIE.Core.Plugins,PluginInvoker,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Plugins\PluginInvoker.cs,PopulatePluginSettings,The length of the statement  "            var removedPluginSettings = settings.PluginSettings.Where(ps => !pluginTypes.Any(pt => pt.FullName == ps.PluginType)).ToList(); " is 127.
Long Statement,FreePIE.Core.Plugins,PluginInvoker,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Plugins\PluginInvoker.cs,PopulatePluginSettings,The length of the statement  "            var addedPluginTypes = pluginTypes.Where(pt => !settings.PluginSettings.Any(ps => ps.PluginType == pt.FullName)).ToList(); " is 122.
Long Statement,FreePIE.Core.Plugins,PluginInvoker,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Plugins\PluginInvoker.cs,InitProperties,The length of the statement  "                    if (property.Value == null || (property.DefaultValue != null && property.Value.GetType() != property.DefaultValue.GetType())) " is 125.
Long Statement,FreePIE.Core.ScriptEngine.CodeCompletion,InfoTransformHelper,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\CodeCompletion\InfoTransformHelper.cs,AddProperties,The length of the statement  "            propDelim.AddChildren(members.Where(m => m.MemberType == MemberTypes.Property && !IsDeprecated(m)).Select(m => MapProperty(m as PropertyInfo))); " is 144.
Long Statement,FreePIE.Core.ScriptEngine.CodeCompletion,InfoTransformHelper,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\CodeCompletion\InfoTransformHelper.cs,AddMethods,The length of the statement  "            methodDelim.AddChildren(members.Where(m => m.MemberType == MemberTypes.Method && !(m as MethodInfo).IsSpecialName && !IsDeprecated(m)).Select(m => MapMethod(m as MethodInfo))); " is 176.
Long Statement,FreePIE.Core.ScriptEngine.CodeCompletion,InfoTransformHelper,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\CodeCompletion\InfoTransformHelper.cs,ConstructDelimiterNode,The length of the statement  "            return new Node<TokenInfo>(new TokenInfo(new Token(TokenType.Delimiter' delimiter.ToString())' new ExpressionInfo() { Name = delimiter.ToString() } )); " is 151.
Long Statement,FreePIE.Core.ScriptEngine.CodeCompletion,InfoTransformHelper,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\CodeCompletion\InfoTransformHelper.cs,MapMethod,The length of the statement  "            var parameters = string.Join("'"' GetParametersWithoutIndexer(mi).Select(pi => string.Format("{0} {1}"' pi.ParameterType.Name' pi.Name))); " is 138.
Long Statement,FreePIE.Core.ScriptEngine.CodeCompletion,InfoTransformHelper,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\CodeCompletion\InfoTransformHelper.cs,MapMethod,The length of the statement  "            expInfo.Description = string.Format("{0} {1} ({2})"' mi.ReturnType.Name == "Void" ? "void" : mi.ReturnType.Name' mi.Name' parameters); " is 134.
Long Statement,FreePIE.Core.ScriptEngine.CodeCompletion,InfoTransformHelper,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\CodeCompletion\InfoTransformHelper.cs,GetParametersWithoutIndexer,The length of the statement  "            return mi.GetCustomAttributes(typeof(NeedIndexer)' false).Length > 0 ? parameters.Take(parameters.Length - 1) : parameters; " is 123.
Long Statement,FreePIE.Core.ScriptEngine.CodeCompletion,RuntimeInfoProvider,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\CodeCompletion\RuntimeInfoProvider.cs,AnalyzeExpression,The length of the statement  "            Node<TokenInfo> parent = RuntimeInfo.FindSequence(sequence' (tokenInfo' token) => tokenInfo.Identifier.IsCompleteMatch(token)); " is 127.
Long Statement,FreePIE.Core.ScriptEngine.Python,PythonScriptParser,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\Python\PythonScriptParser.cs,ListDeprecatedWarnings,The length of the statement  "                .Select(m => new ScriptErrorEvent(ErrorLevel.Warning' string.Format("{0} marked as deprecated' use {1}"' m.Info.Deprecated' m.Info.ReplacedWith)' GetLineNumber(script' m.IndexOf))) " is 180.
Long Statement,FreePIE.Core.ScriptEngine.Python,PythonScriptParser,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\Python\PythonScriptParser.cs,FindAndInitMethodsThatNeedIndexer,The length of the statement  "                        var newArguments = string.Format(@"{0}' ""{1}"")"' proccesedArguments' arguments.Substring(1' arguments.Length - 2).Replace(@""""' @"'")); " is 138.
Long Statement,FreePIE.Core.Services,ServiceBootstrapper,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Services\ServiceBootstrapper.cs,VerifyGenericFactoryFunction,The length of the statement  "            return request.ParentContext.Kernel.CanResolve(new Request(genericArguments[0]' null' new IParameter[0]' null' false' true)) || " is 127.
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,GetInterpolatedCubicSplinedCurve,The following statement contains a magic number: diag[i] = (h[i] + h[i + 1])/3;
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,GetInterpolatedCubicSplinedCurve,The following statement contains a magic number: sup[i] = h[i + 1]/6;
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,GetInterpolatedCubicSplinedCurve,The following statement contains a magic number: sub[i] = h[i]/6;
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,GetInterpolatedCubicSplinedCurve,The following statement contains a magic number: i <= np - 2
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,GetInterpolatedCubicSplinedCurve,The following statement contains a magic number: SolveTridiag(sub' diag' sup' ref a' np - 2);
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,GetInterpolatedCubicSplinedCurve,The following statement contains a magic number: np > 2
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,GetInterpolatedCubicSplinedCurve,The following statement contains a magic number: y = ((-a[i - 1]/6*(x2 + h[i])*x1 + yCoords[i - 1])*x2 +                                   (-a[i]/6*(x1 + h[i])*x2 + yCoords[i])*x1)/h[i];
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,GetInterpolatedCubicSplinedCurve,The following statement contains a magic number: y = ((-a[i - 1]/6*(x2 + h[i])*x1 + yCoords[i - 1])*x2 +                                   (-a[i]/6*(x1 + h[i])*x2 + yCoords[i])*x1)/h[i];
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,SolveCubicSpline,The following statement contains a magic number: diag[i] = (h[i] + h[i + 1])/3;
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,SolveCubicSpline,The following statement contains a magic number: sup[i] = h[i + 1]/6;
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,SolveCubicSpline,The following statement contains a magic number: sub[i] = h[i]/6;
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,SolveCubicSpline,The following statement contains a magic number: i <= np - 2
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,SolveCubicSpline,The following statement contains a magic number: SolveTridiag(sub' diag' sup' ref a' np - 2);
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,SolveCubicSpline,The following statement contains a magic number: np > 2
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,SolveCubicSpline,The following statement contains a magic number: y = ((-a[gap - 1]/6*(x2 + h[gap])*x1 + knownSamples[gap - 1].Y)*x2 +                         (-a[gap]/6*(x1 + h[gap])*x2 + knownSamples[gap].Y)*x1)/h[gap];
Magic Number,FreePIE.Core.Common,CurveMath,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Common\CurveMath.cs,SolveCubicSpline,The following statement contains a magic number: y = ((-a[gap - 1]/6*(x2 + h[gap])*x1 + knownSamples[gap - 1].Y)*x2 +                         (-a[gap]/6*(x1 + h[gap])*x2 + knownSamples[gap].Y)*x1)/h[gap];
Magic Number,FreePIE.Core.Model,Settings,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Model\Settings.cs,AddRecentScript,The following statement contains a magic number: const int n = 10;
Magic Number,FreePIE.Core.Model,Point,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Model\Curve.cs,GetHashCode,The following statement contains a magic number: return (X.GetHashCode() * 397) ^ Y.GetHashCode();
Magic Number,FreePIE.Core.ScriptEngine.CodeCompletion,Token,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\CodeCompletion\Token.cs,GetHashCode,The following statement contains a magic number: return ((Value != null ? Value.GetHashCode() : 0)*397) ^ Type.GetHashCode();
Magic Number,FreePIE.Core.ScriptEngine.CodeCompletion,ExpressionInfo,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\CodeCompletion\ExpressionInfo.cs,GetFormattedDescription,The following statement contains a magic number: var b = new StringBuilder(Name.Length + Description.Length + 5);
Magic Number,FreePIE.Core.ScriptEngine.Globals.ScriptHelpers.Strategies,ContinuesRotationStrategy,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\Globals\ScriptHelpers\Strategies\ContinuesRotationStrategy.cs,Update,The following statement contains a magic number: double halfCircle = unit == Units.Radians ? Math.PI : 180d;
Magic Number,FreePIE.Core.ScriptEngine.Globals.ScriptHelpers.Strategies,ContinuesRotationStrategy,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\Globals\ScriptHelpers\Strategies\ContinuesRotationStrategy.cs,Update,The following statement contains a magic number: delta -= (2*halfCircle);
Magic Number,FreePIE.Core.ScriptEngine.Python,PythonScriptEngine,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\Python\PythonScriptEngine.cs,Stop,The following statement contains a magic number: const int maximumShutdownTime = 200;
Magic Number,FreePIE.Core.ScriptEngine.Python,PythonScriptParser,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\ScriptEngine\Python\PythonScriptParser.cs,FindAndInitMethodsThatNeedIndexer,The following statement contains a magic number: var newArguments = string.Format(@"{0}' ""{1}"")"' proccesedArguments' arguments.Substring(1' arguments.Length - 2).Replace(@""""' @"'"));
Magic Number,FreePIE.Core.Services,ServiceBootstrapper,D:\research\architectureSmells\repos\AndersMalmgren_FreePIE\FreePIE.Core\Services\ServiceBootstrapper.cs,VerifyFactoryFunction,The following statement contains a magic number: genericArguments.Count() > 2
