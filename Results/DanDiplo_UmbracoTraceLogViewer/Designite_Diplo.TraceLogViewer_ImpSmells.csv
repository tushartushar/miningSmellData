Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Diplo.TraceLogViewer.Controllers,TraceLogTreeController,C:\repos\DanDiplo_UmbracoTraceLogViewer\Diplo.TraceLogViewer\Controllers\TraceLogTreeController.cs,GetTreeNodes,Cyclomatic complexity of the method is 8
Complex Method,Diplo.TraceLogViewer.Services,LogDataService,C:\repos\DanDiplo_UmbracoTraceLogViewer\Diplo.TraceLogViewer\Services\LogDataService.cs,ParseLogDataItem,Cyclomatic complexity of the method is 11
Long Statement,Diplo.TraceLogViewer.Services,LogDataService,C:\repos\DanDiplo_UmbracoTraceLogViewer\Diplo.TraceLogViewer\Services\LogDataService.cs,GetLogDataFromFilePath,The length of the statement  "                throw new FileNotFoundException("The requested trace log file '" + Path.GetFileName(logFilePath) + "' could not be found"' logFilePath); " is 136.
Long Statement,Diplo.TraceLogViewer.Services,LogFileService,C:\repos\DanDiplo_UmbracoTraceLogViewer\Diplo.TraceLogViewer\Services\LogFileService.cs,ResolveBaseLogFileName,The length of the statement  "                var appender = loggerRepo.GetAppenders().FirstOrDefault(a => "rollingFile".InvariantEquals(a.Name)) as RollingFileAppender; " is 123.
Long Statement,Diplo.TraceLogViewer.Services,LogFileService,C:\repos\DanDiplo_UmbracoTraceLogViewer\Diplo.TraceLogViewer\Services\LogFileService.cs,ResolveBaseLogPath,The length of the statement  "                var appender = loggerRepo.GetAppenders().FirstOrDefault(a => "rollingFile".InvariantEquals(a.Name)) as RollingFileAppender; " is 123.
Magic Number,Diplo.TraceLogViewer.Services,LogDataService,C:\repos\DanDiplo_UmbracoTraceLogViewer\Diplo.TraceLogViewer\Services\LogDataService.cs,ParseLogDataItem,The following statement contains a magic number: if (line == null || line.Length < 25)                  return null;
Magic Number,Diplo.TraceLogViewer.Services,LogDataService,C:\repos\DanDiplo_UmbracoTraceLogViewer\Diplo.TraceLogViewer\Services\LogDataService.cs,ParseLogDataItem,The following statement contains a magic number: var date = DateTime.ParseExact(line.Substring(0' 23)' "yyyy-MM-dd HH:mm:ss'FFF"' CultureInfo.InvariantCulture);
