Implementation smell,Namespace,Class,File,Method,Description
Long Method,JetBrains.TeamCity.ServiceMessages.Read,ServiceMessageParser,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Read\ServiceMessageParser.cs,ParseServiceMessages,The method has 107 lines of code.
Complex Method,JetBrains.TeamCity.ServiceMessages,ServiceMessageReplacements,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\ServiceMessageReplacements.cs,Encode,Cyclomatic complexity of the method is 13
Complex Method,JetBrains.TeamCity.ServiceMessages,ServiceMessageReplacements,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\ServiceMessageReplacements.cs,DecodeChars,Cyclomatic complexity of the method is 21
Complex Method,JetBrains.TeamCity.ServiceMessages.Read,ServiceMessageParser,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Read\ServiceMessageParser.cs,ParseServiceMessages,Cyclomatic complexity of the method is 35
Complex Method,JetBrains.TeamCity.ServiceMessages.Write,ServiceMessageFormatter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\ServiceMessageFormatter.cs,FormatMessage,Cyclomatic complexity of the method is 11
Complex Method,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl,TeamCityWriterFacade,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\TeamCityWriterFacade.cs,TeamCityWriterFacade,Cyclomatic complexity of the method is 10
Complex Method,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl,TeamCityWriterImpl,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\TeamCityWriterImpl.cs,TeamCityWriterImpl,Cyclomatic complexity of the method is 10
Long Parameter List,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl,TeamCityWriterFacade,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\TeamCityWriterFacade.cs,TeamCityWriterFacade,The method has 9 parameters. Parameters: processor' blockWriter' compilationWriter' testsWriter' messageWriter' artifactsWriter' statusWriter' flowWriter' disposeCallback
Long Parameter List,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl,TeamCityWriterImpl,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\TeamCityWriterImpl.cs,TeamCityWriterImpl,The method has 9 parameters. Parameters: processor' flowWriter' blockWriter' compilationWriter' testsWriter' messageWriter' artifactsWriter' statusWriter' dispose
Long Statement,JetBrains.TeamCity.ServiceMessages.Write,ServiceMessageFormatter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\ServiceMessageFormatter.cs,FormatMessage,The length of the statement  "            if (ServiceMessageReplacements.Encode(messageName) != messageName) throw new ArgumentException("The message name contains illegal characters."' nameof(messageName)); " is 165.
Long Statement,JetBrains.TeamCity.ServiceMessages.Write,ServiceMessageFormatter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\ServiceMessageFormatter.cs,FormatMessage,The length of the statement  "            return string.Format("{2}{0} '{1}'{3}"' messageName' ServiceMessageReplacements.Encode(singleValue)' ServiceMessageConstants.ServiceMessageOpen' ServiceMessageConstants.ServiceMessageClose); " is 190.
Long Statement,JetBrains.TeamCity.ServiceMessages.Write,ServiceMessageFormatter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\ServiceMessageFormatter.cs,FormatMessage,The length of the statement  "            return FormatMessage(serviceMessage.Name' serviceMessage.Keys.Select(key => new ServiceMessageProperty(key' serviceMessage.GetValue(key) ?? ""))); " is 146.
Long Statement,JetBrains.TeamCity.ServiceMessages.Write,ServiceMessageFormatter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\ServiceMessageFormatter.cs,FormatMessage,The length of the statement  "            if (string.IsNullOrEmpty(messageName)) throw new ArgumentException("The message name must not be empty"' nameof(messageName)); " is 126.
Long Statement,JetBrains.TeamCity.ServiceMessages.Write.Special,TeamCityServiceMessages,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\TeamCityServiceMessages.cs,CreateWriter,The length of the statement  "            var processor = new FlowServiceMessageWriter(new ServiceMessagesWriter(Formatter' destination)' FlowIdGenerator' Updaters.ToList()); " is 132.
Long Statement,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl,FlowServiceMessageWriter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\FlowServiceMessageWriter.cs,AddServiceMessage,The length of the statement  "            _processor.AddServiceMessage(_updaters.Aggregate(serviceMessage' (current' updater) => updater.UpdateServiceMessage(current))); " is 127.
Long Statement,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl.Updater,TimestampUpdater,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\Updater\TimestampUpdater.cs,UpdateServiceMessage,The length of the statement  "            return new PatchedServiceMessage(message) {{"timestamp"' _timeService().ToUniversalTime().ToString("yyyy-MM-dd'T'HH:mm:ss.fff"' CultureInfo.InvariantCulture) + "+0000"}}; " is 170.
Long Statement,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl.Writer,TeamCityMessageWriter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\Writer\TeamCityMessageWriter.cs,Write,The length of the statement  "            var msg = new ServiceMessage("message") {{"text"' text}' {"status"' status}' {"tc:tags"' "tc:parseServiceMessagesInside"}}; " is 123.
Long Statement,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl.Writer,TeamCityTestWriter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\Writer\TeamCityTestWriter.cs,WriteStdOutput,The length of the statement  "            PostMessage(new ServiceMessage("testStdOut") {{"name"' _testName}' {"out"' text}' {"tc:tags"' "tc:parseServiceMessagesInside"}}); " is 129.
Long Statement,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl.Writer,TeamCityTestWriter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\Writer\TeamCityTestWriter.cs,WriteErrOutput,The length of the statement  "            PostMessage(new ServiceMessage("testStdErr") {{"name"' _testName}' {"out"' text}' {"tc:tags"' "tc:parseServiceMessagesInside"}}); " is 129.
Long Statement,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl.Writer,TeamCityTestWriter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\Writer\TeamCityTestWriter.cs,WriteFailed,The length of the statement  "            PostMessage(new ServiceMessage("testFailed") {{"name"' _testName}' {"message"' errorMessage}' {"details"' errorDetails}}); " is 122.
Long Statement,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl.Writer,TeamCityTestWriter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\Writer\TeamCityTestWriter.cs,WriteImage,The length of the statement  "            var message = new ServiceMessage("testMetadata") {{"testName"' _testName}' {"type"' "image"}' {"value"' teamCityArtifactUri}}; " is 126.
Long Statement,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl.Writer,TeamCityTestWriter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\Writer\TeamCityTestWriter.cs,WriteFile,The length of the statement  "            var message = new ServiceMessage("testMetadata") {{"testName"' _testName}' {"type"' "artifact"}' {"value"' teamCityArtifactUri}}; " is 129.
Long Statement,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl.Writer,TeamCityTestWriter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\Writer\TeamCityTestWriter.cs,WriteValue,The length of the statement  "            PostMessage(new ServiceMessage("testMetadata") {{"testName"' _testName}' {"type"' "number"}' {"value"' value.ToString(CultureInfo.InvariantCulture)}' {"name"' name}}); " is 167.
Long Statement,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl.Writer,TeamCityTestWriter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\Writer\TeamCityTestWriter.cs,WriteLink,The length of the statement  "            PostMessage(new ServiceMessage("testMetadata") {{"testName"' _testName}' {"type"' "link"}' {"value"' linkUri}' {"name"' name}}); " is 128.
Empty Catch Block,JetBrains.TeamCity.ServiceMessages,ServiceMessageReplacements,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\ServiceMessageReplacements.cs,DecodeChars,The method has an empty catch block.
Magic Number,JetBrains.TeamCity.ServiceMessages,ServiceMessageReplacements,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\ServiceMessageReplacements.cs,Encode,The following statement contains a magic number: var sb = new StringBuilder(value.Length * 2);
Magic Number,JetBrains.TeamCity.ServiceMessages,ServiceMessageReplacements,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\ServiceMessageReplacements.cs,DecodeChars,The following statement contains a magic number: unicodeCounter-- == 5
Magic Number,JetBrains.TeamCity.ServiceMessages,ServiceMessageReplacements,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\ServiceMessageReplacements.cs,DecodeChars,The following statement contains a magic number: unicodeSb.Length == 4
Magic Number,JetBrains.TeamCity.ServiceMessages,ServiceMessageReplacements,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\ServiceMessageReplacements.cs,DecodeChars,The following statement contains a magic number: switch (ch)                      {                          case '|':                              yield return '|';                              break; //                          case '\'':                              yield return '\'';                              break; //                          case 'n':                              yield return '\n';                              break; //                          case 'r':                              yield return '\r';                              break; //                          case '[':                              yield return '[';                              break; //                          case ']':                              yield return ']';                              break; //                          case 'x':                              yield return '\u0085';                              break; //\u0085 (next line)=>|x                          case 'l':                              yield return '\u2028';                              break; //\u2028 (line separator)=>|l                          case 'p':                              yield return '\u2029';                              break; //                          case '0':                              unicodeCounter = 5;                              break;                          default:                              yield return InvalidChar;                              break; // do not throw any exception to make it faster //TODO: no exception on illegal format                      }
Magic Number,JetBrains.TeamCity.ServiceMessages.Write.Special.Impl.Writer,TeamCityBuildStatusWriter,D:\research\architectureSmells\repos\JetBrains_TeamCity.ServiceMessages\TeamCity.ServiceMessages\Write\Special\Impl\Writer\TeamCityBuildStatusWriter.cs,WriteBuildProblem,The following statement contains a magic number: identity.Length >= 60
