Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,DynamicRestProxy,RestProxy,D:\research\architectureSmells\repos\dkackman_DynamicRestProxy\src\DynamicRestProxy.NetStandard\RestProxy.cs,CreateVerbAsyncTask,The method has 5 parameters. Parameters: verb' unnamedArgs' namedArgs' cancelToken' serializationSettings
Long Parameter List,DynamicRestProxy.UnitTests,TestProxy,D:\research\architectureSmells\repos\dkackman_DynamicRestProxy\src\DynamicRestProxy.UnitTests\TestProxy.cs,CreateVerbAsyncTask,The method has 5 parameters. Parameters: verb' unnamedArgs' namedArgs' cancelToken' serializationSettings
Long Statement,DynamicRestProxy,RestProxy,D:\research\architectureSmells\repos\dkackman_DynamicRestProxy\src\DynamicRestProxy.NetStandard\RestProxy.cs,TryInvokeMember,The length of the statement  "                    result = CreateVerbAsyncTask<dynamic>(binder.Name' requestArgs' binder.GetNamedArgs(args)' cancelToken' serializationSettings); " is 127.
Long Statement,DynamicRestProxy,RestProxy,D:\research\architectureSmells\repos\dkackman_DynamicRestProxy\src\DynamicRestProxy.NetStandard\RestProxy.cs,TryInvokeMember,The length of the statement  "                    // we got a type argument (like this if experimental: client.get<SomeType>(); or like this normally: client.get(typeof(SomeType)); ) " is 132.
Long Statement,DynamicRestProxy,RestProxy,D:\research\architectureSmells\repos\dkackman_DynamicRestProxy\src\DynamicRestProxy.NetStandard\RestProxy.cs,TryInvokeMember,The length of the statement  "                    result = method.Invoke(this' new object[] { binder.Name' requestArgs' binder.GetNamedArgs(args)' cancelToken' serializationSettings }); " is 135.
