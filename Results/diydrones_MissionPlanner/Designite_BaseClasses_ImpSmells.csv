Implementation smell,Namespace,Class,File,Method,Description
Long Method,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The method has 132 lines of code.
Complex Method,DirectShow.BaseClasses,EnumMediaTypes,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Next,Cyclomatic complexity of the method is 8
Complex Method,DirectShow.BaseClasses,BasePin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,AgreeMediaType,Cyclomatic complexity of the method is 10
Complex Method,DirectShow.BaseClasses,BasePin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,AttemptConnection,Cyclomatic complexity of the method is 8
Complex Method,DirectShow.BaseClasses,BasePin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,TryMediaTypes,Cyclomatic complexity of the method is 9
Complex Method,DirectShow.BaseClasses,BaseInputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,OnReceive,Cyclomatic complexity of the method is 11
Complex Method,DirectShow.BaseClasses,BaseOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideAllocator,Cyclomatic complexity of the method is 10
Complex Method,DirectShow.BaseClasses,BaseFilter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,RegisterFunction,Cyclomatic complexity of the method is 9
Complex Method,DirectShow.BaseClasses,BaseFilter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,UnregisterFunction,Cyclomatic complexity of the method is 9
Complex Method,DirectShow.BaseClasses,TransformFilter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,InitializeOutputSample,Cyclomatic complexity of the method is 10
Complex Method,DirectShow.BaseClasses,TransInPlaceFilter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,OnReceive,Cyclomatic complexity of the method is 8
Complex Method,DirectShow.BaseClasses,TransInPlaceFilter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Copy,Cyclomatic complexity of the method is 12
Complex Method,DirectShow.BaseClasses,SourceStream,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DoBufferProcessingLoop,Cyclomatic complexity of the method is 9
Complex Method,DirectShow.BaseClasses,SourceStream,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,Cyclomatic complexity of the method is 22
Complex Method,DirectShow.BaseClasses,OutputQueue,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,Cyclomatic complexity of the method is 10
Complex Method,DirectShow.BaseClasses,AsyncStream,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Seek,Cyclomatic complexity of the method is 11
Complex Method,DirectShow.BaseClasses,BitStreamReader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Seek,Cyclomatic complexity of the method is 12
Complex Method,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,Cyclomatic complexity of the method is 14
Complex Method,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,Cyclomatic complexity of the method is 10
Complex Method,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,SetPositions,Cyclomatic complexity of the method is 9
Complex Method,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,CompleteConnect,Cyclomatic complexity of the method is 8
Complex Method,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,InitializeOutputPins,Cyclomatic complexity of the method is 19
Complex Method,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,RegisterProtocol,Cyclomatic complexity of the method is 8
Complex Method,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,RegisterMediaType,Cyclomatic complexity of the method is 9
Complex Method,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,UnregisterProtocol,Cyclomatic complexity of the method is 13
Complex Method,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,SetPositions,Cyclomatic complexity of the method is 17
Complex Method,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,Cyclomatic complexity of the method is 13
Complex Method,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Info,Cyclomatic complexity of the method is 18
Complex Method,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Enable,Cyclomatic complexity of the method is 16
Complex Method,DirectShow.BaseClasses,MuxerInputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,OnReceive,Cyclomatic complexity of the method is 12
Complex Method,DirectShow.BaseClasses,BaseMuxer,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,OpenFile,Cyclomatic complexity of the method is 13
Complex Method,DirectShow.BaseClasses,BaseMuxer,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,Cyclomatic complexity of the method is 17
Complex Method,DirectShow,AMMediaType,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Equals,Cyclomatic complexity of the method is 8
Complex Method,DirectShow,AMMediaType,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,MatchesPartial,Cyclomatic complexity of the method is 8
Complex Method,DirectShow,AMMediaType,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,MatchesPartial,Cyclomatic complexity of the method is 8
Complex Method,Sonic,DSPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,RemoveFiltersChain,Cyclomatic complexity of the method is 9
Long Parameter List,DirectShow.BaseClasses,BasePropertyPage,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,OleCreatePropertyFrame,The method has 11 parameters.
Long Parameter List,DirectShow.BaseClasses,BasePropertyPage,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,MoveWindow,The method has 6 parameters.
Long Parameter List,DirectShow.BaseClasses,BaseRendererFilter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,WaitDispatchingMessages,The method has 5 parameters.
Long Parameter List,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Info,The method has 8 parameters.
Long Parameter List,DirectShow,IFilterMapper2,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,RegisterFilter,The method has 6 parameters.
Long Parameter List,DirectShow,IFilterMapper2,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,EnumMatchingFilters,The method has 15 parameters.
Long Parameter List,DirectShow,IKsPropertySet,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Set,The method has 6 parameters.
Long Parameter List,DirectShow,IKsPropertySet,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Get,The method has 7 parameters.
Long Parameter List,DirectShow,ICaptureGraphBuilder2,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,FindInterface,The method has 5 parameters.
Long Parameter List,DirectShow,ICaptureGraphBuilder2,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,RenderStream,The method has 5 parameters.
Long Parameter List,DirectShow,ICaptureGraphBuilder2,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,ControlStream,The method has 7 parameters.
Long Parameter List,DirectShow,ICaptureGraphBuilder2,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,FindPin,The method has 7 parameters.
Long Parameter List,DirectShow,IAMStreamSelect,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Info,The method has 8 parameters.
Long Statement,DirectShow.BaseClasses,BasePin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,TryMediaTypes,The length of the statement  "					if (FAILED (hr) && SUCCEEDED (hrFailure) && (hr != E_FAIL) && (hr != E_INVALIDARG) && (hr != VFW_E_TYPE_NOT_ACCEPTED)) { " is 120.
Long Statement,DirectShow.BaseClasses,BasePin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,CreateMemoryAllocator,The length of the statement  "	HRESULT hr = (HRESULT)API.CoCreateInstance (typeof(MemoryAllocator).GUID' IntPtr.Zero' CLSCTX.CLSCTX_INPROC_SERVER' typeof(IMemAllocator).GUID' out ppAlloc); " is 157.
Long Statement,DirectShow.BaseClasses,BasePin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,CreatePosPassThru,The length of the statement  "	HRESULT hr = (HRESULT)API.CoCreateInstance (typeof(SeekingPassThru).GUID' _owner' CLSCTX.CLSCTX_INPROC_SERVER' typeof(ISeekingPassThru).GUID' out ppPassThru); " is 158.
Long Statement,DirectShow.BaseClasses,BaseFilter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,RegisterFunction,The length of the statement  "				if (_setup.Category != null && _setup.Category != Guid.Empty && _setup.Category != FilterCategory.LegacyAmFilterCategory) { " is 123.
Long Statement,DirectShow.BaseClasses,BaseFilter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,UnregisterFunction,The length of the statement  "				if (_setup.Category != null && _setup.Category != Guid.Empty && _setup.Category != FilterCategory.LegacyAmFilterCategory) { " is 123.
Long Statement,DirectShow.BaseClasses,TransformFilter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,InitializeOutputSample,The length of the statement  "	int hr = Output.GetDeliveryBuffer (out pOutputSample' ((pProps.dwSampleFlags & AMSamplePropertyFlags.TimeValid) > 0) ? (DsLong)pProps.tStart : null' ((pProps.dwSampleFlags & AMSamplePropertyFlags.StopValid) > 0) ? (DsLong)pProps.tStop : null' dwFlags); " is 252.
Long Statement,DirectShow.BaseClasses,TransformFilter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,InitializeOutputSample,The length of the statement  "			OutProps.dwSampleFlags = (OutProps.dwSampleFlags & AMSamplePropertyFlags.TypeChanged) | (pProps.dwSampleFlags & ~AMSamplePropertyFlags.TypeChanged); " is 148.
Long Statement,DirectShow.BaseClasses,TransInPlaceFilter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The length of the statement  "	if ((Request.cBuffers > Actual.cBuffers) || (Request.cbBuffer > Actual.cbBuffer) || (Request.cbAlign > Actual.cbAlign)) { " is 121.
Long Statement,DirectShow.BaseClasses,TransInPlaceFilter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Copy,The length of the statement  "	hr = Output.GetDeliveryBuffer (out _dest' bTime ? (DsLong)tStart : null' bTime ? (DsLong)tStop : null' m_bSampleSkipped ? AMGBF.PrevFrameSkipped : 0); " is 150.
Long Statement,DirectShow.BaseClasses,BasePropertyPage,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ShowPropertyPages,The length of the statement  "				int hr = OleCreatePropertyFrame (_hwnd' 0' 0' "Filter "' 1' ref oDevice' pCAUUID.cElems' pCAUUID.pElems' 0' 0' IntPtr.Zero); " is 124.
Long Statement,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The length of the statement  "			if (!m_evFlush.WaitOne (0' false) && !(m_Filter as BaseSplitter).QuitEvent.WaitOne (0' false) && !m_evQuit.WaitOne (0' false)) { " is 128.
Long Statement,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,GetCapabilities,The length of the statement  "	pCapabilities = AMSeekingSeekingCapabilities.CanSeekAbsolute | AMSeekingSeekingCapabilities.CanSeekForwards | AMSeekingSeekingCapabilities.CanSeekBackwards | AMSeekingSeekingCapabilities.CanGetDuration | AMSeekingSeekingCapabilities.CanGetCurrentPos | AMSeekingSeekingCapabilities.CanGetStopPos; " is 295.
Long Statement,DirectShow.BaseClasses,FileWriter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,OpenOutput,The length of the statement  "	FileStream _stream = new FileStream (sFileName' bOverwrite ? FileMode.Create : FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.Read); " is 140.
Long Statement,Sonic,HRESULT,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,TraceWrite,The length of the statement  "		TRACE (string.Format ("-- ASSERT -- Method {0}::{1}' HRESULT : {2}'File : {3} Line : {4} "' _method.ReflectedType.Name' _method.Name' ToString ()' _file' _frame.GetFileLineNumber ())); " is 184.
Long Statement,Sonic,DSPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ToString,The length of the statement  "	return " { " + base.ToString () + " } Name: '" + Name + "' ( " + Direction.ToString () + " )" + (IsConnected ? " Connected" : " Not Connected"); " is 144.
Long Statement,Sonic,DSFilterGraphBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,StepForward,The length of the statement  "			hr = m_MediaSeeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' _stop' AMSeekingSeekingFlags.NoPositioning); " is 131.
Long Statement,Sonic,DSFilterGraphBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,StepBackward,The length of the statement  "		hr = m_MediaSeeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' _stop' AMSeekingSeekingFlags.NoPositioning); " is 131.
Complex Conditional,DirectShow.BaseClasses,BasePin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,TryMediaTypes,The conditional expression  "FAILED (hr) && SUCCEEDED (hrFailure) && (hr != E_FAIL) && (hr != E_INVALIDARG) && (hr != VFW_E_TYPE_NOT_ACCEPTED)"  is complex.
Complex Conditional,DirectShow.BaseClasses,RendererInputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,OnReceive,The conditional expression  "!IsStopped && !IsFlushing && !_filter.IsAbort && !m_bRunTimeError"  is complex.
Complex Conditional,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The conditional expression  "(tStart > tStop && tStop > _stop) || (tStart <= tStop && tStart > _stop)"  is complex.
Virtual Method Call from Constructor,DirectShow.BaseClasses,BaseEnum,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,BaseEnum,The constructor "BaseEnum" calls a virtual method "Reset".
Empty Catch Block,DirectShow.BaseClasses,BaseFilter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,UnregisterFunction,The method has an empty catch block.
Empty Catch Block,DirectShow.BaseClasses,BasePropertyPage,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ShowPropertyPages,The method has an empty catch block.
Empty Catch Block,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,CompleteConnect,The method has an empty catch block.
Empty Catch Block,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,CompleteConnect,The method has an empty catch block.
Empty Catch Block,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Load,The method has an empty catch block.
Empty Catch Block,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Load,The method has an empty catch block.
Empty Catch Block,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Enable,The method has an empty catch block.
Empty Catch Block,Sonic,HRESULT,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,GetErrorText,The method has an empty catch block.
Empty Catch Block,Sonic,VTableInterface,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,GetInterfaceImpl,The method has an empty catch block.
Empty Catch Block,Sonic,VTableInterface,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,TryCast,The method has an empty catch block.
Empty Catch Block,Sonic,MonikerInfo,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,GetPropBagValue,The method has an empty catch block.
Magic Number,DirectShow.BaseClasses,BasePin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,AgreeMediaType,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	int hr;  	IntPtr _ptr = IntPtr.Zero;  	if (i == (BOOL)m_bTryMyTypesFirst) {  		hr = pReceivePin.EnumMediaTypes (out _ptr);  		if (_ptr != IntPtr.Zero) {  			pEnumMediaTypes = (IEnumMediaTypes)new IEnumMediaTypesImpl (_ptr);  		}  	} else {  		hr = EnumMediaTypes (out _ptr);  		if (_ptr != IntPtr.Zero) {  			pEnumMediaTypes = (IEnumMediaTypes)Marshal.GetObjectForIUnknown (_ptr);  		}  	}  	if (SUCCEEDED (hr)) {  		ASSERT (pEnumMediaTypes);  		hr = TryMediaTypes (ref pReceivePin' pmt' pEnumMediaTypes);  		if (Marshal.IsComObject (pEnumMediaTypes)) {  			Marshal.ReleaseComObject (pEnumMediaTypes);  		}  		if (SUCCEEDED (hr)) {  			return NOERROR;  		} else {  			if ((hr != E_FAIL) && (hr != E_INVALIDARG) && (hr != VFW_E_TYPE_NOT_ACCEPTED)) {  				hrFailure = hr;  			}  		}  	}  }  
Magic Number,DirectShow.BaseClasses,AMThread,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Create,The following statement contains a magic number: lock (m_AccessLock) {  	if (ThreadExists) {  		return false;  	}  	bool bResult = OnCreate ();  	Thread.Sleep (20);  	if (!bResult) {  		Close ();  	}  	return bResult;  }  
Magic Number,DirectShow.BaseClasses,AMThread,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Create,The following statement contains a magic number: Thread.Sleep (20);  
Magic Number,DirectShow.BaseClasses,SourceStream,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DoBufferProcessingLoop,The following statement contains a magic number: do {  	while (!CheckRequest (ref com)) {  		IntPtr pSample;  		DsLong _start = new DsLong (0)' _stop = new DsLong (0);  		int hr = GetDeliveryBuffer (out pSample' _start' _stop' AMGBF.NoWait);  		if (FAILED (hr)) {  			Thread.Sleep (hr == VFW_E_TIMEOUT ? 5 : 1);  			continue;  			// go round again. Perhaps the error will go away  			// or the allocator is decommited & we will be asked to  			// exit soon.  		}  		IMediaSampleImpl _sample = new IMediaSampleImpl (pSample);  		try {  			// Virtual function user will override.  			hr = FillBuffer (ref _sample);  			if (hr == S_OK) {  				hr = Deliver (ref _sample);  				// downstream filter returns S_FALSE if it wants us to  				// stop or an error if it's reporting an error.  				if (hr != S_OK) {  					TRACE (String.Format ("Deliver() returned {0}; stopping"' hr));  					return S_OK;  				}  			} else if (hr == S_FALSE) {  				// derived class wants us to stop pushing data  				DeliverEndOfStream ();  				return S_OK;  			} else {  				// derived class encountered an error  				TRACE (String.Format ("Deliver() returned {0}; stopping"' hr));  				DeliverEndOfStream ();  				m_Filter.NotifyEvent (EventCode.ErrorAbort' (IntPtr)hr' IntPtr.Zero);  				return hr;  			}  		} finally {  			Marshal.Release (pSample);  			pSample = IntPtr.Zero;  		}  		// all paths release the sample  	}  	// For all commands sent to us there must be a Reply call!  	if (com == Command.CMD_RUN || com == Command.CMD_PAUSE) {  		m_Thread.Reply (NOERROR);  	} else if (com != Command.CMD_STOP) {  		m_Thread.Reply (E_UNEXPECTED);  		TRACE ("Unexpected command!!!");  	}  } while (com != Command.CMD_STOP);  
Magic Number,DirectShow.BaseClasses,SourceStream,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DoBufferProcessingLoop,The following statement contains a magic number: while (!CheckRequest (ref com)) {  	IntPtr pSample;  	DsLong _start = new DsLong (0)' _stop = new DsLong (0);  	int hr = GetDeliveryBuffer (out pSample' _start' _stop' AMGBF.NoWait);  	if (FAILED (hr)) {  		Thread.Sleep (hr == VFW_E_TIMEOUT ? 5 : 1);  		continue;  		// go round again. Perhaps the error will go away  		// or the allocator is decommited & we will be asked to  		// exit soon.  	}  	IMediaSampleImpl _sample = new IMediaSampleImpl (pSample);  	try {  		// Virtual function user will override.  		hr = FillBuffer (ref _sample);  		if (hr == S_OK) {  			hr = Deliver (ref _sample);  			// downstream filter returns S_FALSE if it wants us to  			// stop or an error if it's reporting an error.  			if (hr != S_OK) {  				TRACE (String.Format ("Deliver() returned {0}; stopping"' hr));  				return S_OK;  			}  		} else if (hr == S_FALSE) {  			// derived class wants us to stop pushing data  			DeliverEndOfStream ();  			return S_OK;  		} else {  			// derived class encountered an error  			TRACE (String.Format ("Deliver() returned {0}; stopping"' hr));  			DeliverEndOfStream ();  			m_Filter.NotifyEvent (EventCode.ErrorAbort' (IntPtr)hr' IntPtr.Zero);  			return hr;  		}  	} finally {  		Marshal.Release (pSample);  		pSample = IntPtr.Zero;  	}  	// all paths release the sample  }  
Magic Number,DirectShow.BaseClasses,SourceStream,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DoBufferProcessingLoop,The following statement contains a magic number: if (FAILED (hr)) {  	Thread.Sleep (hr == VFW_E_TIMEOUT ? 5 : 1);  	continue;  	// go round again. Perhaps the error will go away  	// or the allocator is decommited & we will be asked to  	// exit soon.  }  
Magic Number,DirectShow.BaseClasses,SourceStream,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DoBufferProcessingLoop,The following statement contains a magic number: Thread.Sleep (hr == VFW_E_TIMEOUT ? 5 : 1);  
Magic Number,DirectShow.BaseClasses,BitStreamReader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ReadBit,The following statement contains a magic number: if (m_nBitIndex == 0) {  	int _readed = 0;  	HRESULT hr = ReadData (m_btCurrentByte' 1' out _readed);  	if (_readed == 0)  		m_btCurrentByte [0] = 0;  	m_nBitIndex = 8;  }  
Magic Number,DirectShow.BaseClasses,BitStreamReader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ReadBit,The following statement contains a magic number: m_nBitIndex = 8;  
Magic Number,DirectShow.BaseClasses,BitStreamReader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ReadByte,The following statement contains a magic number: return (int)ReadBits (8);  
Magic Number,DirectShow.BaseClasses,BitStreamReader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ReadWord,The following statement contains a magic number: return (int)ReadBits (16);  
Magic Number,DirectShow.BaseClasses,BitStreamReader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ReadDword,The following statement contains a magic number: return (int)ReadBits (32);  
Magic Number,DirectShow.BaseClasses,BitStreamReader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ReadQword,The following statement contains a magic number: return ReadBits (64);  
Magic Number,DirectShow.BaseClasses,BitStreamReader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,SkipBytes,The following statement contains a magic number: SkipBits (nCount * 8);  
Magic Number,DirectShow.BaseClasses,BitStreamReader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Stat,The following statement contains a magic number: pstatstg.type = 2;  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,CompleteConnect,The following statement contains a magic number: if (SUCCEEDED (hr) && m_pTrack != null) {  	long _time = 2 * UNITS;  	m_pTrack.Alloc (_time);  	m_pTrack.Active = true;  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (m_mt.majorType == MediaType.Video) {  	BitmapInfoHeader _bmi = m_mt;  	if (_bmi == null)  		return VFW_E_INVALIDMEDIATYPE;  	int lSize = m_mt.sampleSize;  	lSize = Math.Max (lSize' _bmi.ImageSize);  	lSize = Math.Max (lSize' _bmi.Width * Math.Abs (_bmi.Height) * _bmi.BitCount / 8);  	if (_bmi.BitCount == 0) {  		lSize = Math.Max (lSize' _bmi.Width * Math.Abs (_bmi.Height) * 4);  	}  	if (_bmi.Width == 0 || _bmi.Height == 0) {  		lSize = Math.Max (lSize' GetSystemMetrics (0) * GetSystemMetrics (1) * 4);  	}  	if (lSize > prop.cbBuffer) {  		prop.cbBuffer = lSize;  	}  	if (prop.cBuffers < 4) {  		prop.cBuffers = 4;  	}  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (m_mt.majorType == MediaType.Video) {  	BitmapInfoHeader _bmi = m_mt;  	if (_bmi == null)  		return VFW_E_INVALIDMEDIATYPE;  	int lSize = m_mt.sampleSize;  	lSize = Math.Max (lSize' _bmi.ImageSize);  	lSize = Math.Max (lSize' _bmi.Width * Math.Abs (_bmi.Height) * _bmi.BitCount / 8);  	if (_bmi.BitCount == 0) {  		lSize = Math.Max (lSize' _bmi.Width * Math.Abs (_bmi.Height) * 4);  	}  	if (_bmi.Width == 0 || _bmi.Height == 0) {  		lSize = Math.Max (lSize' GetSystemMetrics (0) * GetSystemMetrics (1) * 4);  	}  	if (lSize > prop.cbBuffer) {  		prop.cbBuffer = lSize;  	}  	if (prop.cBuffers < 4) {  		prop.cBuffers = 4;  	}  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (m_mt.majorType == MediaType.Video) {  	BitmapInfoHeader _bmi = m_mt;  	if (_bmi == null)  		return VFW_E_INVALIDMEDIATYPE;  	int lSize = m_mt.sampleSize;  	lSize = Math.Max (lSize' _bmi.ImageSize);  	lSize = Math.Max (lSize' _bmi.Width * Math.Abs (_bmi.Height) * _bmi.BitCount / 8);  	if (_bmi.BitCount == 0) {  		lSize = Math.Max (lSize' _bmi.Width * Math.Abs (_bmi.Height) * 4);  	}  	if (_bmi.Width == 0 || _bmi.Height == 0) {  		lSize = Math.Max (lSize' GetSystemMetrics (0) * GetSystemMetrics (1) * 4);  	}  	if (lSize > prop.cbBuffer) {  		prop.cbBuffer = lSize;  	}  	if (prop.cBuffers < 4) {  		prop.cBuffers = 4;  	}  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (m_mt.majorType == MediaType.Video) {  	BitmapInfoHeader _bmi = m_mt;  	if (_bmi == null)  		return VFW_E_INVALIDMEDIATYPE;  	int lSize = m_mt.sampleSize;  	lSize = Math.Max (lSize' _bmi.ImageSize);  	lSize = Math.Max (lSize' _bmi.Width * Math.Abs (_bmi.Height) * _bmi.BitCount / 8);  	if (_bmi.BitCount == 0) {  		lSize = Math.Max (lSize' _bmi.Width * Math.Abs (_bmi.Height) * 4);  	}  	if (_bmi.Width == 0 || _bmi.Height == 0) {  		lSize = Math.Max (lSize' GetSystemMetrics (0) * GetSystemMetrics (1) * 4);  	}  	if (lSize > prop.cbBuffer) {  		prop.cbBuffer = lSize;  	}  	if (prop.cBuffers < 4) {  		prop.cBuffers = 4;  	}  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (m_mt.majorType == MediaType.Video) {  	BitmapInfoHeader _bmi = m_mt;  	if (_bmi == null)  		return VFW_E_INVALIDMEDIATYPE;  	int lSize = m_mt.sampleSize;  	lSize = Math.Max (lSize' _bmi.ImageSize);  	lSize = Math.Max (lSize' _bmi.Width * Math.Abs (_bmi.Height) * _bmi.BitCount / 8);  	if (_bmi.BitCount == 0) {  		lSize = Math.Max (lSize' _bmi.Width * Math.Abs (_bmi.Height) * 4);  	}  	if (_bmi.Width == 0 || _bmi.Height == 0) {  		lSize = Math.Max (lSize' GetSystemMetrics (0) * GetSystemMetrics (1) * 4);  	}  	if (lSize > prop.cbBuffer) {  		prop.cbBuffer = lSize;  	}  	if (prop.cBuffers < 4) {  		prop.cBuffers = 4;  	}  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: lSize = Math.Max (lSize' _bmi.Width * Math.Abs (_bmi.Height) * _bmi.BitCount / 8);  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (_bmi.BitCount == 0) {  	lSize = Math.Max (lSize' _bmi.Width * Math.Abs (_bmi.Height) * 4);  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: lSize = Math.Max (lSize' _bmi.Width * Math.Abs (_bmi.Height) * 4);  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (_bmi.Width == 0 || _bmi.Height == 0) {  	lSize = Math.Max (lSize' GetSystemMetrics (0) * GetSystemMetrics (1) * 4);  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: lSize = Math.Max (lSize' GetSystemMetrics (0) * GetSystemMetrics (1) * 4);  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (prop.cBuffers < 4) {  	prop.cBuffers = 4;  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (prop.cBuffers < 4) {  	prop.cBuffers = 4;  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: prop.cBuffers = 4;  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (m_mt.majorType == MediaType.Audio) {  	WaveFormatEx _wfx = m_mt;  	if (_wfx == null)  		return VFW_E_INVALIDMEDIATYPE;  	if (_wfx.nAvgBytesPerSec > 0) {  		prop.cbBuffer = _wfx.nAvgBytesPerSec;  	} else {  		prop.cbBuffer = _wfx.nSamplesPerSec * _wfx.nBlockAlign;  	}  	prop.cBuffers = 4;  	prop.cbAlign = _wfx.nBlockAlign;  	if (prop.cbBuffer == 0) {  		prop.cbBuffer = (_wfx.nSamplesPerSec * _wfx.nChannels) << 3;  	}  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (m_mt.majorType == MediaType.Audio) {  	WaveFormatEx _wfx = m_mt;  	if (_wfx == null)  		return VFW_E_INVALIDMEDIATYPE;  	if (_wfx.nAvgBytesPerSec > 0) {  		prop.cbBuffer = _wfx.nAvgBytesPerSec;  	} else {  		prop.cbBuffer = _wfx.nSamplesPerSec * _wfx.nBlockAlign;  	}  	prop.cBuffers = 4;  	prop.cbAlign = _wfx.nBlockAlign;  	if (prop.cbBuffer == 0) {  		prop.cbBuffer = (_wfx.nSamplesPerSec * _wfx.nChannels) << 3;  	}  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: prop.cBuffers = 4;  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (prop.cbBuffer == 0) {  	prop.cbBuffer = (_wfx.nSamplesPerSec * _wfx.nChannels) << 3;  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: prop.cbBuffer = (_wfx.nSamplesPerSec * _wfx.nChannels) << 3;  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,StopThread,The following statement contains a magic number: if (!m_evReady.WaitOne (0' false)) {  	bool bFlush = false;  	if (m_WorkerThread.ThreadExists) {  		if (!m_WorkerThread.Join (10000)) {  			lock (m_csFlushLock) {  				if (!m_evFlush.WaitOne (0' false)) {  					m_evFlush.Set ();  					bFlush = true;  				}  			}  		}  	}  	if (bFlush) {  		m_evFlush.Reset ();  	}  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,StopThread,The following statement contains a magic number: if (m_WorkerThread.ThreadExists) {  	if (!m_WorkerThread.Join (10000)) {  		lock (m_csFlushLock) {  			if (!m_evFlush.WaitOne (0' false)) {  				m_evFlush.Set ();  				bFlush = true;  			}  		}  	}  }  
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,StopThread,The following statement contains a magic number: if (!m_WorkerThread.Join (10000)) {  	lock (m_csFlushLock) {  		if (!m_evFlush.WaitOne (0' false)) {  			m_evFlush.Set ();  			bFlush = true;  		}  	}  }  
Magic Number,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,SetPositions,The following statement contains a magic number: if (_rate > 0 && _rate <= 2.0) {  	if (m_dRate != _rate) {  		_seek = true;  	}  } else {  	_rate = m_dRate;  }  
Magic Number,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The following statement contains a magic number: if (hr.Succeeded) {  	m_evDemuxStarted.Set ();  	do {  		try {  			hr = m_pFileParser.ProcessDemuxPackets ();  			if (hr != S_OK) {  				m_evEOS.Set ();  				break;  			}  		} catch (Exception _exception) {  			TRACE ("Demux Exception \"" + _exception.Message + "\"");  			m_evEOS.Set ();  			#if DEBUG  			throw _exception;  			#else  			                        break; #endif  		}  	} while (!m_evQuit.WaitOne (0' false) && !m_evEOS.WaitOne (0' false));  	m_pFileParser.OnDemuxStop ();  	if (!m_evQuit.WaitOne (0' false)) {  		while (!m_evQuit.WaitOne (0' false)) {  			long _duration = UNITS;  			int nCount = 0;  			foreach (BasePin pPin in Pins) {  				if (pPin.Direction == PinDirection.Output) {  					SplitterOutputPin _pin = (pPin as SplitterOutputPin);  					if (_pin.EOSDelivered || !_pin.IsConnected) {  						nCount++;  					} else {  						if (_pin.Track == null || !_pin.Track.Active) {  							nCount++;  						} else {  							if (_pin.Track.Reset ()) {  								nCount++;  							}  						}  					}  				} else {  					nCount++;  				}  			}  			if (nCount != Pins.Count) {  				m_evQuit.WaitOne ((int)(_duration / 10000)' false);  			} else {  				break;  			}  		}  	}  }  
Magic Number,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The following statement contains a magic number: if (!m_evQuit.WaitOne (0' false)) {  	while (!m_evQuit.WaitOne (0' false)) {  		long _duration = UNITS;  		int nCount = 0;  		foreach (BasePin pPin in Pins) {  			if (pPin.Direction == PinDirection.Output) {  				SplitterOutputPin _pin = (pPin as SplitterOutputPin);  				if (_pin.EOSDelivered || !_pin.IsConnected) {  					nCount++;  				} else {  					if (_pin.Track == null || !_pin.Track.Active) {  						nCount++;  					} else {  						if (_pin.Track.Reset ()) {  							nCount++;  						}  					}  				}  			} else {  				nCount++;  			}  		}  		if (nCount != Pins.Count) {  			m_evQuit.WaitOne ((int)(_duration / 10000)' false);  		} else {  			break;  		}  	}  }  
Magic Number,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The following statement contains a magic number: while (!m_evQuit.WaitOne (0' false)) {  	long _duration = UNITS;  	int nCount = 0;  	foreach (BasePin pPin in Pins) {  		if (pPin.Direction == PinDirection.Output) {  			SplitterOutputPin _pin = (pPin as SplitterOutputPin);  			if (_pin.EOSDelivered || !_pin.IsConnected) {  				nCount++;  			} else {  				if (_pin.Track == null || !_pin.Track.Active) {  					nCount++;  				} else {  					if (_pin.Track.Reset ()) {  						nCount++;  					}  				}  			}  		} else {  			nCount++;  		}  	}  	if (nCount != Pins.Count) {  		m_evQuit.WaitOne ((int)(_duration / 10000)' false);  	} else {  		break;  	}  }  
Magic Number,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The following statement contains a magic number: if (nCount != Pins.Count) {  	m_evQuit.WaitOne ((int)(_duration / 10000)' false);  } else {  	break;  }  
Magic Number,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The following statement contains a magic number: m_evQuit.WaitOne ((int)(_duration / 10000)' false);  
Magic Number,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Enable,The following statement contains a magic number: if (IsActive && dwFlags != AMSTREAMSELECTENABLEFLAGS.DISABLE) {  	try {  		IMediaSeeking _seeking = (IMediaSeeking)FilterGraph;  		if (_seeking != null) {  			long _current;  			_seeking.GetCurrentPosition (out _current);  			_current -= UNITS / 10;  			_seeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);  			_current += UNITS / 10;  			_seeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);  		}  	} catch {  	}  }  
Magic Number,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Enable,The following statement contains a magic number: if (IsActive && dwFlags != AMSTREAMSELECTENABLEFLAGS.DISABLE) {  	try {  		IMediaSeeking _seeking = (IMediaSeeking)FilterGraph;  		if (_seeking != null) {  			long _current;  			_seeking.GetCurrentPosition (out _current);  			_current -= UNITS / 10;  			_seeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);  			_current += UNITS / 10;  			_seeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);  		}  	} catch {  	}  }  
Magic Number,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Enable,The following statement contains a magic number: try {  	IMediaSeeking _seeking = (IMediaSeeking)FilterGraph;  	if (_seeking != null) {  		long _current;  		_seeking.GetCurrentPosition (out _current);  		_current -= UNITS / 10;  		_seeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);  		_current += UNITS / 10;  		_seeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);  	}  } catch {  }  
Magic Number,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Enable,The following statement contains a magic number: try {  	IMediaSeeking _seeking = (IMediaSeeking)FilterGraph;  	if (_seeking != null) {  		long _current;  		_seeking.GetCurrentPosition (out _current);  		_current -= UNITS / 10;  		_seeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);  		_current += UNITS / 10;  		_seeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);  	}  } catch {  }  
Magic Number,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Enable,The following statement contains a magic number: if (_seeking != null) {  	long _current;  	_seeking.GetCurrentPosition (out _current);  	_current -= UNITS / 10;  	_seeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);  	_current += UNITS / 10;  	_seeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);  }  
Magic Number,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Enable,The following statement contains a magic number: if (_seeking != null) {  	long _current;  	_seeking.GetCurrentPosition (out _current);  	_current -= UNITS / 10;  	_seeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);  	_current += UNITS / 10;  	_seeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);  }  
Magic Number,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Enable,The following statement contains a magic number: _current -= UNITS / 10;  
Magic Number,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Enable,The following statement contains a magic number: _current += UNITS / 10;  
Magic Number,DirectShow.BaseClasses,MuxerInputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,CompleteConnect,The following statement contains a magic number: lock (m_csTrackLock) {  	if (m_pTrack != null) {  		(m_Filter as BaseMuxer).Writer.RemoveTrack (m_pTrack);  	}  	m_pTrack = (m_Filter as BaseMuxer).Writer.CreateTrackForType (m_mt);  	if (m_pTrack == null)  		return VFW_E_CANNOT_CONNECT;  	m_pTrack.Alloc (2 * UNITS);  	m_pTrack.FlushEvent = m_evFlush;  	hr = (m_Filter as BaseMuxer).CompleteConnect (this);  	if (hr.Failed) {  		(m_Filter as BaseMuxer).Writer.RemoveTrack (m_pTrack);  		m_pTrack = null;  	}  }  
Magic Number,DirectShow.BaseClasses,MuxerInputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,CompleteConnect,The following statement contains a magic number: m_pTrack.Alloc (2 * UNITS);  
Magic Number,DirectShow.BaseClasses,MuxerOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: prop.cBuffers = 3;  
Magic Number,DirectShow.BaseClasses,MuxerOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (FAILED (hr)) {  	prop.cbBuffer = 1024;  	hr = pAlloc.SetProperties (prop' _actual);  }  
Magic Number,DirectShow.BaseClasses,MuxerOutputPin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: prop.cbBuffer = 1024;  
Magic Number,DirectShow.BaseClasses,BaseMuxer,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The following statement contains a magic number: if (hr.Succeeded) {  	m_evMuxStarted.Set ();  	bool bFlush = false;  	long _minPosition;  	long _maxPosition;  	while (!bFlush) {  		bFlush = m_evQuit.WaitOne (5' false);  		if (!bFlush) {  			_minPosition = MAX_LONG;  			_maxPosition = 0;  			foreach (BasePin _pin in Pins) {  				if (_pin.Direction == PinDirection.Input && _pin.IsConnected) {  					if (!(_pin as MuxerInputPin).EOSDelivered) {  						MuxerTrack _track = (_pin as MuxerInputPin).Track;  						if (_minPosition > _track.Position) {  							_minPosition = _track.Position;  						}  						if (_track.Position > _maxPosition) {  							_maxPosition = _track.Position;  						}  					}  				}  			}  		} else {  			_minPosition = 0;  			_maxPosition = MAX_LONG;  		}  		if (_minPosition != MAX_LONG) {  			foreach (BasePin _pin in Pins) {  				if (_pin.Direction == PinDirection.Input && _pin.IsConnected) {  					if (!(_pin as MuxerInputPin).EOSDelivered) {  						MuxerTrack _track = (_pin as MuxerInputPin).Track;  						if (_track.Position >= _minPosition) {  							while (true) {  								PacketData _packet = _track.GetNextPacket ();  								if (_packet == null)  									break;  								m_pFileWriter.WritePacket (_track' _packet);  								_packet.Dispose ();  								if (_track.Position >= _maxPosition)  									break;  							}  						}  					}  				}  			}  		}  	}  	CloseFile ();  }  
Magic Number,DirectShow.BaseClasses,BaseMuxer,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The following statement contains a magic number: while (!bFlush) {  	bFlush = m_evQuit.WaitOne (5' false);  	if (!bFlush) {  		_minPosition = MAX_LONG;  		_maxPosition = 0;  		foreach (BasePin _pin in Pins) {  			if (_pin.Direction == PinDirection.Input && _pin.IsConnected) {  				if (!(_pin as MuxerInputPin).EOSDelivered) {  					MuxerTrack _track = (_pin as MuxerInputPin).Track;  					if (_minPosition > _track.Position) {  						_minPosition = _track.Position;  					}  					if (_track.Position > _maxPosition) {  						_maxPosition = _track.Position;  					}  				}  			}  		}  	} else {  		_minPosition = 0;  		_maxPosition = MAX_LONG;  	}  	if (_minPosition != MAX_LONG) {  		foreach (BasePin _pin in Pins) {  			if (_pin.Direction == PinDirection.Input && _pin.IsConnected) {  				if (!(_pin as MuxerInputPin).EOSDelivered) {  					MuxerTrack _track = (_pin as MuxerInputPin).Track;  					if (_track.Position >= _minPosition) {  						while (true) {  							PacketData _packet = _track.GetNextPacket ();  							if (_packet == null)  								break;  							m_pFileWriter.WritePacket (_track' _packet);  							_packet.Dispose ();  							if (_track.Position >= _maxPosition)  								break;  						}  					}  				}  			}  		}  	}  }  
Magic Number,DirectShow.BaseClasses,BaseMuxer,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The following statement contains a magic number: bFlush = m_evQuit.WaitOne (5' false);  
Magic Number,DirectShow,BitmapInfoHeader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetBitmapSize,The following statement contains a magic number: return Width * Math.Abs (Height) * (BitCount + BitCount % 8) / 8;  
Magic Number,DirectShow,BitmapInfoHeader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetBitmapSize,The following statement contains a magic number: return Width * Math.Abs (Height) * (BitCount + BitCount % 8) / 8;  
Magic Number,DirectShow,AMMediaType,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetExtraData,The following statement contains a magic number: if (formatPtr != IntPtr.Zero && formatSize != 0) {  	if (formatType == FormatType.VideoInfo) {  		_size = formatSize - Marshal.SizeOf (typeof(VideoInfoHeader));  	}  	if (formatType == FormatType.VideoInfo2) {  		_size = formatSize - Marshal.SizeOf (typeof(VideoInfoHeader2));  	}  	if (formatType == FormatType.WaveEx || formatType == FormatType.Mpeg2Audio || formatType == FormatType.DolbyAC3) {  		_size = formatSize - Marshal.SizeOf (typeof(WaveFormatEx));  	}  	if (formatType == FormatType.Mpeg2Video) {  		_size = formatSize - Marshal.SizeOf (typeof(VideoInfoHeader2)) - 18;  	}  }  
Magic Number,DirectShow,AMMediaType,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetExtraData,The following statement contains a magic number: if (formatType == FormatType.Mpeg2Video) {  	_size = formatSize - Marshal.SizeOf (typeof(VideoInfoHeader2)) - 18;  }  
Magic Number,DirectShow,AMMediaType,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetExtraData,The following statement contains a magic number: _size = formatSize - Marshal.SizeOf (typeof(VideoInfoHeader2)) - 18;  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,HIWORD,The following statement contains a magic number: return ((_value >> 16) & 0xffff);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,MAKELANGID,The following statement contains a magic number: return ((((ushort)(s)) << 10) | (ushort)(p));  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,SUBLANGID,The following statement contains a magic number: return ((ushort)(lgid) >> 10);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,MAKELCID,The following statement contains a magic number: return ((int)((((int)((ushort)(srtid))) << 16) | ((int)((ushort)(lgid)))));  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,MAKESORTLCID,The following statement contains a magic number: return ((int)((MAKELCID (lgid' srtid)) | (((int)((ushort)(ver))) << 20)));  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,SORTIDFROMLCID,The following statement contains a magic number: return ((ushort)((((int)(lcid)) >> 16) & 0xf));  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,SORTVERSIONFROMLCID,The following statement contains a magic number: return ((ushort)((((int)(lcid)) >> 20) & 0xf));  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked {  	return (((SZ + 15) >> 4) << 4);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked {  	return (((SZ + 15) >> 4) << 4);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked {  	return (((SZ + 15) >> 4) << 4);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: return (((SZ + 15) >> 4) << 4);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: return (((SZ + 15) >> 4) << 4);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: return (((SZ + 15) >> 4) << 4);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked {  	return (((SZ + 31) >> 5) << 5);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked {  	return (((SZ + 31) >> 5) << 5);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked {  	return (((SZ + 31) >> 5) << 5);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: return (((SZ + 31) >> 5) << 5);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: return (((SZ + 31) >> 5) << 5);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: return (((SZ + 31) >> 5) << 5);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked {  	return (((SZ + 15) >> 4) << 4);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked {  	return (((SZ + 15) >> 4) << 4);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked {  	return (((SZ + 15) >> 4) << 4);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: return (((SZ + 15) >> 4) << 4);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: return (((SZ + 15) >> 4) << 4);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: return (((SZ + 15) >> 4) << 4);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked {  	return (((SZ + 31) >> 5) << 5);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked {  	return (((SZ + 31) >> 5) << 5);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked {  	return (((SZ + 31) >> 5) << 5);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: return (((SZ + 31) >> 5) << 5);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: return (((SZ + 31) >> 5) << 5);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: return (((SZ + 31) >> 5) << 5);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked {  	return (((SZ + 15) >> 4) << 4);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked {  	return (((SZ + 15) >> 4) << 4);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked {  	return (((SZ + 15) >> 4) << 4);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: return (((SZ + 15) >> 4) << 4);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: return (((SZ + 15) >> 4) << 4);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: return (((SZ + 15) >> 4) << 4);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked {  	return (((SZ + 31) >> 5) << 5);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked {  	return (((SZ + 31) >> 5) << 5);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked {  	return (((SZ + 31) >> 5) << 5);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: return (((SZ + 31) >> 5) << 5);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: return (((SZ + 31) >> 5) << 5);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: return (((SZ + 31) >> 5) << 5);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked {  	return (((SZ + 15) >> 4) << 4);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked {  	return (((SZ + 15) >> 4) << 4);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked {  	return (((SZ + 15) >> 4) << 4);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: return (((SZ + 15) >> 4) << 4);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: return (((SZ + 15) >> 4) << 4);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: return (((SZ + 15) >> 4) << 4);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked {  	return (((SZ + 31) >> 5) << 5);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked {  	return (((SZ + 31) >> 5) << 5);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked {  	return (((SZ + 31) >> 5) << 5);  }  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: return (((SZ + 31) >> 5) << 5);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: return (((SZ + 31) >> 5) << 5);  
Magic Number,Sonic,COMHelper,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: return (((SZ + 31) >> 5) << 5);  
Magic Number,Sonic,FOURCC,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ToString,The following statement contains a magic number: for (int i = 0; i < _data.Length; i++) {  	if (_data [i] <= 30 || _data [i] > 128) {  		_result = "";  		break;  	} else {  		_result += (char)_data [i];  	}  }  
Magic Number,Sonic,FOURCC,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ToString,The following statement contains a magic number: for (int i = 0; i < _data.Length; i++) {  	if (_data [i] <= 30 || _data [i] > 128) {  		_result = "";  		break;  	} else {  		_result += (char)_data [i];  	}  }  
Magic Number,Sonic,FOURCC,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ToString,The following statement contains a magic number: if (_data [i] <= 30 || _data [i] > 128) {  	_result = "";  	break;  } else {  	_result += (char)_data [i];  }  
Magic Number,Sonic,FOURCC,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ToString,The following statement contains a magic number: if (_data [i] <= 30 || _data [i] > 128) {  	_result = "";  	break;  } else {  	_result += (char)_data [i];  }  
Magic Number,Sonic,DSFilterGraphBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,Start,The following statement contains a magic number: while (hr == 1) {  	hr = m_MediaControl.Run ();  	if (hr == 1)  		Thread.Sleep (50);  }  
Magic Number,Sonic,DSFilterGraphBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,Start,The following statement contains a magic number: if (hr == 1)  	Thread.Sleep (50);  
Magic Number,Sonic,DSFilterGraphBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,Start,The following statement contains a magic number: Thread.Sleep (50);  
Magic Number,Sonic,DSFilterGraphBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,StepForward,The following statement contains a magic number: if (m_FrameStep != null) {  	if (!IsPaused) {  		Pause ();  	}  	int hr = m_FrameStep.Step (1' null);  	if (hr < 0) {  		long _time;  		hr = m_MediaSeeking.GetCurrentPosition (out _time);  		DsLong _stop = (long)0;  		TimeSpan _ts = new TimeSpan (0' 0' 1);  		_time += _ts.Ticks / 20;  		DsLong _current = _time;  		hr = m_MediaSeeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' _stop' AMSeekingSeekingFlags.NoPositioning);  	}  	return (HRESULT)hr;  }  
Magic Number,Sonic,DSFilterGraphBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,StepForward,The following statement contains a magic number: if (hr < 0) {  	long _time;  	hr = m_MediaSeeking.GetCurrentPosition (out _time);  	DsLong _stop = (long)0;  	TimeSpan _ts = new TimeSpan (0' 0' 1);  	_time += _ts.Ticks / 20;  	DsLong _current = _time;  	hr = m_MediaSeeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' _stop' AMSeekingSeekingFlags.NoPositioning);  }  
Magic Number,Sonic,DSFilterGraphBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,StepForward,The following statement contains a magic number: _time += _ts.Ticks / 20;  
Magic Number,Sonic,DSFilterGraphBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,StepBackward,The following statement contains a magic number: if (m_FrameStep != null) {  	if (!IsPaused) {  		Pause ();  	}  	long _time;  	int hr = m_MediaSeeking.GetCurrentPosition (out _time);  	DsLong _stop = (long)0;  	TimeSpan _ts = new TimeSpan (0' 0' 1);  	_time -= _ts.Ticks / 20;  	if (_time < 0)  		_time = 0;  	DsLong _current = _time;  	hr = m_MediaSeeking.SetPositions (_current' AMSeekingSeekingFlags.AbsolutePositioning' _stop' AMSeekingSeekingFlags.NoPositioning);  	return (HRESULT)hr;  }  
Magic Number,Sonic,DSFilterGraphBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,StepBackward,The following statement contains a magic number: _time -= _ts.Ticks / 20;  
Magic Number,Sonic,DSFilterGraphBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,PreparePlayback,The following statement contains a magic number: SetVolume (m_bMute ? -10000 : m_iVolume);  
Magic Number,Sonic,DSFilterGraphBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ProcessGraphMessage,The following statement contains a magic number: if (m_MediaEventEx != null) {  	int hr = 0;  	int _param1' _param2;  	EventCode _code;  	while (hr == 0) {  		hr = m_MediaEventEx.GetEvent (out _code' out _param1' out _param2' 20);  		if (hr == 0) {  			hr = m_MediaEventEx.FreeEventParams (_code' _param1' _param2);  			if (_code == EventCode.Complete) {  				return true;  			}  			if (_code == EventCode.ErrorAbort) {  				return true;  			}  			if (_code == EventCode.DeviceLost) {  				return true;  			}  		}  	}  }  
Magic Number,Sonic,DSFilterGraphBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ProcessGraphMessage,The following statement contains a magic number: while (hr == 0) {  	hr = m_MediaEventEx.GetEvent (out _code' out _param1' out _param2' 20);  	if (hr == 0) {  		hr = m_MediaEventEx.FreeEventParams (_code' _param1' _param2);  		if (_code == EventCode.Complete) {  			return true;  		}  		if (_code == EventCode.ErrorAbort) {  			return true;  		}  		if (_code == EventCode.DeviceLost) {  			return true;  		}  	}  }  
Magic Number,Sonic,DSFilterGraphBase,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ProcessGraphMessage,The following statement contains a magic number: hr = m_MediaEventEx.GetEvent (out _code' out _param1' out _param2' 20);  
Missing Default,DirectShow.BaseClasses,AsyncStream,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Seek,The following switch statement is missing a default case: switch (origin) {  case SeekOrigin.Begin:  	m_lPosition = offset;  	break;  case SeekOrigin.Current:  	m_lPosition += offset;  	break;  case SeekOrigin.End:  	m_lPosition = _length + offset;  	break;  }  
Missing Default,DirectShow.BaseClasses,BitStreamReader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Seek,The following switch statement is missing a default case: switch ((SeekOrigin)dwOrigin) {  case SeekOrigin.Begin:  	_position = dlibMove;  	break;  case SeekOrigin.Current:  	_position += dlibMove;  	break;  case SeekOrigin.End:  	_position = _length + dlibMove;  	break;  }  
Missing Default,DirectShow.BaseClasses,BaseSplitter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,InitializeOutputPins,The following switch statement is missing a default case: switch (_track.Type) {  case DemuxTrack.TrackType.Video:  	_name = "Video";  	break;  case DemuxTrack.TrackType.Audio:  	_name = "Audio";  	break;  case DemuxTrack.TrackType.Subtitles:  	_name = "Subtitles";  	break;  case DemuxTrack.TrackType.SubPicture:  	_name = "Sub Picture";  	break;  }  
Missing Default,Sonic,DSFilter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,GetPin,The following switch statement is missing a default case: switch (_direction) {  case PinDirection.Input:  	_pins = Input;  	break;  case PinDirection.Output:  	_pins = Output;  	break;  }  
