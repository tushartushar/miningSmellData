Implementation smell,Namespace,Class,File,Method,Description
Long Method,DirectShow.BaseClasses,SplitterOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The method has 162 lines of code.
Complex Method,DirectShow.BaseClasses,EnumPins,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Next,Cyclomatic complexity of the method is 8
Complex Method,DirectShow.BaseClasses,EnumMediaTypes,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Next,Cyclomatic complexity of the method is 8
Complex Method,DirectShow.BaseClasses,BasePin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,AgreeMediaType,Cyclomatic complexity of the method is 8
Complex Method,DirectShow.BaseClasses,BasePin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,TryMediaTypes,Cyclomatic complexity of the method is 9
Complex Method,DirectShow.BaseClasses,BaseOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideAllocator,Cyclomatic complexity of the method is 10
Complex Method,DirectShow.BaseClasses,BaseFilter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,RegisterFunction,Cyclomatic complexity of the method is 9
Complex Method,DirectShow.BaseClasses,BaseFilter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,UnregisterFunction,Cyclomatic complexity of the method is 8
Complex Method,DirectShow.BaseClasses,OutputQueue,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,Cyclomatic complexity of the method is 10
Complex Method,DirectShow.BaseClasses,DemuxTrack,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ReadMediaSample,Cyclomatic complexity of the method is 9
Complex Method,DirectShow.BaseClasses,SplitterOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,Cyclomatic complexity of the method is 19
Complex Method,DirectShow.BaseClasses,SplitterOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,Cyclomatic complexity of the method is 10
Complex Method,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,InitializeOutputPins,Cyclomatic complexity of the method is 10
Complex Method,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,RegisterMediaType,Cyclomatic complexity of the method is 8
Complex Method,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,UnregisterProtocol,Cyclomatic complexity of the method is 10
Complex Method,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,SetPositions,Cyclomatic complexity of the method is 16
Complex Method,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,Cyclomatic complexity of the method is 8
Complex Method,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Info,Cyclomatic complexity of the method is 18
Complex Method,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Enable,Cyclomatic complexity of the method is 15
Complex Method,DirectShow.BaseClasses,MuxerInputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,OnReceive,Cyclomatic complexity of the method is 13
Complex Method,DirectShow.BaseClasses,MuxerOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,Cyclomatic complexity of the method is 8
Complex Method,DirectShow.BaseClasses,BaseMuxer,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,OpenFile,Cyclomatic complexity of the method is 11
Complex Method,DirectShow.BaseClasses,BaseMuxer,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,Cyclomatic complexity of the method is 17
Complex Method,DirectShow,AMMediaType,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Equals,Cyclomatic complexity of the method is 9
Complex Method,DirectShow,AMMediaType,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,MatchesPartial,Cyclomatic complexity of the method is 9
Complex Method,DirectShow,AMMediaType,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,MatchesPartial,Cyclomatic complexity of the method is 9
Complex Method,DirectShow,AMMediaType,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,AreEquals,Cyclomatic complexity of the method is 8
Complex Method,Sonic,DSPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,RemoveFiltersChain,Cyclomatic complexity of the method is 8
Long Parameter List,DirectShow.BaseClasses,BasePropertyPage,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,OleCreatePropertyFrame,The method has 11 parameters. Parameters: hwndOwner' x' y' lpszCaption' cObjects' ppUnk' cPages' lpPageClsID' lcid' dwReserved' lpvReserved
Long Parameter List,DirectShow.BaseClasses,BasePropertyPage,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,MoveWindow,The method has 6 parameters. Parameters: hWnd' X' Y' nWidth' nHeight' bRepaint
Long Parameter List,DirectShow.BaseClasses,BaseRendererFilter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,WaitDispatchingMessages,The method has 5 parameters. Parameters: hObject' dwWait' hwnd' uMsg' hEvent
Long Parameter List,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Info,The method has 8 parameters. Parameters: lIndex' ppmt' pdwFlags' plcid' pdwGroup' ppszName' ppObject' ppUnk
Long Parameter List,DirectShow,IFilterMapper2,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,RegisterFilter,The method has 6 parameters. Parameters: clsidFilter' Name' ppMoniker' pclsidCategory' szInstance' prf2
Long Parameter List,DirectShow,IFilterMapper2,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,EnumMatchingFilters,The method has 15 parameters. Parameters: ppEnum' dwFlags' bExactMatch' dwMerit' bInputNeeded' cInputTypes' pInputTypes' pMedIn' pPinCategoryIn' bRender' bOutputNeeded' cOutputTypes' pOutputTypes' pMedOut' pPinCategoryOut
Long Parameter List,DirectShow,IKsPropertySet,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Set,The method has 6 parameters. Parameters: guidPropSet' dwPropID' pInstanceData' cbInstanceData' pPropData' cbPropData
Long Parameter List,DirectShow,IKsPropertySet,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Get,The method has 7 parameters. Parameters: guidPropSet' dwPropID' pInstanceData' cbInstanceData' pPropData' cbPropData' pcbReturned
Long Parameter List,DirectShow,ICaptureGraphBuilder2,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,FindInterface,The method has 5 parameters. Parameters: pCategory' pType' pbf' riid' ppint
Long Parameter List,DirectShow,ICaptureGraphBuilder2,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,RenderStream,The method has 5 parameters. Parameters: PinCategory' MediaType' pSource' pfCompressor' pfRenderer
Long Parameter List,DirectShow,ICaptureGraphBuilder2,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,ControlStream,The method has 7 parameters. Parameters: PinCategory' MediaType' pFilter' pstart' pstop' wStartCookie' wStopCookie
Long Parameter List,DirectShow,ICaptureGraphBuilder2,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,FindPin,The method has 7 parameters. Parameters: pSource' pindir' PinCategory' MediaType' fUnconnected' ZeroBasedIndex' ppPin
Long Parameter List,DirectShow,IAMStreamSelect,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Info,The method has 8 parameters. Parameters: lIndex' ppmt' pdwFlags' plcid' pdwGroup' ppszName' ppObject' ppUnk
Long Parameter List,Sonic,API,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,OleCreatePropertyFrame,The method has 11 parameters. Parameters: hwndOwner' x' y' lpszCaption' cObjects' ppUnk' cPages' lpPageClsID' lcid' dwReserved' lpvReserved
Long Parameter List,Sonic,API,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,CoCreateInstance,The method has 5 parameters. Parameters: rclsid' pUnkOuter' dwClsContext' riid' rReturnedComObject
Long Identifier,DirectShow.BaseClasses,AMovieSetup,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,,The length of the parameter CLSID_VideoInputDeviceCategory is 30.
Long Identifier,DirectShow.BaseClasses,AMovieSetup,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,,The length of the parameter CLSID_AudioInputDeviceCategory is 30.
Long Identifier,DirectShow,FilterCategory,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,,The length of the parameter BDATransportInformationRenderersCategory is 40.
Long Identifier,DirectShow,FilterCategory,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,,The length of the parameter WDMStreamingMultiplexerDevices is 30.
Long Statement,DirectShow.BaseClasses,BaseFilter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,RegisterFunction,The length of the statement  "                        if (_setup.Category != null && _setup.Category != Guid.Empty && _setup.Category != FilterCategory.LegacyAmFilterCategory) " is 121.
Long Statement,DirectShow.BaseClasses,BaseFilter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,UnregisterFunction,The length of the statement  "                        if (_setup.Category != null && _setup.Category != Guid.Empty && _setup.Category != FilterCategory.LegacyAmFilterCategory) " is 121.
Long Statement,DirectShow.BaseClasses,BasePropertyPage,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ShowPropertyPages,The length of the statement  "                        int hr = OleCreatePropertyFrame(_hwnd' 0' 0' "Filter "' 1' ref oDevice' pCAUUID.cElems' pCAUUID.pElems' 0' 0' IntPtr.Zero); " is 123.
Long Statement,DirectShow.BaseClasses,SplitterOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The length of the statement  "			        if (!m_evFlush.WaitOne(0'false) && !(m_Filter as BaseSplitter).QuitEvent.WaitOne(0'false) && !m_evQuit.WaitOne(0'false)) " is 120.
Long Statement,DirectShow.BaseClasses,FileWriter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,OpenOutput,The length of the statement  "            FileStream _stream = new FileStream(sFileName' bOverwrite ? FileMode.Create : FileMode.OpenOrCreate' FileAccess.ReadWrite' FileShare.Read); " is 139.
Long Statement,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ASSERT,The length of the statement  "{ if (_object is BOOL) Debug.Assert((bool)_object); if (_object is HRESULT) Debug.Assert((bool)_object); else if (_object is bool) Debug.Assert((bool)_object); else Debug.Assert(_object != null); }" is 197.
Long Statement,Sonic,DSPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ToString,The length of the statement  "            return " { " + base.ToString() + " } Name: '" + Name + "' ( " + Direction.ToString() + " )" + (IsConnected ? " Connected" : " Not Connected"); ; " is 144.
Long Statement,Sonic,DSFilterGraphBase,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,StepForward,The length of the statement  "                    hr = m_MediaSeeking.SetPositions(_current' AMSeekingSeekingFlags.AbsolutePositioning' _stop' AMSeekingSeekingFlags.NoPositioning); " is 130.
Long Statement,Sonic,DSFilterGraphBase,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,StepBackward,The length of the statement  "                hr = m_MediaSeeking.SetPositions(_current' AMSeekingSeekingFlags.AbsolutePositioning' _stop' AMSeekingSeekingFlags.NoPositioning); " is 130.
Complex Conditional,DirectShow.BaseClasses,BasePin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,TryMediaTypes,The conditional expression  "FAILED(hr)                                  && SUCCEEDED(hrFailure)                                  && (hr != E_FAIL)                                  && (hr != E_INVALIDARG)                                  && (hr != VFW_E_TYPE_NOT_ACCEPTED)"  is complex.
Complex Conditional,DirectShow.BaseClasses,RendererInputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,OnReceive,The conditional expression  "!IsStopped && !IsFlushing && !_filter.IsAbort && !m_bRunTimeError"  is complex.
Complex Conditional,DirectShow.BaseClasses,SplitterOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The conditional expression  "(tStart > tStop && tStop > _stop)                                          || (tStart <= tStop && tStart > _stop)"  is complex.
Virtual Method Call from Constructor,DirectShow.BaseClasses,BaseEnum,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,BaseEnum,The constructor "BaseEnum" calls a virtual method "Reset".
Empty Catch Block,DirectShow.BaseClasses,BaseFilter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,UnregisterFunction,The method has an empty catch block.
Empty Catch Block,DirectShow.BaseClasses,BasePropertyPage,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ShowPropertyPages,The method has an empty catch block.
Empty Catch Block,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,CompleteConnect,The method has an empty catch block.
Empty Catch Block,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,CompleteConnect,The method has an empty catch block.
Empty Catch Block,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Load,The method has an empty catch block.
Empty Catch Block,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Load,The method has an empty catch block.
Empty Catch Block,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Enable,The method has an empty catch block.
Empty Catch Block,Sonic,HRESULT,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,GetErrorText,The method has an empty catch block.
Empty Catch Block,Sonic,VTableInterface,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,GetInterfaceImpl,The method has an empty catch block.
Empty Catch Block,Sonic,VTableInterface,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,TryCast,The method has an empty catch block.
Empty Catch Block,Sonic,MonikerInfo,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,GetPropBagValue,The method has an empty catch block.
Empty Catch Block,Sonic,HelperForm,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,WndProc,The method has an empty catch block.
Magic Number,DirectShow.BaseClasses,BasePin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,AgreeMediaType,The following statement contains a magic number: for (int i = 0; i < 2; i++)              {                  int hr;                  IntPtr _ptr = IntPtr.Zero;                  if (i == (BOOL)m_bTryMyTypesFirst)                  {                      hr = pReceivePin.EnumMediaTypes(out _ptr);                      if (_ptr != IntPtr.Zero)                      {                          pEnumMediaTypes = (IEnumMediaTypes)new IEnumMediaTypesImpl(_ptr);                      }                  }                  else                  {                      hr = EnumMediaTypes(out _ptr);                      if (_ptr != IntPtr.Zero)                      {                          pEnumMediaTypes = (IEnumMediaTypes)Marshal.GetObjectForIUnknown(_ptr);                      }                  }                  if (SUCCEEDED(hr))                  {                      ASSERT(pEnumMediaTypes);                      hr = TryMediaTypes(ref pReceivePin' pmt' pEnumMediaTypes);                      if (Marshal.IsComObject(pEnumMediaTypes))                      {                          Marshal.ReleaseComObject(pEnumMediaTypes);                      }                      if (SUCCEEDED(hr))                      {                          return NOERROR;                      }                      else                      {                          if ((hr != E_FAIL) && (hr != E_INVALIDARG) && (hr != VFW_E_TYPE_NOT_ACCEPTED))                          {                              hrFailure = hr;                          }                      }                  }              }
Magic Number,DirectShow.BaseClasses,AMThread,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Create,The following statement contains a magic number: lock (m_AccessLock)              {                  if (ThreadExists)                  {                      return false;                  }                  bool bResult = OnCreate();                  Thread.Sleep(20);                  if (!bResult)                  {                      Close();                  }                  return bResult;              }
Magic Number,DirectShow.BaseClasses,SourceStream,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DoBufferProcessingLoop,The following statement contains a magic number: do              {                  while (!CheckRequest(ref com))                  {                      IntPtr pSample;                                            DsLong _start = new DsLong(0)' _stop = new DsLong(0);                        int hr = GetDeliveryBuffer(out pSample' _start' _stop' AMGBF.NoWait);                        if (FAILED(hr))                      {                          Thread.Sleep(hr == VFW_E_TIMEOUT ? 5 : 1);                          continue;	// go round again. Perhaps the error will go away                          // or the allocator is decommited & we will be asked to                          // exit soon.                      }                      IMediaSampleImpl _sample = new IMediaSampleImpl(pSample);                      try                      {                          // Virtual function user will override.                          hr = FillBuffer(ref _sample);                            if (hr == S_OK)                          {                              hr = Deliver(ref _sample);                              // downstream filter returns S_FALSE if it wants us to                              // stop or an error if it's reporting an error.                              if (hr != S_OK)                              {                                  TRACE(String.Format("Deliver() returned {0}; stopping"' hr));                                  return S_OK;                              }                            }                          else if (hr == S_FALSE)                          {                              // derived class wants us to stop pushing data                              DeliverEndOfStream();                              return S_OK;                          }                          else                          {                              // derived class encountered an error                              TRACE(String.Format("Deliver() returned {0}; stopping"' hr));                              DeliverEndOfStream();                              m_Filter.NotifyEvent(EventCode.ErrorAbort' (IntPtr)hr' IntPtr.Zero);                              return hr;                          }                      }                      finally                      {                          Marshal.Release(pSample);                          pSample = IntPtr.Zero;                      }                        // all paths release the sample                  }                    // For all commands sent to us there must be a Reply call!                    if (com == Command.CMD_RUN || com == Command.CMD_PAUSE)                  {                      m_Thread.Reply(NOERROR);                  }                  else if (com != Command.CMD_STOP)                  {                      m_Thread.Reply(E_UNEXPECTED);                      TRACE("Unexpected command!!!");                  }              } while (com != Command.CMD_STOP);
Magic Number,DirectShow.BaseClasses,BaseRendererFilter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,SendEndOfStream,The following statement contains a magic number: int Delay = (int)((Signal - CurrentTime) / 10000);
Magic Number,DirectShow.BaseClasses,BaseRendererFilter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,WaitDispatchingMessages,The following statement contains a magic number: int nCount = null != hEvent ? 2 : 1;
Magic Number,DirectShow.BaseClasses,BitStreamReader,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ReadBit,The following statement contains a magic number: if (m_nBitIndex == 0)              {                  int _readed = 0;                  HRESULT hr = ReadData(m_btCurrentByte' 1' out _readed);                  if (_readed == 0) m_btCurrentByte[0] = 0;                  m_nBitIndex = 8;              }
Magic Number,DirectShow.BaseClasses,BitStreamReader,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ReadByte,The following statement contains a magic number: return (int)ReadBits(8);
Magic Number,DirectShow.BaseClasses,BitStreamReader,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ReadWord,The following statement contains a magic number: return (int)ReadBits(16);
Magic Number,DirectShow.BaseClasses,BitStreamReader,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ReadDword,The following statement contains a magic number: return (int)ReadBits(32);
Magic Number,DirectShow.BaseClasses,BitStreamReader,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ReadQword,The following statement contains a magic number: return ReadBits(64);
Magic Number,DirectShow.BaseClasses,BitStreamReader,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,SkipBytes,The following statement contains a magic number: SkipBits(nCount * 8);
Magic Number,DirectShow.BaseClasses,BitStreamReader,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Stat,The following statement contains a magic number: pstatstg.type = 2;
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,CompleteConnect,The following statement contains a magic number: if (SUCCEEDED(hr) && m_pTrack != null)              {                  long _time = 2 * UNITS;                  m_pTrack.Alloc(_time);                  m_pTrack.Active = true;              }
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (m_mt.majorType == MediaType.Video)              {                  BitmapInfoHeader _bmi = m_mt;                  if (_bmi == null) return VFW_E_INVALIDMEDIATYPE;                  int lSize = m_mt.sampleSize;                  lSize = Math.Max(lSize' _bmi.ImageSize);                  lSize = Math.Max(lSize' _bmi.Width * Math.Abs(_bmi.Height) * _bmi.BitCount / 8);                  if (_bmi.BitCount == 0)                  {                      lSize = Math.Max(lSize' _bmi.Width * Math.Abs(_bmi.Height) * 4);                  }                  if (_bmi.Width == 0 || _bmi.Height == 0)                  {                      lSize = Math.Max(lSize' GetSystemMetrics(0) * GetSystemMetrics(1) * 4);                  }                  if (lSize > prop.cbBuffer)                  {                      prop.cbBuffer = lSize;                  }                  if (prop.cBuffers < 4)                  {                      prop.cBuffers = 4;                  }              }
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (m_mt.majorType == MediaType.Video)              {                  BitmapInfoHeader _bmi = m_mt;                  if (_bmi == null) return VFW_E_INVALIDMEDIATYPE;                  int lSize = m_mt.sampleSize;                  lSize = Math.Max(lSize' _bmi.ImageSize);                  lSize = Math.Max(lSize' _bmi.Width * Math.Abs(_bmi.Height) * _bmi.BitCount / 8);                  if (_bmi.BitCount == 0)                  {                      lSize = Math.Max(lSize' _bmi.Width * Math.Abs(_bmi.Height) * 4);                  }                  if (_bmi.Width == 0 || _bmi.Height == 0)                  {                      lSize = Math.Max(lSize' GetSystemMetrics(0) * GetSystemMetrics(1) * 4);                  }                  if (lSize > prop.cbBuffer)                  {                      prop.cbBuffer = lSize;                  }                  if (prop.cBuffers < 4)                  {                      prop.cBuffers = 4;                  }              }
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (m_mt.majorType == MediaType.Video)              {                  BitmapInfoHeader _bmi = m_mt;                  if (_bmi == null) return VFW_E_INVALIDMEDIATYPE;                  int lSize = m_mt.sampleSize;                  lSize = Math.Max(lSize' _bmi.ImageSize);                  lSize = Math.Max(lSize' _bmi.Width * Math.Abs(_bmi.Height) * _bmi.BitCount / 8);                  if (_bmi.BitCount == 0)                  {                      lSize = Math.Max(lSize' _bmi.Width * Math.Abs(_bmi.Height) * 4);                  }                  if (_bmi.Width == 0 || _bmi.Height == 0)                  {                      lSize = Math.Max(lSize' GetSystemMetrics(0) * GetSystemMetrics(1) * 4);                  }                  if (lSize > prop.cbBuffer)                  {                      prop.cbBuffer = lSize;                  }                  if (prop.cBuffers < 4)                  {                      prop.cBuffers = 4;                  }              }
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (m_mt.majorType == MediaType.Video)              {                  BitmapInfoHeader _bmi = m_mt;                  if (_bmi == null) return VFW_E_INVALIDMEDIATYPE;                  int lSize = m_mt.sampleSize;                  lSize = Math.Max(lSize' _bmi.ImageSize);                  lSize = Math.Max(lSize' _bmi.Width * Math.Abs(_bmi.Height) * _bmi.BitCount / 8);                  if (_bmi.BitCount == 0)                  {                      lSize = Math.Max(lSize' _bmi.Width * Math.Abs(_bmi.Height) * 4);                  }                  if (_bmi.Width == 0 || _bmi.Height == 0)                  {                      lSize = Math.Max(lSize' GetSystemMetrics(0) * GetSystemMetrics(1) * 4);                  }                  if (lSize > prop.cbBuffer)                  {                      prop.cbBuffer = lSize;                  }                  if (prop.cBuffers < 4)                  {                      prop.cBuffers = 4;                  }              }
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (m_mt.majorType == MediaType.Video)              {                  BitmapInfoHeader _bmi = m_mt;                  if (_bmi == null) return VFW_E_INVALIDMEDIATYPE;                  int lSize = m_mt.sampleSize;                  lSize = Math.Max(lSize' _bmi.ImageSize);                  lSize = Math.Max(lSize' _bmi.Width * Math.Abs(_bmi.Height) * _bmi.BitCount / 8);                  if (_bmi.BitCount == 0)                  {                      lSize = Math.Max(lSize' _bmi.Width * Math.Abs(_bmi.Height) * 4);                  }                  if (_bmi.Width == 0 || _bmi.Height == 0)                  {                      lSize = Math.Max(lSize' GetSystemMetrics(0) * GetSystemMetrics(1) * 4);                  }                  if (lSize > prop.cbBuffer)                  {                      prop.cbBuffer = lSize;                  }                  if (prop.cBuffers < 4)                  {                      prop.cBuffers = 4;                  }              }
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (m_mt.majorType == MediaType.Audio)              {                  WaveFormatEx _wfx = m_mt;                  if (_wfx == null) return VFW_E_INVALIDMEDIATYPE;                  if (_wfx.nAvgBytesPerSec > 0)                  {                      prop.cbBuffer = _wfx.nAvgBytesPerSec;                  }                  else                  {                      prop.cbBuffer = _wfx.nSamplesPerSec * _wfx.nBlockAlign;                  }                  prop.cBuffers = 4;                  prop.cbAlign = _wfx.nBlockAlign;                  if (prop.cbBuffer == 0)                  {                      prop.cbBuffer = (_wfx.nSamplesPerSec * _wfx.nChannels) << 3;                  }              }
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (m_mt.majorType == MediaType.Audio)              {                  WaveFormatEx _wfx = m_mt;                  if (_wfx == null) return VFW_E_INVALIDMEDIATYPE;                  if (_wfx.nAvgBytesPerSec > 0)                  {                      prop.cbBuffer = _wfx.nAvgBytesPerSec;                  }                  else                  {                      prop.cbBuffer = _wfx.nSamplesPerSec * _wfx.nBlockAlign;                  }                  prop.cBuffers = 4;                  prop.cbAlign = _wfx.nBlockAlign;                  if (prop.cbBuffer == 0)                  {                      prop.cbBuffer = (_wfx.nSamplesPerSec * _wfx.nChannels) << 3;                  }              }
Magic Number,DirectShow.BaseClasses,SplitterOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,StopThread,The following statement contains a magic number: if (!m_evReady.WaitOne(0'false))              {                  bool bFlush = false;                  if (m_WorkerThread.ThreadExists)                  {                      if (!m_WorkerThread.Join(10000))                      {                          lock (m_csFlushLock)                          {                              if (!m_evFlush.WaitOne(0'false))                              {                                  m_evFlush.Set();                                  bFlush = true;                              }                          }                      }                  }                  if (bFlush)                  {                      m_evFlush.Reset();                  }              }
Magic Number,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,SetPositions,The following statement contains a magic number: {                  if (_start != -1)                  {                      if (SeekingPin != null)                      {                          long _position;                          SeekingPin.GetCurrentPosition(out _position);                          if (_position != _start)                          {                              _seek = true;                          }                      }                      else                      {                          _seek = (_start != m_tStartTime);                      }                  }                  else                  {                      _start = m_tStartTime;                  }                  if (_stop != -1)                  {                      if (m_tStopTime != _stop)                      {                          _seek = true;                      }                  }                  else                  {                      _stop = m_tStopTime;                  }                  if (_rate > 0 && _rate <= 2.0)                  {                      if (m_dRate != _rate)                      {                          _seek = true;                      }                  }                  else                  {                      _rate = m_dRate;                  }              }
Magic Number,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The following statement contains a magic number: if (hr.Succeeded)              {                  m_evDemuxStarted.Set();                  do                  {                      try                      {                          hr = m_pFileParser.ProcessDemuxPackets();                          if (hr != S_OK)                          {                              m_evEOS.Set();                              break;                          }                      }                      catch (Exception _exception)                      {                          TRACE("Demux Exception \"" + _exception.Message + "\"");                          m_evEOS.Set();  #if DEBUG                          throw _exception;  #else                          break;  #endif                      }                  }                  while (!m_evQuit.WaitOne(0'false) && !m_evEOS.WaitOne(0'false));                  m_pFileParser.OnDemuxStop();                  if (!m_evQuit.WaitOne(0'false))                  {                      while (!m_evQuit.WaitOne(0'false))                      {                          long _duration = UNITS;                          int nCount = 0;                          foreach (BasePin pPin in Pins)                          {                              if (pPin.Direction == PinDirection.Output)                              {                                  SplitterOutputPin _pin = (pPin as SplitterOutputPin);                                  if (_pin.EOSDelivered || !_pin.IsConnected)                                  {                                      nCount++;                                  }                                  else                                  {                                      if (_pin.Track == null || !_pin.Track.Active)                                      {                                          nCount++;                                      }                                      else                                      {                                          if (_pin.Track.Reset())                                          {                                              nCount++;                                          }                                      }                                  }                              }                              else                              {                                  nCount++;                              }                          }                          if (nCount != Pins.Count)                          {                              m_evQuit.WaitOne((int)(_duration / 10000)'false);                          }                          else                          {                              break;                          }                      }                  }              }
Magic Number,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Enable,The following statement contains a magic number: if (IsActive && dwFlags != AMSTREAMSELECTENABLEFLAGS.DISABLE)              {                  try                  {                      IMediaSeeking _seeking = (IMediaSeeking)FilterGraph;                      if (_seeking != null)                      {                          long _current;                          _seeking.GetCurrentPosition(out _current);                          _current -= UNITS / 10;                          _seeking.SetPositions(_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);                          _current += UNITS / 10;                          _seeking.SetPositions(_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);                      }                  }                  catch                  {                  }              }
Magic Number,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Enable,The following statement contains a magic number: if (IsActive && dwFlags != AMSTREAMSELECTENABLEFLAGS.DISABLE)              {                  try                  {                      IMediaSeeking _seeking = (IMediaSeeking)FilterGraph;                      if (_seeking != null)                      {                          long _current;                          _seeking.GetCurrentPosition(out _current);                          _current -= UNITS / 10;                          _seeking.SetPositions(_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);                          _current += UNITS / 10;                          _seeking.SetPositions(_current' AMSeekingSeekingFlags.AbsolutePositioning' null' AMSeekingSeekingFlags.NoPositioning);                      }                  }                  catch                  {                  }              }
Magic Number,DirectShow.BaseClasses,MuxerInputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,CompleteConnect,The following statement contains a magic number: lock (m_csTrackLock)              {                  if (m_pTrack != null)                  {                      (m_Filter as BaseMuxer).Writer.RemoveTrack(m_pTrack);                  }                  m_pTrack = (m_Filter as BaseMuxer).Writer.CreateTrackForType(m_mt);                  if (m_pTrack == null) return VFW_E_CANNOT_CONNECT;                  m_pTrack.Alloc(2 * UNITS);                  m_pTrack.FlushEvent = m_evFlush;                  hr = (m_Filter as BaseMuxer).CompleteConnect(this);                  if (hr.Failed)                  {                      (m_Filter as BaseMuxer).Writer.RemoveTrack(m_pTrack);                      m_pTrack = null;                  }              }
Magic Number,DirectShow.BaseClasses,MuxerOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: prop.cBuffers = 3;
Magic Number,DirectShow.BaseClasses,MuxerOutputPin,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,DecideBufferSize,The following statement contains a magic number: if (FAILED(hr))              {                  prop.cbBuffer = 1024;                  hr = pAlloc.SetProperties(prop' _actual);              }
Magic Number,DirectShow.BaseClasses,BaseMuxer,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,ThreadProc,The following statement contains a magic number: if (hr.Succeeded)              {                  m_evMuxStarted.Set();                    bool bFlush = false;                  long _minPosition;                  long _maxPosition;                  while (!bFlush)                  {                      bFlush = m_evQuit.WaitOne(5'false);                      if (!bFlush)                      {                          _minPosition = MAX_LONG;                          _maxPosition = 0;                          foreach (BasePin _pin in Pins)                          {                              if (_pin.Direction == PinDirection.Input && _pin.IsConnected)                              {                                  if (!(_pin as MuxerInputPin).EOSDelivered)                                  {                                      MuxerTrack _track = (_pin as MuxerInputPin).Track;                                      if (_minPosition > _track.Position)                                      {                                          _minPosition = _track.Position;                                      }                                      if (_track.Position > _maxPosition)                                      {                                          _maxPosition = _track.Position;                                      }                                  }                              }                          }                      }                      else                      {                          _minPosition = 0;                          _maxPosition = MAX_LONG;                      }                      if (_minPosition != MAX_LONG)                      {                          foreach (BasePin _pin in Pins)                          {                              if (_pin.Direction == PinDirection.Input && _pin.IsConnected)                              {                                  if (!(_pin as MuxerInputPin).EOSDelivered)                                  {                                      MuxerTrack _track = (_pin as MuxerInputPin).Track;                                      if (_track.Position >= _minPosition)                                      {                                          while (true)                                          {                                              PacketData _packet = _track.GetNextPacket();                                              if (_packet == null) break;                                              m_pFileWriter.WritePacket(_track' _packet);                                              _packet.Dispose();                                              if (_track.Position >= _maxPosition) break;                                          }                                      }                                  }                              }                          }                      }                  }                  CloseFile();              }
Magic Number,DirectShow,BitmapInfoHeader,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetBitmapSize,The following statement contains a magic number: return Width * Math.Abs(Height) * (BitCount + BitCount % 8) / 8;
Magic Number,DirectShow,BitmapInfoHeader,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetBitmapSize,The following statement contains a magic number: return Width * Math.Abs(Height) * (BitCount + BitCount % 8) / 8;
Magic Number,DirectShow,AMMediaType,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetExtraData,The following statement contains a magic number: if (formatPtr != IntPtr.Zero && formatSize != 0)              {                  if (formatType == FormatType.VideoInfo)                  {                      _size = formatSize - Marshal.SizeOf(typeof(VideoInfoHeader));                  }                  if (formatType == FormatType.VideoInfo2)                  {                      _size = formatSize - Marshal.SizeOf(typeof(VideoInfoHeader2));                  }                  if (formatType == FormatType.WaveEx || formatType == FormatType.Mpeg2Audio || formatType == FormatType.DolbyAC3)                  {                      _size = formatSize - Marshal.SizeOf(typeof(WaveFormatEx));                  }                  if (formatType == FormatType.Mpeg2Video)                  {                      _size = formatSize - Marshal.SizeOf(typeof(VideoInfoHeader2)) - 18;                  }              }
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetPointer,The following statement contains a magic number: GetPointerProc _Proc = GetProcDelegate<GetPointerProc>(3);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetSize,The following statement contains a magic number: GetSizeProc _Proc = GetProcDelegate<GetSizeProc>(4);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetTime,The following statement contains a magic number: GetTimeProc _Proc = GetProcDelegate<GetTimeProc>(5);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SetTime,The following statement contains a magic number: SetTimeProc _Proc = GetProcDelegate<SetTimeProc>(6);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,IsSyncPoint,The following statement contains a magic number: GetSizeProc _Proc = GetProcDelegate<GetSizeProc>(7);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SetSyncPoint,The following statement contains a magic number: SetBoolProc _Proc = GetProcDelegate<SetBoolProc>(8);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,IsPreroll,The following statement contains a magic number: GetSizeProc _Proc = GetProcDelegate<GetSizeProc>(9);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SetPreroll,The following statement contains a magic number: SetBoolProc _Proc = GetProcDelegate<SetBoolProc>(10);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetActualDataLength,The following statement contains a magic number: GetSizeProc _Proc = GetProcDelegate<GetSizeProc>(11);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SetActualDataLength,The following statement contains a magic number: SetSizeProc _Proc = GetProcDelegate<SetSizeProc>(12);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetMediaType,The following statement contains a magic number: GetMediaTypeProc _Proc = GetProcDelegate<GetMediaTypeProc>(13);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SetMediaType,The following statement contains a magic number: SetMediaTypeProc _Proc = GetProcDelegate<SetMediaTypeProc>(14);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,IsDiscontinuity,The following statement contains a magic number: GetSizeProc _Proc = GetProcDelegate<GetSizeProc>(15);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SetDiscontinuity,The following statement contains a magic number: SetBoolProc _Proc = GetProcDelegate<SetBoolProc>(16);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetMediaTime,The following statement contains a magic number: GetTimeProc _Proc = GetProcDelegate<GetTimeProc>(17);
Magic Number,DirectShow,IMediaSampleImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SetMediaTime,The following statement contains a magic number: SetTimeProc _Proc = GetProcDelegate<SetTimeProc>(18);
Magic Number,DirectShow,IMediaSample2Impl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetProperties,The following statement contains a magic number: PropertiesProc _Proc = GetProcDelegate<PropertiesProc>(19);
Magic Number,DirectShow,IMediaSample2Impl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SetProperties,The following statement contains a magic number: PropertiesProc _Proc = GetProcDelegate<PropertiesProc>(20);
Magic Number,DirectShow,IMemInputPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetAllocator,The following statement contains a magic number: GetAllocatorProc _Proc = GetProcDelegate<GetAllocatorProc>(3);
Magic Number,DirectShow,IMemInputPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,NotifyAllocator,The following statement contains a magic number: NotifyAllocatorProc _Proc = GetProcDelegate<NotifyAllocatorProc>(4);
Magic Number,DirectShow,IMemInputPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetAllocatorRequirements,The following statement contains a magic number: GetAllocatorRequirementsProc _Proc = GetProcDelegate<GetAllocatorRequirementsProc>(5);
Magic Number,DirectShow,IMemInputPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Receive,The following statement contains a magic number: ReceiveProc _Proc = GetProcDelegate<ReceiveProc>(6);
Magic Number,DirectShow,IMemInputPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,ReceiveMultiple,The following statement contains a magic number: ReceiveMultipleProc _Proc = GetProcDelegate<ReceiveMultipleProc>(7);
Magic Number,DirectShow,IMemInputPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,ReceiveCanBlock,The following statement contains a magic number: ReceiveCanBlockProc _Proc = GetProcDelegate<ReceiveCanBlockProc>(8);
Magic Number,DirectShow,IMemAllocatorImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SetProperties,The following statement contains a magic number: SetPropertiesProc _Proc = GetProcDelegate<SetPropertiesProc>(3);
Magic Number,DirectShow,IMemAllocatorImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetProperties,The following statement contains a magic number: GetPropertiesProc _Proc = GetProcDelegate<GetPropertiesProc>(4);
Magic Number,DirectShow,IMemAllocatorImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Commit,The following statement contains a magic number: CommitProc _Proc = GetProcDelegate<CommitProc>(5);
Magic Number,DirectShow,IMemAllocatorImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Decommit,The following statement contains a magic number: DecommitProc _Proc = GetProcDelegate<DecommitProc>(6);
Magic Number,DirectShow,IMemAllocatorImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetBuffer,The following statement contains a magic number: GetBufferProc _Proc = GetProcDelegate<GetBufferProc>(7);
Magic Number,DirectShow,IMemAllocatorImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,ReleaseBuffer,The following statement contains a magic number: ReleaseBufferProc _Proc = GetProcDelegate<ReleaseBufferProc>(8);
Magic Number,DirectShow,IEnumMediaTypesImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Next,The following statement contains a magic number: NextProc _Proc = GetProcDelegate<NextProc>(3);
Magic Number,DirectShow,IEnumMediaTypesImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Skip,The following statement contains a magic number: SkipProc _Proc = GetProcDelegate<SkipProc>(4);
Magic Number,DirectShow,IEnumMediaTypesImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Reset,The following statement contains a magic number: ResetProc _Proc = GetProcDelegate<ResetProc>(5);
Magic Number,DirectShow,IEnumMediaTypesImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Clone,The following statement contains a magic number: CloneProc _Proc = GetProcDelegate<CloneProc>(6);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Connect,The following statement contains a magic number: ConnectProc _Proc = GetProcDelegate<ConnectProc>(3);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,ReceiveConnection,The following statement contains a magic number: ReceiveConnectionProc _Proc = GetProcDelegate<ReceiveConnectionProc>(4);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Disconnect,The following statement contains a magic number: DisconnectProc _Proc = GetProcDelegate<DisconnectProc>(5);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,ConnectedTo,The following statement contains a magic number: ConnectedToProc _Proc = GetProcDelegate<ConnectedToProc>(6);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,ConnectionMediaType,The following statement contains a magic number: ConnectionMediaTypeProc _Proc = GetProcDelegate<ConnectionMediaTypeProc>(7);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,QueryPinInfo,The following statement contains a magic number: QueryPinInfoProc _Proc = GetProcDelegate<QueryPinInfoProc>(8);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,QueryDirection,The following statement contains a magic number: QueryDirectionProc _Proc = GetProcDelegate<QueryDirectionProc>(9);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,QueryId,The following statement contains a magic number: QueryIdProc _Proc = GetProcDelegate<QueryIdProc>(10);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,QueryAccept,The following statement contains a magic number: QueryAcceptProc _Proc = GetProcDelegate<QueryAcceptProc>(11);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,EnumMediaTypes,The following statement contains a magic number: EnumMediaTypesProc _Proc = GetProcDelegate<EnumMediaTypesProc>(12);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,QueryInternalConnections,The following statement contains a magic number: QueryInternalConnectionsProc _Proc = GetProcDelegate<QueryInternalConnectionsProc>(13);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,EndOfStream,The following statement contains a magic number: EndOfStreamProc _Proc = GetProcDelegate<EndOfStreamProc>(14);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,BeginFlush,The following statement contains a magic number: BeginFlushProc _Proc = GetProcDelegate<BeginFlushProc>(15);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,EndFlush,The following statement contains a magic number: EndFlushProc _Proc = GetProcDelegate<EndFlushProc>(16);
Magic Number,DirectShow,IPinImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,NewSegment,The following statement contains a magic number: NewSegmentProc _Proc = GetProcDelegate<NewSegmentProc>(17);
Magic Number,DirectShow,ISeekingPassThruImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Init,The following statement contains a magic number: InitProc _Proc = GetProcDelegate<InitProc>(3);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetCapabilities,The following statement contains a magic number: GetCapabilitiesProc _Proc = GetProcDelegate<GetCapabilitiesProc>(3);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,CheckCapabilities,The following statement contains a magic number: CheckCapabilitiesProc _Proc = GetProcDelegate<CheckCapabilitiesProc>(4);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,IsFormatSupported,The following statement contains a magic number: IsFormatSupportedProc _Proc = GetProcDelegate<IsFormatSupportedProc>(5);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,QueryPreferredFormat,The following statement contains a magic number: QueryPreferredFormatProc _Proc = GetProcDelegate<QueryPreferredFormatProc>(6);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetTimeFormat,The following statement contains a magic number: GetTimeFormatProc _Proc = GetProcDelegate<GetTimeFormatProc>(7);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,IsUsingTimeFormat,The following statement contains a magic number: IsUsingTimeFormatProc _Proc = GetProcDelegate<IsUsingTimeFormatProc>(8);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SetTimeFormat,The following statement contains a magic number: SetTimeFormatProc _Proc = GetProcDelegate<SetTimeFormatProc>(9);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetDuration,The following statement contains a magic number: GetDurationProc _Proc = GetProcDelegate<GetDurationProc>(10);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetStopPosition,The following statement contains a magic number: GetStopPositionProc _Proc = GetProcDelegate<GetStopPositionProc>(11);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetCurrentPosition,The following statement contains a magic number: GetCurrentPositionProc _Proc = GetProcDelegate<GetCurrentPositionProc>(12);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,ConvertTimeFormat,The following statement contains a magic number: ConvertTimeFormatProc _Proc = GetProcDelegate<ConvertTimeFormatProc>(13);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SetPositions,The following statement contains a magic number: SetPositionsProc _Proc = GetProcDelegate<SetPositionsProc>(14);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetPositions,The following statement contains a magic number: GetPositionsProc _Proc = GetProcDelegate<GetPositionsProc>(15);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetAvailable,The following statement contains a magic number: GetAvailableProc _Proc = GetProcDelegate<GetAvailableProc>(16);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SetRate,The following statement contains a magic number: SetRateProc _Proc = GetProcDelegate<SetRateProc>(17);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetRate,The following statement contains a magic number: GetRateProc _Proc = GetProcDelegate<GetRateProc>(18);
Magic Number,DirectShow,IMediaSeekingImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetPreroll,The following statement contains a magic number: GetPrerollProc _Proc = GetProcDelegate<GetPrerollProc>(19);
Magic Number,DirectShow,IPropertyPageSiteImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,OnStatusChange,The following statement contains a magic number: OnStatusChangeProc _Proc = GetProcDelegate<OnStatusChangeProc>(3);
Magic Number,DirectShow,IPropertyPageSiteImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetLocaleID,The following statement contains a magic number: GetLocaleIDProc _Proc = GetProcDelegate<GetLocaleIDProc>(4);
Magic Number,DirectShow,IPropertyPageSiteImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetPageContainer,The following statement contains a magic number: GetPageContainerProc _Proc = GetProcDelegate<GetPageContainerProc>(5);
Magic Number,DirectShow,IPropertyPageSiteImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,TranslateAccelerator,The following statement contains a magic number: TranslateAcceleratorProc _Proc = GetProcDelegate<TranslateAcceleratorProc>(6);
Magic Number,DirectShow,IReferenceClockImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,GetTime,The following statement contains a magic number: GetTimeProc _Proc = GetProcDelegate<GetTimeProc>(3);
Magic Number,DirectShow,IReferenceClockImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,AdviseTime,The following statement contains a magic number: AdviseTimeProc _Proc = GetProcDelegate<AdviseTimeProc>(4);
Magic Number,DirectShow,IReferenceClockImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,AdvisePeriodic,The following statement contains a magic number: AdvisePeriodicProc _Proc = GetProcDelegate<AdvisePeriodicProc>(5);
Magic Number,DirectShow,IReferenceClockImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Unadvise,The following statement contains a magic number: UnadviseProc _Proc = GetProcDelegate<UnadviseProc>(6);
Magic Number,DirectShow,IMediaEventSinkImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Notify,The following statement contains a magic number: NotifyProc _NotifyProc = GetProcDelegate<NotifyProc>(3);
Magic Number,DirectShow,IAsyncReaderImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,RequestAllocator,The following statement contains a magic number: RequestAllocatorProc _Proc = GetProcDelegate<RequestAllocatorProc>(3);
Magic Number,DirectShow,IAsyncReaderImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Request,The following statement contains a magic number: RequestProc _Proc = GetProcDelegate<RequestProc>(4);
Magic Number,DirectShow,IAsyncReaderImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,WaitForNext,The following statement contains a magic number: WaitForNextProc _Proc = GetProcDelegate<WaitForNextProc>(5);
Magic Number,DirectShow,IAsyncReaderImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SyncReadAligned,The following statement contains a magic number: SyncReadAlignedProc _Proc = GetProcDelegate<SyncReadAlignedProc>(6);
Magic Number,DirectShow,IAsyncReaderImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SyncRead,The following statement contains a magic number: SyncReadProc _Proc = GetProcDelegate<SyncReadProc>(7);
Magic Number,DirectShow,IAsyncReaderImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Length,The following statement contains a magic number: LengthProc _Proc = GetProcDelegate<LengthProc>(8);
Magic Number,DirectShow,IAsyncReaderImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,BeginFlush,The following statement contains a magic number: BeginFlushProc _Proc = GetProcDelegate<BeginFlushProc>(9);
Magic Number,DirectShow,IAsyncReaderImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,EndFlush,The following statement contains a magic number: EndFlushProc _Proc = GetProcDelegate<EndFlushProc>(10);
Magic Number,DirectShow,IStreamImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Read,The following statement contains a magic number: ReadProc _Proc = GetProcDelegate<ReadProc>(3);
Magic Number,DirectShow,IStreamImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Write,The following statement contains a magic number: WriteProc _Proc = GetProcDelegate<WriteProc>(4);
Magic Number,DirectShow,IStreamImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Seek,The following statement contains a magic number: SeekProc _Proc = GetProcDelegate<SeekProc>(5);
Magic Number,DirectShow,IStreamImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,SetSize,The following statement contains a magic number: SetSizeProc _Proc = GetProcDelegate<SetSizeProc>(6);
Magic Number,DirectShow,IStreamImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,CopyTo,The following statement contains a magic number: CopyToProc _Proc = GetProcDelegate<CopyToProc>(7);
Magic Number,DirectShow,IStreamImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Commit,The following statement contains a magic number: CommitProc _Proc = GetProcDelegate<CommitProc>(8);
Magic Number,DirectShow,IStreamImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Revert,The following statement contains a magic number: RevertProc _Proc = GetProcDelegate<RevertProc>(9);
Magic Number,DirectShow,IStreamImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,LockRegion,The following statement contains a magic number: LockRegionProc _Proc = GetProcDelegate<LockRegionProc>(10);
Magic Number,DirectShow,IStreamImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,UnlockRegion,The following statement contains a magic number: UnlockRegionProc _Proc = GetProcDelegate<UnlockRegionProc>(11);
Magic Number,DirectShow,IStreamImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Stat,The following statement contains a magic number: StatProc _Proc = GetProcDelegate<StatProc>(12);
Magic Number,DirectShow,IStreamImpl,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DirectShow.cs,Clone,The following statement contains a magic number: CloneProc _Proc = GetProcDelegate<CloneProc>(13);
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,HIWORD,The following statement contains a magic number: return ((_value >> 16) & 0xffff);
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,MAKELANGID,The following statement contains a magic number: return ((((ushort)(s)) << 10) | (ushort)(p));
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,SUBLANGID,The following statement contains a magic number: return ((ushort )(lgid) >> 10);
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,MAKELCID,The following statement contains a magic number: return ((int)((((int)((ushort )(srtid))) << 16) | ((int)((ushort)(lgid)))));
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,MAKESORTLCID,The following statement contains a magic number: return ((int)((MAKELCID(lgid' srtid)) | (((int)((ushort)(ver))) << 20)));
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,SORTIDFROMLCID,The following statement contains a magic number: return ((ushort)((((int)(lcid)) >> 16) & 0xf));
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,SORTVERSIONFROMLCID,The following statement contains a magic number: return ((ushort)((((int)(lcid)) >> 20) & 0xf));
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked { return (((SZ + 15) >> 4) << 4); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked { return (((SZ + 15) >> 4) << 4); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked { return (((SZ + 15) >> 4) << 4); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked { return (((SZ + 31) >> 5) << 5); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked { return (((SZ + 31) >> 5) << 5); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked { return (((SZ + 31) >> 5) << 5); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked { return (((SZ + 15) >> 4) << 4); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked { return (((SZ + 15) >> 4) << 4); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked { return (((SZ + 15) >> 4) << 4); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked { return (((SZ + 31) >> 5) << 5); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked { return (((SZ + 31) >> 5) << 5); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked { return (((SZ + 31) >> 5) << 5); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked { return (((SZ + 15) >> 4) << 4); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked { return (((SZ + 15) >> 4) << 4); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked { return (((SZ + 15) >> 4) << 4); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked { return (((SZ + 31) >> 5) << 5); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked { return (((SZ + 31) >> 5) << 5); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked { return (((SZ + 31) >> 5) << 5); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked { return (((SZ + 15) >> 4) << 4); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked { return (((SZ + 15) >> 4) << 4); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN16,The following statement contains a magic number: unchecked { return (((SZ + 15) >> 4) << 4); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked { return (((SZ + 31) >> 5) << 5); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked { return (((SZ + 31) >> 5) << 5); }
Magic Number,Sonic,COMHelper,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ALIGN32,The following statement contains a magic number: unchecked { return (((SZ + 31) >> 5) << 5); }
Magic Number,Sonic,HRESULT,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,GetErrorText,The following statement contains a magic number: uint _length = 160;
Magic Number,Sonic,FOURCC,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,FOURCC,The following statement contains a magic number: byte[] _result = { _data[0]' _data[1]' _data[2]' _data[3] };
Magic Number,Sonic,FOURCC,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,FOURCC,The following statement contains a magic number: byte[] _result = { _data[0]' _data[1]' _data[2]' _data[3] };
Magic Number,Sonic,FOURCC,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,FOURCC,The following statement contains a magic number: byte[] _data = new byte[4];
Magic Number,Sonic,FOURCC,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,FOURCC,The following statement contains a magic number: byte[] _data = new byte[4];
Magic Number,Sonic,FOURCC,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,FOURCC,The following statement contains a magic number: byte[] _data = new byte[4];
Magic Number,Sonic,FOURCC,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ToString,The following statement contains a magic number: for (int i = 0; i < _data.Length; i++)              {                  if (_data[i] <= 30 || _data[i] > 128)                  {                      _result = "";                      break;                  }                  else                  {                      _result += (char)_data[i];                  }              }
Magic Number,Sonic,FOURCC,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ToString,The following statement contains a magic number: for (int i = 0; i < _data.Length; i++)              {                  if (_data[i] <= 30 || _data[i] > 128)                  {                      _result = "";                      break;                  }                  else                  {                      _result += (char)_data[i];                  }              }
Magic Number,Sonic,VTableInterface,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,_Release,The following statement contains a magic number: AddRefProc _Proc = GetProcDelegate<AddRefProc>(2);
Magic Number,Sonic,DSFilterGraphBase,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,Start,The following statement contains a magic number: while (hr == 1)              {                  hr = m_MediaControl.Run();                  if (hr == 1) Thread.Sleep(50);              }
Magic Number,Sonic,DSFilterGraphBase,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,StepForward,The following statement contains a magic number: if (m_FrameStep != null)              {                  if (!IsPaused)                  {                      Pause();                  }                  int hr = m_FrameStep.Step(1' null);                  if (hr < 0)                  {                      long _time;                      hr = m_MediaSeeking.GetCurrentPosition(out _time);                      DsLong _stop = (long)0;                      TimeSpan _ts = new TimeSpan(0' 0' 1);                      _time += _ts.Ticks / 20;                      DsLong _current = _time;                      hr = m_MediaSeeking.SetPositions(_current' AMSeekingSeekingFlags.AbsolutePositioning' _stop' AMSeekingSeekingFlags.NoPositioning);                  }                  return (HRESULT)hr;              }
Magic Number,Sonic,DSFilterGraphBase,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,StepBackward,The following statement contains a magic number: if (m_FrameStep != null)              {                  if (!IsPaused)                  {                      Pause();                  }                  long _time;                  int hr = m_MediaSeeking.GetCurrentPosition(out _time);                  DsLong _stop = (long)0;                  TimeSpan _ts = new TimeSpan(0' 0' 1);                  _time -= _ts.Ticks / 20;                  if (_time < 0) _time = 0;                  DsLong _current = _time;                  hr = m_MediaSeeking.SetPositions(_current' AMSeekingSeekingFlags.AbsolutePositioning' _stop' AMSeekingSeekingFlags.NoPositioning);                  return (HRESULT)hr;              }
Magic Number,Sonic,DSFilterGraphBase,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,PreparePlayback,The following statement contains a magic number: SetVolume(m_bMute ? -10000 : m_iVolume);
Magic Number,Sonic,DSFilterGraphBase,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,ProcessGraphMessage,The following statement contains a magic number: if (m_MediaEventEx != null)              {                  int hr = 0;                  int _param1' _param2;                  EventCode _code;                  while (hr == 0)                  {                      hr = m_MediaEventEx.GetEvent(out _code' out _param1' out _param2' 20);                      if (hr == 0)                      {                          hr = m_MediaEventEx.FreeEventParams(_code' _param1' _param2);                            if (_code == EventCode.Complete)                          {                              return true;                          }                          if (_code == EventCode.ErrorAbort)                          {                              return true;                          }                          if (_code == EventCode.DeviceLost)                          {                              return true;                          }                      }                  }              }
Missing Default,DirectShow.BaseClasses,AsyncStream,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Seek,The following switch statement is missing a default case: switch (origin)              {                  case SeekOrigin.Begin:                      m_lPosition = offset;                      break;                  case SeekOrigin.Current:                      m_lPosition += offset;                      break;                  case SeekOrigin.End:                      m_lPosition = _length + offset;                      break;              }
Missing Default,DirectShow.BaseClasses,BitStreamReader,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,Seek,The following switch statement is missing a default case: switch ((SeekOrigin)dwOrigin)              {                  case SeekOrigin.Begin:                      _position = dlibMove;                      break;                  case SeekOrigin.Current:                      _position += dlibMove;                      break;                  case SeekOrigin.End:                      _position = _length + dlibMove;                      break;              }
Missing Default,DirectShow.BaseClasses,BaseSplitter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\BaseClasses.cs,InitializeOutputPins,The following switch statement is missing a default case: switch (_track.Type)                          {                              case DemuxTrack.TrackType.Video:                                  _name = "Video";                                  break;                              case DemuxTrack.TrackType.Audio:                                  _name = "Audio";                                  break;                              case DemuxTrack.TrackType.Subtitles:                                  _name = "Subtitles";                                  break;                              case DemuxTrack.TrackType.SubPicture:                                  _name = "Sub Picture";                                  break;                          }
Missing Default,Sonic,DSFilter,C:\repos\diydrones_MissionPlanner\ExtLibs\BaseClasses\DSHelper.cs,GetPin,The following switch statement is missing a default case: switch (_direction)              {                  case PinDirection.Input:                      _pins = Input;                      break;                  case PinDirection.Output:                      _pins = Output;                      break;              }
