Implementation smell,Namespace,Class,File,Method,Description
Long Method,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The method has 260 lines of code.
Long Method,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The method has 396 lines of code.
Complex Method,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,Cyclomatic complexity of the method is 46
Complex Method,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,domainUpDown1_ValueChanged,Cyclomatic complexity of the method is 9
Long Parameter List,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The method has 11 parameters.
Long Statement,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The length of the statement  "				for (int d = (int)(spacing - ((closest.basepnt.GetDistance (closest.p1)) % spacing)); d < (closest.p1.GetDistance (closest.p2)); d += (int)spacing) { " is 149.
Long Statement,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The length of the statement  "				for (int d = (int)((closest.basepnt.GetDistance (closest.p2)) % spacing); d < (closest.p1.GetDistance (closest.p2)); d += (int)spacing) { " is 137.
Long Statement,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,findClosestLine,The length of the statement  "		utmpos p = FindLineIntersection (extended_line_start' extended_line_stop' start_perpendicular_line' stop_perpendicular_line); " is 125.
Long Statement,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,PointInPolygon,The length of the statement  "		if ((newPoint.y < p.y) == (p.y <= oldPoint.y) && ((double)p.x - (double)p1.x) * (double)(p2.y - p1.y) < ((double)p2.x - (double)p1.x) * (double)(p.y - p1.y)) { " is 159.
Long Statement,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,domainUpDown1_ValueChanged,The length of the statement  "	grid = Grid.CreateGrid (list' (double)NUM_altitude.Value' (double)NUM_Distance.Value' (double)NUM_spacing.Value' (double)NUM_angle.Value' (double)NUM_overshoot.Value' (double)NUM_overshoot2.Value' (Grid.StartPosition)Enum.Parse (typeof(Grid.StartPosition)' CMB_startfrom.Text)' false' 0); " is 288.
Long Statement,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(GridUI)); " is 127.
Long Statement,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The length of the statement  "	this.map.SelectedAreaFillColor = System.Drawing.Color.FromArgb (((int)(((byte)(33))))' ((int)(((byte)(65))))' ((int)(((byte)(105))))' ((int)(((byte)(225))))); " is 158.
Complex Conditional,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,FindLineIntersection,The conditional expression  "(r < 0 || r > 1) || (s < 0 || s > 1)"  is complex.
Empty Catch Block,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,map_MouseMove,The method has an empty catch block.
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,addtomap,The following statement contains a magic number: polygons.Routes.Add (new GMapRoute (list' "test") {  	Stroke = new System.Drawing.Pen (System.Drawing.Color.Yellow' 4)  });  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,DoDebug,The following statement contains a magic number: timer.Interval = 2000;  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,DoDebug,The following statement contains a magic number: map.MaxZoom = 20;  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,DoDebug,The following statement contains a magic number: map.Size = new Size (1024' 768);  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,DoDebug,The following statement contains a magic number: map.Size = new Size (1024' 768);  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: if (spacing < 4 && spacing != 0)  	spacing = 4;  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: if (spacing < 4 && spacing != 0)  	spacing = 4;  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: spacing = 4;  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: if (distance < 0.1)  	distance = 0.1;  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: if (distance < 0.1)  	distance = 0.1;  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: distance = 0.1;  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: newpos (ref xb1' ref yb1' angle - 90' diagdist / 2 + distance);  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: newpos (ref xb1' ref yb1' angle - 90' diagdist / 2 + distance);  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: newpos (ref xb1' ref yb1' angle + 180' diagdist / 2 + distance);  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: newpos (ref xb1' ref yb1' angle + 180' diagdist / 2 + distance);  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: newpos (ref xb2' ref yb2' angle + 90' diagdist / 2 + distance);  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: newpos (ref xb2' ref yb2' angle + 90' diagdist / 2 + distance);  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: newpos (ref xb2' ref yb2' angle + 180' diagdist / 2 + distance);  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: newpos (ref xb2' ref yb2' angle + 180' diagdist / 2 + distance);  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: while (lines < ((diagdist + distance * 2) / distance)) {  	// copy the start point to generate the end point  	double nx = x;  	double ny = y;  	newpos (ref nx' ref ny' angle' diagdist + distance * 2);  	linelatlng line = new linelatlng ();  	line.p1 = new utmpos (x' y' utmzone);  	line.p2 = new utmpos (nx' ny' utmzone);  	line.basepnt = new utmpos (x' y' utmzone);  	grid.Add (line);  	// addtomap(line);  	newpos (ref x' ref y' angle + 90' distance);  	lines++;  }  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: while (lines < ((diagdist + distance * 2) / distance)) {  	// copy the start point to generate the end point  	double nx = x;  	double ny = y;  	newpos (ref nx' ref ny' angle' diagdist + distance * 2);  	linelatlng line = new linelatlng ();  	line.p1 = new utmpos (x' y' utmzone);  	line.p2 = new utmpos (nx' ny' utmzone);  	line.basepnt = new utmpos (x' y' utmzone);  	grid.Add (line);  	// addtomap(line);  	newpos (ref x' ref y' angle + 90' distance);  	lines++;  }  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: while (lines < ((diagdist + distance * 2) / distance)) {  	// copy the start point to generate the end point  	double nx = x;  	double ny = y;  	newpos (ref nx' ref ny' angle' diagdist + distance * 2);  	linelatlng line = new linelatlng ();  	line.p1 = new utmpos (x' y' utmzone);  	line.p2 = new utmpos (nx' ny' utmzone);  	line.basepnt = new utmpos (x' y' utmzone);  	grid.Add (line);  	// addtomap(line);  	newpos (ref x' ref y' angle + 90' distance);  	lines++;  }  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: newpos (ref nx' ref ny' angle' diagdist + distance * 2);  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: newpos (ref x' ref y' angle + 90' distance);  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: for (int a = 0; a < gridno; a++) {  	double closestdistance = double.MaxValue;  	double farestdistance = double.MinValue;  	utmpos closestpoint = utmpos.Zero;  	utmpos farestpoint = utmpos.Zero;  	// somewhere to store our intersections  	List<utmpos> matchs = new List<utmpos> ();  	int b = -1;  	int crosses = 0;  	utmpos newutmpos = utmpos.Zero;  	foreach (utmpos pnt in utmpositions) {  		b++;  		if (b == 0) {  			continue;  		}  		newutmpos = FindLineIntersection (utmpositions [b - 1]' utmpositions [b]' grid [a].p1' grid [a].p2);  		if (!newutmpos.IsZero) {  			crosses++;  			matchs.Add (newutmpos);  			if (closestdistance > grid [a].p1.GetDistance (newutmpos)) {  				closestpoint.y = newutmpos.y;  				closestpoint.x = newutmpos.x;  				closestpoint.zone = newutmpos.zone;  				closestdistance = grid [a].p1.GetDistance (newutmpos);  			}  			if (farestdistance < grid [a].p1.GetDistance (newutmpos)) {  				farestpoint.y = newutmpos.y;  				farestpoint.x = newutmpos.x;  				farestpoint.zone = newutmpos.zone;  				farestdistance = grid [a].p1.GetDistance (newutmpos);  			}  		}  	}  	if (crosses == 0)// outside our polygon  	 {  		if (!PointInPolygon (grid [a].p1' utmpositions) && !PointInPolygon (grid [a].p2' utmpositions))  			remove.Add (grid [a]);  	} else if (crosses == 1)// bad - shouldnt happen  	 {  	} else if (crosses == 2)// simple start and finish  	 {  		linelatlng line = grid [a];  		line.p1 = closestpoint;  		line.p2 = farestpoint;  		grid [a] = line;  	} else// multiple intersections  	 {  		linelatlng line = grid [a];  		remove.Add (line);  		while (matchs.Count > 1) {  			linelatlng newline = new linelatlng ();  			closestpoint = findClosestPoint (closestpoint' matchs);  			newline.p1 = closestpoint;  			matchs.Remove (closestpoint);  			closestpoint = findClosestPoint (closestpoint' matchs);  			newline.p2 = closestpoint;  			matchs.Remove (closestpoint);  			newline.basepnt = line.basepnt;  			grid.Add (newline);  		}  	}  }  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: if (crosses == 0)// outside our polygon   {  	if (!PointInPolygon (grid [a].p1' utmpositions) && !PointInPolygon (grid [a].p2' utmpositions))  		remove.Add (grid [a]);  } else if (crosses == 1)// bad - shouldnt happen   {  } else if (crosses == 2)// simple start and finish   {  	linelatlng line = grid [a];  	line.p1 = closestpoint;  	line.p2 = farestpoint;  	grid [a] = line;  } else// multiple intersections   {  	linelatlng line = grid [a];  	remove.Add (line);  	while (matchs.Count > 1) {  		linelatlng newline = new linelatlng ();  		closestpoint = findClosestPoint (closestpoint' matchs);  		newline.p1 = closestpoint;  		matchs.Remove (closestpoint);  		closestpoint = findClosestPoint (closestpoint' matchs);  		newline.p2 = closestpoint;  		matchs.Remove (closestpoint);  		newline.basepnt = line.basepnt;  		grid.Add (newline);  	}  }  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: if (crosses == 1)// bad - shouldnt happen   {  } else if (crosses == 2)// simple start and finish   {  	linelatlng line = grid [a];  	line.p1 = closestpoint;  	line.p2 = farestpoint;  	grid [a] = line;  } else// multiple intersections   {  	linelatlng line = grid [a];  	remove.Add (line);  	while (matchs.Count > 1) {  		linelatlng newline = new linelatlng ();  		closestpoint = findClosestPoint (closestpoint' matchs);  		newline.p1 = closestpoint;  		matchs.Remove (closestpoint);  		closestpoint = findClosestPoint (closestpoint' matchs);  		newline.p2 = closestpoint;  		matchs.Remove (closestpoint);  		newline.basepnt = line.basepnt;  		grid.Add (newline);  	}  }  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,CreateGrid,The following statement contains a magic number: if (crosses == 2)// simple start and finish   {  	linelatlng line = grid [a];  	line.p1 = closestpoint;  	line.p2 = farestpoint;  	grid [a] = line;  } else// multiple intersections   {  	linelatlng line = grid [a];  	remove.Add (line);  	while (matchs.Count > 1) {  		linelatlng newline = new linelatlng ();  		closestpoint = findClosestPoint (closestpoint' matchs);  		newline.p1 = closestpoint;  		matchs.Remove (closestpoint);  		closestpoint = findClosestPoint (closestpoint' matchs);  		newline.p2 = closestpoint;  		matchs.Remove (closestpoint);  		newline.basepnt = line.basepnt;  		grid.Add (newline);  	}  }  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,newpos,The following statement contains a magic number: if (degN < 0)  	degN += 360;  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,newpos,The following statement contains a magic number: degN += 360;  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,newpos,The following statement contains a magic number: if (degN < 0)  	degN += 360;  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,newpos,The following statement contains a magic number: degN += 360;  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,AddAngle,The following statement contains a magic number: angle = angle % 360;  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,AddAngle,The following statement contains a magic number: while (angle < 0) {  	angle += 360;  }  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,AddAngle,The following statement contains a magic number: angle += 360;  
Magic Number,MissionPlanner,Grid,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\..\..\Grid\Grid.cs,PointInPolygon,The following statement contains a magic number: if (poly.Count < 3) {  	return inside;  }  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,GridUI,The following statement contains a magic number: NUM_angle.Value = (decimal)((getAngleOfLongestSide (list) + 360) % 360);  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,GridUI,The following statement contains a magic number: NUM_angle.Value = (decimal)((getAngleOfLongestSide (list) + 360) % 360);  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,AddDrawPolygon,The following statement contains a magic number: poly.Stroke = new Pen (Color.Red' 2);  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,getAngleOfLongestSide,The following statement contains a magic number: return (angle + 360) % 360;  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,getAngleOfLongestSide,The following statement contains a magic number: return (angle + 360) % 360;  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,domainUpDown1_ValueChanged,The following statement contains a magic number: wppoly.Stroke.Width = 4;  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,domainUpDown1_ValueChanged,The following statement contains a magic number: lbl_strips.Text = ((int)(strips / 2)).ToString ();  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.map.LevelsKeepInMemmory = 5;  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.map.MaxZoom = 19;  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.map.MinZoom = 2;  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.map.SelectedAreaFillColor = System.Drawing.Color.FromArgb (((int)(((byte)(33))))' ((int)(((byte)(65))))' ((int)(((byte)(105))))' ((int)(((byte)(225)))));  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.map.SelectedAreaFillColor = System.Drawing.Color.FromArgb (((int)(((byte)(33))))' ((int)(((byte)(65))))' ((int)(((byte)(105))))' ((int)(((byte)(225)))));  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.map.SelectedAreaFillColor = System.Drawing.Color.FromArgb (((int)(((byte)(33))))' ((int)(((byte)(65))))' ((int)(((byte)(105))))' ((int)(((byte)(225)))));  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.map.SelectedAreaFillColor = System.Drawing.Color.FromArgb (((int)(((byte)(33))))' ((int)(((byte)(65))))' ((int)(((byte)(105))))' ((int)(((byte)(225)))));  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.NUM_spacing.Maximum = new decimal (new int[] {  	9999'  	0'  	0'  	0  });  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.NUM_spacing.Value = new decimal (new int[] {  	50'  	0'  	0'  	0  });  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.NUM_overshoot2.Maximum = new decimal (new int[] {  	9999'  	0'  	0'  	0  });  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.NUM_angle.Maximum = new decimal (new int[] {  	360'  	0'  	0'  	0  });  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.NUM_altitude.Increment = new decimal (new int[] {  	10'  	0'  	0'  	0  });  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.NUM_altitude.Maximum = new decimal (new int[] {  	9999'  	0'  	0'  	0  });  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.NUM_altitude.Minimum = new decimal (new int[] {  	5'  	0'  	0'  	0  });  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.NUM_altitude.Value = new decimal (new int[] {  	100'  	0'  	0'  	0  });  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.NUM_Distance.Maximum = new decimal (new int[] {  	9999'  	0'  	0'  	0  });  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.NUM_Distance.Minimum = new decimal (new int[] {  	1'  	0'  	0'  	65536  });  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.NUM_Distance.Value = new decimal (new int[] {  	50'  	0'  	0'  	0  });  
Magic Number,MissionPlanner.SimpleGrid,GridUI,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridUI.cs,InitializeComponent,The following statement contains a magic number: this.NUM_overshoot.Maximum = new decimal (new int[] {  	9999'  	0'  	0'  	0  });  
Magic Number,MissionPlanner.SimpleGrid,GridPlugin,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SimpleGrid\SimpleGridPlugin.cs,but_Click,The following statement contains a magic number: if (Host.FPDrawnPolygon != null && Host.FPDrawnPolygon.Points.Count > 2) {  	using (Form gridui = new GridUI (this)) {  		MissionPlanner.Utilities.ThemeManager.ApplyThemeTo (gridui);  		gridui.ShowDialog ();  	}  } else {  	CustomMessageBox.Show ("Please define a polygon."' "Error");  }  
