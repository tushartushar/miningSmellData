Implementation smell,Namespace,Class,File,Method,Description
Long Method,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,verifyotp,The method has 104 lines of code.
Complex Method,fastJSON,Formatter,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\Formatter.cs,PrettyPrint,Cyclomatic complexity of the method is 11
Complex Method,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,ToObject,Cyclomatic complexity of the method is 13
Complex Method,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,CreateMyProp,Cyclomatic complexity of the method is 17
Complex Method,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,RootDictionary,Cyclomatic complexity of the method is 8
Complex Method,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,ParseDictionary,Cyclomatic complexity of the method is 34
Complex Method,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,ReadDataTable,Cyclomatic complexity of the method is 10
Complex Method,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,ParseString,Cyclomatic complexity of the method is 18
Complex Method,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,Cyclomatic complexity of the method is 15
Complex Method,fastJSON,JSONSerializer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonSerializer.cs,WriteValue,Cyclomatic complexity of the method is 15
Complex Method,fastJSON,JSONSerializer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonSerializer.cs,WriteObject,Cyclomatic complexity of the method is 13
Complex Method,fastJSON,JSONSerializer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonSerializer.cs,WriteString,Cyclomatic complexity of the method is 14
Complex Method,fastJSON,Reflection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\Reflection.cs,GetGetters,Cyclomatic complexity of the method is 9
Complex Method,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,verifyotp,Cyclomatic complexity of the method is 12
Long Statement,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,FillObject,The length of the statement  "            Dictionary<string' object> ht = new JsonParser(json' Parameters.IgnoreCaseOnDeserialize).Decode() as Dictionary<string' object>; " is 128.
Long Statement,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,ParseDictionary,The length of the statement  "                            case myPropInfoType.StringDictionary: oset = CreateStringKeyDictionary((Dictionary<string' object>)v' pi.pt' pi.GenericTypes' globaltypes); break; " is 146.
Long Statement,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,ReadSchema,The length of the statement  "                DatasetSchema ms = (DatasetSchema)ParseDictionary((Dictionary<string' object>)schema' globalTypes' typeof(DatasetSchema)' null); " is 128.
Long Statement,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,CreateDataTable,The length of the statement  "                var ms = (DatasetSchema)this.ParseDictionary((Dictionary<string' object>)schema' globalTypes' typeof(DatasetSchema)' null); " is 123.
Long Statement,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,Uploader,The length of the statement  "                        Console.WriteLine("Found board type {0} boardrev {1} bl rev {2} fwmax {3} on {4}"' up.board_type' up.board_rev'up.bl_rev'up.fw_maxsize' port); " is 142.
Long Statement,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,Uploader,The length of the statement  "                    catch (Exception ex) { Console.WriteLine("No need to upload. already on the board" + ex.ToString()); up.close(); return true; } " is 127.
Long Statement,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,DecodeRsaPrivateKey,The length of the statement  "                parms.ProviderType = ((Environment.OSVersion.Version.Major > 5) || ((Environment.OSVersion.Version.Major == 5) && (Environment.OSVersion.Version.Minor >= 1))) ? 0x18 : 1; " is 170.
Long Statement,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,verifyotp,The length of the statement  "                    if (ByteArrayCompare(sn' new byte[] { 0x00' 0x23' 0x00' 0x30' 0x35' 0x32' 0x47' 0x18' 0x36' 0x34' 0x30' 0x32' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00 })) " is 160.
Long Statement,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,verifyotp,The length of the statement  "                    if (ByteArrayCompare(sn' new byte[] { 0x00' 0x38' 0x00' 0x1F' 0x34' 0x32' 0x47' 0x0D' 0x31' 0x32' 0x35' 0x33' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00 })) " is 160.
Long Statement,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,verifyotp,The length of the statement  "                    if (ByteArrayCompare(sn' new byte[] { 0x00' 0x38' 0x00' 0x21' 0x31' 0x34' 0x51' 0x17' 0x33' 0x36' 0x38' 0x34' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00' 0x00 })) " is 160.
Complex Conditional,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,ParseNumber,The conditional expression  "(c >= '0' && c <= '9') || c == '.' || c == '-' || c == '+' || c == 'e' || c == 'E'"  is complex.
Complex Conditional,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The conditional expression  "c != ' ' && c != '\t' && c != '\n' && c != '\r'"  is complex.
Complex Conditional,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The conditional expression  "json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e'"  is complex.
Complex Conditional,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The conditional expression  "json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e'"  is complex.
Complex Conditional,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The conditional expression  "json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l'"  is complex.
Complex Conditional,fastJSON,JSONSerializer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonSerializer.cs,WriteValue,The conditional expression  "obj is int || obj is long || obj is double ||                  obj is decimal || obj is float ||                  obj is byte || obj is short ||                  obj is sbyte || obj is ushort ||                  obj is uint || obj is ulong"  is complex.
Complex Conditional,fastJSON,JSONSerializer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonSerializer.cs,WriteString,The conditional expression  "c >= ' ' && c < 128 && c != '\"' && c != '\\'"  is complex.
Complex Conditional,fastJSON,JSONSerializer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonSerializer.cs,WriteString,The conditional expression  "c != '\t' && c != '\n' && c != '\r' && c != '\"' && c != '\\'"  is complex.
Complex Conditional,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,Uploader,The conditional expression  "!port.StartsWith("COM") && !port.Contains("APM") && !port.Contains("ACM") && !port.Contains("usb")"  is complex.
Complex Conditional,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,verifyotp,The conditional expression  "otp.h1 == 'P' &&                          otp.h2 == 'X' &&                          otp.h3 == '4' &&                          otp.h4 == '\0'"  is complex.
Empty Catch Block,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,Uploader,The method has an empty catch block.
Empty Catch Block,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,Uploader,The method has an empty catch block.
Empty Catch Block,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,GetPortNames,The method has an empty catch block.
Empty Catch Block,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,GetPortNames,The method has an empty catch block.
Empty Catch Block,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,GetPortNames,The method has an empty catch block.
Empty Catch Block,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,GetPortNames,The method has an empty catch block.
Empty Catch Block,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,GetPortNames,The method has an empty catch block.
Empty Catch Block,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,Uploader,The method has an empty catch block.
Empty Catch Block,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,Uploader,The method has an empty catch block.
Empty Catch Block,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,close,The method has an empty catch block.
Empty Catch Block,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__reboot,The method has an empty catch block.
Empty Catch Block,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,upload,The method has an empty catch block.
Empty Catch Block,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,Dispose,The method has an empty catch block.
Empty Catch Block,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,Dispose,The method has an empty catch block.
Magic Number,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,CreateGuid,The following statement contains a magic number: s.Length > 30
Magic Number,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: CreateInteger(out year' value' 0' 4);
Magic Number,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: CreateInteger(out month' value' 5' 2);
Magic Number,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: CreateInteger(out month' value' 5' 2);
Magic Number,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: CreateInteger(out day' value' 8' 2);
Magic Number,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: CreateInteger(out day' value' 8' 2);
Magic Number,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: CreateInteger(out hour' value' 11' 2);
Magic Number,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: CreateInteger(out hour' value' 11' 2);
Magic Number,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: CreateInteger(out min' value' 14' 2);
Magic Number,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: CreateInteger(out min' value' 14' 2);
Magic Number,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: CreateInteger(out sec' value' 17' 2);
Magic Number,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,CreateDateTime,The following statement contains a magic number: CreateInteger(out sec' value' 17' 2);
Magic Number,fastJSON,JSON,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JSON.cs,ReadDataTable,The following statement contains a magic number: s != null && s.Length < 36
Magic Number,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,ParseString,The following statement contains a magic number: switch (json[index++])                  {                      case '"':                          s.Append('"');                          break;                        case '\\':                          s.Append('\\');                          break;                        case '/':                          s.Append('/');                          break;                        case 'b':                          s.Append('\b');                          break;                        case 'f':                          s.Append('\f');                          break;                        case 'n':                          s.Append('\n');                          break;                        case 'r':                          s.Append('\r');                          break;                        case 't':                          s.Append('\t');                          break;                        case 'u':                          {                              int remainingLength = json.Length - index;                              if (remainingLength < 4) break;                                // parse the 32 bit hex into an integer codepoint                              uint codePoint = ParseUnicode(json[index]' json[index + 1]' json[index + 2]' json[index + 3]);                              s.Append((char)codePoint);                                // skip 4 chars                              index += 4;                          }                          break;                  }
Magic Number,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,ParseString,The following statement contains a magic number: switch (json[index++])                  {                      case '"':                          s.Append('"');                          break;                        case '\\':                          s.Append('\\');                          break;                        case '/':                          s.Append('/');                          break;                        case 'b':                          s.Append('\b');                          break;                        case 'f':                          s.Append('\f');                          break;                        case 'n':                          s.Append('\n');                          break;                        case 'r':                          s.Append('\r');                          break;                        case 't':                          s.Append('\t');                          break;                        case 'u':                          {                              int remainingLength = json.Length - index;                              if (remainingLength < 4) break;                                // parse the 32 bit hex into an integer codepoint                              uint codePoint = ParseUnicode(json[index]' json[index + 1]' json[index + 2]' json[index + 3]);                              s.Append((char)codePoint);                                // skip 4 chars                              index += 4;                          }                          break;                  }
Magic Number,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,ParseString,The following statement contains a magic number: switch (json[index++])                  {                      case '"':                          s.Append('"');                          break;                        case '\\':                          s.Append('\\');                          break;                        case '/':                          s.Append('/');                          break;                        case 'b':                          s.Append('\b');                          break;                        case 'f':                          s.Append('\f');                          break;                        case 'n':                          s.Append('\n');                          break;                        case 'r':                          s.Append('\r');                          break;                        case 't':                          s.Append('\t');                          break;                        case 'u':                          {                              int remainingLength = json.Length - index;                              if (remainingLength < 4) break;                                // parse the 32 bit hex into an integer codepoint                              uint codePoint = ParseUnicode(json[index]' json[index + 1]' json[index + 2]' json[index + 3]);                              s.Append((char)codePoint);                                // skip 4 chars                              index += 4;                          }                          break;                  }
Magic Number,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,ParseString,The following statement contains a magic number: switch (json[index++])                  {                      case '"':                          s.Append('"');                          break;                        case '\\':                          s.Append('\\');                          break;                        case '/':                          s.Append('/');                          break;                        case 'b':                          s.Append('\b');                          break;                        case 'f':                          s.Append('\f');                          break;                        case 'n':                          s.Append('\n');                          break;                        case 'r':                          s.Append('\r');                          break;                        case 't':                          s.Append('\t');                          break;                        case 'u':                          {                              int remainingLength = json.Length - index;                              if (remainingLength < 4) break;                                // parse the 32 bit hex into an integer codepoint                              uint codePoint = ParseUnicode(json[index]' json[index + 1]' json[index + 2]' json[index + 3]);                              s.Append((char)codePoint);                                // skip 4 chars                              index += 4;                          }                          break;                  }
Magic Number,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;                }
Magic Number,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;                }
Magic Number,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;                }
Magic Number,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;                }
Magic Number,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;                }
Magic Number,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;                }
Magic Number,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;                }
Magic Number,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;                }
Magic Number,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;                }
Magic Number,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The following statement contains a magic number: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;                }
Magic Number,fastJSON,JSONSerializer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonSerializer.cs,WriteString,The following statement contains a magic number: c >= ' ' && c < 128 && c != '\"' && c != '\\'
Magic Number,fastJSON,Reflection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\Reflection.cs,CreateSetField,The following statement contains a magic number: Type[] arguments = new Type[2];
Magic Number,fastJSON,Reflection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\Reflection.cs,CreateSetMethod,The following statement contains a magic number: Type[] arguments = new Type[2];
Magic Number,px4uploader,Firmware,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Firmware.cs,ProcessFirmware,The following statement contains a magic number: int size = fw.image_size + (fw.image_size % 4);
Magic Number,px4uploader,Firmware,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Firmware.cs,__crc32,The following statement contains a magic number: state = crctab[index] ^ (state >> 8);
Magic Number,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,Uploader,The following statement contains a magic number: up = new Uploader(port' 115200);
Magic Number,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,DecodeRsaPrivateKey,The following statement contains a magic number: parms.ProviderType = ((Environment.OSVersion.Version.Major > 5) || ((Environment.OSVersion.Version.Major == 5) && (Environment.OSVersion.Version.Minor >= 1))) ? 0x18 : 1;
Magic Number,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,DecodeRsaPrivateKey,The following statement contains a magic number: parms.ProviderType = ((Environment.OSVersion.Version.Major > 5) || ((Environment.OSVersion.Version.Major == 5) && (Environment.OSVersion.Version.Minor >= 1))) ? 0x18 : 1;
Magic Number,px4uploader,Program,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,DecodeRsaPrivateKey,The following statement contains a magic number: RSAParameterTraits traits = new RSAParameterTraits(rsAparams.Modulus.Length * 8);
Magic Number,px4uploader,RSAParameterTraits,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,RSAParameterTraits,The following statement contains a magic number: double logbase = Math.Log(modulusLengthInBits' 2);
Magic Number,px4uploader,RSAParameterTraits,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,RSAParameterTraits,The following statement contains a magic number: switch (assumedLength)                  {                      case 1024:                          this.size_Mod = 0x80;                          this.size_Exp = -1;                          this.size_D = 0x80;                          this.size_P = 0x40;                          this.size_Q = 0x40;                          this.size_DP = 0x40;                          this.size_DQ = 0x40;                          this.size_InvQ = 0x40;                          break;                      case 2048:                          this.size_Mod = 0x100;                          this.size_Exp = -1;                          this.size_D = 0x100;                          this.size_P = 0x80;                          this.size_Q = 0x80;                          this.size_DP = 0x80;                          this.size_DQ = 0x80;                          this.size_InvQ = 0x80;                          break;                      case 4096:                          this.size_Mod = 0x200;                          this.size_Exp = -1;                          this.size_D = 0x200;                          this.size_P = 0x100;                          this.size_Q = 0x100;                          this.size_DP = 0x100;                          this.size_DQ = 0x100;                          this.size_InvQ = 0x100;                          break;                      default:                          System.Diagnostics.Debug.Assert(false); // Unknown key size?                          break;                  }
Magic Number,px4uploader,RSAParameterTraits,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,RSAParameterTraits,The following statement contains a magic number: switch (assumedLength)                  {                      case 1024:                          this.size_Mod = 0x80;                          this.size_Exp = -1;                          this.size_D = 0x80;                          this.size_P = 0x40;                          this.size_Q = 0x40;                          this.size_DP = 0x40;                          this.size_DQ = 0x40;                          this.size_InvQ = 0x40;                          break;                      case 2048:                          this.size_Mod = 0x100;                          this.size_Exp = -1;                          this.size_D = 0x100;                          this.size_P = 0x80;                          this.size_Q = 0x80;                          this.size_DP = 0x80;                          this.size_DQ = 0x80;                          this.size_InvQ = 0x80;                          break;                      case 4096:                          this.size_Mod = 0x200;                          this.size_Exp = -1;                          this.size_D = 0x200;                          this.size_P = 0x100;                          this.size_Q = 0x100;                          this.size_DP = 0x100;                          this.size_DQ = 0x100;                          this.size_InvQ = 0x100;                          break;                      default:                          System.Diagnostics.Debug.Assert(false); // Unknown key size?                          break;                  }
Magic Number,px4uploader,RSAParameterTraits,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Program.cs,RSAParameterTraits,The following statement contains a magic number: switch (assumedLength)                  {                      case 1024:                          this.size_Mod = 0x80;                          this.size_Exp = -1;                          this.size_D = 0x80;                          this.size_P = 0x40;                          this.size_Q = 0x40;                          this.size_DP = 0x40;                          this.size_DQ = 0x40;                          this.size_InvQ = 0x40;                          break;                      case 2048:                          this.size_Mod = 0x100;                          this.size_Exp = -1;                          this.size_D = 0x100;                          this.size_P = 0x80;                          this.size_Q = 0x80;                          this.size_DP = 0x80;                          this.size_DQ = 0x80;                          this.size_InvQ = 0x80;                          break;                      case 4096:                          this.size_Mod = 0x200;                          this.size_Exp = -1;                          this.size_D = 0x200;                          this.size_P = 0x100;                          this.size_Q = 0x100;                          this.size_DP = 0x100;                          this.size_DQ = 0x100;                          this.size_InvQ = 0x100;                          break;                      default:                          System.Diagnostics.Debug.Assert(false); // Unknown key size?                          break;                  }
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,Uploader,The following statement contains a magic number: this.port.ReadTimeout = 50;
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,Uploader,The following statement contains a magic number: this.port.WriteTimeout = 50;
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,verifyotp,The following statement contains a magic number: Array.Resize(ref sn' 20);
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,verifyotp,The following statement contains a magic number: s % 16 == 15
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,verifyotp,The following statement contains a magic number: s % 16 == 15
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,verifyotp,The following statement contains a magic number: s < 512
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,verifyotp,The following statement contains a magic number: board_type == 9
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__read_otp,The following statement contains a magic number: byte[] otp = new byte[512];
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__read_otp,The following statement contains a magic number: byte[] ans = __recv(4);
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__read_otp,The following statement contains a magic number: Array.Copy(ans' 0' otp' addr' 4);
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__read_otp,The following statement contains a magic number: addr += 4;
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__read_otp,The following statement contains a magic number: addr < 512
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__get_sn,The following statement contains a magic number: byte[] sn = new byte[3*4];
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__get_sn,The following statement contains a magic number: byte[] sn = new byte[3*4];
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__get_sn,The following statement contains a magic number: byte[] ans = __recv(4);
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__get_sn,The following statement contains a magic number: Array.Copy(ans' 0' sn' a' 4);
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__get_sn,The following statement contains a magic number: a < 12
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__recv_int,The following statement contains a magic number: byte[] raw = __recv(4);
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__erase,The following statement contains a magic number: DateTime deadline = DateTime.Now.AddSeconds(20);
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__erase,The following statement contains a magic number: System.Threading.Thread.Sleep(100);
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__program,The following statement contains a magic number: ProgressEvent((a / (float)groups.Count) * 100.0);
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,__verify_v2,The following statement contains a magic number: ProgressEvent((a / (float)groups.Count) * 100.0);
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,currentChecksum,The following statement contains a magic number: self.bl_rev < 3
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,currentChecksum,The following statement contains a magic number: this.port.ReadTimeout = 1000;
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,identify,The following statement contains a magic number: port.WriteTimeout = 500;
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,upload,The following statement contains a magic number: this.port.ReadTimeout = 1000;
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,upload,The following statement contains a magic number: !(self.board_type == 33 && fw.board_id == 9)
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,upload,The following statement contains a magic number: !(self.board_type == 33 && fw.board_id == 9)
Magic Number,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,upload,The following statement contains a magic number: self.bl_rev == 2
Missing Default,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,ParseValue,The following switch statement is missing a default case: switch (LookAhead())              {                  case Token.Number:                      return ParseNumber();                    case Token.String:                      return ParseString();                    case Token.Curly_Open:                      return ParseObject();                    case Token.Squared_Open:                      return ParseArray();                    case Token.True:                      ConsumeToken();                      return true;                    case Token.False:                      ConsumeToken();                      return false;                    case Token.Null:                      ConsumeToken();                      return null;              }
Missing Default,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,ParseString,The following switch statement is missing a default case: switch (json[index++])                  {                      case '"':                          s.Append('"');                          break;                        case '\\':                          s.Append('\\');                          break;                        case '/':                          s.Append('/');                          break;                        case 'b':                          s.Append('\b');                          break;                        case 'f':                          s.Append('\f');                          break;                        case 'n':                          s.Append('\n');                          break;                        case 'r':                          s.Append('\r');                          break;                        case 't':                          s.Append('\t');                          break;                        case 'u':                          {                              int remainingLength = json.Length - index;                              if (remainingLength < 4) break;                                // parse the 32 bit hex into an integer codepoint                              uint codePoint = ParseUnicode(json[index]' json[index + 1]' json[index + 2]' json[index + 3]);                              s.Append((char)codePoint);                                // skip 4 chars                              index += 4;                          }                          break;                  }
Missing Default,fastJSON,JsonParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\FastJSON\JsonParser.cs,NextTokenCore,The following switch statement is missing a default case: switch (c)              {                  case '{':                      return Token.Curly_Open;                    case '}':                      return Token.Curly_Close;                    case '[':                      return Token.Squared_Open;                    case ']':                      return Token.Squared_Close;                    case ''':                      return Token.Comma;                    case '"':                      return Token.String;                    case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                  case '+':                  case '.':                      return Token.Number;                    case ':':                      return Token.Colon;                    case 'f':                      if (json.Length - index >= 4 &&                          json[index + 0] == 'a' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 's' &&                          json[index + 3] == 'e')                      {                          index += 4;                          return Token.False;                      }                      break;                    case 't':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'r' &&                          json[index + 1] == 'u' &&                          json[index + 2] == 'e')                      {                          index += 3;                          return Token.True;                      }                      break;                    case 'n':                      if (json.Length - index >= 3 &&                          json[index + 0] == 'u' &&                          json[index + 1] == 'l' &&                          json[index + 2] == 'l')                      {                          index += 3;                          return Token.Null;                      }                      break;                }
Missing Default,px4uploader,Uploader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\px4uploader\Uploader.cs,readcerts,The following switch statement is missing a default case: switch (xmlreader2.Name)                              {                                  case "VENDOR":                                      vendor = xmlreader2.ReadString();                                      break;                                  case "PUBLICKEY":                                      publickey = xmlreader2.ReadString();                                      break;                              }
