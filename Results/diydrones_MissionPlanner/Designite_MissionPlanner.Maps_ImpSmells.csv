Implementation smell,Namespace,Class,File,Method,Description
Long Method,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The method has 200 lines of code.
Long Method,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,CreateOverlay,The method has 227 lines of code.
Long Method,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,RegenerateWPRoute,The method has 132 lines of code.
Complex Method,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,Cyclomatic complexity of the method is 15
Complex Method,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,Cyclomatic complexity of the method is 13
Complex Method,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,CreateOverlay,Cyclomatic complexity of the method is 26
Complex Method,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,addpolygonmarker,Cyclomatic complexity of the method is 8
Complex Method,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,RegenerateWPRoute,Cyclomatic complexity of the method is 12
Long Parameter List,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,GMapMarkerBoat,The method has 5 parameters. Parameters: p' heading' cog' nav_bearing' target
Long Parameter List,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,GMapMarkerPlane,The method has 7 parameters. Parameters: which' p' heading' cog' nav_bearing' target' radius
Long Parameter List,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,GMapMarkerQuad,The method has 5 parameters. Parameters: p' heading' cog' target' sysid
Long Parameter List,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,GMapMarkerRover,The method has 5 parameters. Parameters: p' heading' cog' nav_bearing' target
Long Parameter List,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,GMapMarkerSingle,The method has 5 parameters. Parameters: p' heading' cog' target' sysid
Long Parameter List,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,GMapMarkerSub,The method has 5 parameters. Parameters: p' heading' cog' nav_bearing' target
Long Parameter List,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,CreateOverlay,The method has 5 parameters. Parameters: altmode' home' missionitems' wpradius' loiterradius
Long Parameter List,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,addpolygonmarker,The method has 8 parameters. Parameters: tag' lng' lat' alt' color' wpradius' type' fillcolor
Long Statement,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The length of the statement  "            //g.DrawLine(new Pen(Color.Green' 2)' 0.0f' 0.0f' (float)Math.Cos((nav_bearing - 90) * MathHelper.deg2rad) * length' (float)Math.Sin((nav_bearing - 90) * MathHelper.deg2rad) * length); " is 184.
Long Statement,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The length of the statement  "            //g.DrawLine(new Pen(Color.Green' 2)' 0.0f' 0.0f' (float)Math.Cos((nav_bearing - 90) * MathHelper.deg2rad) * length' (float)Math.Sin((nav_bearing - 90) * MathHelper.deg2rad) * length); " is 184.
Long Statement,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,Update,The length of the statement  "                GMapMarkerDistance home_kmleft_marker = new GMapMarkerDistance(HomeLocation' battery_kmleft * 1000.0' Settings.Instance.GetFloat("Propagation_Tolerance")); " is 155.
Long Statement,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,Update,The length of the statement  "                GMapMarkerDistance drone_kmleft_marker = new GMapMarkerDistance(Location' battery_kmleft * 1000.0' Settings.Instance.GetFloat("Propagation_Tolerance")); " is 152.
Long Statement,MissionPlanner.Maps,WMSProvider,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WMSProvider.cs,MakeTileImageUrl,The length of the statement  "                    "VERSION=1.1.1&REQUEST=GetMap&SERVICE=WMS&styles=&bbox={0}'{1}'{2}'{3}&width={4}&height={5}&srs=EPSG:4326&format=image/png"' " is 124.
Long Statement,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,addpolygonmarker,The length of the statement  "                //MissionPlanner.GMapMarkerRectWPRad mBorders = new MissionPlanner.GMapMarkerRectWPRad(point' (int)float.Parse(TXT_WPRad.Text)' MainMap);" is 137.
Complex Conditional,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,OnRender,The conditional expression  "p.X < screenRect.Left || p.X > screenRect.Right ||                      p.Y < screenRect.Top || p.Y > screenRect.Bottom"  is complex.
Complex Conditional,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The conditional expression  "elevationoverlay.Markers.Count == 0 || center != prev_position || alt != prev_alt ||                              height != prev_height || width != prev_width ||                              zoom != prev_zoom"  is complex.
Complex Conditional,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The conditional expression  "prev_home != HomeLocation || need_rf_redraw ||                              prev_range != Settings.Instance.GetFloat("Propagation_Range") || prev_alt2 != alt"  is complex.
Complex Conditional,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,CreateOverlay,The conditional expression  "command < (ushort)MAVLink.MAV_CMD.LAST &&                     command != (ushort)MAVLink.MAV_CMD.TAKEOFF && // doesnt have a position                     command != (ushort)MAVLink.MAV_CMD.VTOL_TAKEOFF && // doesnt have a position                     command != (ushort)MAVLink.MAV_CMD.RETURN_TO_LAUNCH &&                     command != (ushort)MAVLink.MAV_CMD.CONTINUE_AND_CHANGE_ALT &&                     command != (ushort)MAVLink.MAV_CMD.DELAY &&                     command != (ushort)MAVLink.MAV_CMD.GUIDED_ENABLE                     || command == (ushort)MAVLink.MAV_CMD.DO_SET_ROI"  is complex.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerADSBPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerADSBPlane.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerAntennaTracker,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAntennaTracker.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,MyImageCache,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\MyImageCache.cs,DeleteOlderThan,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,MyImageCache,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\MyImageCache.cs,DeleteOlderThan,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The method has an empty catch block.
Empty Catch Block,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,addpolygonmarker,The method has an empty catch block.
Magic Number,MissionPlanner.Maps,Custom,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Custom.cs,Custom,The following statement contains a magic number: MaxZoom = 22;
Magic Number,MissionPlanner.Maps,GMapMarkerADSBPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerADSBPlane.cs,OnRender,The following statement contains a magic number: switch (AlertLevel)              {                  case AlertLevelOptions.Green:                      g.DrawImageUnscaled(icong' icong.Width/-2' icong.Height/-2);                      break;                  case AlertLevelOptions.Orange:                      g.DrawImageUnscaled(icono' icono.Width/-2' icono.Height/-2);                      break;                  case AlertLevelOptions.Red:                      g.DrawImageUnscaled(iconr' iconr.Width/-2' iconr.Height/-2);                      break;              }
Magic Number,MissionPlanner.Maps,GMapMarkerADSBPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerADSBPlane.cs,OnRender,The following statement contains a magic number: switch (AlertLevel)              {                  case AlertLevelOptions.Green:                      g.DrawImageUnscaled(icong' icong.Width/-2' icong.Height/-2);                      break;                  case AlertLevelOptions.Orange:                      g.DrawImageUnscaled(icono' icono.Width/-2' icono.Height/-2);                      break;                  case AlertLevelOptions.Red:                      g.DrawImageUnscaled(iconr' iconr.Width/-2' iconr.Height/-2);                      break;              }
Magic Number,MissionPlanner.Maps,GMapMarkerADSBPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerADSBPlane.cs,OnRender,The following statement contains a magic number: switch (AlertLevel)              {                  case AlertLevelOptions.Green:                      g.DrawImageUnscaled(icong' icong.Width/-2' icong.Height/-2);                      break;                  case AlertLevelOptions.Orange:                      g.DrawImageUnscaled(icono' icono.Width/-2' icono.Height/-2);                      break;                  case AlertLevelOptions.Red:                      g.DrawImageUnscaled(iconr' iconr.Width/-2' iconr.Height/-2);                      break;              }
Magic Number,MissionPlanner.Maps,GMapMarkerADSBPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerADSBPlane.cs,OnRender,The following statement contains a magic number: switch (AlertLevel)              {                  case AlertLevelOptions.Green:                      g.DrawImageUnscaled(icong' icong.Width/-2' icong.Height/-2);                      break;                  case AlertLevelOptions.Orange:                      g.DrawImageUnscaled(icono' icono.Width/-2' icono.Height/-2);                      break;                  case AlertLevelOptions.Red:                      g.DrawImageUnscaled(iconr' iconr.Width/-2' iconr.Height/-2);                      break;              }
Magic Number,MissionPlanner.Maps,GMapMarkerADSBPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerADSBPlane.cs,OnRender,The following statement contains a magic number: switch (AlertLevel)              {                  case AlertLevelOptions.Green:                      g.DrawImageUnscaled(icong' icong.Width/-2' icong.Height/-2);                      break;                  case AlertLevelOptions.Orange:                      g.DrawImageUnscaled(icono' icono.Width/-2' icono.Height/-2);                      break;                  case AlertLevelOptions.Red:                      g.DrawImageUnscaled(iconr' iconr.Width/-2' iconr.Height/-2);                      break;              }
Magic Number,MissionPlanner.Maps,GMapMarkerADSBPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerADSBPlane.cs,OnRender,The following statement contains a magic number: switch (AlertLevel)              {                  case AlertLevelOptions.Green:                      g.DrawImageUnscaled(icong' icong.Width/-2' icong.Height/-2);                      break;                  case AlertLevelOptions.Orange:                      g.DrawImageUnscaled(icono' icono.Width/-2' icono.Height/-2);                      break;                  case AlertLevelOptions.Red:                      g.DrawImageUnscaled(iconr' iconr.Width/-2' iconr.Height/-2);                      break;              }
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,GMapMarkerAirport,The following statement contains a magic number: wprad = 9000;
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,GMapMarkerAirport,The following statement contains a magic number: p.Lng < -25
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,GMapMarkerAirport,The following statement contains a magic number: wprad = 5559;
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,GMapMarkerAirport,The following statement contains a magic number: p.Lat < -10 && p.Lng > 109 && p.Lng < 180
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,GMapMarkerAirport,The following statement contains a magic number: p.Lat < -10 && p.Lng > 109 && p.Lng < 180
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,GMapMarkerAirport,The following statement contains a magic number: p.Lat < -10 && p.Lng > 109 && p.Lng < 180
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,GMapMarkerAirport,The following statement contains a magic number: Size = new System.Drawing.Size(50' 50);
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,GMapMarkerAirport,The following statement contains a magic number: Size = new System.Drawing.Size(50' 50);
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,GMapMarkerAirport,The following statement contains a magic number: Offset = new System.Drawing.Point(-Size.Width/2' -Size.Height/2);
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,GMapMarkerAirport,The following statement contains a magic number: Offset = new System.Drawing.Point(-Size.Width/2' -Size.Height/2);
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,OnRender,The following statement contains a magic number: double width =                  (Overlay.Control.MapProvider.Projection.GetDistance(Overlay.Control.FromLocalToLatLng(0' 0)'                      Overlay.Control.FromLocalToLatLng(Overlay.Control.Width' 0))*1000.0);
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,OnRender,The following statement contains a magic number: double height =                  (Overlay.Control.MapProvider.Projection.GetDistance(Overlay.Control.FromLocalToLatLng(0' 0)'                      Overlay.Control.FromLocalToLatLng(Overlay.Control.Height' 0))*1000.0);
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,OnRender,The following statement contains a magic number: GPoint loc = new GPoint((int) (LocalPosition.X - (m2pixelwidth*wprad*2))' LocalPosition.Y);
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,OnRender,The following statement contains a magic number: int x = LocalPosition.X - Offset.X - (int) (Math.Abs(loc.X - LocalPosition.X)/2);
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,OnRender,The following statement contains a magic number: int y = LocalPosition.Y - Offset.Y - (int) Math.Abs(loc.X - LocalPosition.X)/2;
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,OnRender,The following statement contains a magic number: g.FillPie(new SolidBrush(Color.FromArgb(25' Color.Red))' x' y' widtharc' heightarc' 0' 360);
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,OnRender,The following statement contains a magic number: g.FillPie(new SolidBrush(Color.FromArgb(25' Color.Red))' x' y' widtharc' heightarc' 0' 360);
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,OnRender,The following statement contains a magic number: widtharc > 0 && widtharc < 200000000 && Overlay.Control.Zoom > 3
Magic Number,MissionPlanner.Maps,GMapMarkerAirport,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAirport.cs,OnRender,The following statement contains a magic number: widtharc > 0 && widtharc < 200000000 && Overlay.Control.Zoom > 3
Magic Number,MissionPlanner.Maps,GMapMarkerAntennaTracker,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAntennaTracker.cs,OnRender,The following statement contains a magic number: int length = 500;
Magic Number,MissionPlanner.Maps,GMapMarkerAntennaTracker,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAntennaTracker.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f' (float) Math.Cos((heading - 90)*MathHelper.deg2rad)*length'                      (float) Math.Sin((heading - 90)*MathHelper.deg2rad)*length);
Magic Number,MissionPlanner.Maps,GMapMarkerAntennaTracker,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAntennaTracker.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f' (float) Math.Cos((heading - 90)*MathHelper.deg2rad)*length'                      (float) Math.Sin((heading - 90)*MathHelper.deg2rad)*length);
Magic Number,MissionPlanner.Maps,GMapMarkerAntennaTracker,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAntennaTracker.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f' (float) Math.Cos((heading - 90)*MathHelper.deg2rad)*length'                      (float) Math.Sin((heading - 90)*MathHelper.deg2rad)*length);
Magic Number,MissionPlanner.Maps,GMapMarkerAntennaTracker,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAntennaTracker.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f' (float) Math.Cos((target - 90)*MathHelper.deg2rad)*length'                      (float) Math.Sin((target - 90)*MathHelper.deg2rad)*length);
Magic Number,MissionPlanner.Maps,GMapMarkerAntennaTracker,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAntennaTracker.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f' (float) Math.Cos((target - 90)*MathHelper.deg2rad)*length'                      (float) Math.Sin((target - 90)*MathHelper.deg2rad)*length);
Magic Number,MissionPlanner.Maps,GMapMarkerAntennaTracker,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAntennaTracker.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f' (float) Math.Cos((target - 90)*MathHelper.deg2rad)*length'                      (float) Math.Sin((target - 90)*MathHelper.deg2rad)*length);
Magic Number,MissionPlanner.Maps,GMapMarkerAntennaTracker,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAntennaTracker.cs,OnRender,The following statement contains a magic number: g.DrawImage(icon' -20' -20' 40' 40);
Magic Number,MissionPlanner.Maps,GMapMarkerAntennaTracker,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAntennaTracker.cs,OnRender,The following statement contains a magic number: g.DrawImage(icon' -20' -20' 40' 40);
Magic Number,MissionPlanner.Maps,GMapMarkerAntennaTracker,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAntennaTracker.cs,OnRender,The following statement contains a magic number: g.DrawImage(icon' -20' -20' 40' 40);
Magic Number,MissionPlanner.Maps,GMapMarkerAntennaTracker,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerAntennaTracker.cs,OnRender,The following statement contains a magic number: g.DrawImage(icon' -20' -20' 40' 40);
Magic Number,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Green' 2)' 0.0f' 0.0f'                      (float) Math.Cos((nav_bearing - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((nav_bearing - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Green' 2)' 0.0f' 0.0f'                      (float) Math.Cos((nav_bearing - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((nav_bearing - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Green' 2)' 0.0f' 0.0f'                      (float) Math.Cos((nav_bearing - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((nav_bearing - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(global::MissionPlanner.Maps.Resources.boat'                  Size.Width / -2'                  Size.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerBoat,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerBoat.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(global::MissionPlanner.Maps.Resources.boat'                  Size.Width / -2'                  Size.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,GMapMarkerDistance,The following statement contains a magic number: Size = new System.Drawing.Size(50' 50);
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,GMapMarkerDistance,The following statement contains a magic number: Size = new System.Drawing.Size(50' 50);
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,GMapMarkerDistance,The following statement contains a magic number: Offset = new System.Drawing.Point(-Size.Width / 2' -Size.Height / 2);
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,GMapMarkerDistance,The following statement contains a magic number: Offset = new System.Drawing.Point(-Size.Width / 2' -Size.Height / 2);
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,OnRender,The following statement contains a magic number: double width =                  (Overlay.Control.MapProvider.Projection.GetDistance(Overlay.Control.FromLocalToLatLng(0' 0)'                      Overlay.Control.FromLocalToLatLng(Overlay.Control.Width' 0)) * 1000.0);
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,OnRender,The following statement contains a magic number: double height =                  (Overlay.Control.MapProvider.Projection.GetDistance(Overlay.Control.FromLocalToLatLng(0' 0)'                      Overlay.Control.FromLocalToLatLng(Overlay.Control.Height' 0)) * 1000.0);
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,OnRender,The following statement contains a magic number: GPoint loc = new GPoint((int)(LocalPosition.X - (m2pixelwidth * wprad * 2))' LocalPosition.Y);
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,OnRender,The following statement contains a magic number: GPoint loc2 = new GPoint((int)(LocalPosition.X - (m2pixelwidth * wprad * tolerance * 2))' LocalPosition.Y);
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,OnRender,The following statement contains a magic number: int x = LocalPosition.X - Offset.X - (int)(Math.Abs(loc.X - LocalPosition.X) / 2);
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,OnRender,The following statement contains a magic number: int y = LocalPosition.Y - Offset.Y - (int)Math.Abs(loc.X - LocalPosition.X) / 2;
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,OnRender,The following statement contains a magic number: int x2 = LocalPosition.X - Offset.X - (int)(Math.Abs(loc2.X - LocalPosition.X) / 2);
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,OnRender,The following statement contains a magic number: int y2 = LocalPosition.Y - Offset.Y - (int)Math.Abs(loc2.X - LocalPosition.X) / 2;
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,OnRender,The following statement contains a magic number: g.DrawArc(Pen' new System.Drawing.Rectangle(x' y' widtharc' heightarc)' 0' 360);
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,OnRender,The following statement contains a magic number: widtharc > 0 && widtharc < 10000
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,OnRender,The following statement contains a magic number: g.DrawArc(Pen2' new System.Drawing.Rectangle(x2' y2' widtharc2' heightarc2)' 0' 360);
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,OnRender,The following statement contains a magic number: widtharc2 > 0 && widtharc2 < 10000 && tolerance != 0
Magic Number,MissionPlanner.Maps,GMapMarkerDistance,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerDistance.cs,OnRender,The following statement contains a magic number: Overlay.Control.Zoom > 3
Magic Number,MissionPlanner.Maps,GMapMarkerElevation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerElevation.cs,GMapMarkerElevation,The following statement contains a magic number: int[] pixels = new int[(bmData.Stride/4) * bmData.Height];
Magic Number,MissionPlanner.Maps,GMapMarkerElevation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerElevation.cs,GMapMarkerElevation,The following statement contains a magic number: pixels[(y * (bmData.Stride/4) + x)] = ConvertColor(imageData[x' y]);
Magic Number,MissionPlanner.Maps,GMapMarkerElevation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerElevation.cs,GMapMarkerElevation,The following statement contains a magic number: System.Runtime.InteropServices.Marshal.Copy(pixels' 0' bmData.Scan0' (bmData.Stride/4) * bmData.Height);
Magic Number,MissionPlanner.Maps,GMapMarkerElevation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerElevation.cs,GMapMarkerElevation,The following statement contains a magic number: pal.Entries[i] = Color.FromArgb((int)100' bmp.Palette.Entries[i].R' bmp.Palette.Entries[i].G' bmp.Palette.Entries[i].B);
Magic Number,MissionPlanner.Maps,GMapMarkerElevation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerElevation.cs,GMapMarkerElevation,The following statement contains a magic number: i < 256
Magic Number,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon' icon.Width / -2 + 2' icon.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon' icon.Width / -2 + 2' icon.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerHeli,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerHeli.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon' icon.Width / -2 + 2' icon.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,OnRender,The following statement contains a magic number: colorbrushs[a] = new SolidBrush(Color.FromArgb(140' color1.R' color1.G' color1.B));
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,OnRender,The following statement contains a magic number: double width =                  (Overlay.Control.MapProvider.Projection.GetDistance(Overlay.Control.FromLocalToLatLng(0' 0)'                      Overlay.Control.FromLocalToLatLng(Overlay.Control.Width' 0))*1000.0);
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,OnRender,The following statement contains a magic number: Rect screenRect = new Rect(Overlay.Control.Width/-2' Overlay.Control.Height/-2' Overlay.Control.Width'                  Overlay.Control.Height);
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,OnRender,The following statement contains a magic number: Rect screenRect = new Rect(Overlay.Control.Width/-2' Overlay.Control.Height/-2' Overlay.Control.Width'                  Overlay.Control.Height);
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,OnRender,The following statement contains a magic number: var col = Math.Min(pg.Value - 1' 7);
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,OnRender,The following statement contains a magic number: var widthc = 5*m2pixelwidth;
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,OnRender,The following statement contains a magic number: var halfwidthc = widthc/2.0f;
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,OnRender,The following statement contains a magic number: g.FillPie(coloruse' (float) (p.X - halfwidthc)' (float) (p.Y - halfwidthc)' (float) (widthc)'                      (float) (widthc)' 0' 360);
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,drawLegend,The following statement contains a magic number: double width = Overlay.Control.MapProvider.Projection.GetDistance(tl' tr)*1000.0;
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,drawLegend,The following statement contains a magic number: var widthc = 20;
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,drawLegend,The following statement contains a magic number: var halfwidthc = widthc/2.0f;
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,drawLegend,The following statement contains a magic number: GPoint p = new GPoint(20' (long) (100 + a*(widthc + 5)));
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,drawLegend,The following statement contains a magic number: GPoint p = new GPoint(20' (long) (100 + a*(widthc + 5)));
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,drawLegend,The following statement contains a magic number: GPoint p = new GPoint(20' (long) (100 + a*(widthc + 5)));
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,drawLegend,The following statement contains a magic number: g.FillPie(brush' (float) (p.X - halfwidthc)' (float) (p.Y - halfwidthc)' (float) (widthc)'                          (float) (widthc)' 0' 360);
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,generateCoverageAll,The following statement contains a magic number: var p = new PointLatLng(Math.Round(lat' 4)' Math.Round(lng' 4));
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,generateCoverageAll,The following statement contains a magic number: var p = new PointLatLng(Math.Round(lat' 4)' Math.Round(lng' 4));
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,generateCoverageFP,The following statement contains a magic number: var p = new PointLatLng(Math.Round(lat' 4)' Math.Round(lng' 4));
Magic Number,MissionPlanner.Maps,GMapMarkerOverlapCount,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerOverlapCount.cs,generateCoverageFP,The following statement contains a magic number: var p = new PointLatLng(Math.Round(lat' 4)' Math.Round(lng' 4));
Magic Number,MissionPlanner.Maps,GMapMarkerPhoto,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPhoto.cs,GMapMarkerPhoto,The following statement contains a magic number: Offset = new Point(-localcache1.Width/2' -localcache1.Height/2);
Magic Number,MissionPlanner.Maps,GMapMarkerPhoto,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPhoto.cs,GMapMarkerPhoto,The following statement contains a magic number: Offset = new Point(-localcache1.Width/2' -localcache1.Height/2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Green' 2)' 0.0f' 0.0f'                      (float) Math.Cos((nav_bearing - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((nav_bearing - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Green' 2)' 0.0f' 0.0f'                      (float) Math.Cos((nav_bearing - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((nav_bearing - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Green' 2)' 0.0f' 0.0f'                      (float) Math.Cos((nav_bearing - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((nav_bearing - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: float desired_lead_dist = 100;
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: double width =                          (Overlay.Control.MapProvider.Projection.GetDistance(Overlay.Control.FromLocalToLatLng(0' 0)'                               Overlay.Control.FromLocalToLatLng(Overlay.Control.Width' 0)) * 1000.0);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawArc(new Pen(Color.HotPink' 2)' p1' p2' Math.Abs(scaledradius) * 2'                              Math.Abs(scaledradius) * 2' cog' alpha);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawArc(new Pen(Color.HotPink' 2)' p1' p2' Math.Abs(scaledradius) * 2'                              Math.Abs(scaledradius) * 2' cog' alpha);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawArc(new Pen(Color.HotPink' 2)' p1' p2' Math.Abs(scaledradius) * 2'                              Math.Abs(scaledradius) * 2' cog' alpha);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon' icon.Width / -2' icon.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon' icon.Width / -2' icon.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon1' icon1.Width / -2' icon1.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon1' icon1.Width / -2' icon1.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon2' icon2.Width / -2' icon2.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon2' icon2.Width / -2' icon2.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: which == 2
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon3' icon3.Width / -2' icon3.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon3' icon3.Width / -2' icon3.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: which == 3
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon4' icon4.Width / -2' icon4.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon4' icon4.Width / -2' icon4.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: which == 4
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon5' icon5.Width / -2' icon5.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon5' icon5.Width / -2' icon5.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: which == 5
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon6' icon6.Width / -2' icon6.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon6' icon6.Width / -2' icon6.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerPlane.cs,OnRender,The following statement contains a magic number: which == 6
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon' icon.Width / -2 + 2' icon.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon' icon.Width / -2 + 2' icon.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon' icon.Width / -2 + 2' icon.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawString(sysid.ToString()' new Font(FontFamily.GenericMonospace' 15' FontStyle.Bold)' Brushes.Red' -8'                  -8);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawString(sysid.ToString()' new Font(FontFamily.GenericMonospace' 15' FontStyle.Bold)' Brushes.Red' -8'                  -8);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawString(sysid.ToString()' new Font(FontFamily.GenericMonospace' 15' FontStyle.Bold)' Brushes.Red' -8'                  -8);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: double width =                      (Overlay.Control.MapProvider.Projection.GetDistance(Overlay.Control.FromLocalToLatLng(0' 0)'                           Overlay.Control.FromLocalToLatLng(Overlay.Control.Width' 0)) * 1000.0);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: GPoint loc = new GPoint((int) (LocalPosition.X - (m2pixelwidth * warn * 2))' LocalPosition.Y);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawArc(Pens.Orange'                          new System.Drawing.Rectangle(                              LocalPosition.X - Offset.X - (int) (Math.Abs(loc.X - LocalPosition.X) / 2)'                              LocalPosition.Y - Offset.Y - (int) Math.Abs(loc.X - LocalPosition.X) / 2'                              (int) Math.Abs(loc.X - LocalPosition.X)' (int) Math.Abs(loc.X - LocalPosition.X))' 0'                          360);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawArc(Pens.Orange'                          new System.Drawing.Rectangle(                              LocalPosition.X - Offset.X - (int) (Math.Abs(loc.X - LocalPosition.X) / 2)'                              LocalPosition.Y - Offset.Y - (int) Math.Abs(loc.X - LocalPosition.X) / 2'                              (int) Math.Abs(loc.X - LocalPosition.X)' (int) Math.Abs(loc.X - LocalPosition.X))' 0'                          360);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawArc(Pens.Orange'                          new System.Drawing.Rectangle(                              LocalPosition.X - Offset.X - (int) (Math.Abs(loc.X - LocalPosition.X) / 2)'                              LocalPosition.Y - Offset.Y - (int) Math.Abs(loc.X - LocalPosition.X) / 2'                              (int) Math.Abs(loc.X - LocalPosition.X)' (int) Math.Abs(loc.X - LocalPosition.X))' 0'                          360);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: loc = new GPoint((int) (LocalPosition.X - (m2pixelwidth * danger * 2))' LocalPosition.Y);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawArc(Pens.Red'                          new System.Drawing.Rectangle(                              LocalPosition.X - Offset.X - (int) (Math.Abs(loc.X - LocalPosition.X) / 2)'                              LocalPosition.Y - Offset.Y - (int) Math.Abs(loc.X - LocalPosition.X) / 2'                              (int) Math.Abs(loc.X - LocalPosition.X)' (int) Math.Abs(loc.X - LocalPosition.X))' 0'                          360);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawArc(Pens.Red'                          new System.Drawing.Rectangle(                              LocalPosition.X - Offset.X - (int) (Math.Abs(loc.X - LocalPosition.X) / 2)'                              LocalPosition.Y - Offset.Y - (int) Math.Abs(loc.X - LocalPosition.X) / 2'                              (int) Math.Abs(loc.X - LocalPosition.X)' (int) Math.Abs(loc.X - LocalPosition.X))' 0'                          360);
Magic Number,MissionPlanner.Maps,GMapMarkerQuad,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerQuad.cs,OnRender,The following statement contains a magic number: g.DrawArc(Pens.Red'                          new System.Drawing.Rectangle(                              LocalPosition.X - Offset.X - (int) (Math.Abs(loc.X - LocalPosition.X) / 2)'                              LocalPosition.Y - Offset.Y - (int) Math.Abs(loc.X - LocalPosition.X) / 2'                              (int) Math.Abs(loc.X - LocalPosition.X)' (int) Math.Abs(loc.X - LocalPosition.X))' 0'                          360);
Magic Number,MissionPlanner.Maps,GMapMarkerRallyPt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRallyPt.cs,GMapMarkerRallyPt,The following statement contains a magic number: Offset = new Point(-10' -40);
Magic Number,MissionPlanner.Maps,GMapMarkerRallyPt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRallyPt.cs,GMapMarkerRallyPt,The following statement contains a magic number: Offset = new Point(-10' -40);
Magic Number,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float) Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float) Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Green' 2)' 0.0f' 0.0f'                      (float) Math.Cos((nav_bearing - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((nav_bearing - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Green' 2)' 0.0f' 0.0f'                      (float) Math.Cos((nav_bearing - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((nav_bearing - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Green' 2)' 0.0f' 0.0f'                      (float) Math.Cos((nav_bearing - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((nav_bearing - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float) Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float) Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float) Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(global::MissionPlanner.Maps.Resources.rover'                  Size.Width / -2'                  Size.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerRover,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRover.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(global::MissionPlanner.Maps.Resources.rover'                  Size.Width / -2'                  Size.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float)Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float)Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float)Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float)Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float)Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float)Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float)Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float)Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float)Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float)Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float)Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float)Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon' icon.Width / -2 + 2' icon.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon' icon.Width / -2 + 2' icon.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(icon' icon.Width / -2 + 2' icon.Height / -2);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawString(sysid.ToString()' new Font(FontFamily.GenericMonospace' 15' FontStyle.Bold)' Brushes.Red' -8'                  -8);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawString(sysid.ToString()' new Font(FontFamily.GenericMonospace' 15' FontStyle.Bold)' Brushes.Red' -8'                  -8);
Magic Number,MissionPlanner.Maps,GMapMarkerSingle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSingle.cs,OnRender,The following statement contains a magic number: g.DrawString(sysid.ToString()' new Font(FontFamily.GenericMonospace' 15' FontStyle.Bold)' Brushes.Red' -8'                  -8);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float)Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float)Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float)Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float)Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Red' 2)' 0.0f' 0.0f'                          (float)Math.Cos((heading - 90) * MathHelper.deg2rad) * length'                          (float)Math.Sin((heading - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Green' 2)' 0.0f' 0.0f'                      (float)Math.Cos((nav_bearing - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((nav_bearing - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Green' 2)' 0.0f' 0.0f'                      (float)Math.Cos((nav_bearing - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((nav_bearing - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Green' 2)' 0.0f' 0.0f'                      (float)Math.Cos((nav_bearing - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((nav_bearing - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float)Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float)Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Black' 2)' 0.0f' 0.0f'                      (float)Math.Cos((cog - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((cog - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float)Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float)Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawLine(new Pen(Color.Orange' 2)' 0.0f' 0.0f'                      (float)Math.Cos((target - 90) * MathHelper.deg2rad) * length'                      (float)Math.Sin((target - 90) * MathHelper.deg2rad) * length);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(imagecache' 59/-2' 59/-2);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(imagecache' 59/-2' 59/-2);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(imagecache' 59/-2' 59/-2);
Magic Number,MissionPlanner.Maps,GMapMarkerSub,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerSub.cs,OnRender,The following statement contains a magic number: g.DrawImageUnscaled(imagecache' 59/-2' 59/-2);
Magic Number,MissionPlanner.Maps,GMapMarkerWP,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerWP.cs,GMapMarkerWP,The following statement contains a magic number: Bitmap temp = new Bitmap(100'40' PixelFormat.Format32bppArgb);
Magic Number,MissionPlanner.Maps,GMapMarkerWP,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerWP.cs,GMapMarkerWP,The following statement contains a magic number: Bitmap temp = new Bitmap(100'40' PixelFormat.Format32bppArgb);
Magic Number,MissionPlanner.Maps,GMapMarkerWP,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerWP.cs,OnRender,The following statement contains a magic number: g.DrawArc(Pens.Red' new Rectangle(this.LocalPosition' this.Size)' 0' 360);
Magic Number,MissionPlanner.Maps,GMapMarkerWP,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerWP.cs,OnRender,The following statement contains a magic number: var midw = LocalPosition.X + 10;
Magic Number,MissionPlanner.Maps,GMapMarkerWP,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerWP.cs,OnRender,The following statement contains a magic number: var midh = LocalPosition.Y + 3;
Magic Number,MissionPlanner.Maps,GMapMarkerWP,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerWP.cs,OnRender,The following statement contains a magic number: midw -= 4;
Magic Number,MissionPlanner.Maps,GMapMarkerWP,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerWP.cs,OnRender,The following statement contains a magic number: txtsize.Width > 15
Magic Number,MissionPlanner.Maps,GMapMarkerWP,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerWP.cs,OnRender,The following statement contains a magic number: Overlay.Control.Zoom> 16 || IsMouseOver
Magic Number,MissionPlanner.Maps,Japan,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan.cs,Japan,The following statement contains a magic number: MaxZoom = 22;
Magic Number,MissionPlanner.Maps,Japan,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan.cs,Japan,The following statement contains a magic number: MinZoom = 2;
Magic Number,MissionPlanner.Maps,Japan_1974,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1974.cs,Japan_1974,The following statement contains a magic number: MaxZoom = 22;
Magic Number,MissionPlanner.Maps,Japan_1974,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1974.cs,Japan_1974,The following statement contains a magic number: MinZoom = 2;
Magic Number,MissionPlanner.Maps,Japan_1974,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1974.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 10 || zoom > 17
Magic Number,MissionPlanner.Maps,Japan_1974,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1974.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 10 || zoom > 17
Magic Number,MissionPlanner.Maps,Japan_1979,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1979.cs,Japan_1979,The following statement contains a magic number: MaxZoom = 22;
Magic Number,MissionPlanner.Maps,Japan_1979,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1979.cs,Japan_1979,The following statement contains a magic number: MinZoom = 2;
Magic Number,MissionPlanner.Maps,Japan_1979,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1979.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 10 || zoom > 17
Magic Number,MissionPlanner.Maps,Japan_1979,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1979.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 10 || zoom > 17
Magic Number,MissionPlanner.Maps,Japan_1984,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1984.cs,Japan_1984,The following statement contains a magic number: MaxZoom = 22;
Magic Number,MissionPlanner.Maps,Japan_1984,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1984.cs,Japan_1984,The following statement contains a magic number: MinZoom = 2;
Magic Number,MissionPlanner.Maps,Japan_1984,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1984.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 10 || zoom > 17
Magic Number,MissionPlanner.Maps,Japan_1984,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1984.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 10 || zoom > 17
Magic Number,MissionPlanner.Maps,Japan_1988,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1988.cs,Japan_1988,The following statement contains a magic number: MaxZoom = 22;
Magic Number,MissionPlanner.Maps,Japan_1988,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1988.cs,Japan_1988,The following statement contains a magic number: MinZoom = 2;
Magic Number,MissionPlanner.Maps,Japan_1988,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1988.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 10 || zoom > 17
Magic Number,MissionPlanner.Maps,Japan_1988,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_1988.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 10 || zoom > 17
Magic Number,MissionPlanner.Maps,Japan_Lake,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Lake.cs,Japan_Lake,The following statement contains a magic number: MaxZoom = 22;
Magic Number,MissionPlanner.Maps,Japan_Lake,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Lake.cs,Japan_Lake,The following statement contains a magic number: MinZoom = 2;
Magic Number,MissionPlanner.Maps,Japan_Lake,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Lake.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 16 || zoom > 17
Magic Number,MissionPlanner.Maps,Japan_Lake,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Lake.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 16 || zoom > 17
Magic Number,MissionPlanner.Maps,Japan_Relief,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Relief.cs,Japan_Relief,The following statement contains a magic number: MaxZoom = 22;
Magic Number,MissionPlanner.Maps,Japan_Relief,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Relief.cs,Japan_Relief,The following statement contains a magic number: MinZoom = 2;
Magic Number,MissionPlanner.Maps,Japan_Relief,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Relief.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 5 || zoom > 15
Magic Number,MissionPlanner.Maps,Japan_Relief,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Relief.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 5 || zoom > 15
Magic Number,MissionPlanner.Maps,Japan_Sea,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Sea.cs,Japan_Sea,The following statement contains a magic number: MaxZoom = 22;
Magic Number,MissionPlanner.Maps,Japan_Sea,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Sea.cs,Japan_Sea,The following statement contains a magic number: MinZoom = 2;
Magic Number,MissionPlanner.Maps,Japan_Sea,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Sea.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 14 || zoom > 16
Magic Number,MissionPlanner.Maps,Japan_Sea,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Sea.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 14 || zoom > 16
Magic Number,MissionPlanner.Maps,Japan_Slopezone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Slopezone.cs,Japan_Slopezone,The following statement contains a magic number: MaxZoom = 22;
Magic Number,MissionPlanner.Maps,Japan_Slopezone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Slopezone.cs,Japan_Slopezone,The following statement contains a magic number: MinZoom = 2;
Magic Number,MissionPlanner.Maps,Japan_Slopezone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Slopezone.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 3 || zoom > 15
Magic Number,MissionPlanner.Maps,Japan_Slopezone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Japan_Slopezone.cs,MakeTileImageUrl,The following statement contains a magic number: zoom < 3 || zoom > 15
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,Update,The following statement contains a magic number: GMapMarkerDistance home_kmleft_marker = new GMapMarkerDistance(HomeLocation' battery_kmleft * 1000.0' Settings.Instance.GetFloat("Propagation_Tolerance"));
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,Update,The following statement contains a magic number: GMapMarkerDistance drone_kmleft_marker = new GMapMarkerDistance(Location' battery_kmleft * 1000.0' Settings.Instance.GetFloat("Propagation_Tolerance"));
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: var res = Settings.Instance.GetInt32("Propagation_Resolution"' 4);
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: var tl = gMapControl1.FromLocalToLatLng(-extend / 2' -extend / 2);
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: var tl = gMapControl1.FromLocalToLatLng(-extend / 2' -extend / 2);
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: var rb = gMapControl1.FromLocalToLatLng(width + extend / 2'                                      height + extend / 2);
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: var rb = gMapControl1.FromLocalToLatLng(width + extend / 2'                                      height + extend / 2);
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                      Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' po' y =>                                      {                                          if (zoom != gMapControl1.Zoom || center != gMapControl1.Position)                                          {                                              center = gMapControl1.Position;                                              cts.Cancel();                                          }                                            if (cts.IsCancellationRequested) return;                                          for (var x = res / 2; x < width + extend - res; x += res)                                          {                                              if (cts.IsCancellationRequested) return;                                              var lnglat = gMapControl1.FromLocalToLatLng(x - extend / 2' y - extend / 2);                                              var altresponce = srtm.getAltitude(lnglat.Lat' lnglat.Lng' zoom);                                              if (altresponce != srtm.altresponce.Invalid &&                                                  altresponce != srtm.altresponce.Ocean)                                              {                                                  alts[x' y] = altresponce.alt;                                                    if (ter_run)                                                  {                                                      if (max_alt < altresponce.alt) max_alt = altresponce.alt;                                                        if (min_alt > altresponce.alt) min_alt = altresponce.alt;                                                  }                                              }                                              else                                                  alts[x' y] = -65535;                                          }                                      });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                      Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' po' y =>                                      {                                          if (zoom != gMapControl1.Zoom || center != gMapControl1.Position)                                          {                                              center = gMapControl1.Position;                                              cts.Cancel();                                          }                                            if (cts.IsCancellationRequested) return;                                          for (var x = res / 2; x < width + extend - res; x += res)                                          {                                              if (cts.IsCancellationRequested) return;                                              var lnglat = gMapControl1.FromLocalToLatLng(x - extend / 2' y - extend / 2);                                              var altresponce = srtm.getAltitude(lnglat.Lat' lnglat.Lng' zoom);                                              if (altresponce != srtm.altresponce.Invalid &&                                                  altresponce != srtm.altresponce.Ocean)                                              {                                                  alts[x' y] = altresponce.alt;                                                    if (ter_run)                                                  {                                                      if (max_alt < altresponce.alt) max_alt = altresponce.alt;                                                        if (min_alt > altresponce.alt) min_alt = altresponce.alt;                                                  }                                              }                                              else                                                  alts[x' y] = -65535;                                          }                                      });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                      Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' po' y =>                                      {                                          if (zoom != gMapControl1.Zoom || center != gMapControl1.Position)                                          {                                              center = gMapControl1.Position;                                              cts.Cancel();                                          }                                            if (cts.IsCancellationRequested) return;                                          for (var x = res / 2; x < width + extend - res; x += res)                                          {                                              if (cts.IsCancellationRequested) return;                                              var lnglat = gMapControl1.FromLocalToLatLng(x - extend / 2' y - extend / 2);                                              var altresponce = srtm.getAltitude(lnglat.Lat' lnglat.Lng' zoom);                                              if (altresponce != srtm.altresponce.Invalid &&                                                  altresponce != srtm.altresponce.Ocean)                                              {                                                  alts[x' y] = altresponce.alt;                                                    if (ter_run)                                                  {                                                      if (max_alt < altresponce.alt) max_alt = altresponce.alt;                                                        if (min_alt > altresponce.alt) min_alt = altresponce.alt;                                                  }                                              }                                              else                                                  alts[x' y] = -65535;                                          }                                      });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                      Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' po' y =>                                      {                                          if (zoom != gMapControl1.Zoom || center != gMapControl1.Position)                                          {                                              center = gMapControl1.Position;                                              cts.Cancel();                                          }                                            if (cts.IsCancellationRequested) return;                                          for (var x = res / 2; x < width + extend - res; x += res)                                          {                                              if (cts.IsCancellationRequested) return;                                              var lnglat = gMapControl1.FromLocalToLatLng(x - extend / 2' y - extend / 2);                                              var altresponce = srtm.getAltitude(lnglat.Lat' lnglat.Lng' zoom);                                              if (altresponce != srtm.altresponce.Invalid &&                                                  altresponce != srtm.altresponce.Ocean)                                              {                                                  alts[x' y] = altresponce.alt;                                                    if (ter_run)                                                  {                                                      if (max_alt < altresponce.alt) max_alt = altresponce.alt;                                                        if (min_alt > altresponce.alt) min_alt = altresponce.alt;                                                  }                                              }                                              else                                                  alts[x' y] = -65535;                                          }                                      });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                      Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' po' y =>                                      {                                          if (zoom != gMapControl1.Zoom || center != gMapControl1.Position)                                          {                                              center = gMapControl1.Position;                                              cts.Cancel();                                          }                                            if (cts.IsCancellationRequested) return;                                          for (var x = res / 2; x < width + extend - res; x += res)                                          {                                              if (cts.IsCancellationRequested) return;                                              var lnglat = gMapControl1.FromLocalToLatLng(x - extend / 2' y - extend / 2);                                              var altresponce = srtm.getAltitude(lnglat.Lat' lnglat.Lng' zoom);                                              if (altresponce != srtm.altresponce.Invalid &&                                                  altresponce != srtm.altresponce.Ocean)                                              {                                                  alts[x' y] = altresponce.alt;                                                    if (ter_run)                                                  {                                                      if (max_alt < altresponce.alt) max_alt = altresponce.alt;                                                        if (min_alt > altresponce.alt) min_alt = altresponce.alt;                                                  }                                              }                                              else                                                  alts[x' y] = -65535;                                          }                                      });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                  Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' y =>                                  {                                      for (var x = res / 2; x < width + extend - res; x += res)                                      {                                          if (!ele_enabled)                                              return;                                            if (ele_run)                                          {                                              var rel = altasl - alts[x' y];                                                var normvalue = normalize(rel);                                                /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                          else if (ter_run)                                          {                                              var normvalue = normalize(alts[x' y]);                                              /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors2);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors2);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                      }                                  });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                  Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' y =>                                  {                                      for (var x = res / 2; x < width + extend - res; x += res)                                      {                                          if (!ele_enabled)                                              return;                                            if (ele_run)                                          {                                              var rel = altasl - alts[x' y];                                                var normvalue = normalize(rel);                                                /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                          else if (ter_run)                                          {                                              var normvalue = normalize(alts[x' y]);                                              /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors2);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors2);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                      }                                  });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                  Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' y =>                                  {                                      for (var x = res / 2; x < width + extend - res; x += res)                                      {                                          if (!ele_enabled)                                              return;                                            if (ele_run)                                          {                                              var rel = altasl - alts[x' y];                                                var normvalue = normalize(rel);                                                /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                          else if (ter_run)                                          {                                              var normvalue = normalize(alts[x' y]);                                              /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors2);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors2);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                      }                                  });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                  Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' y =>                                  {                                      for (var x = res / 2; x < width + extend - res; x += res)                                      {                                          if (!ele_enabled)                                              return;                                            if (ele_run)                                          {                                              var rel = altasl - alts[x' y];                                                var normvalue = normalize(rel);                                                /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                          else if (ter_run)                                          {                                              var normvalue = normalize(alts[x' y]);                                              /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors2);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors2);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                      }                                  });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                  Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' y =>                                  {                                      for (var x = res / 2; x < width + extend - res; x += res)                                      {                                          if (!ele_enabled)                                              return;                                            if (ele_run)                                          {                                              var rel = altasl - alts[x' y];                                                var normvalue = normalize(rel);                                                /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                          else if (ter_run)                                          {                                              var normvalue = normalize(alts[x' y]);                                              /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors2);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors2);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                      }                                  });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                  Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' y =>                                  {                                      for (var x = res / 2; x < width + extend - res; x += res)                                      {                                          if (!ele_enabled)                                              return;                                            if (ele_run)                                          {                                              var rel = altasl - alts[x' y];                                                var normvalue = normalize(rel);                                                /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                          else if (ter_run)                                          {                                              var normvalue = normalize(alts[x' y]);                                              /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors2);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors2);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                      }                                  });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                  Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' y =>                                  {                                      for (var x = res / 2; x < width + extend - res; x += res)                                      {                                          if (!ele_enabled)                                              return;                                            if (ele_run)                                          {                                              var rel = altasl - alts[x' y];                                                var normvalue = normalize(rel);                                                /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                          else if (ter_run)                                          {                                              var normvalue = normalize(alts[x' y]);                                              /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors2);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors2);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                      }                                  });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                  Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' y =>                                  {                                      for (var x = res / 2; x < width + extend - res; x += res)                                      {                                          if (!ele_enabled)                                              return;                                            if (ele_run)                                          {                                              var rel = altasl - alts[x' y];                                                var normvalue = normalize(rel);                                                /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                          else if (ter_run)                                          {                                              var normvalue = normalize(alts[x' y]);                                              /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors2);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors2);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                      }                                  });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                  Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' y =>                                  {                                      for (var x = res / 2; x < width + extend - res; x += res)                                      {                                          if (!ele_enabled)                                              return;                                            if (ele_run)                                          {                                              var rel = altasl - alts[x' y];                                                var normvalue = normalize(rel);                                                /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                          else if (ter_run)                                          {                                              var normvalue = normalize(alts[x' y]);                                              /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors2);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors2);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                      }                                  });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                  Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' y =>                                  {                                      for (var x = res / 2; x < width + extend - res; x += res)                                      {                                          if (!ele_enabled)                                              return;                                            if (ele_run)                                          {                                              var rel = altasl - alts[x' y];                                                var normvalue = normalize(rel);                                                /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                          else if (ter_run)                                          {                                              var normvalue = normalize(alts[x' y]);                                              /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors2);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors2);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                      }                                  });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                  Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' y =>                                  {                                      for (var x = res / 2; x < width + extend - res; x += res)                                      {                                          if (!ele_enabled)                                              return;                                            if (ele_run)                                          {                                              var rel = altasl - alts[x' y];                                                var normvalue = normalize(rel);                                                /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                          else if (ter_run)                                          {                                              var normvalue = normalize(alts[x' y]);                                              /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors2);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors2);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                      }                                  });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Parallel.ForEach(                                  Extensions.SteppedRange(res / 2' height + extend + 1 - res' res)' y =>                                  {                                      for (var x = res / 2; x < width + extend - res; x += res)                                      {                                          if (!ele_enabled)                                              return;                                            if (ele_run)                                          {                                              var rel = altasl - alts[x' y];                                                var normvalue = normalize(rel);                                                /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                          else if (ter_run)                                          {                                              var normvalue = normalize(alts[x' y]);                                              /*                                              //diagonal pattern                                              for (int i = -res / 2; i <= res / 2; i++)                                              {                                                  imageData[x + i' y + i] = Gradient_byte(normvalue'colors2);                                              }                                              */                                                var gradcolor = Gradient_byte(normvalue' colors2);                                                if (alts[x' y] < -999)                                                  gradcolor = 0;                                                //Square pattern                                              for (var i = -res / 2; i <= res / 2; i++)                                              for (var j = -res / 2; j <= res / 2; j++)                                                  imageData[x + i' y + j] = gradcolor;                                          }                                      }                                  });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: gMapControl1.Invoke((Action) delegate                              {                                  LineOfSight.Polygons.Add(new GMapPolygon(pointslist.Cast<PointLatLng>().ToList()' "LOS")                                  {                                      Fill = Brushes.Transparent'                                      Stroke = new Pen(Color.White' 3) {DashStyle = DashStyle.Dash}                                  });                                    if (LineOfSight.Polygons.Count > 1) LineOfSight.Polygons.RemoveAt(0);                              });
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,elevation_calc,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,MissionPlanner.Maps,Propagation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\Propagation.cs,normalize,The following statement contains a magic number: clearance = Settings.Instance.GetFloat("Propagation_Clearance"' 5);
Magic Number,MissionPlanner.Maps,WMSProvider,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WMSProvider.cs,WMSProvider,The following statement contains a magic number: MaxZoom = 22;
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,GMapMarkerRect,The following statement contains a magic number: Size = new System.Drawing.Size(50' 50);
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,GMapMarkerRect,The following statement contains a magic number: Size = new System.Drawing.Size(50' 50);
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,GMapMarkerRect,The following statement contains a magic number: Offset = new System.Drawing.Point(-Size.Width/2' -Size.Height/2 - 20);
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,GMapMarkerRect,The following statement contains a magic number: Offset = new System.Drawing.Point(-Size.Width/2' -Size.Height/2 - 20);
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,GMapMarkerRect,The following statement contains a magic number: Offset = new System.Drawing.Point(-Size.Width/2' -Size.Height/2 - 20);
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,OnRender,The following statement contains a magic number: double width =              (Overlay.Control.MapProvider.Projection.GetDistance(Overlay.Control.FromLocalToLatLng(0' 0)'                   Overlay.Control.FromLocalToLatLng(Overlay.Control.Width' 0))*1000.0);
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,OnRender,The following statement contains a magic number: double height =              (Overlay.Control.MapProvider.Projection.GetDistance(Overlay.Control.FromLocalToLatLng(0' 0)'                   Overlay.Control.FromLocalToLatLng(Overlay.Control.Height' 0))*1000.0);
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,OnRender,The following statement contains a magic number: GPoint loc = new GPoint((int) (LocalPosition.X - (m2pixelwidth*wprad*2))' LocalPosition.Y);
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,OnRender,The following statement contains a magic number: g.DrawArc(Pen'                      new System.Drawing.Rectangle(                          LocalPosition.X - Offset.X - (int)(Math.Abs(loc.X - LocalPosition.X) / 2)'                          LocalPosition.Y - Offset.Y - (int)Math.Abs(loc.X - LocalPosition.X) / 2'                          (int)Math.Abs(loc.X - LocalPosition.X)' (int)Math.Abs(loc.X - LocalPosition.X))' 0' 360);
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,OnRender,The following statement contains a magic number: g.DrawArc(Pen'                      new System.Drawing.Rectangle(                          LocalPosition.X - Offset.X - (int)(Math.Abs(loc.X - LocalPosition.X) / 2)'                          LocalPosition.Y - Offset.Y - (int)Math.Abs(loc.X - LocalPosition.X) / 2'                          (int)Math.Abs(loc.X - LocalPosition.X)' (int)Math.Abs(loc.X - LocalPosition.X))' 0' 360);
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,OnRender,The following statement contains a magic number: g.DrawArc(Pen'                      new System.Drawing.Rectangle(                          LocalPosition.X - Offset.X - (int)(Math.Abs(loc.X - LocalPosition.X) / 2)'                          LocalPosition.Y - Offset.Y - (int)Math.Abs(loc.X - LocalPosition.X) / 2'                          (int)Math.Abs(loc.X - LocalPosition.X)' (int)Math.Abs(loc.X - LocalPosition.X))' 0' 360);
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,OnRender,The following statement contains a magic number: g.FillPie(new SolidBrush(FillColor.Value)' new System.Drawing.Rectangle(                                  LocalPosition.X - Offset.X - (int)(Math.Abs(loc.X - LocalPosition.X) / 2)'                                  LocalPosition.Y - Offset.Y - (int)Math.Abs(loc.X - LocalPosition.X) / 2'                                  (int)Math.Abs(loc.X - LocalPosition.X)' (int)Math.Abs(loc.X - LocalPosition.X))' 0' 360);
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,OnRender,The following statement contains a magic number: g.FillPie(new SolidBrush(FillColor.Value)' new System.Drawing.Rectangle(                                  LocalPosition.X - Offset.X - (int)(Math.Abs(loc.X - LocalPosition.X) / 2)'                                  LocalPosition.Y - Offset.Y - (int)Math.Abs(loc.X - LocalPosition.X) / 2'                                  (int)Math.Abs(loc.X - LocalPosition.X)' (int)Math.Abs(loc.X - LocalPosition.X))' 0' 360);
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,OnRender,The following statement contains a magic number: g.FillPie(new SolidBrush(FillColor.Value)' new System.Drawing.Rectangle(                                  LocalPosition.X - Offset.X - (int)(Math.Abs(loc.X - LocalPosition.X) / 2)'                                  LocalPosition.Y - Offset.Y - (int)Math.Abs(loc.X - LocalPosition.X) / 2'                                  (int)Math.Abs(loc.X - LocalPosition.X)' (int)Math.Abs(loc.X - LocalPosition.X))' 0' 360);
Magic Number,GMap.NET.WindowsForms,GMapMarkerRect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerRect.cs,OnRender,The following statement contains a magic number: m2pixelheight > 0.5 && !double.IsInfinity(m2pixelheight)
Magic Number,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,CreateOverlay,The following statement contains a magic number: double maxlat = -180;
Magic Number,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,CreateOverlay,The following statement contains a magic number: double maxlong = -180;
Magic Number,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,CreateOverlay,The following statement contains a magic number: double minlat = 180;
Magic Number,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,CreateOverlay,The following statement contains a magic number: double minlong = 180;
Magic Number,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,GetHomeAlt,The following statement contains a magic number: return -999;
Magic Number,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,RegenerateWPRoute,The following statement contains a magic number: wproute.ForEach(x =>                 {                     counter++;                     if (counter == 1)                     {                         homepoint = x;                         return;                     }                     if (counter == 2)                     {                         firstpoint = x;                     }                     if (counter == count - 1)                     {                         lastpoint = x;                     }                     if (counter == count)                     {                         homeroute.Points.Add(lastpoint);                         homeroute.Points.Add(homepoint);                         homeroute.Points.Add(firstpoint);                         return;                     }                     route.Points.Add(x);                 });
Magic Number,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,RegenerateWPRoute,The following statement contains a magic number: homeroute.Stroke = new Pen(Color.Yellow' 2);
Magic Number,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,RegenerateWPRoute,The following statement contains a magic number: homepoint.GetDistance(lastpoint) < 5000 && homepoint.GetDistance(firstpoint) < 5000
Magic Number,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,RegenerateWPRoute,The following statement contains a magic number: homepoint.GetDistance(lastpoint) < 5000 && homepoint.GetDistance(firstpoint) < 5000
Magic Number,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,RegenerateWPRoute,The following statement contains a magic number: route.Stroke = new Pen(Color.Yellow' 4);
Magic Number,MissionPlanner.ArduPilot,WPOverlay,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\WPOverlay.cs,RegenerateWPRoute,The following statement contains a magic number: count > 2
Missing Default,MissionPlanner.Maps,GMapMarkerADSBPlane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Maps\GMapMarkerADSBPlane.cs,OnRender,The following switch statement is missing a default case: switch (AlertLevel)              {                  case AlertLevelOptions.Green:                      g.DrawImageUnscaled(icong' icong.Width/-2' icong.Height/-2);                      break;                  case AlertLevelOptions.Orange:                      g.DrawImageUnscaled(icono' icono.Width/-2' icono.Height/-2);                      break;                  case AlertLevelOptions.Red:                      g.DrawImageUnscaled(iconr' iconr.Width/-2' iconr.Height/-2);                      break;              }
