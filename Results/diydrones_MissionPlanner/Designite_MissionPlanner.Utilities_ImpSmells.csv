Implementation smell,Namespace,Class,File,Method,Description
Long Method,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The method has 110 lines of code.
Long Method,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The method has 171 lines of code.
Long Method,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The method has 114 lines of code.
Long Method,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_from_neighbor_umbrella,The method has 111 lines of code.
Long Method,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The method has 153 lines of code.
Long Method,MissionPlanner.Utilities,AutoConnect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AutoConnect.cs,Start,The method has 131 lines of code.
Long Method,MissionPlanner.Utilities,CollectionBuffer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CollectionBuffer.cs,setlinecount,The method has 139 lines of code.
Long Method,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The method has 319 lines of code.
Long Method,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,StartA,The method has 124 lines of code.
Long Method,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readRTPData,The method has 105 lines of code.
Long Method,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,calc,The method has 133 lines of code.
Long Method,MissionPlanner.Utilities,Privacy,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Privacy.cs,anonymise,The method has 136 lines of code.
Long Method,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The method has 180 lines of code.
Long Method,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The method has 141 lines of code.
Long Method,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The method has 156 lines of code.
Long Method,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The method has 146 lines of code.
Long Method,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The method has 159 lines of code.
Long Method,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The method has 141 lines of code.
Long Method,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The method has 156 lines of code.
Long Method,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The method has 116 lines of code.
Long Method,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The method has 243 lines of code.
Long Method,MissionPlanner.Utilities,tfritem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,GetPaths,The method has 142 lines of code.
Long Method,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The method has 105 lines of code.
Long Method,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The method has 110 lines of code.
Long Method,MissionPlanner.Utilities,Vector3<T>,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Vector3.cs,rotate,The method has 205 lines of code.
Long Method,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,ProcessBound,The method has 105 lines of code.
Long Method,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,AddPath,The method has 150 lines of code.
Long Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,IntersectEdges,The method has 190 lines of code.
Long Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,ProcessHorizontal,The method has 169 lines of code.
Long Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,JoinPoints,The method has 151 lines of code.
Long Method,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,DoOffset,The method has 162 lines of code.
Long Method,MissionPlanner.Log,DFLogScript,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,ProcessExpression,The method has 309 lines of code.
Long Method,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The method has 125 lines of code.
Long Method,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,processLine,The method has 160 lines of code.
Long Method,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKMLFirstPerson,The method has 105 lines of code.
Long Method,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The method has 155 lines of code.
Long Method,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The method has 296 lines of code.
Long Method,MissionPlanner.Log,LogSort,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogSort.cs,SortLogs,The method has 139 lines of code.
Long Method,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,ProcessLog,The method has 112 lines of code.
Long Method,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,tlog,The method has 108 lines of code.
Long Method,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,readGPSMsgInLog,The method has 139 lines of code.
Long Method,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,doworkCAM,The method has 158 lines of code.
Long Method,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,WriteCoordinatesToImage,The method has 106 lines of code.
Long Method,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,CreateReportFiles,The method has 268 lines of code.
Long Method,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,set_spline_origin_and_destination,The method has 107 lines of code.
Long Method,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The method has 288 lines of code.
Complex Method,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,Cyclomatic complexity of the method is 27
Complex Method,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,Cyclomatic complexity of the method is 18
Complex Method,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadUNLOCODE,Cyclomatic complexity of the method is 8
Complex Method,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_from_neighbor_umbrella,Cyclomatic complexity of the method is 22
Complex Method,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,Cyclomatic complexity of the method is 24
Complex Method,MissionPlanner.Utilities,AutoConnect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AutoConnect.cs,Start,Cyclomatic complexity of the method is 12
Complex Method,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ReadMessage,Cyclomatic complexity of the method is 11
Complex Method,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,Cyclomatic complexity of the method is 23
Complex Method,MissionPlanner.Utilities,CollectionBuffer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CollectionBuffer.cs,setlinecount,Cyclomatic complexity of the method is 21
Complex Method,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,update,Cyclomatic complexity of the method is 10
Complex Method,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,set_status,Cyclomatic complexity of the method is 20
Complex Method,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,run_sphere_fit,Cyclomatic complexity of the method is 14
Complex Method,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,run_ellipsoid_fit,Cyclomatic complexity of the method is 14
Complex Method,MissionPlanner.Utilities,DashWare,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DashWare.cs,Create,Cyclomatic complexity of the method is 9
Complex Method,MissionPlanner.Utilities,dfgpslag,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\dfgpslag.cs,getdata,Cyclomatic complexity of the method is 10
Complex Method,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,GetDFItemFromLine,Cyclomatic complexity of the method is 9
Complex Method,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,GetTimeGPS,Cyclomatic complexity of the method is 8
Complex Method,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,getFilefromNet,Cyclomatic complexity of the method is 10
Complex Method,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,Cyclomatic complexity of the method is 9
Complex Method,MissionPlanner.Utilities,dxf,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\dxf.cs,Read,Cyclomatic complexity of the method is 9
Complex Method,MissionPlanner.Utilities,EnumTranslator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\EnumTranslator.cs,Translate,Cyclomatic complexity of the method is 9
Complex Method,MissionPlanner.Utilities,Extensions,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Extensions.cs,ConvertToDouble,Cyclomatic complexity of the method is 16
Complex Method,MissionPlanner.Utilities,Extensions,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Extensions.cs,EvaluateMath,Cyclomatic complexity of the method is 16
Complex Method,MissionPlanner.Utilities,GeoTiff,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,getAltitude,Cyclomatic complexity of the method is 10
Complex Method,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateCorridor,Cyclomatic complexity of the method is 8
Complex Method,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,GenerateOffsetPath,Cyclomatic complexity of the method is 8
Complex Method,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateRotary,Cyclomatic complexity of the method is 8
Complex Method,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,Cyclomatic complexity of the method is 39
Complex Method,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,findClosestLine,Cyclomatic complexity of the method is 9
Complex Method,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readRTPData,Cyclomatic complexity of the method is 12
Complex Method,MissionPlanner.Utilities,mavgraph,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\mavgraph.cs,readmavgraphsxml,Cyclomatic complexity of the method is 11
Complex Method,MissionPlanner.Utilities,nmea,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\nmea.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,MissionPlanner.Utilities,ParameterMetaDataParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataParser.cs,GetParameterInformation,Cyclomatic complexity of the method is 10
Complex Method,MissionPlanner.Utilities,ParameterMetaDataParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataParser.cs,ParseKeyValuePairs,Cyclomatic complexity of the method is 13
Complex Method,MissionPlanner.Utilities,ParameterMetaDataParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataParser.cs,ReadDataFromAddress,Cyclomatic complexity of the method is 9
Complex Method,MissionPlanner.Utilities,ParameterMetaDataRepositoryAPMpdef,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataRepositoryAPMpdef.cs,GetParameterMetaData,Cyclomatic complexity of the method is 18
Complex Method,MissionPlanner.Utilities,ParameterMetaDataRepositoryPX4,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataRepositoryPX4.cs,ConvertMetaKey,Cyclomatic complexity of the method is 8
Complex Method,MissionPlanner.Utilities,ParameterMetaDataRepositoryPX4,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataRepositoryPX4.cs,GetParameterMetaData,Cyclomatic complexity of the method is 14
Complex Method,MissionPlanner.Utilities,ParamFile,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParamFile.cs,loadParamFile,Cyclomatic complexity of the method is 15
Complex Method,MissionPlanner.Utilities,Privacy,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Privacy.cs,anonymise,Cyclomatic complexity of the method is 15
Complex Method,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,Cyclomatic complexity of the method is 41
Complex Method,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,Cyclomatic complexity of the method is 9
Complex Method,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,Cyclomatic complexity of the method is 23
Complex Method,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,Cyclomatic complexity of the method is 27
Complex Method,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,Cyclomatic complexity of the method is 23
Complex Method,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,Cyclomatic complexity of the method is 27
Complex Method,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,Cyclomatic complexity of the method is 23
Complex Method,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,Cyclomatic complexity of the method is 27
Complex Method,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,Cyclomatic complexity of the method is 12
Complex Method,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,Cyclomatic complexity of the method is 29
Complex Method,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getListing,Cyclomatic complexity of the method is 12
Complex Method,MissionPlanner.Utilities,tfritem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,GetPaths,Cyclomatic complexity of the method is 23
Complex Method,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,Cyclomatic complexity of the method is 15
Complex Method,MissionPlanner.Utilities,Vector3<T>,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Vector3.cs,rotate,Cyclomatic complexity of the method is 26
Complex Method,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,FindNextLocMin,Cyclomatic complexity of the method is 8
Complex Method,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,ProcessBound,Cyclomatic complexity of the method is 30
Complex Method,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,AddPath,Cyclomatic complexity of the method is 35
Complex Method,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,GetBounds,Cyclomatic complexity of the method is 9
Complex Method,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,SwapPositionsInAEL,Cyclomatic complexity of the method is 14
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,ExecuteInternal,Cyclomatic complexity of the method is 11
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,InsertLocalMinimaIntoAEL,Cyclomatic complexity of the method is 19
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,IsContributing,Cyclomatic complexity of the method is 24
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,SetWindingCount,Cyclomatic complexity of the method is 18
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,SwapPositionsInSEL,Cyclomatic complexity of the method is 15
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,GetBottomPt,Cyclomatic complexity of the method is 10
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,GetLowermostRec,Cyclomatic complexity of the method is 10
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,AppendPolygon,Cyclomatic complexity of the method is 10
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,IntersectEdges,Cyclomatic complexity of the method is 45
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,ProcessHorizontal,Cyclomatic complexity of the method is 36
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,BuildIntersectList,Cyclomatic complexity of the method is 8
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,IntersectPoint,Cyclomatic complexity of the method is 12
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,ProcessEdgesAtTopOfScanbeam,Cyclomatic complexity of the method is 15
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,DoMaxima,Cyclomatic complexity of the method is 10
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,BuildResult2,Cyclomatic complexity of the method is 8
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,JoinHorz,Cyclomatic complexity of the method is 17
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,JoinPoints,Cyclomatic complexity of the method is 28
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,PointInPolygon,Cyclomatic complexity of the method is 13
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,JoinCommonEdges,Cyclomatic complexity of the method is 18
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,CleanPolygon,Cyclomatic complexity of the method is 10
Complex Method,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,Minkowski,Cyclomatic complexity of the method is 9
Complex Method,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,AddPath,Cyclomatic complexity of the method is 11
Complex Method,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,DoOffset,Cyclomatic complexity of the method is 31
Complex Method,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,OffsetPoint,Cyclomatic complexity of the method is 9
Complex Method,MissionPlanner.Comms,CommsSerialScan,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CommsSerialScan.cs,doread,Cyclomatic complexity of the method is 8
Complex Method,MissionPlanner.Log,DFLogScript,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,ProcessExpression,Cyclomatic complexity of the method is 60
Complex Method,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,Cyclomatic complexity of the method is 19
Complex Method,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,processLine,Cyclomatic complexity of the method is 25
Complex Method,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,Cyclomatic complexity of the method is 17
Complex Method,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,Cyclomatic complexity of the method is 18
Complex Method,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,ProcessLog,Cyclomatic complexity of the method is 16
Complex Method,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,tlog,Cyclomatic complexity of the method is 20
Complex Method,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,readGPSMsgInLog,Cyclomatic complexity of the method is 28
Complex Method,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,readCAMMsgInLog,Cyclomatic complexity of the method is 11
Complex Method,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,EstimateOffset,Cyclomatic complexity of the method is 8
Complex Method,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,doworkCAM,Cyclomatic complexity of the method is 14
Complex Method,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,IsPositive,Cyclomatic complexity of the method is 13
Complex Method,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,ToUnsigned,Cyclomatic complexity of the method is 12
Complex Method,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,ToInteger,Cyclomatic complexity of the method is 12
Complex Method,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,UnboxToLong,Cyclomatic complexity of the method is 12
Complex Method,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,ReplaceMetaCharsMatch,Cyclomatic complexity of the method is 10
Complex Method,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,Cyclomatic complexity of the method is 46
Complex Method,MissionPlanner.Warnings,CustomWarning,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Warnings\CustomWarning.cs,CheckValue,Cyclomatic complexity of the method is 14
Long Parameter List,MissionPlanner.Utilities,PointLatLngAltHdg,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,PointLatLngAltHdg,The method has 7 parameters. Parameters: lat' lng' alt' heading' speed' tag' time
Long Parameter List,MissionPlanner.Utilities,neighbor_umbrella,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,neighbor_umbrella,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,MissionPlanner.Utilities,ConnectionInfo,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AutoConnect.cs,ConnectionInfo,The method has 7 parameters. Parameters: label' enabled' port' protocol' format' direction' configstring
Long Parameter List,MissionPlanner.Utilities,dfgpslag,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\dfgpslag.cs,velocity_error,The method has 6 parameters. Parameters: timestamps' vel' gaccel' accel_indexes' imu_dt' shift
Long Parameter List,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,map,The method has 5 parameters. Parameters: x' in_min' in_max' out_min' out_max
Long Parameter List,MissionPlanner.Utilities,GeoTiff,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,map,The method has 5 parameters. Parameters: x' in_min' in_max' out_min' out_max
Long Parameter List,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateCorridorAsync,The method has 12 parameters. Parameters: polygon' altitude' distance' spacing' angle' overshoot1' overshoot2' startpos' shutter' minLaneSeparation' width' leadin
Long Parameter List,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateCorridor,The method has 12 parameters. Parameters: polygon' altitude' distance' spacing' angle' overshoot1' overshoot2' startpos' shutter' minLaneSeparation' width' leadin
Long Parameter List,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateRotaryAsync,The method has 12 parameters. Parameters: polygon' altitude' distance' spacing' angle' overshoot1' overshoot2' startpos' shutter' minLaneSeparation' leadin' HomeLocation
Long Parameter List,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateRotary,The method has 12 parameters. Parameters: polygon' altitude' distance' spacing' angle' overshoot1' overshoot2' startpos' shutter' minLaneSeparation' leadin' HomeLocation
Long Parameter List,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGridAsync,The method has 12 parameters. Parameters: polygon' altitude' distance' spacing' angle' overshoot1' overshoot2' startpos' shutter' minLaneSeparation' leadin' HomeLocation
Long Parameter List,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The method has 12 parameters. Parameters: polygon' altitude' distance' spacing' angle' overshoot1' overshoot2' startpos' shutter' minLaneSeparation' leadin' HomeLocation
Long Parameter List,MissionPlanner.Utilities,NativeMethods,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,gst_buffer_extract_dup,The method has 5 parameters. Parameters: raw' offset' size' dest' dest_size
Long Parameter List,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,calc,The method has 6 parameters. Parameters: plla' R' P' Y' hfov' vfov
Long Parameter List,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Reset,The method has 6 parameters. Parameters: qx' qv' qa' r' pd' ix
Long Parameter List,MissionPlanner.Utilities,MathHelper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Math.cs,map,The method has 5 parameters. Parameters: x' in_min' in_max' out_min' out_max
Long Parameter List,MissionPlanner.Utilities,MathHelper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Math.cs,mapConstrained,The method has 5 parameters. Parameters: x' in_min' in_max' out_min' out_max
Long Parameter List,MissionPlanner.Utilities,Matrix3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix3.cs,Matrix3,The method has 9 parameters. Parameters: a' b' c' d' e' f' g' h' i
Long Parameter List,MissionPlanner.Utilities,ParameterMetaDataParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataParser.cs,ParseGroupInformation,The method has 5 parameters. Parameters: fileContents' objXmlTextWriter' parameterLocation' parameterPrefix' vehicleType
Long Parameter List,MissionPlanner.Utilities,ParameterMetaDataParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataParser.cs,ParseParameterInformation,The method has 5 parameters. Parameters: fileContents' objXmlTextWriter' parameterPrefix' url' vehicleType
Long Parameter List,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The method has 5 parameters. Parameters: pos' vel' clock_err' clock_rate_err' tot
Long Parameter List,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,SightGen,The method has 5 parameters. Parameters: location' pointslist' alt' aircraftlocation' aircraft_alt
Long Parameter List,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,getSRTMAltPath,The method has 5 parameters. Parameters: list' triangle' carryon' up' down
Long Parameter List,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupBasePos,The method has 6 parameters. Parameters: port' basepos' surveyindur' surveyinacc' disable' movingbase
Long Parameter List,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,EarthRatesToBodyRates,The method has 6 parameters. Parameters: roll' pitch' yaw' rollRate' pitchRate' yawRate
Long Parameter List,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,EarthRatesToBodyRatesRyan,The method has 6 parameters. Parameters: roll' pitch' yaw' x' y' z
Long Parameter List,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,EarthRatesToBodyRatesMine,The method has 6 parameters. Parameters: roll' pitch' yaw' rollRate' pitchRate' yawRate
Long Parameter List,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,OGLtoBCBF,The method has 6 parameters. Parameters: phi' theta' psi' x' y' z
Long Parameter List,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,FLIGHTtoBCBF,The method has 5 parameters. Parameters: x' y' z' alpha' beta
Long Parameter List,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,gps_newpos,The method has 6 parameters. Parameters: lat' lon' bearing' distance' latitude' longitude
Long Parameter List,MissionPlanner.Utilities,vlcrender,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\vlcrender.cs,Setup,The method has 6 parameters. Parameters: opaque' chroma' width' height' pitches' lines
Long Parameter List,MissionPlanner.Utilities,XTermRBGColors,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\XTermRBGColors.cs,XTermRBGColors,The method has 5 parameters. Parameters: number' name' red' green' blue
Long Parameter List,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,SlopesEqual,The method has 5 parameters. Parameters: pt1' pt2' pt3' pt4' UseFullRange
Long Parameter List,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,GetOverlap,The method has 6 parameters. Parameters: a1' a2' b1' b2' Left' Right
Long Parameter List,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,JoinHorz,The method has 6 parameters. Parameters: op1' op1b' op2' op2b' Pt' DiscardLeft
Long Parameter List,System,CustomMessageBox,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CustomMessageBox.cs,Show,The method has 6 parameters. Parameters: text' caption' MessageBoxButtons' MessageBoxIcon' YesText' NoText
Long Parameter List,MissionPlanner.Log,DFLogScript,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,mag_heading_df,The method has 6 parameters. Parameters: MAG' ATT' declination' ofs' diagonals' offdiagonals
Long Parameter List,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,DoWrite,The method has 6 parameters. Parameters: fn' data' dataCell' param' mlList' seen
Long Parameter List,Simplify,Douglas,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fitCurve.cs,DouglasPeuckerReduction,The method has 5 parameters. Parameters: points' firstPoint' lastPoint' tolerance' pointIndexsToKeep
Long Parameter List,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,EstimateOffset,The method has 5 parameters. Parameters: logFile' dirWithImages' UseGpsorGPS2' usecam' AppendText
Long Parameter List,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,doworkGPSOFFSET,The method has 6 parameters. Parameters: logFile' dirWithImages' offset' UseGpsorGPS2' usecam' AppendText
Long Parameter List,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,WriteCoordinatesToImage,The method has 6 parameters. Parameters: Filename' dLat' dLong' alt' rootFolder' AppendText
Long Parameter List,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,CreateReportFiles,The method has 9 parameters. Parameters: listPhotosWithInfo' dirWithImages' offset' num_camerarotation' num_hfov' num_vfov' AppendText' GeoRefKML' usegpsalt
Long Parameter List,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,GenPhotoStationRecord,The method has 11 parameters. Parameters: swloctrim' imgname' lat' lng' alt' roll' pitch' yaw' imgwidth' imgheight' lastRecordN
Long Parameter List,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,getboundingbox,The method has 6 parameters. Parameters: centery' centerx' alt' angle' width' height
Long Parameter List,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,set_spline_origin_and_destination,The method has 5 parameters. Parameters: origin' destination' stopped_at_start' seg_end_type' next_destination
Long Parameter List,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,FormatOct,The method has 7 parameters. Parameters: NativeFormat' Alternate' FieldLength' FieldPrecision' Left2Right' Padding' Value
Long Parameter List,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,FormatHex,The method has 7 parameters. Parameters: NativeFormat' Alternate' FieldLength' FieldPrecision' Left2Right' Padding' Value
Long Parameter List,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,FormatNumber,The method has 9 parameters. Parameters: NativeFormat' Alternate' FieldLength' FieldPrecision' Left2Right' PositiveSign' PositiveSpace' Padding' Value
Long Identifier,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,,The length of the parameter COMPASS_CAL_NUM_ELLIPSOID_PARAMS is 32.
Long Identifier,MissionPlanner.Utilities,DigitalSky,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DigitalSky.cs,ListFlyPermission,The length of the parameter flyDronePermissionApplication_list is 34.
Long Identifier,MissionPlanner.Utilities,DigitalSky,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DigitalSky.cs,GetPermissionArtifact,The length of the parameter flyDronePermissionApplication_application is 41.
Long Identifier,MissionPlanner.Utilities,ParameterMetaDataRepositoryAPM,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataRepositoryAPM.cs,Reload,The length of the parameter paramMetaDataXMLFileNameBackup is 30.
Long Identifier,MissionPlanner.Utilities,ParameterMetaDataRepositoryPX4,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataRepositoryPX4.cs,Reload,The length of the parameter paramMetaDataXMLFileNameBackup is 30.
Long Statement,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The length of the statement  "                                altitude = (int)double.Parse(strArray[11]' CultureInfo.InvariantCulture);// Integer. Mode C Altitude relative to 1013 mb (29.92" Hg).  " is 133.
Long Statement,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The length of the statement  "                                UpdatePlanePosition(null' new PointLatLngAltHdg(lat' lon' altitude / 3.048' (float)plane.heading' -1 ' hex_ident' DateTime.Now)); " is 129.
Long Statement,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The length of the statement  "                                ((Plane)Planes[hex_ident]).heading = (int)double.Parse(strArray[13]' CultureInfo.InvariantCulture);//Integer. Ground track angle.  " is 129.
Long Statement,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ConvertHexStringToByteArray,The length of the statement  "                throw new ArgumentException(String.Format(CultureInfo.InvariantCulture' "The binary key cannot have an odd number of digits: {0}"' hexString)); " is 143.
Long Statement,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,pllalocal,The length of the statement  "                double num6 = Math.Floor((double)(latitude / denominator)) + Math.Floor((double)((0.5 + (this.modulo(latitude' denominator) / denominator)) - num5)); " is 149.
Long Statement,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,pllalocal,The length of the statement  "                double num11 = Math.Floor((double)(numerator / num9)) + Math.Floor((double)((0.5 + (this.modulo(numerator' num9) / num9)) - num10)); " is 132.
Long Statement,MissionPlanner.Utilities,AutoConnect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AutoConnect.cs,clientdatatcpvideo,The length of the statement  "                    connectionInfos.First(a => a.Enabled && a.Port == port && a.Protocol == ProtocolType.Tcp && a.Direction == Direction.Inbound) " is 125.
Long Statement,MissionPlanner.Utilities,CollectionBuffer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CollectionBuffer.cs,setlinecount,The length of the statement  "            // try get gps time - when a dfitem is created and no valid gpstime has been establish the messages are parsed to get a valid gpstime " is 133.
Long Statement,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,running,The length of the statement  "            return _status == compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_ONE || _status == compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_TWO; " is 132.
Long Statement,MissionPlanner.Utilities,dfgpslag,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\dfgpslag.cs,rotation_df,The length of the statement  "            r.from_euler(radians((Double)ATT.GetRaw("Roll"))' radians((Double)ATT.GetRaw("Pitch"))' radians((Double)ATT.GetRaw("Yaw"))); " is 124.
Long Statement,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateRotary,The length of the statement  "            clipperOffset.AddPath(utmpositions.Select(a => { return new ClipperLib.IntPoint(a.x * 1000.0' a.y * 1000.0); }).ToList()' ClipperLib.JoinType.jtMiter' ClipperLib.EndType.etClosedPolygon); " is 187.
Long Statement,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,StartA,The length of the statement  "                CustomMessageBox.Show("The incorrect exe architecture has been detected at " + gstlaunch + "\nPlease install gstreamer for the correct architecture"); " is 150.
Long Statement,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,StartA,The length of the statement  "                //@"videotestsrc ! video/x-raw' width=1280' height=720' framerate=30/1 ! x264enc speed-preset=1 threads=1 sliced-threads=1 mb-tree=0 rc-lookahead=0 sync-lookahead=0 bframes=0 ! rtph264pay ! application/x-rtp ! rtph264depay ! avdec_h264 ! videoconvert ! video/x-raw'format=BGRA ! appsink name=outsink"' " is 301.
Long Statement,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,StartA,The length of the statement  "                //@"-v udpsrc port=5601 buffer-size=300000 ! application/x-rtp ! rtph264depay ! avdec_h264 ! videoconvert ! video/x-raw'format=BGRA ! appsink name=outsink"' " is 156.
Long Statement,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,StartA,The length of the statement  "                //@"rtspsrc location=rtsp://192.168.1.252/video1 ! application/x-rtp ! rtph264depay ! avdec_h264 ! videoconvert ! video/x-raw'format=BGRA ! appsink name=outsink"' " is 162.
Long Statement,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,StartA,The length of the statement  "            //rtspsrc location=rtsp://192.168.1.21/live ! application/x-rtp ! rtph265depay ! avdec_h265 ! videoconvert ! video/x-raw'format=BGRA ! appsink name=outsink " is 155.
Long Statement,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,StartA,The length of the statement  "            var running = NativeMethods.gst_element_set_state(pipeline' GstState.GST_STATE_PLAYING) != GstStateChangeReturn.GST_STATE_CHANGE_FAILURE; " is 137.
Long Statement,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,StartA,The length of the statement  "            //var msg = GStreamer.gst_bus_timed_pop_filtered(bus' GStreamer.GST_CLOCK_TIME_NONE' GStreamer.GstMessageType.GST_MESSAGE_ERROR | GStreamer.GstMessageType.GST_MESSAGE_EOS); " is 172.
Long Statement,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,Start,The length of the statement  "                    //"-v udpsrc port=5600 buffer-size=300000 ! application/x-rtp ! rtph264depay ! avdec_h264 ! videoconvert ! video/x-raw'format=BGRA ! queue ! rtpvrawpay ! giosink location=\\\\\\\\.\\\\pipe\\\\gstreamer"); " is 204.
Long Statement,MissionPlanner.Utilities,ParameterMetaDataRepositoryPX4,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataRepositoryPX4.cs,Reload,The length of the statement  "            string paramMetaDataXMLFileName = String.Format("{0}{1}"' Settings.GetUserDataDirectory()' "ParameterFactMetaData.xml"); " is 120.
Long Statement,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,FromUTM,The length of the statement  "            GeoUtility.GeoSystem.UTM utm = new GeoUtility.GeoSystem.UTM(Math.Abs(zone)' x' y' zone < 0 ? GeoUtility.GeoSystem.Base.Geocentric.Hemisphere.South : GeoUtility.GeoSystem.Base.Geocentric.Hemisphere.North); " is 204.
Long Statement,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,ToUTM,The length of the statement  "            IProjectedCoordinateSystem utm = ProjectedCoordinateSystem.WGS84_UTM(Math.Abs(utmzone)' list[0].Lat < 0 ? false : true); " is 120.
Long Statement,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetBearing,The length of the statement  "            var x = Math.Cos(latitude1) * Math.Sin(latitude2) - Math.Sin(latitude1) * Math.Cos(latitude2) * Math.Cos(longitudeDifference); " is 126.
Long Statement,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance,The length of the statement  "            double num7 = Math.Pow(Math.Sin(num6 / 2.0)' 2.0) + ((Math.Cos(d) * Math.Cos(num3)) * Math.Pow(Math.Sin(num5 / 2.0)' 2.0)); " is 123.
Long Statement,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The length of the statement  "                //Console.WriteLine("> {0'4} {1'2} {2'2} {3'2} {4'2} {5'10} {6'2} {7'2}"' gpstime.Year' gpstime.Month'gpstime.Day' gpstime.Hour' gpstime.Minute' gpstime.Second + gpstime.Millisecond/1000.0' 0' nsat); " is 199.
Long Statement,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The length of the statement  "                        //Console.WriteLine("G{0'2} {1'13} {2'16} {3'30}"' ob.prn' ob.pr.ToString("0.000")'ob.cp.ToString("0.0000")' ob.snr.ToString("0.000")); " is 135.
Long Statement,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The length of the statement  "                //Console.WriteLine("> {0} {1} {2} {3'2} {4} {5} {6} {7}"' gpstime.Year' gpstime.Month' gpstime.Day'gpstime.Hour' gpstime.Minute' gpstime.Second + gpstime.Millisecond/1000.0' 0' nsat); " is 184.
Long Statement,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The length of the statement  "                        //   Console.WriteLine("G{0'2} {1'13} {2'15}0{3'15} {4'15}0{5'15}"' ob.prn' ob.pr.ToString("0.000")' ob.cp.ToString("0.000")' ob.snr.ToString("0.000")' " is 151.
Long Statement,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The length of the statement  "                Console.WriteLine("> {0} {1} {2} {3'2} {4} {5} {6} {7}"' gpstime.Year' gpstime.Month' gpstime.Day'gpstime.Hour' gpstime.Minute' gpstime.Second + gpstime.Millisecond/1000.0' 0' nsat); " is 182.
Long Statement,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The length of the statement  "                           Console.WriteLine("R{0'2} {1'13} {2'15}0{3'15} {4'15}0{5'15}"' ob.prn' ob.pr.ToString("0.000")' ob.cp.ToString("0.000")' ob.snr.ToString("0.000")' " is 146.
Long Statement,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The length of the statement  "                //Console.WriteLine("> {0'4} {1'2} {2'2} {3'2} {4'2} {5'10} {6'2} {7'2}"' gpstime.Year' gpstime.Month'gpstime.Day' gpstime.Hour' gpstime.Minute' gpstime.Second + gpstime.Millisecond/1000.0' 0' nsat); " is 199.
Long Statement,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The length of the statement  "                //Console.WriteLine("> {0'4} {1'2} {2'2} {3'2} {4'2} {5'10} {6'2} {7'2}"' gpstime.Year' gpstime.Month'gpstime.Day' gpstime.Hour' gpstime.Minute' gpstime.Second + gpstime.Millisecond/1000.0' 0' nsat); " is 199.
Long Statement,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The length of the statement  "                //Console.WriteLine("> {0'4} {1'2} {2'2} {3'2} {4'2} {5'10} {6'2} {7'2}"' gpstime.Year' gpstime.Month'gpstime.Day' gpstime.Hour' gpstime.Minute' gpstime.Second + gpstime.Millisecond/1000.0' 0' nsat); " is 199.
Long Statement,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The length of the statement  "                //Console.WriteLine("> {0'4} {1'2} {2'2} {3'2} {4'2} {5'10} {6'2} {7'2}"' gpstime.Year' gpstime.Month'gpstime.Day' gpstime.Hour' gpstime.Minute' gpstime.Second + gpstime.Millisecond/1000.0' 0' nsat); " is 199.
Long Statement,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The length of the statement  "                //Console.WriteLine("> {0'4} {1'2} {2'2} {3'2} {4'2} {5'10} {6'2} {7'2}"' gpstime.Year' gpstime.Month'gpstime.Day' gpstime.Hour' gpstime.Minute' gpstime.Second + gpstime.Millisecond/1000.0' 0' nsat); " is 199.
Long Statement,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The length of the statement  "                //Console.WriteLine("> {0'4} {1'2} {2'2} {3'2} {4'2} {5'10} {6'2} {7'2}"' gpstime.Year' gpstime.Month'gpstime.Day' gpstime.Hour' gpstime.Minute' gpstime.Second + gpstime.Millisecond/1000.0' 0' nsat); " is 199.
Long Statement,MissionPlanner.Utilities,Settings,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Settings.cs,GetDataDirectory,The length of the statement  "            var path = Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + Path.DirectorySeparatorChar + AppConfigName + " is 133.
Long Statement,MissionPlanner.Utilities,Settings,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Settings.cs,GetUserDataDirectory,The length of the statement  "            var path = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + Path.DirectorySeparatorChar + AppConfigName + " is 123.
Long Statement,MissionPlanner.Utilities,tfritem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,GetPaths,The length of the statement  "                //RLN27.576944W97.108611LN27.468056W96.961111LN27.322222W97.050000LN27.345833W97.088889LN27.439167W97.186944RLN27.672778W97.212222LN27.576944W97.108611LN27.533333W97.133333LN27.638333W97.237222RCN27.686333W97.294667R007.00" is 222.
Long Statement,MissionPlanner.Utilities,tfritem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,GetPaths,The length of the statement  "                            var point = new PointLatLngAlt(double.Parse(item.Groups[4].Value' CultureInfo.InvariantCulture)' double.Parse(item.Groups[6].Value' CultureInfo.InvariantCulture));" is 163.
Long Statement,MissionPlanner.Utilities,tfritem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,GetPaths,The length of the statement  "                            pointcent = new PointLatLngAlt(double.Parse(item.Groups[10].Value' CultureInfo.InvariantCulture)' double.Parse(item.Groups[12].Value' CultureInfo.InvariantCulture));" is 165.
Long Statement,MissionPlanner.Utilities,tfritem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,GetPaths,The length of the statement  "                            pointstart = new PointLatLngAlt(double.Parse(item.Groups[14].Value' CultureInfo.InvariantCulture)' double.Parse(item.Groups[16].Value' CultureInfo.InvariantCulture));" is 166.
Long Statement,MissionPlanner.Utilities,tfritem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,GetPaths,The length of the statement  "                            var point = new PointLatLngAlt(double.Parse(item.Groups[19].Value' CultureInfo.InvariantCulture)' double.Parse(item.Groups[21].Value' CultureInfo.InvariantCulture));" is 165.
Long Statement,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,OGLtoBCBF,The length of the statement  "            // THANKS TO GEORGE M SIOURIS WHOSE "MISSILE GUIDANCE AND CONTROL SYSTEMS" BOOK SEEMS TO BE THE ONLY EASY TO FIND REFERENCE THAT " is 128.
Long Statement,MissionPlanner.Utilities,utmpos,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\utmpos.cs,ToLLA2,The length of the statement  "            GeoUtility.GeoSystem.UTM utm = new GeoUtility.GeoSystem.UTM(Math.Abs(zone)' x' y' zone < 0 ? GeoUtility.GeoSystem.Base.Geocentric.Hemisphere.South : GeoUtility.GeoSystem.Base.Geocentric.Hemisphere.North); " is 204.
Long Statement,MissionPlanner.Utilities,VersionDetection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\VersionDetection.cs,GetVersion,The length of the statement  "            //            string ans = mat1.Groups[1].Value.ToString() + mat1.Groups[2].Value.ToString() + mat1.Groups[4].Value.ToString() + mat1.Groups[5].Value.ToString() + mat1.Groups[6].Value.ToString();" is 195.
Long Statement,MissionPlanner,CodeGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CodeGen.cs,BuildClass,The length of the statement  "            myMethod.Statements.Add(new CodeAssignStatement(new CodeSnippetExpression("Object obj")' new CodeSnippetExpression(expression))); " is 129.
Long Statement,MissionPlanner,CodeGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CodeGen.cs,BuildClass,The length of the statement  "            //myMethod.Statements.Add(new CodeAssignStatement(new CodeSnippetExpression("Answer")' new CodeSnippetExpression("obj.ToString()"))); " is 133.
Long Statement,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,processLine,The length of the statement  "                        // line = "ATT:" + double.Parse(ctunlast[3]' new System.Globalization.CultureInfo("en-US")) * 100 + "'" + double.Parse(ctunlast[6]' new System.Globalization.CultureInfo("en-US")) * 100 + "'" + double.Parse(items[1]' new System.Globalization.CultureInfo("en-US")) * 100; " is 269.
Long Statement,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKMLFirstPerson,The length of the statement  "                "<?xml version=\"1.0\" encoding=\"UTF-8\"?><kml xmlns=\"http://www.opengis.net/kml/2.2\" xmlns:gx=\"http://www.google.com/kml/ext/2.2\" xmlns:kml=\"http://www.opengis.net/kml/2.2\" xmlns:atom=\"http://www.w3.org/2005/Atom\">\n     <Document>   <name>Paths</name>    <description>Path</description>\n    <Style id=\"yellowLineGreenPoly\">      <LineStyle>        <color>7f00ffff</color>        <width>4</width>      </LineStyle>      <PolyStyle>        <color>7f00ff00</color>      </PolyStyle>    </Style>\n  "; " is 511.
Long Statement,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKMLFirstPerson,The length of the statement  "            <gx:duration>" + ((gpspackets - lastgpspacket)*0.1).ToString(new System.Globalization.CultureInfo("en-US")) + @"</gx:duration> " is 126.
Long Statement,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeWPFile,The length of the statement  "                sw.WriteLine("{0}\t{1}\t{2}\t{3}\t{4}\t{5}\t{6}\t{7}\t{8}\t{9}\t{10}\t{11}"' CNum' 0' Frame' CId' Prm1' Prm2' Prm3' Prm4' Lat' Lng' Alt' 1); " is 140.
Long Statement,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The length of the statement  "            //https://www.u-blox.com/images/downloads/Product_Docs/u-bloxM8_ReceiverDescriptionProtocolSpec_(UBX-13003221)_Public.pdf " is 121.
Long Statement,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The length of the statement  "                rinexoutput.WriteLine("{0}{1'2}{2'14}{3'1}{4'1}{5'14}{6'1}{7'1}{8'14}{9'1}{10'1}{11'14}{12'1}{13'1}"' sattype' (sv).ToString("00")' " is 131.
Long Statement,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The length of the statement  "                    Polygon kmlpoly = new Polygon() { AltitudeMode = AltitudeMode.relativeToGround' Extrude = false' OuterBoundaryIs = polycoords }; " is 128.
Long Statement,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,ProcessLog,The length of the statement  "                            param[items[colbuf.dflog.FindMessageOffset("PARM"' "Name")]] = double.Parse(items[colbuf.dflog.FindMessageOffset("PARM"' "Value")]' CultureInfo.InvariantCulture); " is 162.
Long Statement,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,readGPSMsgInLog,The length of the statement  "                                //System.Diagnostics.Debug.WriteLine("GPS MSG - UTCMillis = " + millis  + "  GPS Week = " + getValueFromStringArray(gpsLineValues' gpsweekpos) + "  TimeMS = " + getValueFromStringArray(gpsLineValues' timepos)); " is 210.
Long Statement,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,doworkCAM,The length of the statement  "            // If we are required to use AMSL then GPS messages should be used until CAM messages includes AMSL in the coming AC versions " is 125.
Long Statement,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,doworkCAM,The length of the statement  "                AppendText(string.Format("CAM Msgs and Files discrepancy. Check it! files: {0} vs CAM msg: {1}\n"'files.Length'list.Count)); " is 124.
Long Statement,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,doworkTRIG,The length of the statement  "                AppendText(string.Format("TRIG Msgs and Files discrepancy. Check it! files: {0} vs TRIG msg: {1}\n"' files.Length' vehicleLocations.Count)); " is 140.
Long Statement,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,WriteCoordinatesToImage,The length of the statement  "                        s.AppendFormat("Interop. Type: {0} ({1}){2}"' (ushort)item.Interoperability.TypeID' item.Interoperability.TypeID' Environment.NewLine); " is 135.
Long Statement,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,CreateReportFiles,The length of the statement  "                    RectangleF rect = getboundingbox(picInfo.Lat' picInfo.Lon' picInfo.getAltitude(true' usegpsalt)' alpha' num_hfov' num_vfov); " is 124.
Long Statement,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,CreateReportFiles,The length of the statement  "                    /* using (StreamWriter swjpw = new StreamWriter(dirWithImages + Path.DirectorySeparatorChar + Path.GetFileNameWithoutExtension(filename) + ".jgw")) " is 147.
Long Statement,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,set_spline_origin_and_destination,The length of the statement  "            // straight-fast - vehicle is moving' previous segment is straight.  vehicle will fly straight through the waypoint before beginning it's spline path to the next wp" is 164.
Long Statement,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,set_spline_origin_and_destination,The length of the statement  "            // spline-fast - vehicle is moving' previous segment is splined' vehicle will fly through waypoint but previous segment should have it flying in the correct direction (i.e. exactly parallel to position difference vector from previous segment's origin to this segment's destination)" is 281.
Long Statement,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,set_spline_origin_and_destination,The length of the statement  "                    // before beginning it's spline path to the next waypoint. Note: we are using the previous segment's origin and destination" is 123.
Long Statement,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,set_spline_origin_and_destination,The length of the statement  "                    // if next segment is splined' vehicle's final velocity should face parallel to the line from the origin to the next destination" is 128.
Long Statement,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The length of the statement  "                        string t = "{0" + (fieldLength != int.MinValue ? "'" + (flagLeft2Right ? "-" : String.Empty) + fieldLength.ToString() : String.Empty) + ":s}"; " is 142.
Complex Conditional,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The conditional expression  "(by == 'M' || by == 'S' || by == 'A' || by == 'I' || by == 'C') && !binary"  is complex.
Complex Conditional,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The conditional expression  "adsbmess.DF == 17 &&                   (adsbmess.TypeCode >= 9 && adsbmess.TypeCode <= 18)                 || (adsbmess.TypeCode >= 0x14 && adsbmess.TypeCode <= 0x16)"  is complex.
Complex Conditional,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOurairports,The conditional expression  "items[2].Contains("small_airport") || items[2].Contains("seaplane_base") ||                          items[2].Contains("heliport") || items[2].Contains("closed")"  is complex.
Complex Conditional,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_subtriangle_index,The conditional expression  "(is_zero(w.x) || is_zero(w.y) || is_zero(w.z)) && !inclusive"  is complex.
Complex Conditional,MissionPlanner.Utilities,CollectionBuffer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CollectionBuffer.cs,BuildUnitMultiList,The conditional expression  "binfmt == 'c' || binfmt == 'C' ||                          binfmt == 'e' || binfmt == 'E' ||                          binfmt == 'L'"  is complex.
Complex Conditional,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,fit_acceptable,The conditional expression  "!isnan(_fitness) &&                  _params.radius > 150 && _params.radius < 950 && //Earth's magnetic field strength range: 250-850mG                  fabsf(_params.offset.x) < _offset_max &&                  fabsf(_params.offset.y) < _offset_max &&                  fabsf(_params.offset.z) < _offset_max &&                  _params.diag.x > 0.2f && _params.diag.x < 5.0f &&                  _params.diag.y > 0.2f && _params.diag.y < 5.0f &&                  _params.diag.z > 0.2f && _params.diag.z < 5.0f &&                  fabsf(_params.offdiag.x) < 1.0f && //absolute of sine/cosine output cannot be greater than 1                  fabsf(_params.offdiag.y) < 1.0f &&                  fabsf(_params.offdiag.z) < 1.0f"  is complex.
Complex Conditional,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,GetTimeGPS,The conditional expression  "week > 5000 || week < 0 || sec > 60*60*24*7 || sec < 0"  is complex.
Complex Conditional,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,FindLineIntersection,The conditional expression  "(r < 0 || r > 1) || (s < 0 || s > 1)"  is complex.
Complex Conditional,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,FindLineIntersectionExtension,The conditional expression  "(r < 0 || r > 1) || (s < 0 || s > 1)"  is complex.
Complex Conditional,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,FindLineIntersection,The conditional expression  "(r < 0 || r > 1) || (s < 0 || s > 1)"  is complex.
Complex Conditional,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,Equals,The conditional expression  "this.Lat == plla.Lat &&              this.Lng == plla.Lng &&              this.Alt == plla.Alt &&              this.color == plla.color &&              this.Tag == plla.Tag"  is complex.
Complex Conditional,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,getSRTMAltPath,The conditional expression  "elev < homealt + base_height + height + 0.1 && elev > homealt + base_height + height - 0.1                  && elev < drone_alt - clearance + 0.1 && elev > drone_alt - clearance - 0.1"  is complex.
Complex Conditional,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The conditional expression  "filename.Contains("00W000") || filename.Contains("00W001") ||                      filename.Contains("01W000") || filename.Contains("01W001") ||                      filename.Contains("00E000") || filename.Contains("00E001") ||                      filename.Contains("01E000") || filename.Contains("01E001")"  is complex.
Complex Conditional,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,FindLineIntersection,The conditional expression  "(r < 0 || r > 1) || (s < 0 || s > 1)"  is complex.
Complex Conditional,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,RangeTest,The conditional expression  "Pt.X > hiRange || Pt.Y > hiRange || -Pt.X > hiRange || -Pt.Y > hiRange"  is complex.
Complex Conditional,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,RangeTest,The conditional expression  "Pt.X > loRange || Pt.Y > loRange || -Pt.X > loRange || -Pt.Y > loRange"  is complex.
Complex Conditional,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,AddPath,The conditional expression  "(Closed && highI < 2) || (!Closed && highI < 1)"  is complex.
Complex Conditional,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,AddPath,The conditional expression  "Closed &&                    SlopesEqual(E.Prev.Curr' E.Curr' E.Next.Curr' m_UseFullRange) &&                    (!PreserveCollinear ||                    !Pt2IsBetweenPt1AndPt3(E.Prev.Curr' E.Curr' E.Next.Curr))"  is complex.
Complex Conditional,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,AddPath,The conditional expression  "(!Closed && (E == E.Next)) || (Closed && (E.Prev == E.Next))"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,InsertLocalMinimaIntoAEL,The conditional expression  "Op1 != null && IsHorizontal(rb) &&                    m_GhostJoins.Count > 0 && rb.WindDelta != 0"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,InsertLocalMinimaIntoAEL,The conditional expression  "lb.OutIdx >= 0 && lb.PrevInAEL != null &&                    lb.PrevInAEL.Curr.X == lb.Bot.X &&                    lb.PrevInAEL.OutIdx >= 0 &&                    SlopesEqual(lb.PrevInAEL.Curr' lb.PrevInAEL.Top' lb.Curr' lb.Top' m_UseFullRange) &&                    lb.WindDelta != 0 && lb.PrevInAEL.WindDelta != 0"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,InsertLocalMinimaIntoAEL,The conditional expression  "rb.OutIdx >= 0 && rb.PrevInAEL.OutIdx >= 0 &&                        SlopesEqual(rb.PrevInAEL.Curr' rb.PrevInAEL.Top' rb.Curr' rb.Top' m_UseFullRange) &&                        rb.WindDelta != 0 && rb.PrevInAEL.WindDelta != 0"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,AddLocalMinPoly,The conditional expression  "prevE != null && prevE.OutIdx >= 0 && prevE.Top.Y < pt.Y && e.Top.Y < pt.Y"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,AddLocalMinPoly,The conditional expression  "(xPrev == xE) && (e.WindDelta != 0) && (prevE.WindDelta != 0) &&                    SlopesEqual(new IntPoint(xPrev' pt.Y)' prevE.Top' new IntPoint(xE' pt.Y)' e.Top' m_UseFullRange)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,IntersectEdges,The conditional expression  "(e1.WindDelta == 0) && Math.Abs(e2.WindCnt) == 1 &&                        (m_ClipType != ClipType.ctUnion || e2.WindCnt2 == 0)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,IntersectEdges,The conditional expression  "(e2.WindDelta == 0) && (Math.Abs(e1.WindCnt) == 1) &&                        (m_ClipType != ClipType.ctUnion || e1.WindCnt2 == 0)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,IntersectEdges,The conditional expression  "(e1Wc != 0 && e1Wc != 1) || (e2Wc != 0 && e2Wc != 1) ||                    (e1.PolyTyp != e2.PolyTyp && m_ClipType != ClipType.ctXor)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,IntersectEdges,The conditional expression  "(e1Wc == 0 || e1Wc == 1) && (e2Wc == 0 || e2Wc == 1)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,IntersectEdges,The conditional expression  "((e1.PolyTyp == PolyType.ptClip) && (e1Wc2 > 0) && (e2Wc2 > 0)) ||                                  ((e1.PolyTyp == PolyType.ptSubject) && (e1Wc2 <= 0) && (e2Wc2 <= 0))"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,ProcessHorizontal,The conditional expression  "(dir == Direction.dLeftToRight && e.Curr.X > horzRight) ||                        (dir == Direction.dRightToLeft && e.Curr.X < horzLeft)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,ProcessHorizontal,The conditional expression  "ePrev != null && ePrev.Curr.X == horzEdge.Bot.X &&                        ePrev.Curr.Y == horzEdge.Bot.Y && ePrev.WindDelta != 0 &&                        (ePrev.OutIdx >= 0 && ePrev.Curr.Y > ePrev.Top.Y &&                        SlopesEqual(horzEdge' ePrev' m_UseFullRange))"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,ProcessHorizontal,The conditional expression  "eNext != null && eNext.Curr.X == horzEdge.Bot.X &&                        eNext.Curr.Y == horzEdge.Bot.Y && eNext.WindDelta != 0 &&                        eNext.OutIdx >= 0 && eNext.Curr.Y > eNext.Top.Y &&                        SlopesEqual(horzEdge' eNext' m_UseFullRange)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,GetMaximaPairEx,The conditional expression  "result == null || result.OutIdx == Skip ||                ((result.NextInAEL == result.PrevInAEL) && !IsHorizontal(result))"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,ProcessEdgesAtTopOfScanbeam,The conditional expression  "(e.OutIdx >= 0) && (e.WindDelta != 0) && ePrev != null &&                            (ePrev.OutIdx >= 0) && (ePrev.Curr.X == e.Curr.X) &&                            (ePrev.WindDelta != 0)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,ProcessEdgesAtTopOfScanbeam,The conditional expression  "ePrev != null && ePrev.Curr.X == e.Bot.X &&                        ePrev.Curr.Y == e.Bot.Y && op != null &&                        ePrev.OutIdx >= 0 && ePrev.Curr.Y > ePrev.Top.Y &&                        SlopesEqual(e.Curr' e.Top' ePrev.Curr' ePrev.Top' m_UseFullRange) &&                        (e.WindDelta != 0) && (ePrev.WindDelta != 0)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,ProcessEdgesAtTopOfScanbeam,The conditional expression  "eNext != null && eNext.Curr.X == e.Bot.X &&                        eNext.Curr.Y == e.Bot.Y && op != null &&                        eNext.OutIdx >= 0 && eNext.Curr.Y > eNext.Top.Y &&                        SlopesEqual(e.Curr' e.Top' eNext.Curr' eNext.Top' m_UseFullRange) &&                        (e.WindDelta != 0) && (eNext.WindDelta != 0)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,BuildResult2,The conditional expression  "(outRec.IsOpen && cnt < 2) ||                    (!outRec.IsOpen && cnt < 3)"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,FixupOutPolygon,The conditional expression  "(pp.Pt == pp.Next.Pt) || (pp.Pt == pp.Prev.Pt) ||                    (SlopesEqual(pp.Prev.Pt' pp.Pt' pp.Next.Pt' m_UseFullRange) &&                    (!preserveCol || !Pt2IsBetweenPt1AndPt3(pp.Prev.Pt' pp.Pt' pp.Next.Pt)))"  is complex.
Complex Conditional,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,JoinPoints,The conditional expression  "(op1b == op1) || (op2b == op2) || (op1b == op2b) ||                    ((outRec1 == outRec2) && (Reverse1 == Reverse2))"  is complex.
Complex Conditional,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,DoOffset,The conditional expression  "len == 0 || (delta <= 0 && (len < 3 ||                    node.m_endtype != EndType.etClosedPolygon))"  is complex.
Complex Conditional,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,WriteCoordinatesToImage,The conditional expression  "item.Tag == ExifTag.GPSLongitude || item.Tag == ExifTag.GPSLatitude ||                              item.Tag == ExifTag.GPSAltitude || item.Tag == ExifTag.GPSLatitudeRef ||                              item.Tag == ExifTag.GPSLongitudeRef"  is complex.
Complex Conditional,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The conditional expression  "fieldPrecision == int.MinValue &&                      formatSpecifier != 's' &&                      formatSpecifier != 'c' &&                      Char.ToUpper(formatSpecifier) != 'X' &&                      formatSpecifier != 'o'"  is complex.
Empty Catch Block,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOpenflights,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOurairports,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,AutoConnect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AutoConnect.cs,Start,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,CaptureMJPEG,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CaptureMJPEG.cs,ReadLine,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,CaptureMJPEG,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CaptureMJPEG.cs,getUrl,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,CollectionBuffer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CollectionBuffer.cs,setlinecount,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,CollectionBuffer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CollectionBuffer.cs,setlinecount,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,CollectionBuffer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CollectionBuffer.cs,setlinecount,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,CollectionBuffer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CollectionBuffer.cs,setlinecount,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,Crypto,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Crypto.cs,Crypto,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,ReadLog,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,GetDFItemFromLine,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,GetDFItemFromLine,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,FMTLine,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,CheckHTTPFileExists,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,GitHubContent,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GitHubContent.cs,GetObject,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readJPGData,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,Stop,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,Stop,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,DownloadGStreamer,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,ListExtension,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ListExtension.cs,SortENABLE,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,ParameterMetaDataRepositoryAPM,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataRepositoryAPM.cs,Reload,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,ParameterMetaDataRepositoryAPM,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataRepositoryAPM.cs,GetParameterMetaData,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,ParameterMetaDataRepositoryPX4,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataRepositoryPX4.cs,Reload,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,ParameterMetaDataRepositoryPX4,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataRepositoryPX4.cs,GetParameterMetaData,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,Settings,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Settings.cs,Load,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,Settings,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Settings.cs,Save,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,TCPConsole,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TCPConsole.cs,Write,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,tfr,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,tfrcallback,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,tfritem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,GetPaths,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,Tracking,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tracking.cs,AddException,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,Tracking,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tracking.cs,track,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,Vario,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Vario.cs,mainloop,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Utilities,ZeroConf,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ZeroConf.cs,resolverAsync,The method has an empty catch block.
Empty Catch Block,MissionPlanner,CodeGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CodeGen.cs,CreateCompilerParameters,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,GetMap,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,processLine,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,processLine,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,processLine,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,processLine,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,processLine,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogSort,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogSort.cs,SortLogs,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogSort,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogSort.cs,SortLogs,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogSort,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogSort.cs,SortLogs,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,LogSort,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogSort.cs,SortLogs,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,ProcessLog,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,tlog,The method has an empty catch block.
Empty Catch Block,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,getPhotoTime,The method has an empty catch block.
Empty Catch Block,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,doworkGPSOFFSET,The method has an empty catch block.
Empty Catch Block,MissionPlanner.Warnings,WarningEngine,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Warnings\WarningEngine.cs,MainLoop,The method has an empty catch block.
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The following statement contains a magic number: cl.Connect(System.Net.IPAddress.Loopback' 30003);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The following statement contains a magic number: cl.Connect(System.Net.IPAddress.Loopback' 30002);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The following statement contains a magic number: cl.Connect(System.Net.IPAddress.Loopback' 31004);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The following statement contains a magic number: cl.Connect(System.Net.IPAddress.Loopback' 31001);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The following statement contains a magic number: cl.Connect(System.Net.IPAddress.Loopback' 47806);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The following statement contains a magic number: adsbexchangerange = Math.Min(adsbexchangerange + 10' 400);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The following statement contains a magic number: adsbexchangerange = Math.Min(adsbexchangerange + 10' 400);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The following statement contains a magic number: var plane = new MissionPlanner.Utilities.adsb.PointLatLngAltHdg(acList.Lat' acList.Long'                                      acList.Alt * 0.3048'                                      (float) acList.Trak' acList.Spd' acList.Icao' DateTime.Now);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,TryConnect,The following statement contains a magic number: System.Threading.Thread.Sleep(5000);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: st1.ReadTimeout = 10000;
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: avrcount >= 4
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: sb.Append(data[9 + a].ToString("X2"));
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: a < 14
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: data.Length < 13
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.DF = (byte)(data[0] >> 3);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.CA = (byte)(data[0] & 7);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.AA = (uint)((data[1] << 16) + (data[2] << 8) +(data[3]));
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.AA = (uint)((data[1] << 16) + (data[2] << 8) +(data[3]));
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.AA = (uint)((data[1] << 16) + (data[2] << 8) +(data[3]));
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.AA = (uint)((data[1] << 16) + (data[2] << 8) +(data[3]));
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: Array.Copy(data' 4' adsbmess.adsbdata' 0' 7);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: Array.Copy(data' 4' adsbmess.adsbdata' 0' 7);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.PI = (uint)((data[11] << 16) + (data[12] << 8) + (data[13]));
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.PI = (uint)((data[11] << 16) + (data[12] << 8) + (data[13]));
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.PI = (uint)((data[11] << 16) + (data[12] << 8) + (data[13]));
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.PI = (uint)((data[11] << 16) + (data[12] << 8) + (data[13]));
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.PI = (uint)((data[11] << 16) + (data[12] << 8) + (data[13]));
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: byte[] pidata = crc.ComputeChecksumBytes(data' 0' data.Length - 3' false);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.PI != ((pidata[0] << 16) + (pidata[1] << 8) + pidata[2])
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.PI != ((pidata[0] << 16) + (pidata[1] << 8) + pidata[2])
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.PI != ((pidata[0] << 16) + (pidata[1] << 8) + pidata[2])
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.DF == 17 &&                   (adsbmess.TypeCode >= 9 && adsbmess.TypeCode <= 18)                 || (adsbmess.TypeCode >= 0x14 && adsbmess.TypeCode <= 0x16)
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.DF == 17 &&                   (adsbmess.TypeCode >= 9 && adsbmess.TypeCode <= 18)                 || (adsbmess.TypeCode >= 0x14 && adsbmess.TypeCode <= 0x16)
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ReadMessage,The following statement contains a magic number: adsbmess.DF == 17 &&                   (adsbmess.TypeCode >= 9 && adsbmess.TypeCode <= 18)                 || (adsbmess.TypeCode >= 0x14 && adsbmess.TypeCode <= 0x16)
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ConvertHexStringToByteArray,The following statement contains a magic number: hexString.Length % 2 != 0
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ConvertHexStringToByteArray,The following statement contains a magic number: byte[] HexAsBytes = new byte[hexString.Length / 2];
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ConvertHexStringToByteArray,The following statement contains a magic number: string byteValue = hexString.Substring(index * 2' 2);
Magic Number,MissionPlanner.Utilities,adsb,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ConvertHexStringToByteArray,The following statement contains a magic number: string byteValue = hexString.Substring(index * 2' 2);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: Math.Abs((llaeven.recvtime - llaodd.recvtime).TotalSeconds) > 30
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: double j = Math.Floor((((59.0 * llaeven.lat) - (60.0 * llaodd.lat)) / 131072.0) + 0.5);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: double j = Math.Floor((((59.0 * llaeven.lat) - (60.0 * llaodd.lat)) / 131072.0) + 0.5);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: double j = Math.Floor((((59.0 * llaeven.lat) - (60.0 * llaodd.lat)) / 131072.0) + 0.5);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: double j = Math.Floor((((59.0 * llaeven.lat) - (60.0 * llaodd.lat)) / 131072.0) + 0.5);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: double[] rlat = new double[2];
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlat[0] = AirDlat0 * (modulo(j' 60) + llaeven.lat / 131072.0);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlat[0] = AirDlat0 * (modulo(j' 60) + llaeven.lat / 131072.0);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlat[1] = AirDlat1 * (modulo(j' 59) + llaodd.lat / 131072.0);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlat[1] = AirDlat1 * (modulo(j' 59) + llaodd.lat / 131072.0);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlat[0] -= 360;
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlat[0] >= 270
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlat[1] -= 360;
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlat[1] >= 270
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: double M = Math.Floor((inside / 131072.0) + 0.5);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: double M = Math.Floor((inside / 131072.0) + 0.5);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: double dlon0 = 360.0 / ni0;
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: double dlon1 = 360.0 / ni1;
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: double[] rlng = new double[2];
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlng[0] = dlon0 * (modulo(M' ni0) + (llaeven.lng / 131072.0));
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlng[1] = dlon1 * (modulo(M' ni1) + (llaodd.lng / 131072.0));
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlng[0] = modulo(rlng[0] + 180.0' 360.0) - 180.0;
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlng[0] = modulo(rlng[0] + 180.0' 360.0) - 180.0;
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlng[0] = modulo(rlng[0] + 180.0' 360.0) - 180.0;
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlng[1] = modulo(rlng[1] + 180.0' 360.0) - 180.0;
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlng[1] = modulo(rlng[1] + 180.0' 360.0) - 180.0;
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: rlng[1] = modulo(rlng[1] + 180.0' 360.0) - 180.0;
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,plla,The following statement contains a magic number: return new PointLatLngAlt(reflat' reflng' llaodd.alt * 0.3048' ID);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,pllalocal,The following statement contains a magic number: int num = 131072;
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,pllalocal,The following statement contains a magic number: double denominator = (newmsg.OddFormat ? 6.101694915254237 : 6.0);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,pllalocal,The following statement contains a magic number: double denominator = (newmsg.OddFormat ? 6.101694915254237 : 6.0);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,pllalocal,The following statement contains a magic number: double num3 =  360.0;
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,pllalocal,The following statement contains a magic number: double num6 = Math.Floor((double)(latitude / denominator)) + Math.Floor((double)((0.5 + (this.modulo(latitude' denominator) / denominator)) - num5));
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,pllalocal,The following statement contains a magic number: double num11 = Math.Floor((double)(numerator / num9)) + Math.Floor((double)((0.5 + (this.modulo(numerator' num9) / num9)) - num10));
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,NL,The following statement contains a magic number: latitude <= 87.0
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,BuildNLTable,The following statement contains a magic number: double num = 57.295779513082323;
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,BuildNLTable,The following statement contains a magic number: double num2 = 1.0 - Math.Cos(0.10471975511965977);
Magic Number,MissionPlanner.Utilities,Plane,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,BuildNLTable,The following statement contains a magic number: double num5 = 1.0 - Math.Cos(6.2831853071795862 / ((double)num3));
Magic Number,MissionPlanner.Utilities,ModeSMessage,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,getbits,The following statement contains a magic number: byte[] ans = new byte[bitcount / 8 + 1];
Magic Number,MissionPlanner.Utilities,ModeSMessage,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,getbits,The following statement contains a magic number: int no = ((a / 8) * 8) + (7 - (a % 8));
Magic Number,MissionPlanner.Utilities,ModeSMessage,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,getbits,The following statement contains a magic number: int no = ((a / 8) * 8) + (7 - (a % 8));
Magic Number,MissionPlanner.Utilities,ModeSMessage,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,getbits,The following statement contains a magic number: int no = ((a / 8) * 8) + (7 - (a % 8));
Magic Number,MissionPlanner.Utilities,ModeSMessage,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,getbits,The following statement contains a magic number: int no = ((a / 8) * 8) + (7 - (a % 8));
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,Crc32ModeS,The following statement contains a magic number: j < 8
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksum,The following statement contains a magic number: uint index = (uint)(((num & -16777216) >> 0x18) ^ bytes[i]);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksum,The following statement contains a magic number: num = (num << 8) ^ this._LookupTable[index];
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional32,The following statement contains a magic number: uint crc = (uint)((((bytes[0] << 0x18) + (bytes[1] << 0x10)) + (bytes[2] << 8)) + bytes[3]);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional32,The following statement contains a magic number: uint crc = (uint)((((bytes[0] << 0x18) + (bytes[1] << 0x10)) + (bytes[2] << 8)) + bytes[3]);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional32,The following statement contains a magic number: uint crc = (uint)((((bytes[0] << 0x18) + (bytes[1] << 0x10)) + (bytes[2] << 8)) + bytes[3]);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional88,The following statement contains a magic number: uint crc = (uint)((((bytes[0] << 0x18) + (bytes[1] << 0x10)) + (bytes[2] << 8)) + bytes[3]);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional88,The following statement contains a magic number: uint crc = (uint)((((bytes[0] << 0x18) + (bytes[1] << 0x10)) + (bytes[2] << 8)) + bytes[3]);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional88,The following statement contains a magic number: uint crc = (uint)((((bytes[0] << 0x18) + (bytes[1] << 0x10)) + (bytes[2] << 8)) + bytes[3]);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional88,The following statement contains a magic number: uint num2 = (uint)((((bytes[4] << 0x18) + (bytes[5] << 0x10)) + (bytes[6] << 8)) + bytes[7]);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional88,The following statement contains a magic number: uint num2 = (uint)((((bytes[4] << 0x18) + (bytes[5] << 0x10)) + (bytes[6] << 8)) + bytes[7]);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional88,The following statement contains a magic number: uint num2 = (uint)((((bytes[4] << 0x18) + (bytes[5] << 0x10)) + (bytes[6] << 8)) + bytes[7]);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional88,The following statement contains a magic number: uint num2 = (uint)((((bytes[4] << 0x18) + (bytes[5] << 0x10)) + (bytes[6] << 8)) + bytes[7]);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional88,The following statement contains a magic number: uint num2 = (uint)((((bytes[4] << 0x18) + (bytes[5] << 0x10)) + (bytes[6] << 8)) + bytes[7]);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional88,The following statement contains a magic number: uint num3 = (uint)(((bytes[8] << 0x18) + (bytes[9] << 0x10)) + (bytes[10] << 8));
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional88,The following statement contains a magic number: uint num3 = (uint)(((bytes[8] << 0x18) + (bytes[9] << 0x10)) + (bytes[10] << 8));
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional88,The following statement contains a magic number: uint num3 = (uint)(((bytes[8] << 0x18) + (bytes[9] << 0x10)) + (bytes[10] << 8));
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ComputeChecksumBytesTraditional88,The following statement contains a magic number: uint num3 = (uint)(((bytes[8] << 0x18) + (bytes[9] << 0x10)) + (bytes[10] << 8));
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ConvertToByteArray,The following statement contains a magic number: byte[] buffer = new byte[4];
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ConvertToByteArray,The following statement contains a magic number: buffer[1] = (byte)((crc >> 8) & 0xff);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ConvertToByteArray,The following statement contains a magic number: buffer[2] = (byte)((crc >> 0x10) & 0xff);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ConvertToByteArray,The following statement contains a magic number: buffer[3] = (byte)(crc >> 0x18);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ConvertToByteArray,The following statement contains a magic number: buffer[2] = (byte)((crc >> 8) & 0xff);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ConvertToByteArray,The following statement contains a magic number: buffer[2] = (byte)((crc >> 8) & 0xff);
Magic Number,MissionPlanner.Utilities,Crc32ModeS,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\adsb.cs,ConvertToByteArray,The following statement contains a magic number: buffer[3] = (byte)(crc & 0xff);
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,getAirports,The following statement contains a magic number: currentcenter.GetDistance(centerpoint) < ((proximity/3)*2)
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,getAirports,The following statement contains a magic number: currentcenter.GetDistance(centerpoint) < ((proximity/3)*2)
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,AddAirport,The following statement contains a magic number: item.GetDistance(plla) < 1000
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOpenflights,The following statement contains a magic number: name = name + "'" + items[2 + latOffset];
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOpenflights,The following statement contains a magic number: items[5 + latOffset].Length != 6
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOpenflights,The following statement contains a magic number: items[5 + latOffset].Length != 6
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOpenflights,The following statement contains a magic number: double lat = double.Parse(items[6 + latOffset].Trim('"')' CultureInfo.InvariantCulture);
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOpenflights,The following statement contains a magic number: double lng = double.Parse(items[7 + latOffset].Trim('"')' CultureInfo.InvariantCulture);
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOurairports,The following statement contains a magic number: items[1].Length != 6
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOurairports,The following statement contains a magic number: items[2].Contains("small_airport") || items[2].Contains("seaplane_base") ||                          items[2].Contains("heliport") || items[2].Contains("closed")
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOurairports,The following statement contains a magic number: items[2].Contains("small_airport") || items[2].Contains("seaplane_base") ||                          items[2].Contains("heliport") || items[2].Contains("closed")
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOurairports,The following statement contains a magic number: items[2].Contains("small_airport") || items[2].Contains("seaplane_base") ||                          items[2].Contains("heliport") || items[2].Contains("closed")
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOurairports,The following statement contains a magic number: items[2].Contains("small_airport") || items[2].Contains("seaplane_base") ||                          items[2].Contains("heliport") || items[2].Contains("closed")
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOurairports,The following statement contains a magic number: string name = items[3];
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOurairports,The following statement contains a magic number: name = name + "'" + items[3 + latOffset];
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOurairports,The following statement contains a magic number: double lat = double.Parse(items[4 + latOffset].Trim('"')' CultureInfo.InvariantCulture);
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadOurairports,The following statement contains a magic number: double lng = double.Parse(items[5 + latOffset].Trim('"')' CultureInfo.InvariantCulture);
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadPartow,The following statement contains a magic number: string name = items[2].Trim('"');
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadPartow,The following statement contains a magic number: double lat = double.Parse(items[5]' CultureInfo.InvariantCulture) +                               double.Parse(items[6]' CultureInfo.InvariantCulture)/60 +                               double.Parse(items[7]' CultureInfo.InvariantCulture)/3600;
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadPartow,The following statement contains a magic number: double lat = double.Parse(items[5]' CultureInfo.InvariantCulture) +                               double.Parse(items[6]' CultureInfo.InvariantCulture)/60 +                               double.Parse(items[7]' CultureInfo.InvariantCulture)/3600;
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadPartow,The following statement contains a magic number: double lat = double.Parse(items[5]' CultureInfo.InvariantCulture) +                               double.Parse(items[6]' CultureInfo.InvariantCulture)/60 +                               double.Parse(items[7]' CultureInfo.InvariantCulture)/3600;
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadPartow,The following statement contains a magic number: double lat = double.Parse(items[5]' CultureInfo.InvariantCulture) +                               double.Parse(items[6]' CultureInfo.InvariantCulture)/60 +                               double.Parse(items[7]' CultureInfo.InvariantCulture)/3600;
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadPartow,The following statement contains a magic number: double lat = double.Parse(items[5]' CultureInfo.InvariantCulture) +                               double.Parse(items[6]' CultureInfo.InvariantCulture)/60 +                               double.Parse(items[7]' CultureInfo.InvariantCulture)/3600;
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadPartow,The following statement contains a magic number: double lng = double.Parse(items[9]' CultureInfo.InvariantCulture) +                               double.Parse(items[10]' CultureInfo.InvariantCulture)/60 +                               double.Parse(items[11]' CultureInfo.InvariantCulture)/3600;
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadPartow,The following statement contains a magic number: double lng = double.Parse(items[9]' CultureInfo.InvariantCulture) +                               double.Parse(items[10]' CultureInfo.InvariantCulture)/60 +                               double.Parse(items[11]' CultureInfo.InvariantCulture)/3600;
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadPartow,The following statement contains a magic number: double lng = double.Parse(items[9]' CultureInfo.InvariantCulture) +                               double.Parse(items[10]' CultureInfo.InvariantCulture)/60 +                               double.Parse(items[11]' CultureInfo.InvariantCulture)/3600;
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadPartow,The following statement contains a magic number: double lng = double.Parse(items[9]' CultureInfo.InvariantCulture) +                               double.Parse(items[10]' CultureInfo.InvariantCulture)/60 +                               double.Parse(items[11]' CultureInfo.InvariantCulture)/3600;
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadPartow,The following statement contains a magic number: double lng = double.Parse(items[9]' CultureInfo.InvariantCulture) +                               double.Parse(items[10]' CultureInfo.InvariantCulture)/60 +                               double.Parse(items[11]' CultureInfo.InvariantCulture)/3600;
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadPartow,The following statement contains a magic number: items[8] == "S"
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadPartow,The following statement contains a magic number: items[12] == "W"
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadUNLOCODE,The following statement contains a magic number: string name = items[3].Trim('"');
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadUNLOCODE,The following statement contains a magic number: string function = items[6].Trim('"');
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadUNLOCODE,The following statement contains a magic number: string coords = items[10].Trim('"');
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadUNLOCODE,The following statement contains a magic number: coordssplit.Length != 2
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadUNLOCODE,The following statement contains a magic number: double northing = double.Parse(coordssplit[0].Substring(0' 4)' CultureInfo.InvariantCulture)/100.0;
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadUNLOCODE,The following statement contains a magic number: double northing = double.Parse(coordssplit[0].Substring(0' 4)' CultureInfo.InvariantCulture)/100.0;
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadUNLOCODE,The following statement contains a magic number: double easting = double.Parse(coordssplit[1].Substring(0' 5)' CultureInfo.InvariantCulture)/100.0;
Magic Number,MissionPlanner.Utilities,Airports,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Airports.cs,ReadUNLOCODE,The following statement contains a magic number: double easting = double.Parse(coordssplit[1].Substring(0' 5)' CultureInfo.InvariantCulture)/100.0;
Magic Number,MissionPlanner.Utilities,apj_tool,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\apj_tool.cs,Process,The following statement contains a magic number: new_fw.Seek((int)foffset + 2' SeekOrigin.Begin);
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,section,The following statement contains a magic number: return 4 * i + j;
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_neighbor_umbrella_component,The following statement contains a magic number: idx < 3
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_neighbor_umbrella_component,The following statement contains a magic number: return (_neighbor_umbrellas[idx % 3].components[comp_idx] + 10) % 20;
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_neighbor_umbrella_component,The following statement contains a magic number: return (_neighbor_umbrellas[idx % 3].components[comp_idx] + 10) % 20;
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_neighbor_umbrella_component,The following statement contains a magic number: return (_neighbor_umbrellas[idx % 3].components[comp_idx] + 10) % 20;
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_from_neighbor_umbrella,The following statement contains a magic number: var w = _inverses[comp % 10] * v;
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_from_neighbor_umbrella,The following statement contains a magic number: comp > 9
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_from_neighbor_umbrella,The following statement contains a magic number: float x0 = (float) w[_neighbor_umbrellas[idx % 3].v0_c0];
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_from_neighbor_umbrella,The following statement contains a magic number: var w = _inverses[comp % 10] * v;
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_from_neighbor_umbrella,The following statement contains a magic number: comp > 9
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_from_neighbor_umbrella,The following statement contains a magic number: float x1 = (float) w[_neighbor_umbrellas[idx % 3].v1_c1];
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_from_neighbor_umbrella,The following statement contains a magic number: float x2 = (float) w[_neighbor_umbrellas[idx % 3].v2_c1];
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_from_neighbor_umbrella,The following statement contains a magic number: return _neighbor_umbrella_component(idx' x1 < 0 ? 2 : 1);
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (umbrella % 3)              {                  case 0:                      w.z = -w.z;                      break;                  case 1:                      w = new Vector3(w.y' w.z' -w.x);                      break;                  case 2:                      w = new Vector3(w.z' w.x' -w.y);                      break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following statement contains a magic number: switch (umbrella % 3)              {                  case 0:                      w.z = -w.z;                      break;                  case 1:                      w = new Vector3(w.y' w.z' -w.x);                      break;                  case 2:                      w = new Vector3(w.z' w.x' -w.y);                      break;              }
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_subtriangle_index,The following statement contains a magic number: var w = _mid_inverses[triangle_index % 10] * v;
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_subtriangle_index,The following statement contains a magic number: triangle_index > 9
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_subtriangle_index,The following statement contains a magic number: return 3;
Magic Number,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_subtriangle_index,The following statement contains a magic number: return 2;
Magic Number,MissionPlanner.Utilities,AutoConnect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AutoConnect.cs,Start,The following statement contains a magic number: Task.Run(() =>                              {                                  Parallel.ForEach(SerialPort.GetPortNames()' port =>                                  {                                      try                                      {                                          var serial = new SerialPort(port' connectionInfo.Port);                                          serial.ReadBufferSize = 1024 * 300;                                          serial.Open();                                          // sample 1.2seconds                                          Thread.Sleep(1200);                                          var btr = serial.BytesToRead;                                          var buffer = new byte[btr];                                          serial.Read(buffer' 0' buffer.Length);                                          serial.Close();                                          var parse = new MAVLink.MavlinkParse();                                          var st = buffer.ToMemoryStream();                                          while (st.Position < st.Length)                                          {                                              var packet = parse.ReadPacket(st);                                              if (packet != null)                                              {                                                  if (packet.msgid == (int) MAVLink.MAVLINK_MSG_ID.HEARTBEAT)                                                  {                                                      NewMavlinkConnection?.BeginInvoke(null' serial' null' null);                                                      return;                                                  }                                              }                                          }                                      }                                      catch                                      {                                      }                                  });                              });
Magic Number,MissionPlanner.Utilities,AutoConnect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AutoConnect.cs,Start,The following statement contains a magic number: Task.Run(() =>                              {                                  Parallel.ForEach(SerialPort.GetPortNames()' port =>                                  {                                      try                                      {                                          var serial = new SerialPort(port' connectionInfo.Port);                                          serial.ReadBufferSize = 1024 * 300;                                          serial.Open();                                          // sample 1.2seconds                                          Thread.Sleep(1200);                                          var btr = serial.BytesToRead;                                          var buffer = new byte[btr];                                          serial.Read(buffer' 0' buffer.Length);                                          serial.Close();                                          var parse = new MAVLink.MavlinkParse();                                          var st = buffer.ToMemoryStream();                                          while (st.Position < st.Length)                                          {                                              var packet = parse.ReadPacket(st);                                              if (packet != null)                                              {                                                  if (packet.msgid == (int) MAVLink.MAVLINK_MSG_ID.HEARTBEAT)                                                  {                                                      NewMavlinkConnection?.BeginInvoke(null' serial' null' null);                                                      return;                                                  }                                              }                                          }                                      }                                      catch                                      {                                      }                                  });                              });
Magic Number,MissionPlanner.Utilities,AutoConnect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AutoConnect.cs,Start,The following statement contains a magic number: Task.Run(() =>                              {                                  Parallel.ForEach(SerialPort.GetPortNames()' port =>                                  {                                      try                                      {                                          var serial = new SerialPort(port' connectionInfo.Port);                                          serial.ReadBufferSize = 1024 * 300;                                          serial.Open();                                          // sample 1.2seconds                                          Thread.Sleep(1200);                                          var btr = serial.BytesToRead;                                          var buffer = new byte[btr];                                          serial.Read(buffer' 0' buffer.Length);                                          serial.Close();                                          var parse = new MAVLink.MavlinkParse();                                          var st = buffer.ToMemoryStream();                                          while (st.Position < st.Length)                                          {                                              var packet = parse.ReadPacket(st);                                              if (packet != null)                                              {                                                  if (packet.msgid == (int) MAVLink.MAVLINK_MSG_ID.HEARTBEAT)                                                  {                                                      NewMavlinkConnection?.BeginInvoke(null' serial' null' null);                                                      return;                                                  }                                              }                                          }                                      }                                      catch                                      {                                      }                                  });                              });
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ConvertBini,The following statement contains a magic number: progress((int) ((br.BaseStream.Position / (float) br.BaseStream.Length) * 100));
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ConvertBini,The following statement contains a magic number: Console.WriteLine("ConvertBin " + (br.BaseStream.Position/(float) br.BaseStream.Length)*100);
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ReadMessage,The following statement contains a magic number: switch (log_step)                      {                          case 0:                              if (data == HEAD_BYTE1)                              {                                  log_step++;                              }                              break;                            case 1:                              if (data == HEAD_BYTE2)                              {                                  log_step++;                              }                              else                              {                                  log_step = 0;                              }                              break;                            case 2:                              log_step = 0;                              try                              {                                  string line = String.Join("' "' logEntryObjects(data' br).Select((a) =>                                                {                                                    if (a.IsNumber())                                                        return (((IConvertible)a).ToString(CultureInfo.InvariantCulture));                                                    else                                                        return a.ToString();                                                })) + "\r\n";                                    // we need to know the mav type to use the correct mode list.                                  if (line.Contains("PARM' RATE_RLL_P") || line.Contains("ArduCopter") ||                                      line.Contains("Copter"))                                  {                                      _firmware = "ArduCopter2";                                  }                                  else if ((line.Contains("PARM' H_SWASH_PLATE")) || line.Contains("ArduCopter"))                                  {                                      _firmware = "ArduCopter2";                                  }                                  else if (line.Contains("PARM' PTCH2SRV_P") || line.Contains("ArduPlane") ||                                           line.Contains("Plane"))                                  {                                      _firmware ="ArduPlane";                                  }                                  else if (line.Contains("PARM' SKID_STEER_OUT") || line.Contains("ArduRover") ||                                           line.Contains("Rover"))                                  {                                      _firmware = "ArduRover";                                  }                                  else if (line.Contains("AntennaTracker") || line.Contains("Tracker"))                                  {                                      _firmware = "ArduTracker";                                  }                                    return line;                              }                              catch                              {                                  Console.WriteLine("Bad Binary log line {0}"' data);                              }                              break;                      }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ReadMessageTypeOffset,The following statement contains a magic number: switch (log_step)                  {                      case 0:                          if (data == HEAD_BYTE1)                          {                              log_step++;                          }                            break;                        case 1:                          if (data == HEAD_BYTE2)                          {                              log_step++;                          }                          else                          {                              log_step = 0;                          }                            break;                        case 2:                          log_step = 0;                          try                          {                              long pos = br.Position - 3;                              // read fmt or seek length of packet                              logEntryFMT(data' br);                                return (data' pos);                          }                          catch                          {                              Console.WriteLine("Bad Binary log line {0}"' data);                          }                            break;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ReadMessageTypeOffset,The following statement contains a magic number: switch (log_step)                  {                      case 0:                          if (data == HEAD_BYTE1)                          {                              log_step++;                          }                            break;                        case 1:                          if (data == HEAD_BYTE2)                          {                              log_step++;                          }                          else                          {                              log_step = 0;                          }                            break;                        case 2:                          log_step = 0;                          try                          {                              long pos = br.Position - 3;                              // read fmt or seek length of packet                              logEntryFMT(data' br);                                return (data' pos);                          }                          catch                          {                              Console.WriteLine("Bad Binary log line {0}"' data);                          }                            break;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,logEntryFMT,The following statement contains a magic number: switch (packettype)              {                  case 0x80: // FMT                        log_Format logfmt = new log_Format();                        object obj = logfmt;                        int len = Marshal.SizeOf(obj);                        byte[] bytearray = new byte[len];                        br.Read(bytearray' 0' bytearray.Length);                        IntPtr i = Marshal.AllocHGlobal(len);                        // create structure from ptr                      obj = Marshal.PtrToStructure(i' obj.GetType());                        // copy byte array to ptr                      Marshal.Copy(bytearray' 0' i' len);                        obj = Marshal.PtrToStructure(i' obj.GetType());                        Marshal.FreeHGlobal(i);                        logfmt = (log_Format) obj;                        string lgname = ASCIIEncoding.ASCII.GetString(logfmt.name).Trim(new char[] {'\0'});                      //string lgformat = ASCIIEncoding.ASCII.GetString(logfmt.format).Trim(new char[] {'\0'});                      //string lglabels = ASCIIEncoding.ASCII.GetString(logfmt.labels).Trim(new char[] {'\0'});                        logformat[lgname] = logfmt;                        packettypecache[logfmt.type] = new log_format_cache()                      {                          length = logfmt.length'                          type = logfmt.type'                          name = ASCIIEncoding.ASCII.GetString(logfmt.name).Trim(new char[] { '\0' })'                          format = ASCIIEncoding.ASCII.GetString(logfmt.format).Trim(new char[] { '\0' })'                      };                        return;                    default:                      //string format = "";                      //string name = "";                        int size = 0;                        if (packettypecache[packettype].length != 0)                      {                          var fmt = packettypecache[packettype];                          //name = fmt.name;                          //format = fmt.format;                          size = fmt.length;                      }                        // didnt find a match' return unknown packet type                      if (size == 0)                          return;                        //byte[] buf = new byte[size - 3];                      //br.Read(buf' 0' buf.Length);                        br.Seek(br.Position + size - 3' SeekOrigin.Begin);                      break;              }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ReadMessageObjects,The following statement contains a magic number: switch (log_step)                      {                          case 0:                              if (data == HEAD_BYTE1)                              {                                  log_step++;                              }                              break;                            case 1:                              if (data == HEAD_BYTE2)                              {                                  log_step++;                              }                              else                              {                                  log_step = 0;                              }                              break;                            case 2:                              log_step = 0;                              try                              {                                  var line = logEntryObjects(data' br);                                    return line;                              }                              catch                              {                                  Console.WriteLine("Bad Binary log line {0}"' data);                              }                              break;                      }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,logEntryObjects,The following statement contains a magic number: switch (packettype)                  {                      case 0x80: // FMT                            log_Format logfmt = new log_Format();                            object obj = logfmt;                            int len = Marshal.SizeOf(obj);                            byte[] bytearray = new byte[len];                            br.Read(bytearray' 0' bytearray.Length);                            IntPtr i = Marshal.AllocHGlobal(len);                            // create structure from ptr                          obj = Marshal.PtrToStructure(i' obj.GetType());                            // copy byte array to ptr                          Marshal.Copy(bytearray' 0' i' len);                            obj = Marshal.PtrToStructure(i' obj.GetType());                            Marshal.FreeHGlobal(i);                            logfmt = (log_Format) obj;                            string lgname = ASCIIEncoding.ASCII.GetString(logfmt.name).Trim(new char[] {'\0'});                          string lgformat = ASCIIEncoding.ASCII.GetString(logfmt.format).Trim(new char[] {'\0'});                          string lglabels = ASCIIEncoding.ASCII.GetString(logfmt.labels).Trim(new char[] {'\0'});                            logformat[lgname] = logfmt;                            return new object[] {"FMT"' logfmt.type' logfmt.length' lgname' lgformat' lglabels};                        default:                          string format = "";                          string name = "";                          int size = 0;                            if (packettypecache[packettype].length != 0)                          {                              var fmt = packettypecache[packettype];                              name = fmt.name;                              format = fmt.format;                              size = fmt.length;                          }                          else                          {                              foreach (log_Format fmt in logformat.Values)                              {                                  packettypecache[fmt.type] = new log_format_cache()                                  {                                      length = fmt.length'                                      type = fmt.type'                                      name = ASCIIEncoding.ASCII.GetString(fmt.name).Trim(new char[] {'\0'})'                                      format = ASCIIEncoding.ASCII.GetString(fmt.format).Trim(new char[] {'\0'})'                                  };                                    if (fmt.type == packettype)                                  {                                      name = packettypecache[fmt.type].name;                                      format = packettypecache[fmt.type].format;                                      size = fmt.length;                                      //break;                                  }                              }                          }                            // didnt find a match' return unknown packet type                          if (size == 0)                              return null;                            byte[] data = new byte[size - 3]; // size - 3 = message - messagetype - (header *2)                            br.Read(data' 0' data.Length);                            return ProcessMessageObjects(data' name' format);                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ProcessMessageObjects,The following statement contains a magic number: switch (ch)                  {                      case 'b':                          answer.Add((sbyte) message[offset]);                          offset++;                          break;                      case 'B':                          answer.Add(message[offset]);                          offset++;                          break;                      case 'h':                          answer.Add(BitConverter.ToInt16(message' offset));                          offset += 2;                          break;                      case 'H':                          answer.Add(BitConverter.ToUInt16(message' offset));                          offset += 2;                          break;                      case 'i':                          answer.Add(BitConverter.ToInt32(message' offset));                          offset += 4;                          break;                      case 'I':                          answer.Add(BitConverter.ToUInt32(message' offset));                          offset += 4;                          break;                      case 'q':                          answer.Add(BitConverter.ToInt64(message' offset));                          offset += 8;                          break;                      case 'Q':                          answer.Add(BitConverter.ToUInt64(message' offset));                          offset += 8;                          break;                      case 'f':                          answer.Add(BitConverter.ToSingle(message' offset));                          offset += 4;                          break;                      case 'd':                          answer.Add(BitConverter.ToDouble(message' offset));                          offset += 8;                          break;                      case 'c':                          answer.Add((BitConverter.ToInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'C':                          answer.Add((BitConverter.ToUInt16(message' offset)/100.0));                          offset += 2;                          break;                      case 'e':                          answer.Add((BitConverter.ToInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'E':                          answer.Add((BitConverter.ToUInt32(message' offset)/100.0));                          offset += 4;                          break;                      case 'L':                          answer.Add(((double) BitConverter.ToInt32(message' offset)/10000000.0));                          offset += 4;                          break;                      case 'n':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 4).Trim(new char[] {'\0'}));                          offset += 4;                          break;                      case 'N':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 16).Trim(new char[] {'\0'}));                          offset += 16;                          break;                      case 'M':                          int modeno = message[offset];                          string mode = onFlightMode?.Invoke(_firmware' modeno);                          if (mode == null)                              mode = modeno.ToString();                          answer.Add(mode);                          offset++;                          break;                      case 'Z':                          answer.Add(ASCIIEncoding.ASCII.GetString(message' offset' 64).Trim(new char[] {'\0'}));                          offset += 64;                          break;                      case 'a':                          answer.Add(new UnionArray(message.Skip(offset).Take(64).ToArray()));                          offset += 2 * 32;                          break;                      default:                          return null;                  }
Magic Number,MissionPlanner.Utilities,UnionArray,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ToString,The following statement contains a magic number: return "[" + String.Join(" "' Shorts.Take((Bytes.Length / 2)).ToList()) + "]";
Magic Number,MissionPlanner.Utilities,CaptureMJPEG,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CaptureMJPEG.cs,ReadLine,The following statement contains a magic number: DateTime deadline = DateTime.Now.AddSeconds(5);
Magic Number,MissionPlanner.Utilities,CaptureMJPEG,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CaptureMJPEG.cs,ReadLine,The following statement contains a magic number: deadline = DateTime.Now.AddSeconds(5);
Magic Number,MissionPlanner.Utilities,CaptureMJPEG,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CaptureMJPEG.cs,getUrl,The following statement contains a magic number: do                      {                          line = ReadLine(br);                          if (line.StartsWith("--"))                          {                              mpheader = line;                              break;                          }                      } while (line.Length > 2);
Magic Number,MissionPlanner.Utilities,CaptureMJPEG,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CaptureMJPEG.cs,getUrl,The following statement contains a magic number: dataStream.ReadTimeout = 10000;
Magic Number,MissionPlanner.Utilities,CaptureMJPEG,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CaptureMJPEG.cs,getUrl,The following statement contains a magic number: br.BaseStream.ReadTimeout = 10000;
Magic Number,MissionPlanner.Utilities,CaptureMJPEG,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CaptureMJPEG.cs,getUrl,The following statement contains a magic number: dataStream.ReadTimeout = 3000;
Magic Number,MissionPlanner.Utilities,CaptureMJPEG,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CaptureMJPEG.cs,getHeader,The following statement contains a magic number: items.Length == 2
Magic Number,MissionPlanner.Utilities,CleanDrivers,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CleanDrivers.cs,GetOSArchitecture,The following statement contains a magic number: return (String.IsNullOrEmpty(pa) ? 32 : 64);
Magic Number,MissionPlanner.Utilities,CleanDrivers,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CleanDrivers.cs,GetOSArchitecture,The following statement contains a magic number: return (String.IsNullOrEmpty(pa) ? 32 : 64);
Magic Number,MissionPlanner.Utilities,CollectionBuffer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CollectionBuffer.cs,setlinecount,The following statement contains a magic number: byte[] buffer = new byte[1024*1024];
Magic Number,MissionPlanner.Utilities,CollectionBuffer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CollectionBuffer.cs,setlinecount,The following statement contains a magic number: byte[] buffer = new byte[1024*1024];
Magic Number,MissionPlanner.Utilities,CollectionBuffer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CollectionBuffer.cs,setlinecount,The following statement contains a magic number: int amax = Math.Min(2000' _count - 1);
Magic Number,MissionPlanner.Utilities,CollectionBuffer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CollectionBuffer.cs,setlinecount,The following statement contains a magic number: status >= 3
Magic Number,MissionPlanner.Utilities,CollectionBuffer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CollectionBuffer.cs,setlinecount,The following statement contains a magic number: gpsa > 2000
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,get_completion_percent,The following statement contains a magic number: switch (_status)              {                  case compass_cal_status_t.COMPASS_CAL_NOT_STARTED:                  case compass_cal_status_t.COMPASS_CAL_WAITING_TO_START:                      return 0.0f;                  case compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_ONE:                      return 33.3f * _samples_collected / COMPASS_CAL_NUM_SAMPLES;                  case compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_TWO:                      return 33.3f + 65.7f * ((float) (_samples_collected - _samples_thinned) /                                              (COMPASS_CAL_NUM_SAMPLES - _samples_thinned));                  case compass_cal_status_t.COMPASS_CAL_SUCCESS:                      return 100.0f;                  case compass_cal_status_t.COMPASS_CAL_FAILED:                  default:                      return 0.0f;              }
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,get_completion_percent,The following statement contains a magic number: switch (_status)              {                  case compass_cal_status_t.COMPASS_CAL_NOT_STARTED:                  case compass_cal_status_t.COMPASS_CAL_WAITING_TO_START:                      return 0.0f;                  case compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_ONE:                      return 33.3f * _samples_collected / COMPASS_CAL_NUM_SAMPLES;                  case compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_TWO:                      return 33.3f + 65.7f * ((float) (_samples_collected - _samples_thinned) /                                              (COMPASS_CAL_NUM_SAMPLES - _samples_thinned));                  case compass_cal_status_t.COMPASS_CAL_SUCCESS:                      return 100.0f;                  case compass_cal_status_t.COMPASS_CAL_FAILED:                  default:                      return 0.0f;              }
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,get_completion_percent,The following statement contains a magic number: switch (_status)              {                  case compass_cal_status_t.COMPASS_CAL_NOT_STARTED:                  case compass_cal_status_t.COMPASS_CAL_WAITING_TO_START:                      return 0.0f;                  case compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_ONE:                      return 33.3f * _samples_collected / COMPASS_CAL_NUM_SAMPLES;                  case compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_TWO:                      return 33.3f + 65.7f * ((float) (_samples_collected - _samples_thinned) /                                              (COMPASS_CAL_NUM_SAMPLES - _samples_thinned));                  case compass_cal_status_t.COMPASS_CAL_SUCCESS:                      return 100.0f;                  case compass_cal_status_t.COMPASS_CAL_FAILED:                  default:                      return 0.0f;              }
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,get_completion_percent,The following statement contains a magic number: switch (_status)              {                  case compass_cal_status_t.COMPASS_CAL_NOT_STARTED:                  case compass_cal_status_t.COMPASS_CAL_WAITING_TO_START:                      return 0.0f;                  case compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_ONE:                      return 33.3f * _samples_collected / COMPASS_CAL_NUM_SAMPLES;                  case compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_TWO:                      return 33.3f + 65.7f * ((float) (_samples_collected - _samples_thinned) /                                              (COMPASS_CAL_NUM_SAMPLES - _samples_thinned));                  case compass_cal_status_t.COMPASS_CAL_SUCCESS:                      return 100.0f;                  case compass_cal_status_t.COMPASS_CAL_FAILED:                  default:                      return 0.0f;              }
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,update_completion_mask,The following statement contains a magic number: _completion_mask[section / 8] |= (byte)(1 << (section % 8));
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,update_completion_mask,The following statement contains a magic number: _completion_mask[section / 8] |= (byte)(1 << (section % 8));
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,update_completion_mask,The following statement contains a magic number: memset(_completion_mask' 0' 10);
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,check_for_timeout,The following statement contains a magic number: running() && tnow - _last_sample_ms > 1000
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,update,The following statement contains a magic number: _fit_step >= 10
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,reset_state,The following statement contains a magic number: _params.radius = 200;
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,reset_state,The following statement contains a magic number: memset(_completion_mask' 0' 10);
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,set_status,The following statement contains a magic number: switch (status)              {                  case compass_cal_status_t.COMPASS_CAL_NOT_STARTED:                      reset_state();                      _status = compass_cal_status_t.COMPASS_CAL_NOT_STARTED;                        if (_sample_buffer != null)                      {                          free(_sample_buffer);                          _sample_buffer = null;                      }                      return true;                    case compass_cal_status_t.COMPASS_CAL_WAITING_TO_START:                      reset_state();                      _status = compass_cal_status_t.COMPASS_CAL_WAITING_TO_START;                        set_status(compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_ONE);                      return true;                    case compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_ONE:                      if (_status != compass_cal_status_t.COMPASS_CAL_WAITING_TO_START)                      {                          return false;                      }                        if (_attempt == 1 && (AP_HAL.millis() - _start_time_ms) * 1.0e-3f < _delay_start_sec)                      {                          return false;                      }                        if (_sample_buffer == null)                      {                          _sample_buffer = new CompassSample[COMPASS_CAL_NUM_SAMPLES];                          for (var i = 0; i < _sample_buffer.Length; i++)                          {                              _sample_buffer[i] = new CompassSample();                          }                          //(CompassSample) malloc(Marshal.SizeOf(CompassSample) *                              //                      COMPASS_CAL_NUM_SAMPLES);                      }                        if (_sample_buffer != null)                      {                          initialize_fit();                          _status = compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_ONE;                          return true;                      }                        return false;                    case compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_TWO:                      if (_status != compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_ONE)                      {                          return false;                      }                      thin_samples();                      initialize_fit();                      _status = compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_TWO;                      return true;                    case compass_cal_status_t.COMPASS_CAL_SUCCESS:                      if (_status != compass_cal_status_t.COMPASS_CAL_RUNNING_STEP_TWO)                      {                          return false;                      }                        if (_sample_buffer != null)                      {                          free(_sample_buffer);                          _sample_buffer = null;                      }                        _status = compass_cal_status_t.COMPASS_CAL_SUCCESS;                      return true;                    case compass_cal_status_t.COMPASS_CAL_FAILED:                      if (_status == compass_cal_status_t.COMPASS_CAL_NOT_STARTED)                      {                          return false;                      }                        if (_retry && set_status(compass_cal_status_t.COMPASS_CAL_WAITING_TO_START))                      {                          _attempt++;                          return true;                      }                        if (_sample_buffer != null)                      {                          free(_sample_buffer);                          _sample_buffer = null;                      }                        _status = compass_cal_status_t.COMPASS_CAL_FAILED;                      return true;                    default:                      return false;              }
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,fit_acceptable,The following statement contains a magic number: !isnan(_fitness) &&                  _params.radius > 150 && _params.radius < 950 && //Earth's magnetic field strength range: 250-850mG                  fabsf(_params.offset.x) < _offset_max &&                  fabsf(_params.offset.y) < _offset_max &&                  fabsf(_params.offset.z) < _offset_max &&                  _params.diag.x > 0.2f && _params.diag.x < 5.0f &&                  _params.diag.y > 0.2f && _params.diag.y < 5.0f &&                  _params.diag.z > 0.2f && _params.diag.z < 5.0f &&                  fabsf(_params.offdiag.x) < 1.0f && //absolute of sine/cosine output cannot be greater than 1                  fabsf(_params.offdiag.y) < 1.0f &&                  fabsf(_params.offdiag.z) < 1.0f
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,fit_acceptable,The following statement contains a magic number: !isnan(_fitness) &&                  _params.radius > 150 && _params.radius < 950 && //Earth's magnetic field strength range: 250-850mG                  fabsf(_params.offset.x) < _offset_max &&                  fabsf(_params.offset.y) < _offset_max &&                  fabsf(_params.offset.z) < _offset_max &&                  _params.diag.x > 0.2f && _params.diag.x < 5.0f &&                  _params.diag.y > 0.2f && _params.diag.y < 5.0f &&                  _params.diag.z > 0.2f && _params.diag.z < 5.0f &&                  fabsf(_params.offdiag.x) < 1.0f && //absolute of sine/cosine output cannot be greater than 1                  fabsf(_params.offdiag.y) < 1.0f &&                  fabsf(_params.offdiag.z) < 1.0f
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,fit_acceptable,The following statement contains a magic number: !isnan(_fitness) &&                  _params.radius > 150 && _params.radius < 950 && //Earth's magnetic field strength range: 250-850mG                  fabsf(_params.offset.x) < _offset_max &&                  fabsf(_params.offset.y) < _offset_max &&                  fabsf(_params.offset.z) < _offset_max &&                  _params.diag.x > 0.2f && _params.diag.x < 5.0f &&                  _params.diag.y > 0.2f && _params.diag.y < 5.0f &&                  _params.diag.z > 0.2f && _params.diag.z < 5.0f &&                  fabsf(_params.offdiag.x) < 1.0f && //absolute of sine/cosine output cannot be greater than 1                  fabsf(_params.offdiag.y) < 1.0f &&                  fabsf(_params.offdiag.z) < 1.0f
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,fit_acceptable,The following statement contains a magic number: !isnan(_fitness) &&                  _params.radius > 150 && _params.radius < 950 && //Earth's magnetic field strength range: 250-850mG                  fabsf(_params.offset.x) < _offset_max &&                  fabsf(_params.offset.y) < _offset_max &&                  fabsf(_params.offset.z) < _offset_max &&                  _params.diag.x > 0.2f && _params.diag.x < 5.0f &&                  _params.diag.y > 0.2f && _params.diag.y < 5.0f &&                  _params.diag.z > 0.2f && _params.diag.z < 5.0f &&                  fabsf(_params.offdiag.x) < 1.0f && //absolute of sine/cosine output cannot be greater than 1                  fabsf(_params.offdiag.y) < 1.0f &&                  fabsf(_params.offdiag.z) < 1.0f
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,fit_acceptable,The following statement contains a magic number: !isnan(_fitness) &&                  _params.radius > 150 && _params.radius < 950 && //Earth's magnetic field strength range: 250-850mG                  fabsf(_params.offset.x) < _offset_max &&                  fabsf(_params.offset.y) < _offset_max &&                  fabsf(_params.offset.z) < _offset_max &&                  _params.diag.x > 0.2f && _params.diag.x < 5.0f &&                  _params.diag.y > 0.2f && _params.diag.y < 5.0f &&                  _params.diag.z > 0.2f && _params.diag.z < 5.0f &&                  fabsf(_params.offdiag.x) < 1.0f && //absolute of sine/cosine output cannot be greater than 1                  fabsf(_params.offdiag.y) < 1.0f &&                  fabsf(_params.offdiag.z) < 1.0f
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,fit_acceptable,The following statement contains a magic number: !isnan(_fitness) &&                  _params.radius > 150 && _params.radius < 950 && //Earth's magnetic field strength range: 250-850mG                  fabsf(_params.offset.x) < _offset_max &&                  fabsf(_params.offset.y) < _offset_max &&                  fabsf(_params.offset.z) < _offset_max &&                  _params.diag.x > 0.2f && _params.diag.x < 5.0f &&                  _params.diag.y > 0.2f && _params.diag.y < 5.0f &&                  _params.diag.z > 0.2f && _params.diag.z < 5.0f &&                  fabsf(_params.offdiag.x) < 1.0f && //absolute of sine/cosine output cannot be greater than 1                  fabsf(_params.offdiag.y) < 1.0f &&                  fabsf(_params.offdiag.z) < 1.0f
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,fit_acceptable,The following statement contains a magic number: !isnan(_fitness) &&                  _params.radius > 150 && _params.radius < 950 && //Earth's magnetic field strength range: 250-850mG                  fabsf(_params.offset.x) < _offset_max &&                  fabsf(_params.offset.y) < _offset_max &&                  fabsf(_params.offset.z) < _offset_max &&                  _params.diag.x > 0.2f && _params.diag.x < 5.0f &&                  _params.diag.y > 0.2f && _params.diag.y < 5.0f &&                  _params.diag.z > 0.2f && _params.diag.z < 5.0f &&                  fabsf(_params.offdiag.x) < 1.0f && //absolute of sine/cosine output cannot be greater than 1                  fabsf(_params.offdiag.y) < 1.0f &&                  fabsf(_params.offdiag.z) < 1.0f
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,fit_acceptable,The following statement contains a magic number: !isnan(_fitness) &&                  _params.radius > 150 && _params.radius < 950 && //Earth's magnetic field strength range: 250-850mG                  fabsf(_params.offset.x) < _offset_max &&                  fabsf(_params.offset.y) < _offset_max &&                  fabsf(_params.offset.z) < _offset_max &&                  _params.diag.x > 0.2f && _params.diag.x < 5.0f &&                  _params.diag.y > 0.2f && _params.diag.y < 5.0f &&                  _params.diag.z > 0.2f && _params.diag.z < 5.0f &&                  fabsf(_params.offdiag.x) < 1.0f && //absolute of sine/cosine output cannot be greater than 1                  fabsf(_params.offdiag.y) < 1.0f &&                  fabsf(_params.offdiag.z) < 1.0f
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,accept_sample,The following statement contains a magic number: staticuint16_t faces = (staticuint16_t)(2 * COMPASS_CAL_NUM_SAMPLES - 4);
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,accept_sample,The following statement contains a magic number: staticuint16_t faces = (staticuint16_t)(2 * COMPASS_CAL_NUM_SAMPLES - 4);
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,accept_sample,The following statement contains a magic number: staticfloat a = (4.0f * Utils.PI / (3.0f * faces)) + Utils.PI / 3.0f;
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,accept_sample,The following statement contains a magic number: staticfloat a = (4.0f * Utils.PI / (3.0f * faces)) + Utils.PI / 3.0f;
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,accept_sample,The following statement contains a magic number: staticfloat a = (4.0f * Utils.PI / (3.0f * faces)) + Utils.PI / 3.0f;
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,accept_sample,The following statement contains a magic number: staticfloat theta = 0.5f * acosf(cosf(a) / (1.0f - cosf(a)));
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,accept_sample,The following statement contains a magic number: float min_distance = _params.radius * 2 * sinf(theta / 2);
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,accept_sample,The following statement contains a magic number: float min_distance = _params.radius * 2 * sinf(theta / 2);
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,calc_mean_squared_residuals,The following statement contains a magic number: return 1.0e30f;
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,calc_sphere_jacob,The following statement contains a magic number: ret[2] = -1.0f * (((offdiag.x * A) + (diag.y * B) + (offdiag.z * C)) / length);
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,calc_sphere_jacob,The following statement contains a magic number: ret[3] = -1.0f * (((offdiag.y * A) + (offdiag.z * B) + (diag.z * C)) / length);
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,run_sphere_fit,The following statement contains a magic number: float lma_damping = 10.0f;
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,run_sphere_fit,The following statement contains a magic number: !inverse(JTJ' JTJ' 4)
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,run_sphere_fit,The following statement contains a magic number: !inverse(JTJ2' JTJ2' 4)
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,calc_ellipsoid_jacob,The following statement contains a magic number: ret[2] = -1.0f * (((offdiag.y * A) + (offdiag.z * B) + (diag.z * C)) / length);
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,calc_ellipsoid_jacob,The following statement contains a magic number: ret[3] = -1.0f * ((sample.x + offset.x) * A) / length;
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,calc_ellipsoid_jacob,The following statement contains a magic number: ret[4] = -1.0f * ((sample.y + offset.y) * B) / length;
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,calc_ellipsoid_jacob,The following statement contains a magic number: ret[5] = -1.0f * ((sample.z + offset.z) * C) / length;
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,calc_ellipsoid_jacob,The following statement contains a magic number: ret[6] = -1.0f * (((sample.y + offset.y) * A) + ((sample.x + offset.x) * B)) / length;
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,calc_ellipsoid_jacob,The following statement contains a magic number: ret[7] = -1.0f * (((sample.z + offset.z) * A) + ((sample.x + offset.x) * C)) / length;
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,calc_ellipsoid_jacob,The following statement contains a magic number: ret[8] = -1.0f * (((sample.z + offset.z) * B) + ((sample.y + offset.y) * C)) / length;
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,run_ellipsoid_fit,The following statement contains a magic number: float lma_damping = 10.0f;
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,run_ellipsoid_fit,The following statement contains a magic number: !inverse(JTJ' JTJ' 9)
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,run_ellipsoid_fit,The following statement contains a magic number: !inverse(JTJ2' JTJ2' 9)
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,get_random16,The following statement contains a magic number: m_z = 36969 * (m_z & 0xFFFFu) + (m_z >> 16);
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,get_random16,The following statement contains a magic number: m_z = 36969 * (m_z & 0xFFFFu) + (m_z >> 16);
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,get_random16,The following statement contains a magic number: m_w = 18000 * (m_w & 0xFFFFu) + (m_w >> 16);
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,get_random16,The following statement contains a magic number: m_w = 18000 * (m_w & 0xFFFFu) + (m_w >> 16);
Magic Number,MissionPlanner.Utilities,CompassCalibrator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,get_random16,The following statement contains a magic number: return (uint16_t) (((m_z << 16) + m_w) & 0xFFFF);
Magic Number,MissionPlanner.Utilities,CompassSample,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,COMPASS_CAL_SAMPLE_SCALE_TO_FIXED,The following statement contains a magic number: return ((int16_t) constrain_float(roundf(__X * 8.0f)' INT16_MIN' INT16_MAX));
Magic Number,MissionPlanner.Utilities,CompassSample,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CompassCalibrator.cs,COMPASS_CAL_SAMPLE_SCALE_TO_FLOAT,The following statement contains a magic number: return (__X / 8.0f);
Magic Number,MissionPlanner.Utilities,dfgpslag,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\dfgpslag.cs,getdata,The following statement contains a magic number: switch (item.msgtype)                  {                      case "GPS":                      case "GPS2":                          if ((Byte)item.GetRaw("Status") >= 3)                          {                              var v = new Vector3(                                  (Single) item.GetRaw("Spd") * Math.Cos(radians((Single) item.GetRaw("GCrs")))'                                  (Single) item.GetRaw("Spd") * Math.Sin(radians((Single) item.GetRaw("GCrs")))'                                  (Single) item.GetRaw("VZ"));                              vel.Add(v);                              timestamps.Add(item.time);                              accel_indexes.Add(Math.Max(gaccel.Count - 1' 0));                          }                            break;                      case "IMU":                          if (ATT.HasValue)                          {                              gaccel.Add(earth_accel_df(item' ATT.Value));                              if (IMU.HasValue)                              {                                  var dt = item.time - IMU.Value.time;                                  dtsum += dt.TotalSeconds;                                  dtcount += 1;                              }                              IMU = item;                          }                          break;                      case "ATT":                          ATT = item;                          break;                  }
Magic Number,MissionPlanner.Utilities,dfgpslag,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\dfgpslag.cs,getdata,The following statement contains a magic number: Enumerable.Range(0' 100)
Magic Number,MissionPlanner.Utilities,dfgpslag,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\dfgpslag.cs,velocity_error,The following statement contains a magic number: sum += 0.5 * (ex + ey);
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,ReadLog,The following statement contains a magic number: log.Info("loading log " + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,ReadLog,The following statement contains a magic number: log.Info("loading log " + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,ReadLog,The following statement contains a magic number: log.Info("loaded log " + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,ReadLog,The following statement contains a magic number: log.Info("loaded log " + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,FMTLine,The following statement contains a magic number: string[] names = new string[items.Length - 5];
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,FMTLine,The following statement contains a magic number: Array.ConstrainedCopy(items' 5' names' 0' names.Length);
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,FMTLine,The following statement contains a magic number: Label lbl = new Label()                      {                          Name = items[3]'                          Id = int.Parse(items[1])'                          Format = items[4]'                          Length = int.Parse(items[2])'                          FieldNames = names.ToList()                      };
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,FMTLine,The following statement contains a magic number: Label lbl = new Label()                      {                          Name = items[3]'                          Id = int.Parse(items[1])'                          Format = items[4]'                          Length = int.Parse(items[2])'                          FieldNames = names.ToList()                      };
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,FMTLine,The following statement contains a magic number: Label lbl = new Label()                      {                          Name = items[3]'                          Id = int.Parse(items[1])'                          Format = items[4]'                          Length = int.Parse(items[2])'                          FieldNames = names.ToList()                      };
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,GetTimeGPS,The following statement contains a magic number: var sec = long.Parse(items[indextimems]) / 1000.0;
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,GetTimeGPS,The following statement contains a magic number: week > 5000 || week < 0 || sec > 60*60*24*7 || sec < 0
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,GetTimeGPS,The following statement contains a magic number: week > 5000 || week < 0 || sec > 60*60*24*7 || sec < 0
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,GetTimeGPS,The following statement contains a magic number: week > 5000 || week < 0 || sec > 60*60*24*7 || sec < 0
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,GetTimeGPS,The following statement contains a magic number: week > 5000 || week < 0 || sec > 60*60*24*7 || sec < 0
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,GetTimeGPS,The following statement contains a magic number: week > 5000 || week < 0 || sec > 60*60*24*7 || sec < 0
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,gpsTimeToTime,The following statement contains a magic number: var basetime = new DateTime(1980' 1' 6' 0' 0' 0' DateTimeKind.Utc);
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,gpsTimeToTime,The following statement contains a magic number: var basetime = new DateTime(1980' 1' 6' 0' 0' 0' DateTimeKind.Utc);
Magic Number,MissionPlanner.Utilities,DFLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,gpsTimeToTime,The following statement contains a magic number: basetime = basetime.AddDays(week*7);
Magic Number,MissionPlanner.Utilities,DFItem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLog.cs,DFItem,The following statement contains a magic number: parent.msoffset = long.Parse(items[indextimeus]) / 1000;
Magic Number,MissionPlanner.Utilities,DigitalSky,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DigitalSky.cs,test,The following statement contains a magic number: var flyArea = perm.Value["flyArea"].Children().Select(a =>                                  new PointLatLngAlt(a["latitude"].Value<double>()'                                      a["longitude"].Value<double>()'                                      perm.Value["maxAltitude"].Value<double>() / 3.281'                                      perm.Value["id"].Value<string>()));
Magic Number,MissionPlanner.Utilities,DownloadStream,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,expireCache,The following statement contains a magic number: var uridates = _instances.Where(a =>                      {                          return a._uri == downloadStream._uri && a._lastread < DateTime.Now.AddSeconds(-180);                      });
Magic Number,MissionPlanner.Utilities,DownloadStream,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,DownloadStream,The following statement contains a magic number: _timer = new Timer(a => { expireCache(); }' null' 1000 * 30' 1000 * 30);
Magic Number,MissionPlanner.Utilities,DownloadStream,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,DownloadStream,The following statement contains a magic number: _timer = new Timer(a => { expireCache(); }' null' 1000 * 30' 1000 * 30);
Magic Number,MissionPlanner.Utilities,DownloadStream,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,DownloadStream,The following statement contains a magic number: _timer = new Timer(a => { expireCache(); }' null' 1000 * 30' 1000 * 30);
Magic Number,MissionPlanner.Utilities,DownloadStream,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,DownloadStream,The following statement contains a magic number: _timer = new Timer(a => { expireCache(); }' null' 1000 * 30' 1000 * 30);
Magic Number,MissionPlanner.Utilities,DownloadStream,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,getAllData,The following statement contains a magic number: chunksize = 1024 * 2;
Magic Number,MissionPlanner.Utilities,DownloadStream,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,getAllData,The following statement contains a magic number: chunksize = 1024 * 2;
Magic Number,MissionPlanner.Utilities,DownloadStream,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,getAllData,The following statement contains a magic number: chunksize < 1024 * 2
Magic Number,MissionPlanner.Utilities,DownloadStream,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,getAllData,The following statement contains a magic number: chunksize < 1024 * 2
Magic Number,MissionPlanner.Utilities,DownloadStream,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,GetChunk,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,getFilefromNet,The following statement contains a magic number: request.Timeout = 10000;
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,getFilefromNet,The following statement contains a magic number: byte[] buf1 = new byte[1024];
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,getFilefromNet,The following statement contains a magic number: var percent = ((got / (float)contlen) * 100.0f);
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,getFilefromNet,The following statement contains a magic number: var timeleft = TimeSpan.FromSeconds(((elapsed / percent) * (100 - percent)));
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,CheckHTTPFileExists,The following statement contains a magic number: webRequest.Timeout = 10000;
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,ParallelDownloadFile,The following statement contains a magic number: chunkSize = 1024 * 1024 * 10;
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,ParallelDownloadFile,The following statement contains a magic number: chunkSize = 1024 * 1024 * 10;
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,ParallelDownloadFile,The following statement contains a magic number: chunkSize = 1024 * 1024 * 10;
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,ParallelDownloadFile,The following statement contains a magic number: Parallel.ForEach(LongRange(0' 1 + size / chunkSize)' new ParallelOptions { MaxDegreeOfParallelism = 3 }' (start) =>                  {                      HttpWebRequest request = (HttpWebRequest)WebRequest.Create(uri);                      if (!String.IsNullOrEmpty(Settings.Instance.UserAgent))                          ((HttpWebRequest)request).UserAgent = Settings.Instance.UserAgent;                      var minrange = start * chunkSize;                      var maxrange = Math.Min(start * chunkSize + chunkSize - 1' size);                      request.AddRange(minrange' maxrange);                      log.Info(String.Format("chunk {0} {1} {2}-{3}"' start' uri' minrange' maxrange));                      HttpWebResponse response = (HttpWebResponse)request.GetResponse();                        log.Info(start + " " + uri + " " + response.StatusCode + " " + response.ContentLength);                        if (response.StatusCode != HttpStatusCode.PartialContent && start != 0)                      {                          // fallback to single connection;                          response.Close();                          return;                      }                        using (Stream stream = response.GetResponseStream())                      {                          byte[] array = new byte[1024 * 80];                          int count;                          while ((count = stream.Read(array' 0' array.Length)) != 0)                          {                              lock (syncObject)                              {                                  file.Seek(minrange' SeekOrigin.Begin);                                  file.Write(array' 0' count);                                  got += count;                                  minrange += count;                                  var elapsed = (DateTime.Now - starttime).TotalSeconds;                                  var percent = ((got / (float) size) * 100.0f);                                  if (lastupdate.Second != DateTime.Now.Second)                                  {                                      lastupdate = DateTime.Now;                                      Console.WriteLine("{0} bps {1} {2}s {3}% of {4}     \r"' got / elapsed' got' elapsed'                                          percent' size);                                      var timeleft = TimeSpan.FromSeconds(((elapsed / percent) * (100 - percent)));                                      status?.Invoke((int) percent'                                          "Downloading.. ETA: " +                                         //DateTime.Now.AddSeconds(((elapsed / percent) * (100 - percent))).ToShortTimeString()                                          formatTimeSpan(timeleft)                                          );                                  }                              }                          }                      }                  });
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,ParallelDownloadFile,The following statement contains a magic number: Parallel.ForEach(LongRange(0' 1 + size / chunkSize)' new ParallelOptions { MaxDegreeOfParallelism = 3 }' (start) =>                  {                      HttpWebRequest request = (HttpWebRequest)WebRequest.Create(uri);                      if (!String.IsNullOrEmpty(Settings.Instance.UserAgent))                          ((HttpWebRequest)request).UserAgent = Settings.Instance.UserAgent;                      var minrange = start * chunkSize;                      var maxrange = Math.Min(start * chunkSize + chunkSize - 1' size);                      request.AddRange(minrange' maxrange);                      log.Info(String.Format("chunk {0} {1} {2}-{3}"' start' uri' minrange' maxrange));                      HttpWebResponse response = (HttpWebResponse)request.GetResponse();                        log.Info(start + " " + uri + " " + response.StatusCode + " " + response.ContentLength);                        if (response.StatusCode != HttpStatusCode.PartialContent && start != 0)                      {                          // fallback to single connection;                          response.Close();                          return;                      }                        using (Stream stream = response.GetResponseStream())                      {                          byte[] array = new byte[1024 * 80];                          int count;                          while ((count = stream.Read(array' 0' array.Length)) != 0)                          {                              lock (syncObject)                              {                                  file.Seek(minrange' SeekOrigin.Begin);                                  file.Write(array' 0' count);                                  got += count;                                  minrange += count;                                  var elapsed = (DateTime.Now - starttime).TotalSeconds;                                  var percent = ((got / (float) size) * 100.0f);                                  if (lastupdate.Second != DateTime.Now.Second)                                  {                                      lastupdate = DateTime.Now;                                      Console.WriteLine("{0} bps {1} {2}s {3}% of {4}     \r"' got / elapsed' got' elapsed'                                          percent' size);                                      var timeleft = TimeSpan.FromSeconds(((elapsed / percent) * (100 - percent)));                                      status?.Invoke((int) percent'                                          "Downloading.. ETA: " +                                         //DateTime.Now.AddSeconds(((elapsed / percent) * (100 - percent))).ToShortTimeString()                                          formatTimeSpan(timeleft)                                          );                                  }                              }                          }                      }                  });
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,ParallelDownloadFile,The following statement contains a magic number: Parallel.ForEach(LongRange(0' 1 + size / chunkSize)' new ParallelOptions { MaxDegreeOfParallelism = 3 }' (start) =>                  {                      HttpWebRequest request = (HttpWebRequest)WebRequest.Create(uri);                      if (!String.IsNullOrEmpty(Settings.Instance.UserAgent))                          ((HttpWebRequest)request).UserAgent = Settings.Instance.UserAgent;                      var minrange = start * chunkSize;                      var maxrange = Math.Min(start * chunkSize + chunkSize - 1' size);                      request.AddRange(minrange' maxrange);                      log.Info(String.Format("chunk {0} {1} {2}-{3}"' start' uri' minrange' maxrange));                      HttpWebResponse response = (HttpWebResponse)request.GetResponse();                        log.Info(start + " " + uri + " " + response.StatusCode + " " + response.ContentLength);                        if (response.StatusCode != HttpStatusCode.PartialContent && start != 0)                      {                          // fallback to single connection;                          response.Close();                          return;                      }                        using (Stream stream = response.GetResponseStream())                      {                          byte[] array = new byte[1024 * 80];                          int count;                          while ((count = stream.Read(array' 0' array.Length)) != 0)                          {                              lock (syncObject)                              {                                  file.Seek(minrange' SeekOrigin.Begin);                                  file.Write(array' 0' count);                                  got += count;                                  minrange += count;                                  var elapsed = (DateTime.Now - starttime).TotalSeconds;                                  var percent = ((got / (float) size) * 100.0f);                                  if (lastupdate.Second != DateTime.Now.Second)                                  {                                      lastupdate = DateTime.Now;                                      Console.WriteLine("{0} bps {1} {2}s {3}% of {4}     \r"' got / elapsed' got' elapsed'                                          percent' size);                                      var timeleft = TimeSpan.FromSeconds(((elapsed / percent) * (100 - percent)));                                      status?.Invoke((int) percent'                                          "Downloading.. ETA: " +                                         //DateTime.Now.AddSeconds(((elapsed / percent) * (100 - percent))).ToShortTimeString()                                          formatTimeSpan(timeleft)                                          );                                  }                              }                          }                      }                  });
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,ParallelDownloadFile,The following statement contains a magic number: Parallel.ForEach(LongRange(0' 1 + size / chunkSize)' new ParallelOptions { MaxDegreeOfParallelism = 3 }' (start) =>                  {                      HttpWebRequest request = (HttpWebRequest)WebRequest.Create(uri);                      if (!String.IsNullOrEmpty(Settings.Instance.UserAgent))                          ((HttpWebRequest)request).UserAgent = Settings.Instance.UserAgent;                      var minrange = start * chunkSize;                      var maxrange = Math.Min(start * chunkSize + chunkSize - 1' size);                      request.AddRange(minrange' maxrange);                      log.Info(String.Format("chunk {0} {1} {2}-{3}"' start' uri' minrange' maxrange));                      HttpWebResponse response = (HttpWebResponse)request.GetResponse();                        log.Info(start + " " + uri + " " + response.StatusCode + " " + response.ContentLength);                        if (response.StatusCode != HttpStatusCode.PartialContent && start != 0)                      {                          // fallback to single connection;                          response.Close();                          return;                      }                        using (Stream stream = response.GetResponseStream())                      {                          byte[] array = new byte[1024 * 80];                          int count;                          while ((count = stream.Read(array' 0' array.Length)) != 0)                          {                              lock (syncObject)                              {                                  file.Seek(minrange' SeekOrigin.Begin);                                  file.Write(array' 0' count);                                  got += count;                                  minrange += count;                                  var elapsed = (DateTime.Now - starttime).TotalSeconds;                                  var percent = ((got / (float) size) * 100.0f);                                  if (lastupdate.Second != DateTime.Now.Second)                                  {                                      lastupdate = DateTime.Now;                                      Console.WriteLine("{0} bps {1} {2}s {3}% of {4}     \r"' got / elapsed' got' elapsed'                                          percent' size);                                      var timeleft = TimeSpan.FromSeconds(((elapsed / percent) * (100 - percent)));                                      status?.Invoke((int) percent'                                          "Downloading.. ETA: " +                                         //DateTime.Now.AddSeconds(((elapsed / percent) * (100 - percent))).ToShortTimeString()                                          formatTimeSpan(timeleft)                                          );                                  }                              }                          }                      }                  });
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,ParallelDownloadFile,The following statement contains a magic number: Parallel.ForEach(LongRange(0' 1 + size / chunkSize)' new ParallelOptions { MaxDegreeOfParallelism = 3 }' (start) =>                  {                      HttpWebRequest request = (HttpWebRequest)WebRequest.Create(uri);                      if (!String.IsNullOrEmpty(Settings.Instance.UserAgent))                          ((HttpWebRequest)request).UserAgent = Settings.Instance.UserAgent;                      var minrange = start * chunkSize;                      var maxrange = Math.Min(start * chunkSize + chunkSize - 1' size);                      request.AddRange(minrange' maxrange);                      log.Info(String.Format("chunk {0} {1} {2}-{3}"' start' uri' minrange' maxrange));                      HttpWebResponse response = (HttpWebResponse)request.GetResponse();                        log.Info(start + " " + uri + " " + response.StatusCode + " " + response.ContentLength);                        if (response.StatusCode != HttpStatusCode.PartialContent && start != 0)                      {                          // fallback to single connection;                          response.Close();                          return;                      }                        using (Stream stream = response.GetResponseStream())                      {                          byte[] array = new byte[1024 * 80];                          int count;                          while ((count = stream.Read(array' 0' array.Length)) != 0)                          {                              lock (syncObject)                              {                                  file.Seek(minrange' SeekOrigin.Begin);                                  file.Write(array' 0' count);                                  got += count;                                  minrange += count;                                  var elapsed = (DateTime.Now - starttime).TotalSeconds;                                  var percent = ((got / (float) size) * 100.0f);                                  if (lastupdate.Second != DateTime.Now.Second)                                  {                                      lastupdate = DateTime.Now;                                      Console.WriteLine("{0} bps {1} {2}s {3}% of {4}     \r"' got / elapsed' got' elapsed'                                          percent' size);                                      var timeleft = TimeSpan.FromSeconds(((elapsed / percent) * (100 - percent)));                                      status?.Invoke((int) percent'                                          "Downloading.. ETA: " +                                         //DateTime.Now.AddSeconds(((elapsed / percent) * (100 - percent))).ToShortTimeString()                                          formatTimeSpan(timeleft)                                          );                                  }                              }                          }                      }                  });
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,ParallelDownloadFile,The following statement contains a magic number: status?.Invoke(100' "Complete");
Magic Number,MissionPlanner.Utilities,Download,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Download.cs,formatTimeSpan,The following statement contains a magic number: timeleft.TotalSeconds >= 60
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: stream.Seek(3428' SeekOrigin.Begin);
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: var buffer = new byte[DTEDdata.height*2 + 12];
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: var buffer = new byte[DTEDdata.height*2 + 12];
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: int blockno = ((int) buffer[1] << 16) + ((int) buffer[2] << 8) + buffer[3];
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: int blockno = ((int) buffer[1] << 16) + ((int) buffer[2] << 8) + buffer[3];
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: int blockno = ((int) buffer[1] << 16) + ((int) buffer[2] << 8) + buffer[3];
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: int blockno = ((int) buffer[1] << 16) + ((int) buffer[2] << 8) + buffer[3];
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: int longcount = ((int) buffer[4] << 8) + buffer[5];
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: int longcount = ((int) buffer[4] << 8) + buffer[5];
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: int longcount = ((int) buffer[4] << 8) + buffer[5];
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: int latcount = ((int) buffer[6] << 8) + buffer[7];
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: int latcount = ((int) buffer[6] << 8) + buffer[7];
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: int latcount = ((int) buffer[6] << 8) + buffer[7];
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: altdata[longcount' latcount + a] =                                              (short) (((int) buffer[8 + a*2] << 8) + buffer[8 + a*2 + 1]);
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: altdata[longcount' latcount + a] =                                              (short) (((int) buffer[8 + a*2] << 8) + buffer[8 + a*2 + 1]);
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: altdata[longcount' latcount + a] =                                              (short) (((int) buffer[8 + a*2] << 8) + buffer[8 + a*2 + 1]);
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: altdata[longcount' latcount + a] =                                              (short) (((int) buffer[8 + a*2] << 8) + buffer[8 + a*2 + 1]);
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: altdata[longcount' latcount + a] =                                              (short) (((int) buffer[8 + a*2] << 8) + buffer[8 + a*2 + 1]);
Magic Number,MissionPlanner.Utilities,DTED,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,getAltitude,The following statement contains a magic number: v > -1000
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,LoadFile,The following statement contains a magic number: byte[] buffer = new byte[80];
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,LoadFile,The following statement contains a magic number: buffer = new byte[648];
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,LoadFile,The following statement contains a magic number: buffer = new byte[2700];
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,LoadFile,The following statement contains a magic number: width = int.Parse(UHL.Groups[10].Value);
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,LoadFile,The following statement contains a magic number: height = int.Parse(UHL.Groups[11].Value);
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,LoadFile,The following statement contains a magic number: x = DDDMMSSH2DD(UHL.Groups[3].Value);
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,LoadFile,The following statement contains a magic number: y = DDDMMSSH2DD(UHL.Groups[4].Value);
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,LoadFile,The following statement contains a magic number: xscale = SSSS2DD(UHL.Groups[5].Value);
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,LoadFile,The following statement contains a magic number: yscale = SSSS2DD(UHL.Groups[6].Value);
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,DDDMMSSH2DD,The following statement contains a magic number: var D = int.Parse(input.Substring(0' 3));
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,DDDMMSSH2DD,The following statement contains a magic number: var M = double.Parse(input.Substring(3' 2)) / 60;
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,DDDMMSSH2DD,The following statement contains a magic number: var M = double.Parse(input.Substring(3' 2)) / 60;
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,DDDMMSSH2DD,The following statement contains a magic number: var M = double.Parse(input.Substring(3' 2)) / 60;
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,DDDMMSSH2DD,The following statement contains a magic number: var S = double.Parse(input.Substring(5' 2)) / 60 / 60;
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,DDDMMSSH2DD,The following statement contains a magic number: var S = double.Parse(input.Substring(5' 2)) / 60 / 60;
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,DDDMMSSH2DD,The following statement contains a magic number: var S = double.Parse(input.Substring(5' 2)) / 60 / 60;
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,DDDMMSSH2DD,The following statement contains a magic number: var S = double.Parse(input.Substring(5' 2)) / 60 / 60;
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,DDDMMSSH2DD,The following statement contains a magic number: var H = input.Substring(7' 1);
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,SSSS2DD,The following statement contains a magic number: var S = double.Parse(input) / 60 / 60 / 10;
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,SSSS2DD,The following statement contains a magic number: var S = double.Parse(input) / 60 / 60 / 10;
Magic Number,MissionPlanner.Utilities,DTEDdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DTED.cs,SSSS2DD,The following statement contains a magic number: var S = double.Parse(input) / 60 / 60 / 10;
Magic Number,MissionPlanner.Utilities,Extensions,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Extensions.cs,DeDupOrderedList,The following statement contains a magic number: a < (list.Count-2)
Magic Number,MissionPlanner.Utilities,Extensions,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Extensions.cs,NowNextBy2,The following statement contains a magic number: a % 2 == 0
Magic Number,MissionPlanner.Utilities,Extensions,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Extensions.cs,toUnixTime,The following statement contains a magic number: return (int)dateTime.Subtract(new DateTime(1970' 1' 1)).TotalSeconds;
Magic Number,MissionPlanner.Utilities,Extensions,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Extensions.cs,fromUnixTime,The following statement contains a magic number: return new DateTime(1970' 1' 1).AddSeconds(time);
Magic Number,MissionPlanner.Utilities,Extensions,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Extensions.cs,toDMS,The following statement contains a magic number: double minutes = (degrees - (int) degrees) * 60;
Magic Number,MissionPlanner.Utilities,Extensions,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Extensions.cs,toDMS,The following statement contains a magic number: double seconds = (minutes - (int) minutes) * 60;
Magic Number,MissionPlanner.Utilities,FFT2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fft.cs,FreqTable,The following statement contains a magic number: double[] m_freq = new double[N/2];
Magic Number,MissionPlanner.Utilities,FFT2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fft.cs,FreqTable,The following statement contains a magic number: m_freq = new double[(N/2)];
Magic Number,MissionPlanner.Utilities,FFT2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fft.cs,FreqTable,The following statement contains a magic number: i < N/2
Magic Number,MissionPlanner.Utilities,FFT2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fft.cs,rin,The following statement contains a magic number: double SCALE = 20/Math.Log(10);
Magic Number,MissionPlanner.Utilities,FFT2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fft.cs,rin,The following statement contains a magic number: double SCALE = 20/Math.Log(10);
Magic Number,MissionPlanner.Utilities,FFT2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fft.cs,rin,The following statement contains a magic number: double[] m_mag = new double[N/2];
Magic Number,MissionPlanner.Utilities,FFT2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fft.cs,rin,The following statement contains a magic number: m_win[i] = (4.0/N)*0.5*(1 - Math.Cos(2*Math.PI*i/N));
Magic Number,MissionPlanner.Utilities,FFT2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fft.cs,rin,The following statement contains a magic number: m_win[i] = (4.0/N)*0.5*(1 - Math.Cos(2*Math.PI*i/N));
Magic Number,MissionPlanner.Utilities,FFT2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fft.cs,rin,The following statement contains a magic number: m_win[i] = (4.0/N)*0.5*(1 - Math.Cos(2*Math.PI*i/N));
Magic Number,MissionPlanner.Utilities,FFT2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fft.cs,rin,The following statement contains a magic number: i < N/2
Magic Number,MissionPlanner.Utilities,FFT2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fft.cs,run,The following statement contains a magic number: double wAngleInc = wIndexStep*2.0*Math.PI/m_N;
Magic Number,MissionPlanner.Utilities,GeoTiff,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,getAltitude,The following statement contains a magic number: altdata[row' col] = (short) ((scanline[col*2 + 1] << 8) + scanline[col*2]);
Magic Number,MissionPlanner.Utilities,GeoTiff,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,getAltitude,The following statement contains a magic number: altdata[row' col] = (short) ((scanline[col*2 + 1] << 8) + scanline[col*2]);
Magic Number,MissionPlanner.Utilities,GeoTiff,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,getAltitude,The following statement contains a magic number: altdata[row' col] = (short) ((scanline[col*2 + 1] << 8) + scanline[col*2]);
Magic Number,MissionPlanner.Utilities,GeoTiff,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,getAltitude,The following statement contains a magic number: geotiffdata.bits == 16
Magic Number,MissionPlanner.Utilities,GeoTiff,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,getAltitude,The following statement contains a magic number: v > -1000
Magic Number,MissionPlanner.Utilities,GeoTiff,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,GetAltNoCache,The following statement contains a magic number: return (short)((scanline[y * 2 + 1] << 8) + scanline[y * 2]);
Magic Number,MissionPlanner.Utilities,GeoTiff,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,GetAltNoCache,The following statement contains a magic number: return (short)((scanline[y * 2 + 1] << 8) + scanline[y * 2]);
Magic Number,MissionPlanner.Utilities,GeoTiff,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,GetAltNoCache,The following statement contains a magic number: return (short)((scanline[y * 2 + 1] << 8) + scanline[y * 2]);
Magic Number,MissionPlanner.Utilities,GeoTiff,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,GetAltNoCache,The following statement contains a magic number: geotiffdata.bits == 16
Magic Number,MissionPlanner.Utilities,geotiffdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,LoadFile,The following statement contains a magic number: j = BitConverter.ToDouble(tiepoint[1].ToByteArray()' 0 + 8);
Magic Number,MissionPlanner.Utilities,geotiffdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,LoadFile,The following statement contains a magic number: k = BitConverter.ToDouble(tiepoint[1].ToByteArray()' 0 + 16);
Magic Number,MissionPlanner.Utilities,geotiffdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,LoadFile,The following statement contains a magic number: x = BitConverter.ToDouble(tiepoint[1].ToByteArray()' 0 + 24);
Magic Number,MissionPlanner.Utilities,geotiffdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,LoadFile,The following statement contains a magic number: y = BitConverter.ToDouble(tiepoint[1].ToByteArray()' 0 + 32);
Magic Number,MissionPlanner.Utilities,geotiffdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,LoadFile,The following statement contains a magic number: z = BitConverter.ToDouble(tiepoint[1].ToByteArray()' 0 + 40);
Magic Number,MissionPlanner.Utilities,geotiffdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,LoadFile,The following statement contains a magic number: yscale = BitConverter.ToDouble(modelscale[1].ToByteArray()' 0 + 8);
Magic Number,MissionPlanner.Utilities,geotiffdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,LoadFile,The following statement contains a magic number: zscale = BitConverter.ToDouble(modelscale[1].ToByteArray()' 0 + 16);
Magic Number,MissionPlanner.Utilities,geotiffdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,LoadFile,The following statement contains a magic number: x += xscale / 2.0;
Magic Number,MissionPlanner.Utilities,geotiffdata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoTiff.cs,LoadFile,The following statement contains a magic number: y -= yscale / 2.0;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateCorridor,The following statement contains a magic number: spacing = 4;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateCorridor,The following statement contains a magic number: spacing < 4 && spacing != 0
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateCorridor,The following statement contains a magic number: distance = 0.1;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateCorridor,The following statement contains a magic number: distance < 0.1
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateCorridor,The following statement contains a magic number: var start = (int)((lanes / 2) * -1);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateCorridor,The following statement contains a magic number: (lane - start) % 2 == 1
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,GenerateOffsetPath,The following statement contains a magic number: var nextCenter = utmpositions[a + 2];
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,GenerateOffsetPath,The following statement contains a magic number: var l1prev = newpos(prevCenter' l1bearing + 90' distance);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,GenerateOffsetPath,The following statement contains a magic number: var l1curr = newpos(currCenter' l1bearing + 90' distance);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,GenerateOffsetPath,The following statement contains a magic number: var l2curr = newpos(currCenter' l2bearing + 90' distance);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,GenerateOffsetPath,The following statement contains a magic number: var l2next = newpos(nextCenter' l2bearing + 90' distance);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,GenerateOffsetPath,The following statement contains a magic number: (a + 3) == utmpositions.Count
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,GenerateOffsetPath,The following statement contains a magic number: a < utmpositions.Count - 2
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateRotary,The following statement contains a magic number: distance = 0.1;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateRotary,The following statement contains a magic number: distance < 0.1
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateRotary,The following statement contains a magic number: var maxlane = 200;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateRotary,The following statement contains a magic number: clipperOffset.AddPath(utmpositions.Select(a => { return new ClipperLib.IntPoint(a.x * 1000.0' a.y * 1000.0); }).ToList()' ClipperLib.JoinType.jtMiter' ClipperLib.EndType.etClosedPolygon);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateRotary,The following statement contains a magic number: clipperOffset.AddPath(utmpositions.Select(a => { return new ClipperLib.IntPoint(a.x * 1000.0' a.y * 1000.0); }).ToList()' ClipperLib.JoinType.jtMiter' ClipperLib.EndType.etClosedPolygon);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateRotary,The following statement contains a magic number: clipperOffset.Execute(ref tree' (Int64)(distance * 1000.0 * -lane));
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateRotary,The following statement contains a magic number: ans1 = tree.GetFirst().Contour.Select(a => new utmpos(a.X / 1000.0' a.Y / 1000.0' utmzone)).ToList();
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateRotary,The following statement contains a magic number: ans1 = tree.GetFirst().Contour.Select(a => new utmpos(a.X / 1000.0' a.Y / 1000.0' utmzone)).ToList();
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateRotary,The following statement contains a magic number: var end1 = ans[ans.Count() - 2];
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateRotary,The following statement contains a magic number: ans.Count() > 2
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: spacing = 0.1;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: spacing < 0.1 && spacing != 0
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: distance = 0.1;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: distance < 0.1
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: minLaneSeparation += 0.5F;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: newpos(ref xb1' ref yb1' angle - 90' diagdist / 2 + distance);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: newpos(ref xb1' ref yb1' angle - 90' diagdist / 2 + distance);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: newpos(ref xb1' ref yb1' angle + 180' diagdist / 2 + distance);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: newpos(ref xb1' ref yb1' angle + 180' diagdist / 2 + distance);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: newpos(ref xb2' ref yb2' angle + 90' diagdist / 2 + distance);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: newpos(ref xb2' ref yb2' angle + 90' diagdist / 2 + distance);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: newpos(ref xb2' ref yb2' angle + 180' diagdist / 2 + distance);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: newpos(ref xb2' ref yb2' angle + 180' diagdist / 2 + distance);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: newpos(ref nx' ref ny' angle' diagdist + distance * 2);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: newpos(ref x' ref y' angle + 90' distance);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,CreateGrid,The following statement contains a magic number: lines < ((diagdist + distance * 2) / distance)
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,newpos,The following statement contains a magic number: double degN = 90 - bearing;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,newpos,The following statement contains a magic number: degN += 360;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,newpos,The following statement contains a magic number: double degN = 90 - bearing;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,newpos,The following statement contains a magic number: degN += 360;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,AddAngle,The following statement contains a magic number: angle = angle % 360;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,AddAngle,The following statement contains a magic number: angle += 360;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,findClosestLine,The following statement contains a magic number: double METERS_TO_EXTEND = 5000;
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,findClosestLine,The following statement contains a magic number: double perperndicularOrientation = AddAngle(angle' 90);
Magic Number,MissionPlanner.Utilities,Grid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Grid.cs,PointInPolygon,The following statement contains a magic number: poly.Count < 3
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,StartA,The following statement contains a magic number: var th = new Thread(delegate()              {                  // prevent it falling out of scope                  GstAppSinkCallbacks callbacks2 = callbacks;                    Thread.Sleep(500);                    run = true;                    while (run && !NativeMethods.gst_app_sink_is_eos(appsink))                  {                      try                      {                          var sample = NativeMethods.gst_app_sink_try_pull_sample(appsink' GST_SECOND);                          if (sample != IntPtr.Zero)                          {                              trys = 0;                              //var caps = gst_app_sink_get_caps(appsink);                              var caps = NativeMethods.gst_sample_get_caps(sample);                              var caps_s = NativeMethods.gst_caps_get_structure(caps' 0);                              NativeMethods.gst_structure_get_int(caps_s' "width"' out Width);                              NativeMethods.gst_structure_get_int(caps_s' "height"' out Height);                                //var capsstring = gst_caps_to_string(caps_s);                              //var structure = gst_sample_get_info(sample);                              //var structstring = gst_structure_to_string(structure);                              var buffer = NativeMethods.gst_sample_get_buffer(sample);                              if (buffer != IntPtr.Zero)                              {                                  var info = new GstMapInfo();                                  if (NativeMethods.gst_buffer_map(buffer' out info' GstMapFlags.GST_MAP_READ))                                  {                                      var image = new Bitmap(Width' Height' 4 * Width'                                          SkiaSharp.SKColorType.Bgra8888' info.data);                                        _onNewImage?.Invoke(null' image);                                  }                                   NativeMethods.gst_buffer_unmap(buffer' out info);                              }                                NativeMethods.gst_sample_unref(sample);                          }                          else                          {                              log.Info("failed gst_app_sink_try_pull_sample "+ trys + "/60");                              trys++;                              if (trys > 60)                                  break;                          }                      }                      catch (Exception ex)                      {                          log.Error(ex);                          trys++;                          if (trys > 60)                              break;                      }                  }                    NativeMethods.gst_element_set_state(pipeline' GstState.GST_STATE_NULL);                  NativeMethods.gst_buffer_unref(bus);                    // cleanup                  _onNewImage?.Invoke(null' null);                    log.Info("Gstreamer Exit");                }) {IsBackground = true' Name = "gstreamer"};
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,StartA,The following statement contains a magic number: var th = new Thread(delegate()              {                  // prevent it falling out of scope                  GstAppSinkCallbacks callbacks2 = callbacks;                    Thread.Sleep(500);                    run = true;                    while (run && !NativeMethods.gst_app_sink_is_eos(appsink))                  {                      try                      {                          var sample = NativeMethods.gst_app_sink_try_pull_sample(appsink' GST_SECOND);                          if (sample != IntPtr.Zero)                          {                              trys = 0;                              //var caps = gst_app_sink_get_caps(appsink);                              var caps = NativeMethods.gst_sample_get_caps(sample);                              var caps_s = NativeMethods.gst_caps_get_structure(caps' 0);                              NativeMethods.gst_structure_get_int(caps_s' "width"' out Width);                              NativeMethods.gst_structure_get_int(caps_s' "height"' out Height);                                //var capsstring = gst_caps_to_string(caps_s);                              //var structure = gst_sample_get_info(sample);                              //var structstring = gst_structure_to_string(structure);                              var buffer = NativeMethods.gst_sample_get_buffer(sample);                              if (buffer != IntPtr.Zero)                              {                                  var info = new GstMapInfo();                                  if (NativeMethods.gst_buffer_map(buffer' out info' GstMapFlags.GST_MAP_READ))                                  {                                      var image = new Bitmap(Width' Height' 4 * Width'                                          SkiaSharp.SKColorType.Bgra8888' info.data);                                        _onNewImage?.Invoke(null' image);                                  }                                   NativeMethods.gst_buffer_unmap(buffer' out info);                              }                                NativeMethods.gst_sample_unref(sample);                          }                          else                          {                              log.Info("failed gst_app_sink_try_pull_sample "+ trys + "/60");                              trys++;                              if (trys > 60)                                  break;                          }                      }                      catch (Exception ex)                      {                          log.Error(ex);                          trys++;                          if (trys > 60)                              break;                      }                  }                    NativeMethods.gst_element_set_state(pipeline' GstState.GST_STATE_NULL);                  NativeMethods.gst_buffer_unref(bus);                    // cleanup                  _onNewImage?.Invoke(null' null);                    log.Info("Gstreamer Exit");                }) {IsBackground = true' Name = "gstreamer"};
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,StartA,The following statement contains a magic number: var th = new Thread(delegate()              {                  // prevent it falling out of scope                  GstAppSinkCallbacks callbacks2 = callbacks;                    Thread.Sleep(500);                    run = true;                    while (run && !NativeMethods.gst_app_sink_is_eos(appsink))                  {                      try                      {                          var sample = NativeMethods.gst_app_sink_try_pull_sample(appsink' GST_SECOND);                          if (sample != IntPtr.Zero)                          {                              trys = 0;                              //var caps = gst_app_sink_get_caps(appsink);                              var caps = NativeMethods.gst_sample_get_caps(sample);                              var caps_s = NativeMethods.gst_caps_get_structure(caps' 0);                              NativeMethods.gst_structure_get_int(caps_s' "width"' out Width);                              NativeMethods.gst_structure_get_int(caps_s' "height"' out Height);                                //var capsstring = gst_caps_to_string(caps_s);                              //var structure = gst_sample_get_info(sample);                              //var structstring = gst_structure_to_string(structure);                              var buffer = NativeMethods.gst_sample_get_buffer(sample);                              if (buffer != IntPtr.Zero)                              {                                  var info = new GstMapInfo();                                  if (NativeMethods.gst_buffer_map(buffer' out info' GstMapFlags.GST_MAP_READ))                                  {                                      var image = new Bitmap(Width' Height' 4 * Width'                                          SkiaSharp.SKColorType.Bgra8888' info.data);                                        _onNewImage?.Invoke(null' image);                                  }                                   NativeMethods.gst_buffer_unmap(buffer' out info);                              }                                NativeMethods.gst_sample_unref(sample);                          }                          else                          {                              log.Info("failed gst_app_sink_try_pull_sample "+ trys + "/60");                              trys++;                              if (trys > 60)                                  break;                          }                      }                      catch (Exception ex)                      {                          log.Error(ex);                          trys++;                          if (trys > 60)                              break;                      }                  }                    NativeMethods.gst_element_set_state(pipeline' GstState.GST_STATE_NULL);                  NativeMethods.gst_buffer_unref(bus);                    // cleanup                  _onNewImage?.Invoke(null' null);                    log.Info("Gstreamer Exit");                }) {IsBackground = true' Name = "gstreamer"};
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,StartA,The following statement contains a magic number: var th = new Thread(delegate()              {                  // prevent it falling out of scope                  GstAppSinkCallbacks callbacks2 = callbacks;                    Thread.Sleep(500);                    run = true;                    while (run && !NativeMethods.gst_app_sink_is_eos(appsink))                  {                      try                      {                          var sample = NativeMethods.gst_app_sink_try_pull_sample(appsink' GST_SECOND);                          if (sample != IntPtr.Zero)                          {                              trys = 0;                              //var caps = gst_app_sink_get_caps(appsink);                              var caps = NativeMethods.gst_sample_get_caps(sample);                              var caps_s = NativeMethods.gst_caps_get_structure(caps' 0);                              NativeMethods.gst_structure_get_int(caps_s' "width"' out Width);                              NativeMethods.gst_structure_get_int(caps_s' "height"' out Height);                                //var capsstring = gst_caps_to_string(caps_s);                              //var structure = gst_sample_get_info(sample);                              //var structstring = gst_structure_to_string(structure);                              var buffer = NativeMethods.gst_sample_get_buffer(sample);                              if (buffer != IntPtr.Zero)                              {                                  var info = new GstMapInfo();                                  if (NativeMethods.gst_buffer_map(buffer' out info' GstMapFlags.GST_MAP_READ))                                  {                                      var image = new Bitmap(Width' Height' 4 * Width'                                          SkiaSharp.SKColorType.Bgra8888' info.data);                                        _onNewImage?.Invoke(null' image);                                  }                                   NativeMethods.gst_buffer_unmap(buffer' out info);                              }                                NativeMethods.gst_sample_unref(sample);                          }                          else                          {                              log.Info("failed gst_app_sink_try_pull_sample "+ trys + "/60");                              trys++;                              if (trys > 60)                                  break;                          }                      }                      catch (Exception ex)                      {                          log.Error(ex);                          trys++;                          if (trys > 60)                              break;                      }                  }                    NativeMethods.gst_element_set_state(pipeline' GstState.GST_STATE_NULL);                  NativeMethods.gst_buffer_unref(bus);                    // cleanup                  _onNewImage?.Invoke(null' null);                    log.Info("Gstreamer Exit");                }) {IsBackground = true' Name = "gstreamer"};
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,GStreamer,The following statement contains a magic number: UdpPort = 5600;
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,GStreamer,The following statement contains a magic number: OutputPort = 1235;
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,_Start,The following statement contains a magic number: var deadline = DateTime.Now.AddSeconds(20);
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,_Start,The following statement contains a magic number: client.ReceiveBufferSize = 1024 * 1024 * 5;
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,_Start,The following statement contains a magic number: client.ReceiveBufferSize = 1024 * 1024 * 5;
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,_Start,The following statement contains a magic number: client.ReceiveBufferSize = 1024 * 1024 * 5;
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,_Start,The following statement contains a magic number: System.Threading.Thread.Sleep(10);
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,_Start,The following statement contains a magic number: lastdata.AddSeconds(5) < DateTime.Now
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readRTPData,The following statement contains a magic number: byte[] headerBytes = new byte[4 * 5];
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readRTPData,The following statement contains a magic number: byte[] headerBytes = new byte[4 * 5];
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readRTPData,The following statement contains a magic number: readamount += stream.Read(headerBytes' 2' headerBytes.Length - 2);
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readRTPData,The following statement contains a magic number: readamount += stream.Read(headerBytes' 2' headerBytes.Length - 2);
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readRTPData,The following statement contains a magic number: Array.Resize(ref headerBytes' headerBytes.Length + 6);
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readRTPData,The following statement contains a magic number: readamount += stream.Read(headerBytes' oldsize' 6);
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readRTPData,The following statement contains a magic number: var pixels = header.length / 4;
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readRTPData,The following statement contains a magic number: var fileoffset = (header.lineno) * width * 4 + header.offset * 4;
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readRTPData,The following statement contains a magic number: var fileoffset = (header.lineno) * width * 4 + header.offset * 4;
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readRTPData,The following statement contains a magic number: Marshal.Copy(ms.ToArray()' 0' ptr' (int) img.Width * img.Height * 4);
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readRTPData,The following statement contains a magic number: header.version == 2 && header.payloadtype == 96 && header.extsequencenumber == 0
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,readRTPData,The following statement contains a magic number: header.version == 2 && header.payloadtype == 96 && header.extsequencenumber == 0
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,Stop,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,StopAll,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,DownloadGStreamer,The following statement contains a magic number: status?.Invoke(50' "Extracting..");
Magic Number,MissionPlanner.Utilities,GStreamer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,DownloadGStreamer,The following statement contains a magic number: status?.Invoke(100' "Done.");
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: version = (byte) ((buffer[0] >> 6) & 3);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: version = (byte) ((buffer[0] >> 6) & 3);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: padding = (byte) ((buffer[0] >> 5) & 1);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: extension = (byte) ((buffer[0] >> 4) & 1);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: csrccount = (byte) ((buffer[0] >> 0) & 15);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: marker = (byte) ((buffer[1] >> 7) & 1);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: payloadtype = (byte) ((buffer[1] >> 0) & 127);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: sequencenumber = (ushort) (buffer[2] << 8 + buffer[3]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: sequencenumber = (ushort) (buffer[2] << 8 + buffer[3]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: sequencenumber = (ushort) (buffer[2] << 8 + buffer[3]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: timestamp = (uint) (buffer[4] << 24 + buffer[5] << 26 + buffer[6] << 8 + buffer[7]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: timestamp = (uint) (buffer[4] << 24 + buffer[5] << 26 + buffer[6] << 8 + buffer[7]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: timestamp = (uint) (buffer[4] << 24 + buffer[5] << 26 + buffer[6] << 8 + buffer[7]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: timestamp = (uint) (buffer[4] << 24 + buffer[5] << 26 + buffer[6] << 8 + buffer[7]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: timestamp = (uint) (buffer[4] << 24 + buffer[5] << 26 + buffer[6] << 8 + buffer[7]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: timestamp = (uint) (buffer[4] << 24 + buffer[5] << 26 + buffer[6] << 8 + buffer[7]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: timestamp = (uint) (buffer[4] << 24 + buffer[5] << 26 + buffer[6] << 8 + buffer[7]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: ssrc = (uint) (buffer[8] << 24 + buffer[9] << 26 + buffer[10] << 8 + buffer[11]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: ssrc = (uint) (buffer[8] << 24 + buffer[9] << 26 + buffer[10] << 8 + buffer[11]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: ssrc = (uint) (buffer[8] << 24 + buffer[9] << 26 + buffer[10] << 8 + buffer[11]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: ssrc = (uint) (buffer[8] << 24 + buffer[9] << 26 + buffer[10] << 8 + buffer[11]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: ssrc = (uint) (buffer[8] << 24 + buffer[9] << 26 + buffer[10] << 8 + buffer[11]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: ssrc = (uint) (buffer[8] << 24 + buffer[9] << 26 + buffer[10] << 8 + buffer[11]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: ssrc = (uint) (buffer[8] << 24 + buffer[9] << 26 + buffer[10] << 8 + buffer[11]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: extsequencenumber = (ushort) (buffer[12] << 8 + buffer[13]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: extsequencenumber = (ushort) (buffer[12] << 8 + buffer[13]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: extsequencenumber = (ushort) (buffer[12] << 8 + buffer[13]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: length = (ushort) ((buffer[14] << 8) + buffer[15]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: length = (ushort) ((buffer[14] << 8) + buffer[15]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: length = (ushort) ((buffer[14] << 8) + buffer[15]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: F = (byte) (buffer[16] >> 7);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: F = (byte) (buffer[16] >> 7);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: lineno = (ushort) (((buffer[16] & 127) << 8) + buffer[17]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: lineno = (ushort) (((buffer[16] & 127) << 8) + buffer[17]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: lineno = (ushort) (((buffer[16] & 127) << 8) + buffer[17]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: lineno = (ushort) (((buffer[16] & 127) << 8) + buffer[17]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: C = (byte) (buffer[18] >> 7);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: C = (byte) (buffer[18] >> 7);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: offset = (ushort) (((buffer[18] & 127) << 8) + buffer[19]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: offset = (ushort) (((buffer[18] & 127) << 8) + buffer[19]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: offset = (ushort) (((buffer[18] & 127) << 8) + buffer[19]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: offset = (ushort) (((buffer[18] & 127) << 8) + buffer[19]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: length2 = (ushort) ((buffer[20] << 8) + buffer[21]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: length2 = (ushort) ((buffer[20] << 8) + buffer[21]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: length2 = (ushort) ((buffer[20] << 8) + buffer[21]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: F2 = (byte) (buffer[22] >> 7);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: F2 = (byte) (buffer[22] >> 7);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: lineno2 = (ushort) (((buffer[22] & 127) << 8) + buffer[23]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: lineno2 = (ushort) (((buffer[22] & 127) << 8) + buffer[23]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: lineno2 = (ushort) (((buffer[22] & 127) << 8) + buffer[23]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: lineno2 = (ushort) (((buffer[22] & 127) << 8) + buffer[23]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: C2 = (byte) (buffer[24] >> 7);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: C2 = (byte) (buffer[24] >> 7);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: offset2 = (ushort) (((buffer[24] & 127) << 8) + buffer[25]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: offset2 = (ushort) (((buffer[24] & 127) << 8) + buffer[25]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: offset2 = (ushort) (((buffer[24] & 127) << 8) + buffer[25]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: offset2 = (ushort) (((buffer[24] & 127) << 8) + buffer[25]);
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: buffer.Length >= 26
Magic Number,MissionPlanner.Utilities,rtpheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GStreamer.cs,rtpheader,The following statement contains a magic number: var actoffset = offset * 4;
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,calc,The following statement contains a magic number: var fovh = Math.Tan(hfov / 2.0 * MathHelper.deg2rad) * plla.Alt;
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,calc,The following statement contains a magic number: var fovv = Math.Tan(vfov / 2.0 * MathHelper.deg2rad) * plla.Alt;
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,calc,The following statement contains a magic number: newpos1 = plla.newpos(bearing1 + Y - 180' Math.Sqrt(fovh * fovh + fovv * fovv));
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,calc,The following statement contains a magic number: newpos1 = plla.newpos(Y - bearing1 - 180' Math.Sqrt(fovh * fovh + fovv * fovv));
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,calc,The following statement contains a magic number: double frontangle = (P*0) + vfov/2;
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,calc,The following statement contains a magic number: double backangle = (P*0) - vfov/2;
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,calc,The following statement contains a magic number: double leftangle = (R*0) + hfov/2;
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,calc,The following statement contains a magic number: double rightangle = (R*0) - hfov/2;
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,calc,The following statement contains a magic number: Vector3 center1 = new Vector3(0' 0' 10000);
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,newpos,The following statement contains a magic number: double degN = 90 - bearing;
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,newpos,The following statement contains a magic number: degN += 360;
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,newpos,The following statement contains a magic number: double degN = 90 - bearing;
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,newpos,The following statement contains a magic number: degN += 360;
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,calcIntersection,The following statement contains a magic number: int distout = 10;
Magic Number,MissionPlanner.Utilities,ImageProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ImageProjection.cs,calcIntersection,The following statement contains a magic number: distout < (dist+100)
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Predicition,The following statement contains a magic number: return m_x.Data[0] + (dt * m_x.Data[1]) + (dt * dt * m_x.Data[2]);
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Variance,The following statement contains a magic number: Matrix f = new Matrix(3' 3)              {                  Data = new double[] {                   1' dt' dt * dt'                   0' 1' dt'                  0' 0' 1}              };
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Variance,The following statement contains a magic number: Matrix f = new Matrix(3' 3)              {                  Data = new double[] {                   1' dt' dt * dt'                   0' 1' dt'                  0' 0' 1}              };
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Reset,The following statement contains a magic number: m_q.Data[2] = qa * qx;
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Reset,The following statement contains a magic number: m_q.Data[3] = qx * qv;
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Reset,The following statement contains a magic number: m_q.Data[4] = qv * qv;
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Reset,The following statement contains a magic number: m_q.Data[5] = qa * qv;
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Reset,The following statement contains a magic number: m_q.Data[6] = qx * qa;
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Reset,The following statement contains a magic number: m_q.Data[7] = qv * qa;
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Reset,The following statement contains a magic number: m_q.Data[8] = qa * qa;
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Reset,The following statement contains a magic number: m_p.Data[0] = m_p.Data[4] = m_p.Data[8] = pd;
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Reset,The following statement contains a magic number: m_p.Data[0] = m_p.Data[4] = m_p.Data[8] = pd;
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Reset,The following statement contains a magic number: m_x.Data[2] = 0;
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Update,The following statement contains a magic number: Matrix f = new Matrix(3' 3) { Data = new double[] {                   1' dt' dt * dt'                   0' 1' dt'                  0' 0' 1} };
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Update,The following statement contains a magic number: Matrix f = new Matrix(3' 3) { Data = new double[] {                   1' dt' dt * dt'                   0' 1' dt'                  0' 0' 1} };
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Update,The following statement contains a magic number: Matrix h = Matrix.MakeIdentity(3);
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Update,The following statement contains a magic number: Matrix ht = Matrix.MakeIdentity(3);
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Update,The following statement contains a magic number: Matrix y = new Matrix(1' 3) { Data = new double[] {                   mx - m_x.Data[0]'                   mv - m_x.Data[1]'                  ma - m_x.Data[2]} };
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Update,The following statement contains a magic number: Matrix y = new Matrix(1' 3) { Data = new double[] {                   mx - m_x.Data[0]'                   mv - m_x.Data[1]'                  ma - m_x.Data[2]} };
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Update,The following statement contains a magic number: s.Data[4] += m_r;
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Update,The following statement contains a magic number: s.Data[8] += m_r;
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Update,The following statement contains a magic number: Matrix k = new Matrix(3' 3);
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Update,The following statement contains a magic number: Matrix k = new Matrix(3' 3);
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Update,The following statement contains a magic number: gain = gain < 0 ? 0 : gain > 0.25 ? 0.25 : gain;
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Update,The following statement contains a magic number: gain = gain < 0 ? 0 : gain > 0.25 ? 0.25 : gain;
Magic Number,MissionPlanner.Utilities,Kalman3D,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Kalman3D.cs,Update,The following statement contains a magic number: Matrix id = Matrix.MakeIdentity(3);
Magic Number,MissionPlanner.Utilities,L10NU,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\L10NU.cs,L10NU,The following statement contains a magic number: kv.Length == 2
Magic Number,MissionPlanner.Utilities,LineOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LineOffset.cs,GetPolygon,The following statement contains a magic number: polyline.Count <= 3
Magic Number,MissionPlanner.Utilities,LineOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LineOffset.cs,GetPolygon,The following statement contains a magic number: dist < (distm*1.1)
Magic Number,MissionPlanner.Utilities,LineOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LineOffset.cs,GetPolygon,The following statement contains a magic number: leftoffsetpoints.Add(point.newpos(bearing - 90' distm));
Magic Number,MissionPlanner.Utilities,LineOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LineOffset.cs,GetPolygon,The following statement contains a magic number: rightoffsetpoints.Add(point.newpos(bearing + 90' distm));
Magic Number,MissionPlanner.Utilities,Locationwp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\locationwp.cs,Set,The following statement contains a magic number: this.frame = 3;
Magic Number,MissionPlanner.Utilities,Locationwp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\locationwp.cs,Convert,The following statement contains a magic number: var temp = new MAVLink.mavlink_mission_item_int_t()                  {                      command = cmd.id'                      param1 = cmd.p1'                      param2 = cmd.p2'                      param3 = cmd.p3'                      param4 = cmd.p4'                      x = (int)(cmd.lat * 1.0e7)'                      y = (int)(cmd.lng * 1.0e7)'                      z = (float) cmd.alt'                      seq = cmd._seq'                      frame = cmd.frame                  };
Magic Number,MissionPlanner.Utilities,Locationwp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\locationwp.cs,Convert,The following statement contains a magic number: var temp = new MAVLink.mavlink_mission_item_int_t()                  {                      command = cmd.id'                      param1 = cmd.p1'                      param2 = cmd.p2'                      param3 = cmd.p3'                      param4 = cmd.p4'                      x = (int)(cmd.lat * 1.0e7)'                      y = (int)(cmd.lng * 1.0e7)'                      z = (float) cmd.alt'                      seq = cmd._seq'                      frame = cmd.frame                  };
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[0] = det * m.Data[3];
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[3] = det * m.Data[0];
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[1] = -det * m.Data[2];
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[2] = -det * m.Data[1];
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: m.m_c == 2
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[0] = det * (m.Data[8] * m.Data[4]) - (m.Data[7] * m.Data[5]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[0] = det * (m.Data[8] * m.Data[4]) - (m.Data[7] * m.Data[5]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[0] = det * (m.Data[8] * m.Data[4]) - (m.Data[7] * m.Data[5]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[0] = det * (m.Data[8] * m.Data[4]) - (m.Data[7] * m.Data[5]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[1] = -det * (m.Data[8] * m.Data[1]) - (m.Data[7] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[1] = -det * (m.Data[8] * m.Data[1]) - (m.Data[7] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[1] = -det * (m.Data[8] * m.Data[1]) - (m.Data[7] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[2] = det * (m.Data[5] * m.Data[1]) - (m.Data[4] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[2] = det * (m.Data[5] * m.Data[1]) - (m.Data[4] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[2] = det * (m.Data[5] * m.Data[1]) - (m.Data[4] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[2] = det * (m.Data[5] * m.Data[1]) - (m.Data[4] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[3] = -det * (m.Data[8] * m.Data[3]) - (m.Data[6] * m.Data[5]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[3] = -det * (m.Data[8] * m.Data[3]) - (m.Data[6] * m.Data[5]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[3] = -det * (m.Data[8] * m.Data[3]) - (m.Data[6] * m.Data[5]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[3] = -det * (m.Data[8] * m.Data[3]) - (m.Data[6] * m.Data[5]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[3] = -det * (m.Data[8] * m.Data[3]) - (m.Data[6] * m.Data[5]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[4] = det * (m.Data[8] * m.Data[0]) - (m.Data[6] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[4] = det * (m.Data[8] * m.Data[0]) - (m.Data[6] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[4] = det * (m.Data[8] * m.Data[0]) - (m.Data[6] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[4] = det * (m.Data[8] * m.Data[0]) - (m.Data[6] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[5] = -det * (m.Data[5] * m.Data[0]) - (m.Data[3] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[5] = -det * (m.Data[5] * m.Data[0]) - (m.Data[3] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[5] = -det * (m.Data[5] * m.Data[0]) - (m.Data[3] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[5] = -det * (m.Data[5] * m.Data[0]) - (m.Data[3] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[6] = det * (m.Data[7] * m.Data[3]) - (m.Data[6] * m.Data[4]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[6] = det * (m.Data[7] * m.Data[3]) - (m.Data[6] * m.Data[4]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[6] = det * (m.Data[7] * m.Data[3]) - (m.Data[6] * m.Data[4]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[6] = det * (m.Data[7] * m.Data[3]) - (m.Data[6] * m.Data[4]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[6] = det * (m.Data[7] * m.Data[3]) - (m.Data[6] * m.Data[4]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[7] = -det * (m.Data[7] * m.Data[0]) - (m.Data[6] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[7] = -det * (m.Data[7] * m.Data[0]) - (m.Data[6] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[7] = -det * (m.Data[7] * m.Data[0]) - (m.Data[6] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[7] = -det * (m.Data[7] * m.Data[0]) - (m.Data[6] * m.Data[2]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[8] = det * (m.Data[4] * m.Data[0]) - (m.Data[3] * m.Data[1]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[8] = det * (m.Data[4] * m.Data[0]) - (m.Data[3] * m.Data[1]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: rv.Data[8] = det * (m.Data[4] * m.Data[0]) - (m.Data[3] * m.Data[1]);
Magic Number,MissionPlanner.Utilities,Matrix,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix.cs,Invert,The following statement contains a magic number: m.m_c == 3
Magic Number,MissionPlanner.Utilities,Matrix3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix3.cs,normalize,The following statement contains a magic number: Vector3 t0 = a - (b*(0.5*error));
Magic Number,MissionPlanner.Utilities,Matrix3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Matrix3.cs,normalize,The following statement contains a magic number: Vector3 t1 = b - (a*(0.5*error));
Magic Number,MissionPlanner.Utilities,mavgraph,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\mavgraph.cs,processGraphItem,The following statement contains a magic number: temp.field = match.Groups[2].Value.ToString();
Magic Number,MissionPlanner.Utilities,WaypointFile,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MissionFile.cs,ReadWaypointFile,The following statement contains a magic number: items.Length <= 9
Magic Number,MissionPlanner.Utilities,WaypointFile,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MissionFile.cs,ReadWaypointFile,The following statement contains a magic number: temp.frame = (byte)int.Parse(items[2]' CultureInfo.InvariantCulture);
Magic Number,MissionPlanner.Utilities,WaypointFile,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MissionFile.cs,ReadWaypointFile,The following statement contains a magic number: temp.id = (ushort)Enum.Parse(typeof(MAVLink.MAV_CMD)' items[3]' false);
Magic Number,MissionPlanner.Utilities,WaypointFile,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MissionFile.cs,ReadWaypointFile,The following statement contains a magic number: temp.p1 = float.Parse(items[4]' CultureInfo.InvariantCulture);
Magic Number,MissionPlanner.Utilities,WaypointFile,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MissionFile.cs,ReadWaypointFile,The following statement contains a magic number: temp.id == 99
Magic Number,MissionPlanner.Utilities,WaypointFile,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MissionFile.cs,ReadWaypointFile,The following statement contains a magic number: temp.alt = (float)(double.Parse(items[10]' CultureInfo.InvariantCulture));
Magic Number,MissionPlanner.Utilities,WaypointFile,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MissionFile.cs,ReadWaypointFile,The following statement contains a magic number: temp.lat = (double.Parse(items[8]' CultureInfo.InvariantCulture));
Magic Number,MissionPlanner.Utilities,WaypointFile,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MissionFile.cs,ReadWaypointFile,The following statement contains a magic number: temp.lng = (double.Parse(items[9]' CultureInfo.InvariantCulture));
Magic Number,MissionPlanner.Utilities,WaypointFile,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MissionFile.cs,ReadWaypointFile,The following statement contains a magic number: temp.p2 = (float)(double.Parse(items[5]' CultureInfo.InvariantCulture));
Magic Number,MissionPlanner.Utilities,WaypointFile,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MissionFile.cs,ReadWaypointFile,The following statement contains a magic number: temp.p3 = (float)(double.Parse(items[6]' CultureInfo.InvariantCulture));
Magic Number,MissionPlanner.Utilities,WaypointFile,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MissionFile.cs,ReadWaypointFile,The following statement contains a magic number: temp.p4 = (float)(double.Parse(items[7]' CultureInfo.InvariantCulture));
Magic Number,MissionPlanner.Utilities,MissionFile,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MissionFile.cs,ConvertFromMissionItem,The following statement contains a magic number: return new Locationwp() {alt = (float)missionItem[2]' lat = missionItem[0]' lng = missionItem[1]};
Magic Number,MissionPlanner.Utilities,nmea,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\nmea.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == '$')                      {                          step = 1;                          msglencount = 0;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 'G')                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      if (msglencount > 1000)                      {                          step = 0;                        }                            buffer[msglencount + 2] = data;                          msglencount++;                      if(data == '\n')                      {                          var line = System.Text.ASCIIEncoding.ASCII.GetString(buffer' 0' msglencount + 2);                          string[] items = line.Trim().Split('''' '*');                          if (items[items.Length-1] == GetChecksum(line))                          {                              return 1;                          }                          step = 0;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,nmea,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\nmea.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == '$')                      {                          step = 1;                          msglencount = 0;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 'G')                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      if (msglencount > 1000)                      {                          step = 0;                        }                            buffer[msglencount + 2] = data;                          msglencount++;                      if(data == '\n')                      {                          var line = System.Text.ASCIIEncoding.ASCII.GetString(buffer' 0' msglencount + 2);                          string[] items = line.Trim().Split('''' '*');                          if (items[items.Length-1] == GetChecksum(line))                          {                              return 1;                          }                          step = 0;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,nmea,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\nmea.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == '$')                      {                          step = 1;                          msglencount = 0;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 'G')                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      if (msglencount > 1000)                      {                          step = 0;                        }                            buffer[msglencount + 2] = data;                          msglencount++;                      if(data == '\n')                      {                          var line = System.Text.ASCIIEncoding.ASCII.GetString(buffer' 0' msglencount + 2);                          string[] items = line.Trim().Split('''' '*');                          if (items[items.Length-1] == GetChecksum(line))                          {                              return 1;                          }                          step = 0;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,nmea,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\nmea.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == '$')                      {                          step = 1;                          msglencount = 0;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 'G')                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      if (msglencount > 1000)                      {                          step = 0;                        }                            buffer[msglencount + 2] = data;                          msglencount++;                      if(data == '\n')                      {                          var line = System.Text.ASCIIEncoding.ASCII.GetString(buffer' 0' msglencount + 2);                          string[] items = line.Trim().Split('''' '*');                          if (items[items.Length-1] == GetChecksum(line))                          {                              return 1;                          }                          step = 0;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,ParameterMetaDataParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataParser.cs,GetParameterInformation,The following statement contains a magic number: dataFromAddress.Length < 200
Magic Number,MissionPlanner.Utilities,ParameterMetaDataParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataParser.cs,ReadDataFromAddress,The following statement contains a magic number: attempt > 2
Magic Number,MissionPlanner.Utilities,ParameterMetaDataParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataParser.cs,ReadDataFromAddress,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,MissionPlanner.Utilities,ParameterMetaDataParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataParser.cs,ReadDataFromAddress,The following statement contains a magic number: request.Timeout = 10000;
Magic Number,MissionPlanner.Utilities,ParameterMetaDataRepository,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParameterMetaDataRepository.cs,GetParameterRange,The following statement contains a magic number: rangeParts.Count() == 2
Magic Number,MissionPlanner.Utilities,ParamFile,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ParamFile.cs,loadParamFile,The following statement contains a magic number: items.Length != 2
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,PointLatLngAlt,The following statement contains a magic number: this.Alt = dblarr[2];
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,PointLatLngAlt,The following statement contains a magic number: dblarr.Length > 2
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetUTMZone,The following statement contains a magic number: int zone = (int)((Lng - -186.0) / 6.0);
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetUTMZone,The following statement contains a magic number: int zone = (int)((Lng - -186.0) / 6.0);
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,newpos,The following statement contains a magic number: double radius_of_earth = 6378100.0;
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,gps_offset,The following statement contains a magic number: double distance = Math.Sqrt(Math.Pow(east' 2) + Math.Pow(north' 2));
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,gps_offset,The following statement contains a magic number: double distance = Math.Sqrt(Math.Pow(east' 2) + Math.Pow(north' 2));
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetBearing,The following statement contains a magic number: return (MathHelper.rad2deg * (Math.Atan2(y' x)) + 360) % 360;
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetBearing,The following statement contains a magic number: return (MathHelper.rad2deg * (Math.Atan2(y' x)) + 360) % 360;
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetAngle,The following statement contains a magic number: angle += 360.0;
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetAngle,The following statement contains a magic number: angle < -180.0
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetAngle,The following statement contains a magic number: angle -= 360.0;
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetAngle,The following statement contains a magic number: angle > 180.0
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance,The following statement contains a magic number: double d = Lat * 0.017453292519943295;
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance,The following statement contains a magic number: double num2 = Lng * 0.017453292519943295;
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance,The following statement contains a magic number: double num3 = p2.Lat * 0.017453292519943295;
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance,The following statement contains a magic number: double num4 = p2.Lng * 0.017453292519943295;
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance,The following statement contains a magic number: double num7 = Math.Pow(Math.Sin(num6 / 2.0)' 2.0) + ((Math.Cos(d) * Math.Cos(num3)) * Math.Pow(Math.Sin(num5 / 2.0)' 2.0));
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance,The following statement contains a magic number: double num7 = Math.Pow(Math.Sin(num6 / 2.0)' 2.0) + ((Math.Cos(d) * Math.Cos(num3)) * Math.Pow(Math.Sin(num5 / 2.0)' 2.0));
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance,The following statement contains a magic number: double num7 = Math.Pow(Math.Sin(num6 / 2.0)' 2.0) + ((Math.Cos(d) * Math.Cos(num3)) * Math.Pow(Math.Sin(num5 / 2.0)' 2.0));
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance,The following statement contains a magic number: double num7 = Math.Pow(Math.Sin(num6 / 2.0)' 2.0) + ((Math.Cos(d) * Math.Cos(num3)) * Math.Pow(Math.Sin(num5 / 2.0)' 2.0));
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance,The following statement contains a magic number: double num8 = 2.0 * Math.Atan2(Math.Sqrt(num7)' Math.Sqrt(1.0 - num7));
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance,The following statement contains a magic number: return (6371 * num8) * 1000.0;
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance,The following statement contains a magic number: return (6371 * num8) * 1000.0;
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance2,The following statement contains a magic number: var R = 6371.0;
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance2,The following statement contains a magic number: var a = Math.Sin(dLat / 2.0) * Math.Sin(dLat / 2.0) +                      Math.Sin(dLon / 2.0) * Math.Sin(dLon / 2.0) * Math.Cos(lat1) * Math.Cos(lat2);
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance2,The following statement contains a magic number: var a = Math.Sin(dLat / 2.0) * Math.Sin(dLat / 2.0) +                      Math.Sin(dLon / 2.0) * Math.Sin(dLon / 2.0) * Math.Cos(lat1) * Math.Cos(lat2);
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance2,The following statement contains a magic number: var a = Math.Sin(dLat / 2.0) * Math.Sin(dLat / 2.0) +                      Math.Sin(dLon / 2.0) * Math.Sin(dLon / 2.0) * Math.Cos(lat1) * Math.Cos(lat2);
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance2,The following statement contains a magic number: var a = Math.Sin(dLat / 2.0) * Math.Sin(dLat / 2.0) +                      Math.Sin(dLon / 2.0) * Math.Sin(dLon / 2.0) * Math.Cos(lat1) * Math.Cos(lat2);
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance2,The following statement contains a magic number: var c = 2.0 * Math.Atan2(Math.Sqrt(a)' Math.Sqrt(1.0 - a));
Magic Number,MissionPlanner.Utilities,PointLatLngAlt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PointLatLngAlt.cs,GetDistance2,The following statement contains a magic number: var d = R * c * 1000.0;
Magic Number,MissionPlanner.Utilities,Privacy,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Privacy.cs,anonymise,The following statement contains a magic number: var latrandom = rand.NextDouble() * (rand.NextDouble() * 3);
Magic Number,MissionPlanner.Utilities,Privacy,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Privacy.cs,anonymise,The following statement contains a magic number: field.SetValue(pkt' (int) ((int) value + latrandom * 1e7));
Magic Number,MissionPlanner.Utilities,Privacy,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Privacy.cs,anonymise,The following statement contains a magic number: byte[] datearray =                              BitConverter.GetBytes(                                  (UInt64) ((packet.rxtime.ToUniversalTime() - new DateTime(1970' 1' 1))                                            .TotalMilliseconds * 1000));
Magic Number,MissionPlanner.Utilities,Privacy,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Privacy.cs,anonymise,The following statement contains a magic number: byte[] datearray =                              BitConverter.GetBytes(                                  (UInt64) ((packet.rxtime.ToUniversalTime() - new DateTime(1970' 1' 1))                                            .TotalMilliseconds * 1000));
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix,The following statement contains a magic number: m.a.x = 1.0f - 2.0f * (q3q3 + q4q4);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix,The following statement contains a magic number: m.a.y = 2.0f * (q2q3 - q1q4);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix,The following statement contains a magic number: m.a.z = 2.0f * (q2q4 + q1q3);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix,The following statement contains a magic number: m.b.x = 2.0f * (q2q3 + q1q4);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix,The following statement contains a magic number: m.b.y = 1.0f - 2.0f * (q2q2 + q4q4);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix,The following statement contains a magic number: m.b.z = 2.0f * (q3q4 - q1q2);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix,The following statement contains a magic number: m.c.x = 2.0f * (q2q4 - q1q3);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix,The following statement contains a magic number: m.c.y = 2.0f * (q3q4 + q1q2);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix,The following statement contains a magic number: m.c.z = 1.0f - 2.0f * (q2q2 + q3q3);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix_norm,The following statement contains a magic number: m.a.y = 2.0f * (q2q3 - q1q4) * invs;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix_norm,The following statement contains a magic number: m.a.z = 2.0f * (q2q4 + q1q3) * invs;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix_norm,The following statement contains a magic number: m.b.x = 2.0f * (q2q3 + q1q4) * invs;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix_norm,The following statement contains a magic number: m.b.z = 2.0f * (q3q4 - q1q2) * invs;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix_norm,The following statement contains a magic number: m.c.x = 2.0f * (q2q4 - q1q3) * invs;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotation_matrix_norm,The following statement contains a magic number: m.c.y = 2.0f * (q3q4 + q1q2) * invs;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,from_rotation_matrix,The following statement contains a magic number: double S = sqrtf(tr + 1) * 2;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,from_rotation_matrix,The following statement contains a magic number: qw = 0.25f * S;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,from_euler,The following statement contains a magic number: double cr2 = cosf(roll * 0.5f);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,from_euler,The following statement contains a magic number: double cp2 = cosf(pitch * 0.5f);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,from_euler,The following statement contains a magic number: double cy2 = cosf(yaw * 0.5f);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,from_euler,The following statement contains a magic number: double sr2 = sinf(roll * 0.5f);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,from_euler,The following statement contains a magic number: double sp2 = sinf(pitch * 0.5f);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,from_euler,The following statement contains a magic number: double sy2 = sinf(yaw * 0.5f);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,from_axis_angle,The following statement contains a magic number: double st2 = sinf(theta / 2.0f);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,from_axis_angle,The following statement contains a magic number: q1 = cosf(theta / 2.0f);
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,to_axis_angle,The following statement contains a magic number: v *= wrap_PI(2.0f * atan2f(l' q1));
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,from_axis_angle_fast,The following statement contains a magic number: double t2 = theta / 2.0f;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,from_axis_angle_fast,The following statement contains a magic number: double st2 = t2 - sqt2 * t2 / 6.0f;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,from_axis_angle_fast,The following statement contains a magic number: q1 = 1.0f - (sqt2 / 2.0f) + sq(sqt2) / 24.0f;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,from_axis_angle_fast,The following statement contains a magic number: q1 = 1.0f - (sqt2 / 2.0f) + sq(sqt2) / 24.0f;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotate_fast,The following statement contains a magic number: double t2 = theta / 2.0f;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotate_fast,The following statement contains a magic number: double st2 = t2 - sqt2 * t2 / 6.0f;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotate_fast,The following statement contains a magic number: double w2 = 1.0f - (sqt2 / 2.0f) + sq(sqt2) / 24.0f;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,rotate_fast,The following statement contains a magic number: double w2 = 1.0f - (sqt2 / 2.0f) + sq(sqt2) / 24.0f;
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,get_euler_roll,The following statement contains a magic number: return (atan2f(2.0f * (q1 * q2 + q3 * q4)' 1.0f - 2.0f * (q2 * q2 + q3 * q3)));
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,get_euler_roll,The following statement contains a magic number: return (atan2f(2.0f * (q1 * q2 + q3 * q4)' 1.0f - 2.0f * (q2 * q2 + q3 * q3)));
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,get_euler_pitch,The following statement contains a magic number: return safe_asin(2.0f * (q1 * q3 - q4 * q2));
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,get_euler_yaw,The following statement contains a magic number: return atan2f(2.0f * (q1 * q4 + q2 * q3)' 1.0f - 2.0f * (q3 * q3 + q4 * q4));
Magic Number,MissionPlanner.Utilities,Quaternion,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Quaternion.cs,get_euler_yaw,The following statement contains a magic number: return atan2f(2.0f * (q1 * q4 + q2 * q3)' 1.0f - 2.0f * (q3 * q3 + q4 * q4));
Magic Number,MissionPlanner.Utilities,Rect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Rect.cs,DiagDistance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(Width' 2) + Math.Pow(Height' 2));
Magic Number,MissionPlanner.Utilities,Rect,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Rect.cs,DiagDistance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(Width' 2) + Math.Pow(Height' 2));
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == RTCM3PREAMB)                      {                          step = 1;                          packet[0] = data;                      }                      break;                  case 1:                      packet[1] = data;                      step++;                      break;                  case 2:                      packet[2] = data;                      step++;                      pre = new rtcmpreamble();                      pre.Read(packet);                      payloadlen = pre.length;                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > packet.Length)                          step = 0;                      break;                  case 3:                      if (msglencount < (payloadlen))                      {                          packet[msglencount + 3] = data;                          msglencount++;                      }                      else                      {                          step++;                          goto case 4;                      }                      break;                  case 4:                      packet[payloadlen + 3] = data;                      step++;                      break;                  case 5:                      packet[payloadlen + 3 + 1] = data;                      step++;                      break;                  case 6:                      packet[payloadlen + 3 + 2] = data;                        payloadlen = payloadlen + 3;                      var crc = crc24.crc24q(packet' payloadlen' 0);                      var crcpacket = getbitu(packet' payloadlen*8' 24);                        if (crc == crcpacket)                      {                          var head = new rtcmheader();                          head.Read(packet);                            sync = head.sync;                            step = 0;                            if (head.messageno == 1002)                          {                              var tp = new type1002();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1004)                          {                              var tp = new type1004();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1012)                          {                              var tp = new type1012();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1074)                          {                              var tp = new type1074();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1077)                          {                              var tp = new type1077();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1084)                          {                              var tp = new type1084();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1087)                          {                              var tp = new type1087();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1094)                          {                              var tp = new type1094();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1097)                          {                              var tp = new type1097();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1124)                          {                              var tp = new type1124();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1127)                          {                              var tp = new type1127();                                tp.Read(packet);                                if (ObsMessage != null)                                  ObsMessage(tp.obs' null);                          }                          else if (head.messageno == 1005)                          {                              var tp = new type1005();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1006)                          {                              var tp = new type1006();                                tp.Read(packet);                                if (BasePosMessage != null)                                  BasePosMessage(tp' null);                          }                          else if (head.messageno == 1019)                          {                              var tp = new type1019();                                tp.Read(packet);                                                            var week = (int)tp.week;                              var tow = 0.0;                                // assumes this is always a live stream                              StaticUtils.GetFromTime(DateTime.UtcNow' ref week' ref tow);                                // both at start of a week                              if (tp.toes < (60 * 60 * 24) && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week;                              } // eph at end of week and tow at start of week                              else if (tp.toes > 500000 && lasttow < (60 * 60 * 24))                              {                                  RTCM3.weekGuess = week + 1;                              } // everything else                              else                              {                                  RTCM3.weekGuess = week;                              }                                if (EphMessage != null)                                  EphMessage(tp' null);                          }                            return head.messageno;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,getbitu,The following statement contains a magic number: bits = (uint) ((bits << 1) + ((buff[i/8] >> (int) (7 - i%8)) & 1u));
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,getbitu,The following statement contains a magic number: bits = (uint) ((bits << 1) + ((buff[i/8] >> (int) (7 - i%8)) & 1u));
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,getbitu,The following statement contains a magic number: bits = (uint) ((bits << 1) + ((buff[i/8] >> (int) (7 - i%8)) & 1u));
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,setbitu,The following statement contains a magic number: len <= 0 || 32 < len
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,setbitu,The following statement contains a magic number: buff[i/8] |= (byte) (1u << (int) (7 - i%8));
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,setbitu,The following statement contains a magic number: buff[i/8] |= (byte) (1u << (int) (7 - i%8));
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,setbitu,The following statement contains a magic number: buff[i/8] |= (byte) (1u << (int) (7 - i%8));
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,ROUND,The following statement contains a magic number: return (int) Math.Floor(x + 0.5);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,cp_pr,The following statement contains a magic number: var x = (cp - pr_cyc + 1500.0)%3000.0;
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,cp_pr,The following statement contains a magic number: var x = (cp - pr_cyc + 1500.0)%3000.0;
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,cp_pr,The following statement contains a magic number: x += 3000;
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,cp_pr,The following statement contains a magic number: x -= 1500.0;
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,getbits_38,The following statement contains a magic number: return getbits(buff' pos' 32)*64.0 + getbitu(buff' pos + 32' 6);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,getbits_38,The following statement contains a magic number: return getbits(buff' pos' 32)*64.0 + getbitu(buff' pos + 32' 6);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,getbits_38,The following statement contains a magic number: return getbits(buff' pos' 32)*64.0 + getbitu(buff' pos + 32' 6);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,getbits_38,The following statement contains a magic number: return getbits(buff' pos' 32)*64.0 + getbitu(buff' pos + 32' 6);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,getbits,The following statement contains a magic number: len <= 0 || 32 <= len || !((bits & (1u << (int) (len - 1))) != 0)
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,set38bits,The following statement contains a magic number: var word_h = (int) Math.Floor(value/64.0);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,set38bits,The following statement contains a magic number: var word_l = (uint) (value - word_h*64.0);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,set38bits,The following statement contains a magic number: setbits(buff' pos' 32' word_h);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,set38bits,The following statement contains a magic number: setbitu(buff' pos + 32' 6' word_l);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,set38bits,The following statement contains a magic number: setbitu(buff' pos + 32' 6' word_l);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,ecef2pos,The following statement contains a magic number: double e2 = FE_WGS84*(2.0 - FE_WGS84)' r2 = dot(r' r' 2)' z' zk' v = RE_WGS84' sinp;
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,ecef2pos,The following statement contains a magic number: double e2 = FE_WGS84*(2.0 - FE_WGS84)' r2 = dot(r' r' 2)' z' zk' v = RE_WGS84' sinp;
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,ecef2pos,The following statement contains a magic number: z = r[2] + v*e2*sinp;
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,ecef2pos,The following statement contains a magic number: Math.Abs(z - zk) >= 1E-4
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,ecef2pos,The following statement contains a magic number: pos[0] = r2 > 1E-12 ? Math.Atan(z/Math.Sqrt(r2)) : (r[2] > 0.0 ? PI/2.0 : -PI/2.0);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,ecef2pos,The following statement contains a magic number: pos[0] = r2 > 1E-12 ? Math.Atan(z/Math.Sqrt(r2)) : (r[2] > 0.0 ? PI/2.0 : -PI/2.0);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,ecef2pos,The following statement contains a magic number: pos[0] = r2 > 1E-12 ? Math.Atan(z/Math.Sqrt(r2)) : (r[2] > 0.0 ? PI/2.0 : -PI/2.0);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,ecef2pos,The following statement contains a magic number: pos[0] = r2 > 1E-12 ? Math.Atan(z/Math.Sqrt(r2)) : (r[2] > 0.0 ? PI/2.0 : -PI/2.0);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,ecef2pos,The following statement contains a magic number: pos[1] = r2 > 1E-12 ? Math.Atan2(r[1]' r[0]) : 0.0;
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,ecef2pos,The following statement contains a magic number: pos[2] = Math.Sqrt(r2 + z*z) - v;
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,pos2ecef,The following statement contains a magic number: double e2 = FE_WGS84 * (2.0 - FE_WGS84)' v = RE_WGS84 / Math.Sqrt(1.0 - e2 * sinp * sinp);
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,pos2ecef,The following statement contains a magic number: r[0] = (v + pos[2]) * cosp * cosl;
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,pos2ecef,The following statement contains a magic number: r[1] = (v + pos[2]) * cosp * sinl;
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,pos2ecef,The following statement contains a magic number: r[2] = (v * (1.0 - e2) + pos[2]) * sinp;
Magic Number,MissionPlanner.Utilities,rtcm3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,pos2ecef,The following statement contains a magic number: r[2] = (v * (1.0 - e2) + pos[2]) * sinp;
Magic Number,MissionPlanner.Utilities,rtcmpreamble,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: preamble = (byte) getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,rtcmpreamble,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,rtcmpreamble,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: resv1 = (byte) getbitu(buffer' i' 6);
Magic Number,MissionPlanner.Utilities,rtcmpreamble,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,rtcmpreamble,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: length = (ushort) getbitu(buffer' i' 10);
Magic Number,MissionPlanner.Utilities,rtcmpreamble,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,rtcmpreamble,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 8' RTCM3PREAMB);
Magic Number,MissionPlanner.Utilities,rtcmpreamble,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,rtcmpreamble,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 6' resv1);
Magic Number,MissionPlanner.Utilities,rtcmpreamble,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,rtcmpreamble,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 10' length);
Magic Number,MissionPlanner.Utilities,rtcmpreamble,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24;
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: messageno = (ushort) getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: refstationid = (ushort) getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: epoch = getbitu(buffer' i' 30);
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 30;
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: messageno < 1009 || messageno > 1012
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: messageno < 1009 || messageno > 1012
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: nsat = (byte) getbitu(buffer' i' 5);
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 5;
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: smoothint = (byte) getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: uint i = 24;
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 12' messageno);
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 12' refstationid);
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 30' epoch);
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 30;
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 5' nsat);
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 5;
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 3' smoothint);
Magic Number,MissionPlanner.Utilities,rtcmheader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,crc24,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,crc24q,The following statement contains a magic number: crc = ((crc << 8) & 0xFFFFFF) ^ crc24qtab[(crc >> 16) ^ buf[i]];
Magic Number,MissionPlanner.Utilities,crc24,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,crc24q,The following statement contains a magic number: crc = ((crc << 8) & 0xFFFFFF) ^ crc24qtab[(crc >> 16) ^ buf[i]];
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var type = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var staid = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 30)*0.001;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 30)*0.001;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 30;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var nsat = getbitu(buffer' i' 5);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i = 24 + 64;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i = 24 + 64;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.prn = (byte) getbitu(buffer' i' 6);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.pr1 = getbitu(buffer' i' 24);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 24;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.ppr1 = getbits(buffer' i' 20);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 20;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.lock1 = (byte) getbitu(buffer' i' 7);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.amb = (byte) getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.cnr1 = (byte) getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var pr1 = ob.raw.pr1*0.02 + ob.raw.amb*PRUNIT_GPS;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cp1 = ob.raw.ppr1*0.0005/lam1;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.snr = (byte) (ob.raw.cnr1*0.25);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: uint i = 24 + 64;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: uint i = 24 + 64;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: var pr1 = ROUND((ob.pr - amb*PRUNIT_GPS)/0.02);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: var pr1c = pr1*0.02 + amb*PRUNIT_GPS;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: var ppr1 = ROUND(ppr*lam1/0.0005);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 6' ob.prn);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 24' (uint) pr1);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 24;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 20' (int) ppr1);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 20;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 7' ob.raw.lock1);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 8' (byte) amb);
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 8' (byte) (ob.snr*4));
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 8' (byte) (ob.snr*4));
Magic Number,MissionPlanner.Utilities,type1002,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,GetFromGps,The following statement contains a magic number: var datum = new DateTime(1980' 1' 6' 0' 0' 0' DateTimeKind.Utc);
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,GetFromGps,The following statement contains a magic number: var datum = new DateTime(1980' 1' 6' 0' 0' 0' DateTimeKind.Utc);
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,GetFromGps,The following statement contains a magic number: var week = datum.AddDays(weeknumber*7);
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsGPS,The following statement contains a magic number: return LeapSecondsTAI(year' month) - 19;
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: var yyyymm = year * 100 + month;
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: return 37;
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: yyyymm >= 201701
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: return 36;
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: yyyymm >= 201507
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: return 35;
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: yyyymm >= 201207
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: return 34;
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: yyyymm >= 200901
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: return 33;
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: yyyymm >= 200601
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: return 32;
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: yyyymm >= 199901
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: return 31;
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: yyyymm >= 199707
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: return 30;
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,LeapSecondsTAI,The following statement contains a magic number: yyyymm >= 199601
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,GetFromTime,The following statement contains a magic number: var datum = new DateTime(1980' 1' 6' 0' 0' 0' DateTimeKind.Utc);
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,GetFromTime,The following statement contains a magic number: var datum = new DateTime(1980' 1' 6' 0' 0' 0' DateTimeKind.Utc);
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,GetFromTime,The following statement contains a magic number: var weeks = (int) (dif.TotalDays/7);
Magic Number,MissionPlanner.Utilities,StaticUtils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,GetFromTime,The following statement contains a magic number: dif = time - datum.AddDays(weeks*7);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var type = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var staid = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 30)*0.001;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 30)*0.001;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 30;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var nsat = getbitu(buffer' i' 5);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 5;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i = 24 + 64;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i = 24 + 64;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.prn = (byte) getbitu(buffer' i' 6);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.pr1 = getbitu(buffer' i' 24);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 24;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.ppr1 = getbits(buffer' i' 20);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 20;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.lock1 = (byte) getbitu(buffer' i' 7);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.amb = (byte) getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.cnr1 = (byte) getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.code2 = (byte) getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.pr21 = getbits(buffer' i' 14);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 14;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.ppr2 = getbits(buffer' i' 20);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 20;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.lock2 = (byte) getbitu(buffer' i' 7);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.cnr2 = (byte) getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var pr1 = ob.raw.pr1*0.02 + ob.raw.amb*PRUNIT_GPS;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cp1 = ob.raw.ppr1*0.0005/lam1;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.snr = (byte) (ob.raw.cnr1*0.25);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.pr2 = pr1 + ob.raw.pr21*0.02;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.cp2 = pr1/lam2 + ob.raw.ppr2*0.0005/lam2;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: uint i = 24 + 64;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: uint i = 24 + 64;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: var pr1 = ROUND((ob.pr - amb*PRUNIT_GPS)/0.02);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: var pr1c = pr1*0.02 + amb*PRUNIT_GPS;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: var ppr1 = ROUND(ppr*lam1/0.0005);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 6' ob.prn);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 24' (uint) pr1);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 24;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 20' (int) ppr1);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 20;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 7' ob.raw.lock1);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 8' (byte) amb);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 8' (byte) (ob.snr*4));
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 8' (byte) (ob.snr*4));
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 2' ob.raw.code2);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 14' ob.raw.pr21);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 14;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 20' ob.raw.ppr2);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 20;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 7' ob.raw.lock2);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 8' ob.raw.cnr2);
Magic Number,MissionPlanner.Utilities,type1004,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var type = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var staid = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 27) * 0.001;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 27) * 0.001;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 27;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var nsat = getbitu(buffer' i' 5);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 5;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var smoothint = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var gpstime = StaticUtils.GetFromGps(week' tow - 10800 - (60*60*24));
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var gpstime = StaticUtils.GetFromGps(week' tow - 10800 - (60*60*24));
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var gpstime = StaticUtils.GetFromGps(week' tow - 10800 - (60*60*24));
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var gpstime = StaticUtils.GetFromGps(week' tow - 10800 - (60*60*24));
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: Console.WriteLine("> {0} {1} {2} {3'2} {4} {5} {6} {7}"' gpstime.Year' gpstime.Month' gpstime.Day'gpstime.Hour' gpstime.Minute' gpstime.Second + gpstime.Millisecond/1000.0' 0' nsat);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.prn = (byte)getbitu(buffer' i' 6);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.fcn = (byte)getbitu(buffer' i' 5);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 5;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.pr1 = getbitu(buffer' i' 25);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 25;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.ppr1 = getbits(buffer' i' 20);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 20;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.lock1 = (byte)getbitu(buffer' i' 7);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.amb = (byte)getbitu(buffer' i' 7);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.cnr1 = (byte)getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.code2 = (byte)getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.pr21 = getbits(buffer' i' 14);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 14;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.ppr2 = getbits(buffer' i' 20);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 20;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.lock2 = (byte)getbitu(buffer' i' 7);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.raw.cnr2 = (byte)getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var pr1 = ob.raw.pr1 * 0.02 + ob.raw.amb * PRUNIT_GLO;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cp1 = ob.raw.ppr1 * 0.0005 / lam1;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.snr = (byte)(ob.raw.cnr1 * 0.25);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.pr2 = pr1 + ob.raw.pr21 * 0.02;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ob.cp2 = pr1 / lam2 + ob.raw.ppr2 * 0.0005 / lam2;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: uint i = 24 + 64;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: uint i = 24 + 64;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: var pr1 = ROUND((ob.pr - amb*PRUNIT_GPS)/0.02);
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: var pr1c = pr1*0.02 + amb*PRUNIT_GPS;
Magic Number,MissionPlanner.Utilities,type1012,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: var ppr1 = ROUND(ppr*lam1/0.0005);
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var type = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var staid = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 30) * 0.001;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 30) * 0.001;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 30;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var iod = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var time_s = getbitu(buffer' i' 7);
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var clk_str = getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var clk_ext = getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tint_s = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cellmask = new byte[64];
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: j <= 64
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: j <= 32
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var r = new double[64];
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rr = new double[64];
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var pr = new double[64];
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cp = new double[64];
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rrf = new double[64];
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cnr = new double[64];
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var ex = new uint[64];
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var half = new uint[64];
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var @lock = new uint[64];
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ex[j] = 15;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: pr[j] = cp[j] = rrf[j] = -1E16;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rng = getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rng != 255
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rng_m = getbitu(buffer' i' 10);
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var prv = getbits(buffer' i' 15);
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 15;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: prv != -16384
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cpv = getbits(buffer' i' 22);
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 22;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cpv != -2097152
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: @lock[j] = getbitu(buffer' i' 4);
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 4;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cnr[j] = getbitu(buffer' i' 6)*1;
Magic Number,MissionPlanner.Utilities,type1074,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var type = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var staid = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 30) * 0.001;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 30) * 0.001;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 30;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var iod = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var time_s = getbitu(buffer' i' 7);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var clk_str = getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var clk_ext = getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tint_s = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cellmask = new byte[64];
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: j <= 64
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: j <= 32
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var r = new double[64];
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rr = new double[64];
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var pr = new double[64];
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cp = new double[64];
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rrf = new double[64];
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cnr = new double[64];
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var ex = new uint[64];
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var half = new uint[64];
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var @lock = new uint[64];
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ex[j] = 15;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: pr[j] = cp[j] = rrf[j] = -1E16;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rng = getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rng != 255
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ex[j] = getbitu(buffer' i' 4);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 4;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rng_m = getbitu(buffer' i' 10);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rate = getbits(buffer' i' 14);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 14;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rate != -8192
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var prv = getbits(buffer' i' 20);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 20;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: prv != -524288
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cpv = getbits(buffer' i' 24);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 24;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cpv != -8388608
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: @lock[j] = getbitu(buffer' i' 10);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cnr[j] = getbitu(buffer' i' 10) * 0.0625;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cnr[j] = getbitu(buffer' i' 10) * 0.0625;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rrv = getbits(buffer' i' 15);
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 15;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rrf[j] = rrv * 0.0001;
Magic Number,MissionPlanner.Utilities,type1077,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rrv != -16384
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var type = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var staid = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var dow = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tod = getbitu(buffer' i' 27) * 0.001;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tod = getbitu(buffer' i' 27) * 0.001;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 27;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var iod = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var time_s = getbitu(buffer' i' 7);
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var clk_str = getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var clk_ext = getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tint_s = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cellmask = new byte[64];
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: j <= 64
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: j <= 32
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var gpstime = StaticUtils.GetFromGps(week ' tod - 10800);
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var r = new double[64];
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rr = new double[64];
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var pr = new double[64];
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cp = new double[64];
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rrf = new double[64];
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cnr = new double[64];
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var ex = new uint[64];
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var half = new uint[64];
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var @lock = new uint[64];
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ex[j] = 15;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: pr[j] = cp[j] = rrf[j] = -1E16;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rng = getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rng != 255
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rng_m = getbitu(buffer' i' 10);
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var prv = getbits(buffer' i' 15);
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 15;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: prv != -16384
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cpv = getbits(buffer' i' 22);
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 22;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cpv != -2097152
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: @lock[j] = getbitu(buffer' i' 4);
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 4;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cnr[j] = getbitu(buffer' i' 6) * 1;
Magic Number,MissionPlanner.Utilities,type1084,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var type = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var staid = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var dow = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tod = getbitu(buffer' i' 27) * 0.001;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tod = getbitu(buffer' i' 27) * 0.001;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 27;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var iod = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var time_s = getbitu(buffer' i' 7);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var clk_str = getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var clk_ext = getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tint_s = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cellmask = new byte[64];
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: j <= 64
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: j <= 32
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var r = new double[64];
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rr = new double[64];
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var pr = new double[64];
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cp = new double[64];
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rrf = new double[64];
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cnr = new double[64];
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var ex = new uint[64];
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var half = new uint[64];
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var @lock = new uint[64];
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ex[j] = 15;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: pr[j] = cp[j] = rrf[j] = -1E16;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rng = getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rng != 255
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ex[j] = getbitu(buffer' i' 4);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 4;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rng_m = getbitu(buffer' i' 10);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rate = getbits(buffer' i' 14);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 14;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rate != -8192
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var prv = getbits(buffer' i' 20);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 20;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: prv != -524288
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cpv = getbits(buffer' i' 24);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 24;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cpv != -8388608
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: @lock[j] = getbitu(buffer' i' 10);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cnr[j] = getbitu(buffer' i' 10) * 0.0625;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cnr[j] = getbitu(buffer' i' 10) * 0.0625;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rrv = getbits(buffer' i' 15);
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 15;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rrf[j] = rrv * 0.0001;
Magic Number,MissionPlanner.Utilities,type1087,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rrv != -16384
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var type = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var staid = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 30) * 0.001 + 14;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 30) * 0.001 + 14;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 30) * 0.001 + 14;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 30;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var iod = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var time_s = getbitu(buffer' i' 7);
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var clk_str = getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var clk_ext = getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tint_s = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cellmask = new byte[64];
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: j <= 64
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: j <= 32
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var r = new double[64];
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rr = new double[64];
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var pr = new double[64];
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cp = new double[64];
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rrf = new double[64];
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cnr = new double[64];
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var ex = new uint[64];
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var half = new uint[64];
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var @lock = new uint[64];
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ex[j] = 15;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: pr[j] = cp[j] = rrf[j] = -1E16;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rng = getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rng != 255
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rng_m = getbitu(buffer' i' 10);
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var prv = getbits(buffer' i' 15);
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 15;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: prv != -16384
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cpv = getbits(buffer' i' 22);
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 22;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cpv != -2097152
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: @lock[j] = getbitu(buffer' i' 4);
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 4;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cnr[j] = getbitu(buffer' i' 6) * 1;
Magic Number,MissionPlanner.Utilities,type1124,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var type = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var staid = getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 30) * 0.001 + 14;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 30) * 0.001 + 14;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tow = getbitu(buffer' i' 30) * 0.001 + 14;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 30;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var iod = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var time_s = getbitu(buffer' i' 7);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 7;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var clk_str = getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var clk_ext = getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var tint_s = getbitu(buffer' i' 3);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 3;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cellmask = new byte[64];
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: j <= 64
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: j <= 32
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var r = new double[64];
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rr = new double[64];
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var pr = new double[64];
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cp = new double[64];
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rrf = new double[64];
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cnr = new double[64];
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var ex = new uint[64];
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var half = new uint[64];
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var @lock = new uint[64];
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ex[j] = 15;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: pr[j] = cp[j] = rrf[j] = -1E16;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rng = getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rng != 255
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: ex[j] = getbitu(buffer' i' 4);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 4;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rng_m = getbitu(buffer' i' 10);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rate = getbits(buffer' i' 14);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 14;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rate != -8192
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var prv = getbits(buffer' i' 20);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 20;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: prv != -524288
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var cpv = getbits(buffer' i' 24);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 24;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cpv != -8388608
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: @lock[j] = getbitu(buffer' i' 10);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cnr[j] = getbitu(buffer' i' 10) * 0.0625;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cnr[j] = getbitu(buffer' i' 10) * 0.0625;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: var rrv = getbits(buffer' i' 15);
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 15;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rrf[j] = rrv * 0.0001;
Magic Number,MissionPlanner.Utilities,type1127,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: rrv != -16384
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24 + 12;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24 + 12;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: staid = (ushort) getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: itrf = (byte) getbitu(buffer' i' 6);
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 6 + 4;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 6 + 4;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 38 + 2;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 38 + 2;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 38 + 2;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 38 + 2;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 38;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: uint i = 24;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 12' 1005);
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 12' 1005);
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 12' staid);
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 6' 0);
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: set38bits(buffer' i' ecefposition[0]/0.0001);
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 38;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: set38bits(buffer' i' ecefposition[1]/0.0001);
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 38;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 2' 0);
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: set38bits(buffer' i' ecefposition[2]/0.0001);
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: set38bits(buffer' i' ecefposition[2]/0.0001);
Magic Number,MissionPlanner.Utilities,type1005,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 38;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24 + 12;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24 + 12;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: staid = (ushort) getbitu(buffer' i' 12);
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: itrf = (byte) getbitu(buffer' i' 6);
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 6 + 4;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 6 + 4;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 38 + 2;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 38 + 2;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 38 + 2;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 38 + 2;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 38;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: anth = (ushort) getbitu(buffer' i' 16);
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: uint i = 24;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 12' 1005);
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 12' 1005);
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 12' staid);
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 6' 0);
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: set38bits(buffer' i' ecefposition[0]/0.0001);
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 38;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: set38bits(buffer' i' ecefposition[1]/0.0001);
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 38;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 2' 0);
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: set38bits(buffer' i' ecefposition[2]/0.0001);
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: set38bits(buffer' i' ecefposition[2]/0.0001);
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 38;
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 16' anth);
Magic Number,MissionPlanner.Utilities,type1006,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24 + 12;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: uint i = 24 + 12;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: prn = getbitu(buffer' i' 6);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: week = getbitu(buffer' i' 10);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: sva = getbitu(buffer' i' 4);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 4;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: code = getbitu(buffer' i' 2);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: idot = getbits(buffer' i' 14)*P2_43*SC2RAD;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 14;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: iode = getbitu(buffer' i' 8);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: toc = getbitu(buffer' i' 16)*16.0;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: toc = getbitu(buffer' i' 16)*16.0;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: af2 = getbits(buffer' i' 8)*P2_55;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: af1 = getbits(buffer' i' 16)*P2_43;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: af0 = getbits(buffer' i' 22)*P2_31;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 22;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: iodc = getbitu(buffer' i' 10);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: crs = getbits(buffer' i' 16)*P2_5;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: deln = getbits(buffer' i' 16)*P2_43*SC2RAD;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: M0 = getbits(buffer' i' 32)*P2_31*SC2RAD;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 32;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cuc = getbits(buffer' i' 16)*P2_29;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: e = getbitu(buffer' i' 32)*P2_33;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 32;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cus = getbits(buffer' i' 16)*P2_29;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: sqrtA = getbitu(buffer' i' 32)*P2_19;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 32;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: toes = getbitu(buffer' i' 16)*16.0;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: toes = getbitu(buffer' i' 16)*16.0;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cic = getbits(buffer' i' 16)*P2_29;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: OMG0 = getbits(buffer' i' 32)*P2_31*SC2RAD;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 32;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: cis = getbits(buffer' i' 16)*P2_29;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i0 = getbits(buffer' i' 32)*P2_31*SC2RAD;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 32;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: crc = getbits(buffer' i' 16)*P2_5;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: omg = getbits(buffer' i' 32)*P2_31*SC2RAD;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 32;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: OMGd = getbits(buffer' i' 24)*P2_43*SC2RAD;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 24;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: tgd = getbits(buffer' i' 8)*P2_31;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: svh = getbitu(buffer' i' 6);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Read,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: uint i = 24;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: var toe = (uint) (toes/16.0);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 12' 1019);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 12' 1019);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 12;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 6' prn);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 10' week%1024);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 10' week%1024);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 4' sva);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 4;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 2' code);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 2;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 14' idot/P2_43/SC2RAD);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 14;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 8' iode);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 16' toc/16.0);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 16' toc/16.0);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 8' af2/P2_55);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 16' af1/P2_43);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 22' af0/P2_31);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 22;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 10' iodc);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 10;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 16' crs/P2_5);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 16' deln/P2_43/SC2RAD);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 32' M0/P2_31/SC2RAD);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 32;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 16' cuc/P2_29);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 32' e/P2_33);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 32;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 16' cus/P2_29);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 32' sqrtA/P2_19);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 32;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 16' toe);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 16' cic/P2_29);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 32' OMG0/P2_31/SC2RAD);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 32;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 16' cis/P2_29);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 32' i0/P2_31/SC2RAD);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 32;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 16' crc/P2_5);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 16;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 32' omg/P2_31/SC2RAD);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 32;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 24' OMGd/P2_43/SC2RAD);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 24;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbits(buffer' i' 8' tgd/P2_31);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 8;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: setbitu(buffer' i' 6' svh);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,Write,The following statement contains a magic number: i += 6;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,gpsdifftime,The following statement contains a magic number: return (end.wn - beginning.wn) * 7 * 24 * 3600 +                         end.tow - beginning.tow;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,gpsdifftime,The following statement contains a magic number: return (end.wn - beginning.wn) * 7 * 24 * 3600 +                         end.tow - beginning.tow;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,gpsdifftime,The following statement contains a magic number: return (end.wn - beginning.wn) * 7 * 24 * 3600 +                         end.tow - beginning.tow;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: Array.Copy(this.pos' pos' 3);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: Array.Copy(this.vel' vel' 3);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: const double NAV_OMEGAE_DOT = 7.2921151467e-005;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: const double NAV_GM = 3.986005e14;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: tdiff > 4 * 3600
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: tdiff > 4 * 3600
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: clock_rate_err = this.af1 + 2.0 * tdiff * this.af2;
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: Console.Write(" WARNING: using ephemeris older (or newer!) than 4 hours. {0} {1} hrs       \r"' prn'                          tdiff / 3600);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: Math.Abs(tdiff) > 4 * 3600
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: Math.Abs(tdiff) > 4 * 3600
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: count > 5
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: einstein = -4.442807633E-10 * ecc * sqrtA * Math.Sin(ea);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: cal = al + this.cus * Math.Sin(2.0 * al) + this.cuc * Math.Cos(2.0 * al);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: cal = al + this.cus * Math.Sin(2.0 * al) + this.cuc * Math.Cos(2.0 * al);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: cal_dot =                      al_dot * (1.0 +                              2.0 * (this.cus * Math.Cos(2.0 * al) -                                   this.cuc * Math.Sin(2.0 * al)));
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: cal_dot =                      al_dot * (1.0 +                              2.0 * (this.cus * Math.Cos(2.0 * al) -                                   this.cuc * Math.Sin(2.0 * al)));
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: cal_dot =                      al_dot * (1.0 +                              2.0 * (this.cus * Math.Cos(2.0 * al) -                                   this.cuc * Math.Sin(2.0 * al)));
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: r =                      a * tempd1 + this.crc * Math.Cos(2.0 * al) +                      this.crs * Math.Sin(2.0 * al);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: r =                      a * tempd1 + this.crc * Math.Cos(2.0 * al) +                      this.crs * Math.Sin(2.0 * al);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: r_dot =                      a * ecc * Math.Sin(ea) * ea_dot +                      2.0 * al_dot * (this.crs * Math.Cos(2.0 * al) -                                  this.crc * Math.Sin(2.0 * al));
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: r_dot =                      a * ecc * Math.Sin(ea) * ea_dot +                      2.0 * al_dot * (this.crs * Math.Cos(2.0 * al) -                                  this.crc * Math.Sin(2.0 * al));
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: r_dot =                      a * ecc * Math.Sin(ea) * ea_dot +                      2.0 * al_dot * (this.crs * Math.Cos(2.0 * al) -                                  this.crc * Math.Sin(2.0 * al));
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: inc =                      i0 + idot * tdiff +                      this.cic * Math.Cos(2.0 * al) + this.cis * Math.Sin(2.0 * al);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: inc =                      i0 + idot * tdiff +                      this.cic * Math.Cos(2.0 * al) + this.cis * Math.Sin(2.0 * al);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: inc_dot =                      idot + 2.0 * al_dot * (this.cis * Math.Cos(2.0 * al) -                                                 this.cic * Math.Sin(2.0 * al));
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: inc_dot =                      idot + 2.0 * al_dot * (this.cis * Math.Cos(2.0 * al) -                                                 this.cic * Math.Sin(2.0 * al));
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: inc_dot =                      idot + 2.0 * al_dot * (this.cis * Math.Cos(2.0 * al) -                                                 this.cic * Math.Sin(2.0 * al));
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: pos[2] = y * Math.Sin(inc);
Magic Number,MissionPlanner.Utilities,type1019,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\rtcm3.cs,calc_sat_pos,The following statement contains a magic number: vel[2] = y * Math.Cos(inc) * inc_dot + y_dot * Math.Sin(inc);
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,sbp,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,read,The following statement contains a magic number: switch (state)              {                  default:                  case 0:                      if (data == 0x55)                      {                          state++;                          msg = new piksimsg();                          msg.preamble = data;                          msg.buffer[0] = data;                          crc = new Crc16Ccitt(InitialCrcValue.Zeros);                          crcpacket = (ushort)InitialCrcValue.Zeros;                      }                      break;                  case 1:                      msg.msg_type = (u16)(data);                      msg.buffer[1] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 2:                      msg.msg_type = (u16)(msg.msg_type + (data << 8));                      msg.buffer[2] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 3:                      msg.sender = (u16)(data);                      msg.buffer[3] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 4:                      msg.sender = (u16)(msg.sender + (data << 8));                      msg.buffer[4] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      state++;                      break;                  case 5:                      msg.length = data;                      msg.buffer[5] = data;                      crcpacket = crc.Accumulate(data' crcpacket);                      msg.payload = new u8[msg.length];                      Array.Resize(ref msg.buffer' 8 + data);                      lengthcount = 0;                      state++;                      break;                  case 6:                      if (lengthcount == msg.length)                      {                          state++;                          goto case 7;                      }                      else                      {                          msg.payload[lengthcount] = data;                          msg.buffer[6 + lengthcount] = data;                          crcpacket = crc.Accumulate(data' crcpacket);                          lengthcount++;                      }                      break;                  case 7:                      msg.crc = (u16)(data);                      msg.buffer[6 + lengthcount] = data;                      state++;                      break;                  case 8:                      msg.crc = (u16)(msg.crc + (data << 8));                      msg.buffer[7 + lengthcount] = data;                      state = 0;                        if (msg.crc == crcpacket)                      {                          return msg.msg_type;                      }                      break;              }
Magic Number,MissionPlanner.Utilities,Crc16Ccitt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,Accumulate,The following statement contains a magic number: crc = (ushort)((crc << 8) ^ table[((crc >> 8) ^ (0xff & data))]);
Magic Number,MissionPlanner.Utilities,Crc16Ccitt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,Accumulate,The following statement contains a magic number: crc = (ushort)((crc << 8) ^ table[((crc >> 8) ^ (0xff & data))]);
Magic Number,MissionPlanner.Utilities,Crc16Ccitt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,ComputeChecksum,The following statement contains a magic number: crc = (ushort)((crc << 8) ^ table[((crc >> 8) ^ (0xff & bytes[i]))]);
Magic Number,MissionPlanner.Utilities,Crc16Ccitt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,ComputeChecksum,The following statement contains a magic number: crc = (ushort)((crc << 8) ^ table[((crc >> 8) ^ (0xff & bytes[i]))]);
Magic Number,MissionPlanner.Utilities,Crc16Ccitt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,ComputeChecksumBytes,The following statement contains a magic number: return new byte[] { (byte)(crc >> 8)' (byte)(crc & 0x00ff) };
Magic Number,MissionPlanner.Utilities,Crc16Ccitt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,Crc16Ccitt,The following statement contains a magic number: table = new ushort[256];
Magic Number,MissionPlanner.Utilities,Crc16Ccitt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,Crc16Ccitt,The following statement contains a magic number: a = (ushort)(i << 8);
Magic Number,MissionPlanner.Utilities,Crc16Ccitt,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\sbp.cs,Crc16Ccitt,The following statement contains a magic number: j < 8
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,SightGen,The following statement contains a magic number: drone_alt = alt + Math.Max(base_height' clearance) + 0.1;
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,SightGen,The following statement contains a magic number: Parallel.ForEach(Extensions.SteppedRange(0' 2 * (float)Math.PI' Math.PI / 180 * rotational)' angle =>  //Terrain intercept scan full 360              {                  List<PointLatLngAlt> pointends = new List<PointLatLngAlt>();                    var carryon = true;                    var up = false;                  var down = false;                    float triangle = 45 * (float)Math.PI / 180; //radians                  var Max = 90 * (float)Math.PI / 180;  //radians                  float Min = 0;                          //radians                    // calc LOS vector and intersection with terrain                  //point = srtm.getIntersectionWithTerrain(startlocation' endlocation);                  PointLatLngAlt point = null;                    var newpos = new PointLatLngAlt(location).newpos(angle * MathHelper.rad2deg' range * 1000);                  pointends.Clear();                  pointends.Add(location);                  pointends.Add(newpos);                    while (carryon && Min + converge * (float)Math.PI / 180 < Max) //Breaks if terrain intercept found or convergence occurs                  {                      point = getSRTMAltPath(pointends' triangle' ref carryon' ref up' ref down); //DEM data                        if (up)                      {                          Min = triangle;                      }                        else if (down)                      {                          Max = triangle;                      }                      triangle = (Max + Min) / 2;                  }                    lock(sortedlist)                      sortedlist.Add(angle' point);              });
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,SightGen,The following statement contains a magic number: Parallel.ForEach(Extensions.SteppedRange(0' 2 * (float)Math.PI' Math.PI / 180 * rotational)' angle =>  //Terrain intercept scan full 360              {                  List<PointLatLngAlt> pointends = new List<PointLatLngAlt>();                    var carryon = true;                    var up = false;                  var down = false;                    float triangle = 45 * (float)Math.PI / 180; //radians                  var Max = 90 * (float)Math.PI / 180;  //radians                  float Min = 0;                          //radians                    // calc LOS vector and intersection with terrain                  //point = srtm.getIntersectionWithTerrain(startlocation' endlocation);                  PointLatLngAlt point = null;                    var newpos = new PointLatLngAlt(location).newpos(angle * MathHelper.rad2deg' range * 1000);                  pointends.Clear();                  pointends.Add(location);                  pointends.Add(newpos);                    while (carryon && Min + converge * (float)Math.PI / 180 < Max) //Breaks if terrain intercept found or convergence occurs                  {                      point = getSRTMAltPath(pointends' triangle' ref carryon' ref up' ref down); //DEM data                        if (up)                      {                          Min = triangle;                      }                        else if (down)                      {                          Max = triangle;                      }                      triangle = (Max + Min) / 2;                  }                    lock(sortedlist)                      sortedlist.Add(angle' point);              });
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,SightGen,The following statement contains a magic number: Parallel.ForEach(Extensions.SteppedRange(0' 2 * (float)Math.PI' Math.PI / 180 * rotational)' angle =>  //Terrain intercept scan full 360              {                  List<PointLatLngAlt> pointends = new List<PointLatLngAlt>();                    var carryon = true;                    var up = false;                  var down = false;                    float triangle = 45 * (float)Math.PI / 180; //radians                  var Max = 90 * (float)Math.PI / 180;  //radians                  float Min = 0;                          //radians                    // calc LOS vector and intersection with terrain                  //point = srtm.getIntersectionWithTerrain(startlocation' endlocation);                  PointLatLngAlt point = null;                    var newpos = new PointLatLngAlt(location).newpos(angle * MathHelper.rad2deg' range * 1000);                  pointends.Clear();                  pointends.Add(location);                  pointends.Add(newpos);                    while (carryon && Min + converge * (float)Math.PI / 180 < Max) //Breaks if terrain intercept found or convergence occurs                  {                      point = getSRTMAltPath(pointends' triangle' ref carryon' ref up' ref down); //DEM data                        if (up)                      {                          Min = triangle;                      }                        else if (down)                      {                          Max = triangle;                      }                      triangle = (Max + Min) / 2;                  }                    lock(sortedlist)                      sortedlist.Add(angle' point);              });
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,SightGen,The following statement contains a magic number: Parallel.ForEach(Extensions.SteppedRange(0' 2 * (float)Math.PI' Math.PI / 180 * rotational)' angle =>  //Terrain intercept scan full 360              {                  List<PointLatLngAlt> pointends = new List<PointLatLngAlt>();                    var carryon = true;                    var up = false;                  var down = false;                    float triangle = 45 * (float)Math.PI / 180; //radians                  var Max = 90 * (float)Math.PI / 180;  //radians                  float Min = 0;                          //radians                    // calc LOS vector and intersection with terrain                  //point = srtm.getIntersectionWithTerrain(startlocation' endlocation);                  PointLatLngAlt point = null;                    var newpos = new PointLatLngAlt(location).newpos(angle * MathHelper.rad2deg' range * 1000);                  pointends.Clear();                  pointends.Add(location);                  pointends.Add(newpos);                    while (carryon && Min + converge * (float)Math.PI / 180 < Max) //Breaks if terrain intercept found or convergence occurs                  {                      point = getSRTMAltPath(pointends' triangle' ref carryon' ref up' ref down); //DEM data                        if (up)                      {                          Min = triangle;                      }                        else if (down)                      {                          Max = triangle;                      }                      triangle = (Max + Min) / 2;                  }                    lock(sortedlist)                      sortedlist.Add(angle' point);              });
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,SightGen,The following statement contains a magic number: Parallel.ForEach(Extensions.SteppedRange(0' 2 * (float)Math.PI' Math.PI / 180 * rotational)' angle =>  //Terrain intercept scan full 360              {                  List<PointLatLngAlt> pointends = new List<PointLatLngAlt>();                    var carryon = true;                    var up = false;                  var down = false;                    float triangle = 45 * (float)Math.PI / 180; //radians                  var Max = 90 * (float)Math.PI / 180;  //radians                  float Min = 0;                          //radians                    // calc LOS vector and intersection with terrain                  //point = srtm.getIntersectionWithTerrain(startlocation' endlocation);                  PointLatLngAlt point = null;                    var newpos = new PointLatLngAlt(location).newpos(angle * MathHelper.rad2deg' range * 1000);                  pointends.Clear();                  pointends.Add(location);                  pointends.Add(newpos);                    while (carryon && Min + converge * (float)Math.PI / 180 < Max) //Breaks if terrain intercept found or convergence occurs                  {                      point = getSRTMAltPath(pointends' triangle' ref carryon' ref up' ref down); //DEM data                        if (up)                      {                          Min = triangle;                      }                        else if (down)                      {                          Max = triangle;                      }                      triangle = (Max + Min) / 2;                  }                    lock(sortedlist)                      sortedlist.Add(angle' point);              });
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,SightGen,The following statement contains a magic number: Parallel.ForEach(Extensions.SteppedRange(0' 2 * (float)Math.PI' Math.PI / 180 * rotational)' angle =>  //Terrain intercept scan full 360              {                  List<PointLatLngAlt> pointends = new List<PointLatLngAlt>();                    var carryon = true;                    var up = false;                  var down = false;                    float triangle = 45 * (float)Math.PI / 180; //radians                  var Max = 90 * (float)Math.PI / 180;  //radians                  float Min = 0;                          //radians                    // calc LOS vector and intersection with terrain                  //point = srtm.getIntersectionWithTerrain(startlocation' endlocation);                  PointLatLngAlt point = null;                    var newpos = new PointLatLngAlt(location).newpos(angle * MathHelper.rad2deg' range * 1000);                  pointends.Clear();                  pointends.Add(location);                  pointends.Add(newpos);                    while (carryon && Min + converge * (float)Math.PI / 180 < Max) //Breaks if terrain intercept found or convergence occurs                  {                      point = getSRTMAltPath(pointends' triangle' ref carryon' ref up' ref down); //DEM data                        if (up)                      {                          Min = triangle;                      }                        else if (down)                      {                          Max = triangle;                      }                      triangle = (Max + Min) / 2;                  }                    lock(sortedlist)                      sortedlist.Add(angle' point);              });
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,SightGen,The following statement contains a magic number: Parallel.ForEach(Extensions.SteppedRange(0' 2 * (float)Math.PI' Math.PI / 180 * rotational)' angle =>  //Terrain intercept scan full 360              {                  List<PointLatLngAlt> pointends = new List<PointLatLngAlt>();                    var carryon = true;                    var up = false;                  var down = false;                    float triangle = 45 * (float)Math.PI / 180; //radians                  var Max = 90 * (float)Math.PI / 180;  //radians                  float Min = 0;                          //radians                    // calc LOS vector and intersection with terrain                  //point = srtm.getIntersectionWithTerrain(startlocation' endlocation);                  PointLatLngAlt point = null;                    var newpos = new PointLatLngAlt(location).newpos(angle * MathHelper.rad2deg' range * 1000);                  pointends.Clear();                  pointends.Add(location);                  pointends.Add(newpos);                    while (carryon && Min + converge * (float)Math.PI / 180 < Max) //Breaks if terrain intercept found or convergence occurs                  {                      point = getSRTMAltPath(pointends' triangle' ref carryon' ref up' ref down); //DEM data                        if (up)                      {                          Min = triangle;                      }                        else if (down)                      {                          Max = triangle;                      }                      triangle = (Max + Min) / 2;                  }                    lock(sortedlist)                      sortedlist.Add(angle' point);              });
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,SightGen,The following statement contains a magic number: Parallel.ForEach(Extensions.SteppedRange(0' 2 * (float)Math.PI' Math.PI / 180 * rotational)' angle =>  //Terrain intercept scan full 360              {                  List<PointLatLngAlt> pointends = new List<PointLatLngAlt>();                    var carryon = true;                    var up = false;                  var down = false;                    float triangle = 45 * (float)Math.PI / 180; //radians                  var Max = 90 * (float)Math.PI / 180;  //radians                  float Min = 0;                          //radians                    // calc LOS vector and intersection with terrain                  //point = srtm.getIntersectionWithTerrain(startlocation' endlocation);                  PointLatLngAlt point = null;                    var newpos = new PointLatLngAlt(location).newpos(angle * MathHelper.rad2deg' range * 1000);                  pointends.Clear();                  pointends.Add(location);                  pointends.Add(newpos);                    while (carryon && Min + converge * (float)Math.PI / 180 < Max) //Breaks if terrain intercept found or convergence occurs                  {                      point = getSRTMAltPath(pointends' triangle' ref carryon' ref up' ref down); //DEM data                        if (up)                      {                          Min = triangle;                      }                        else if (down)                      {                          Max = triangle;                      }                      triangle = (Max + Min) / 2;                  }                    lock(sortedlist)                      sortedlist.Add(angle' point);              });
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,SightGen,The following statement contains a magic number: Parallel.ForEach(Extensions.SteppedRange(0' 2 * (float)Math.PI' Math.PI / 180 * rotational)' angle =>  //Terrain intercept scan full 360              {                  List<PointLatLngAlt> pointends = new List<PointLatLngAlt>();                    var carryon = true;                    var up = false;                  var down = false;                    float triangle = 45 * (float)Math.PI / 180; //radians                  var Max = 90 * (float)Math.PI / 180;  //radians                  float Min = 0;                          //radians                    // calc LOS vector and intersection with terrain                  //point = srtm.getIntersectionWithTerrain(startlocation' endlocation);                  PointLatLngAlt point = null;                    var newpos = new PointLatLngAlt(location).newpos(angle * MathHelper.rad2deg' range * 1000);                  pointends.Clear();                  pointends.Add(location);                  pointends.Add(newpos);                    while (carryon && Min + converge * (float)Math.PI / 180 < Max) //Breaks if terrain intercept found or convergence occurs                  {                      point = getSRTMAltPath(pointends' triangle' ref carryon' ref up' ref down); //DEM data                        if (up)                      {                          Min = triangle;                      }                        else if (down)                      {                          Max = triangle;                      }                      triangle = (Max + Min) / 2;                  }                    lock(sortedlist)                      sortedlist.Add(angle' point);              });
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,getSRTMAltPath,The following statement contains a magic number: int points = (int)(dist / 10) + 1;
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,getSRTMAltPath,The following statement contains a magic number: elev < homealt + base_height + height + 0.1 && elev > homealt + base_height + height - 0.1                  && elev < drone_alt - clearance + 0.1 && elev > drone_alt - clearance - 0.1
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,getSRTMAltPath,The following statement contains a magic number: elev < homealt + base_height + height + 0.1 && elev > homealt + base_height + height - 0.1                  && elev < drone_alt - clearance + 0.1 && elev > drone_alt - clearance - 0.1
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,getSRTMAltPath,The following statement contains a magic number: elev < homealt + base_height + height + 0.1 && elev > homealt + base_height + height - 0.1                  && elev < drone_alt - clearance + 0.1 && elev > drone_alt - clearance - 0.1
Magic Number,MissionPlanner.Utilities,SightGen,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\SightGen.cs,getSRTMAltPath,The following statement contains a magic number: elev < homealt + base_height + height + 0.1 && elev > homealt + base_height + height - 0.1                  && elev < drone_alt - clearance + 0.1 && elev > drone_alt - clearance - 0.1
Magic Number,MissionPlanner.Utilities,Spectrogram,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spectrogram.cs,GenerateImage,The following statement contains a magic number: var bins = 10;
Magic Number,MissionPlanner.Utilities,Spectrogram,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spectrogram.cs,GenerateImage,The following statement contains a magic number: double[] freqt = fft.FreqTable(N' (int) (1000 / (N / timedelta)));
Magic Number,MissionPlanner.Utilities,Spectrogram,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spectrogram.cs,GenerateImage,The following statement contains a magic number: int divisor = 2;
Magic Number,MissionPlanner.Utilities,Spectrogram,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spectrogram.cs,GenerateImage,The following statement contains a magic number: var time = fftdata.Skip(N / 2).First().time.ToString("o");
Magic Number,MissionPlanner.Utilities,Spectrogram,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spectrogram.cs,GetColor,The following statement contains a magic number: var scale = (actualValue / 2.0) * 255.0;
Magic Number,MissionPlanner.Utilities,Spectrogram,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spectrogram.cs,GetColor,The following statement contains a magic number: var scale = (actualValue / 2.0) * 255.0;
Magic Number,MissionPlanner.Utilities,Spectrogram,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spectrogram.cs,GetColor,The following statement contains a magic number: scale = 255;
Magic Number,MissionPlanner.Utilities,Spectrogram,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spectrogram.cs,GetColor,The following statement contains a magic number: actualValue > 2
Magic Number,MissionPlanner.Utilities,Spectrogram,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spectrogram.cs,GetColor,The following statement contains a magic number: return new Rgba32((byte)scale' 255 - (byte)scale' 0' 255);
Magic Number,MissionPlanner.Utilities,Spectrogram,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spectrogram.cs,GetColor,The following statement contains a magic number: return new Rgba32((byte)scale' 255 - (byte)scale' 0' 255);
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,srtm,The following statement contains a magic number: filenameDictionary[y*1000 + x] = string.Format("{0}{1}{2}{3}{4}"' y >= 0 ? "N" : "S"' sy'                          x >= 0 ? "E" : "W"' sx' ".hgt");
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,srtm,The following statement contains a magic number: x <= 180
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,srtm,The following statement contains a magic number: y <= 90
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,GetFilename,The following statement contains a magic number: int id = y*1000 + x;
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,GetFilename,The following statement contains a magic number: string filename = filenameDictionary[y*1000 + x];
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: size = 1201;
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: fs.Length == (1201 * 1201 * 2)
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: fs.Length == (1201 * 1201 * 2)
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: fs.Length == (1201 * 1201 * 2)
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: byte[] altbytes = new byte[2];
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: altdata[altlat' altlng] = (short) ((altbytes[0] << 8) + altbytes[1]);
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: fs.Read(altbytes' 0' 2) != 0
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: size = 1201;
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: cache[filename].Length == (1201 * 1201)
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: cache[filename].Length == (1201 * 1201)
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: y_int = (size - 2) - y_int;
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: v < -1000
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: string filename2 = "srtm_" + Math.Round((lng + 2.5 + 180) / 5' 0).ToString("00") + "_" +                                     Math.Round((60 - lat + 2.5) / 5' 0).ToString("00") + ".asc";
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: string filename2 = "srtm_" + Math.Round((lng + 2.5 + 180) / 5' 0).ToString("00") + "_" +                                     Math.Round((60 - lat + 2.5) / 5' 0).ToString("00") + ".asc";
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: string filename2 = "srtm_" + Math.Round((lng + 2.5 + 180) / 5' 0).ToString("00") + "_" +                                     Math.Round((60 - lat + 2.5) / 5' 0).ToString("00") + ".asc";
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: string filename2 = "srtm_" + Math.Round((lng + 2.5 + 180) / 5' 0).ToString("00") + "_" +                                     Math.Round((60 - lat + 2.5) / 5' 0).ToString("00") + ".asc";
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: string filename2 = "srtm_" + Math.Round((lng + 2.5 + 180) / 5' 0).ToString("00") + "_" +                                     Math.Round((60 - lat + 2.5) / 5' 0).ToString("00") + ".asc";
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: string filename2 = "srtm_" + Math.Round((lng + 2.5 + 180) / 5' 0).ToString("00") + "_" +                                     Math.Round((60 - lat + 2.5) / 5' 0).ToString("00") + ".asc";
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getAltitude,The following statement contains a magic number: int nodata = -9999;
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getIntersectionWithTerrain,The following statement contains a magic number: int stepsize = 50;
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,requestRunner,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,get3secfile,The following statement contains a magic number: list.Count >= 12 && checkednames > 14000 && !oceantile.Contains((string) name)
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,get3secfile,The following statement contains a magic number: list.Count >= 12 && checkednames > 14000 && !oceantile.Contains((string) name)
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,gethgt,The following statement contains a magic number: byte[] buf1 = new byte[1024];
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,gethgt,The following statement contains a magic number: int len = resstream.Read(buf1' 0' 1024);
Magic Number,MissionPlanner.Utilities,srtm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\srtm.cs,getListing,The following statement contains a magic number: fi.Length > 0 && fi.LastWriteTime.AddDays(7) > DateTime.Now
Magic Number,MissionPlanner.Utilities,StringRedirectWriter,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\StringRedirectWriter.cs,writeString,The following statement contains a magic number: int lengthmax = 1024*1024;
Magic Number,MissionPlanner.Utilities,StringRedirectWriter,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\StringRedirectWriter.cs,writeString,The following statement contains a magic number: int lengthmax = 1024*1024;
Magic Number,MissionPlanner.Utilities,StringRedirectWriter,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\StringRedirectWriter.cs,writeString,The following statement contains a magic number: string temp = internalString.ToString().Substring(internalString.Length - lengthmax + 5000);
Magic Number,MissionPlanner.Utilities,TCPConsole,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TCPConsole.cs,startup,The following statement contains a magic number: listener = new TcpListener(IPAddress.Any' 2300);
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,ReceivedPacket,The following statement contains a magic number: log.Info("received TERRAIN_REQUEST " + packet.lat/1e7 + " " + packet.lon/1e7 + " space " +                          packet.grid_spacing + " " + Convert.ToString((long) packet.mask' 2));
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,ReceivedPacket,The following statement contains a magic number: log.Info("received TERRAIN_REQUEST " + packet.lat/1e7 + " " + packet.lon/1e7 + " space " +                          packet.grid_spacing + " " + Convert.ToString((long) packet.mask' 2));
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,ReceivedPacket,The following statement contains a magic number: log.Info("received TERRAIN_REQUEST " + packet.lat/1e7 + " " + packet.lon/1e7 + " space " +                          packet.grid_spacing + " " + Convert.ToString((long) packet.mask' 2));
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,QueueSendGrid,The following statement contains a magic number: double lat = lastrequest.lat/1e7;
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,QueueSendGrid,The following statement contains a magic number: double lon = lastrequest.lon/1e7;
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,QueueSendGrid,The following statement contains a magic number: int bitgridspacing = lastrequest.grid_spacing*4;
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,QueueSendGrid,The following statement contains a magic number: var newplla = new PointLatLngAlt(lat' lon).gps_offset(bitgridspacing*(i%8)'                             bitgridspacing*(int) Math.Floor(i/8.0));
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,QueueSendGrid,The following statement contains a magic number: var newplla = new PointLatLngAlt(lat' lon).gps_offset(bitgridspacing*(i%8)'                             bitgridspacing*(int) Math.Floor(i/8.0));
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,QueueSendGrid,The following statement contains a magic number: System.Threading.Thread.Sleep(1000/12);
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,QueueSendGrid,The following statement contains a magic number: System.Threading.Thread.Sleep(1000/12);
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,QueueSendGrid,The following statement contains a magic number: i < 56
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,SendGrid,The following statement contains a magic number: resp.data = new short[16];
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,SendGrid,The following statement contains a magic number: int x = i%4;
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,SendGrid,The following statement contains a magic number: int y = i/4;
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,SendGrid,The following statement contains a magic number: i < (4*4)
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,SendGrid,The following statement contains a magic number: i < (4*4)
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,checkTerrain,The following statement contains a magic number: packet.lat = (int) (lat*1e7);
Magic Number,MissionPlanner.Utilities,TerrainFollow,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\TerrainFollow.cs,checkTerrain,The following statement contains a magic number: packet.lon = (int) (lon*1e7);
Magic Number,MissionPlanner.Utilities,tfr,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,tfrcallback,The following statement contains a magic number: a < 100
Magic Number,MissionPlanner.Utilities,tfritem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,GetPaths,The following statement contains a magic number: var point = new PointLatLngAlt(double.Parse(item.Groups[4].Value' CultureInfo.InvariantCulture)' double.Parse(item.Groups[6].Value' CultureInfo.InvariantCulture));
Magic Number,MissionPlanner.Utilities,tfritem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,GetPaths,The following statement contains a magic number: var point = new PointLatLngAlt(double.Parse(item.Groups[4].Value' CultureInfo.InvariantCulture)' double.Parse(item.Groups[6].Value' CultureInfo.InvariantCulture));
Magic Number,MissionPlanner.Utilities,tfritem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,GetPaths,The following statement contains a magic number: item.Groups[3].Value == "S"
Magic Number,MissionPlanner.Utilities,tfritem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,GetPaths,The following statement contains a magic number: item.Groups[5].Value == "W"
Magic Number,MissionPlanner.Utilities,tfritem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,GetPaths,The following statement contains a magic number: endbearing += 360;
Magic Number,MissionPlanner.Utilities,tfritem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\tfr.cs,GetPaths,The following statement contains a magic number: item.Groups[2].Value == "L"
Magic Number,MissionPlanner.Utilities,Tracking,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tracking.cs,AddException,The following statement contains a magic number: param.Add(new KeyValuePair<string' string>("cd5"' ex.ToString().Substring(0' 140)));
Magic Number,MissionPlanner.Utilities,Tracking,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tracking.cs,track,The following statement contains a magic number: httpResponse.StatusCode >= HttpStatusCode.OK && (int) httpResponse.StatusCode < 300
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,Read,The following statement contains a magic number: switch (step)              {                  default:                  case 0:                      if (data == 0xb5)                      {                          step = 1;                          buffer[0] = data;                      }                      break;                  case 1:                      if (data == 0x62)                      {                          buffer[1] = data;                          step++;                      }                      else                          step = 0;                      break;                  case 2:                      buffer[2] = data;                      step++;                      break;                  case 3:                      buffer[3] = data;                      step++;                      break;                  case 4:                      buffer[4] = data;                      payloadlen = data;                      step++;                      break;                  case 5:                      buffer[5] = data;                      step++;                      payloadlen += (data << 8);                      msglencount = 0;                      // reset on oversize packet                      if (payloadlen > buffer.Length)                          step = 0;                      break;                  case 6:                      if (msglencount < (payloadlen))                      {                          buffer[msglencount + 6] = data;                          msglencount++;                            if (msglencount == payloadlen)                              step++;                      }                      break;                  case 7:                      buffer[msglencount + 6] = data;                      step++;                      break;                  case 8:                      buffer[msglencount + 6 + 1] = data;                        var crc = ubx_checksum(buffer' payloadlen + 6);                        var crcpacket = new byte[] { buffer[msglencount + 6]' data };                        if (crc[0] == crcpacket[0] && crc[1] == crcpacket[1])                      {                          step = 0;                          return (@class << 8) + subclass;                      }                      step = 0;                      break;              }
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_checksum,The following statement contains a magic number: var ans = new byte[2];
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,generate,The following statement contains a magic number: var data = new byte[2 + 2 + 2 + 2 + payload.Length];
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,generate,The following statement contains a magic number: var data = new byte[2 + 2 + 2 + 2 + payload.Length];
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,generate,The following statement contains a magic number: var data = new byte[2 + 2 + 2 + 2 + payload.Length];
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,generate,The following statement contains a magic number: var data = new byte[2 + 2 + 2 + 2 + payload.Length];
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,generate,The following statement contains a magic number: data[2] = cl;
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,generate,The following statement contains a magic number: data[3] = subclass;
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,generate,The following statement contains a magic number: data[4] = (byte)(payload.Length & 0xff);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,generate,The following statement contains a magic number: data[5] = (byte)((payload.Length >> 8) & 0xff);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,generate,The following statement contains a magic number: data[5] = (byte)((payload.Length >> 8) & 0xff);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,generate,The following statement contains a magic number: Array.ConstrainedCopy(payload' 0' data' 6' payload.Length);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,generate,The following statement contains a magic number: var checksum = ubx_checksum(data' data.Length - 2);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,generate,The following statement contains a magic number: data[data.Length - 2] = checksum[0];
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: port.BaudRate = 9600;
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: System.Threading.Thread.Sleep(100);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: System.Threading.Thread.Sleep(300);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: System.Threading.Thread.Sleep(300);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: port.BaudRate = 115200;
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: System.Threading.Thread.Sleep(300);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: System.Threading.Thread.Sleep(300);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: System.Threading.Thread.Sleep(200);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: System.Threading.Thread.Sleep(200);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: turnon_off(port' 0xf5' 0x05' 5);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: turnon_off(port' 0xf5' 0xE6' 5);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: turnon_off(port' 0x02' 0x13' 2);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: turnon_off(port' 0x02' 0x11' 2);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: turnon_off(port' 0x0a' 0x09' 2);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupM8P,The following statement contains a magic number: System.Threading.Thread.Sleep(100);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupBasePos,The following statement contains a magic number: System.Threading.Thread.Sleep(100);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupBasePos,The following statement contains a magic number: System.Threading.Thread.Sleep(100);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupBasePos,The following statement contains a magic number: surveyindur = 60;
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,SetupBasePos,The following statement contains a magic number: surveyinacc = 2;
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,turnon_off,The following statement contains a magic number: System.Threading.Thread.Sleep(10);
Magic Number,MissionPlanner.Utilities,Ubx,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,poll_msg,The following statement contains a magic number: System.Threading.Thread.Sleep(10);
Magic Number,MissionPlanner.Utilities,ubx_nav_svin,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,getECEF,The following statement contains a magic number: var X = meanX / 100.0 + meanXHP * 0.0001;
Magic Number,MissionPlanner.Utilities,ubx_nav_svin,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,getECEF,The following statement contains a magic number: var X = meanX / 100.0 + meanXHP * 0.0001;
Magic Number,MissionPlanner.Utilities,ubx_nav_svin,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,getECEF,The following statement contains a magic number: var Y = meanY / 100.0 + meanYHP * 0.0001;
Magic Number,MissionPlanner.Utilities,ubx_nav_svin,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,getECEF,The following statement contains a magic number: var Y = meanY / 100.0 + meanYHP * 0.0001;
Magic Number,MissionPlanner.Utilities,ubx_nav_svin,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,getECEF,The following statement contains a magic number: var Z = meanZ / 100.0 + meanZHP * 0.0001;
Magic Number,MissionPlanner.Utilities,ubx_nav_svin,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,getECEF,The following statement contains a magic number: var Z = meanZ / 100.0 + meanZHP * 0.0001;
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: flags = 2;
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: ecefXorLat = (int)(lat*100);
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: ecefYorLon = (int)(lng * 100);
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: ecefZorAlt = (int)(alt * 100);
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: ecefXOrLatHP = (sbyte)((lat * 100 - ecefXorLat) * 100.0);
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: ecefXOrLatHP = (sbyte)((lat * 100 - ecefXorLat) * 100.0);
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: ecefYOrLonHP = (sbyte)((lng * 100 - ecefYorLon) * 100.0);
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: ecefYOrLonHP = (sbyte)((lng * 100 - ecefYorLon) * 100.0);
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: ecefZOrAltHP = (sbyte)((alt * 100 - ecefZorAlt) * 100.0);
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: ecefZOrAltHP = (sbyte)((alt * 100 - ecefZorAlt) * 100.0);
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: Math.Abs(lat) > 90
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: fixedPosAcc = (uint)(acc * 1000.0);
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: svinMinDur = 60;
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: svinAccLimit = 2000;
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: reserved3 = new byte[8];
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: svinAccLimit = (uint)(AccLimit * 10000);
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,ubx_cfg_tmode3,The following statement contains a magic number: reserved3 = new byte[8];
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,getPointLatLngAlt,The following statement contains a magic number: var X = ecefXorLat / 100.0 + ecefXOrLatHP * 0.0001;
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,getPointLatLngAlt,The following statement contains a magic number: var X = ecefXorLat / 100.0 + ecefXOrLatHP * 0.0001;
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,getPointLatLngAlt,The following statement contains a magic number: var Y = ecefYorLon / 100.0 + ecefYOrLonHP * 0.0001;
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,getPointLatLngAlt,The following statement contains a magic number: var Y = ecefYorLon / 100.0 + ecefYOrLonHP * 0.0001;
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,getPointLatLngAlt,The following statement contains a magic number: var Z = ecefZorAlt / 100.0 + ecefZOrAltHP * 0.0001;
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,getPointLatLngAlt,The following statement contains a magic number: var Z = ecefZorAlt / 100.0 + ecefZOrAltHP * 0.0001;
Magic Number,MissionPlanner.Utilities,ubx_cfg_tmode3,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ubx_m8p.cs,getPointLatLngAlt,The following statement contains a magic number: flags == 2
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,constrain_float,The following statement contains a magic number: return (low + high)*0.5f;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,safe_asin,The following statement contains a magic number: return PI/2;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,safe_asin,The following statement contains a magic number: return -PI/2;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: float[] inv = new float[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: float det = m[0] * (m[4] * m[8] - m[7] * m[5]) -              m[1] * (m[3] * m[8] - m[5] * m[6]) +              m[2] * (m[3] * m[7] - m[4] * m[6]);
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: float det = m[0] * (m[4] * m[8] - m[7] * m[5]) -              m[1] * (m[3] * m[8] - m[5] * m[6]) +              m[2] * (m[3] * m[7] - m[4] * m[6]);
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: float det = m[0] * (m[4] * m[8] - m[7] * m[5]) -              m[1] * (m[3] * m[8] - m[5] * m[6]) +              m[2] * (m[3] * m[7] - m[4] * m[6]);
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: float det = m[0] * (m[4] * m[8] - m[7] * m[5]) -              m[1] * (m[3] * m[8] - m[5] * m[6]) +              m[2] * (m[3] * m[7] - m[4] * m[6]);
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: float det = m[0] * (m[4] * m[8] - m[7] * m[5]) -              m[1] * (m[3] * m[8] - m[5] * m[6]) +              m[2] * (m[3] * m[7] - m[4] * m[6]);
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: float det = m[0] * (m[4] * m[8] - m[7] * m[5]) -              m[1] * (m[3] * m[8] - m[5] * m[6]) +              m[2] * (m[3] * m[7] - m[4] * m[6]);
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: float det = m[0] * (m[4] * m[8] - m[7] * m[5]) -              m[1] * (m[3] * m[8] - m[5] * m[6]) +              m[2] * (m[3] * m[7] - m[4] * m[6]);
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: float det = m[0] * (m[4] * m[8] - m[7] * m[5]) -              m[1] * (m[3] * m[8] - m[5] * m[6]) +              m[2] * (m[3] * m[7] - m[4] * m[6]);
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: float det = m[0] * (m[4] * m[8] - m[7] * m[5]) -              m[1] * (m[3] * m[8] - m[5] * m[6]) +              m[2] * (m[3] * m[7] - m[4] * m[6]);
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: float det = m[0] * (m[4] * m[8] - m[7] * m[5]) -              m[1] * (m[3] * m[8] - m[5] * m[6]) +              m[2] * (m[3] * m[7] - m[4] * m[6]);
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: float det = m[0] * (m[4] * m[8] - m[7] * m[5]) -              m[1] * (m[3] * m[8] - m[5] * m[6]) +              m[2] * (m[3] * m[7] - m[4] * m[6]);
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: float det = m[0] * (m[4] * m[8] - m[7] * m[5]) -              m[1] * (m[3] * m[8] - m[5] * m[6]) +              m[2] * (m[3] * m[7] - m[4] * m[6]);
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: float det = m[0] * (m[4] * m[8] - m[7] * m[5]) -              m[1] * (m[3] * m[8] - m[5] * m[6]) +              m[2] * (m[3] * m[7] - m[4] * m[6]);
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[0] = (m[4] * m[8] - m[7] * m[5]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[0] = (m[4] * m[8] - m[7] * m[5]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[0] = (m[4] * m[8] - m[7] * m[5]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[0] = (m[4] * m[8] - m[7] * m[5]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[1] = (m[2] * m[7] - m[1] * m[8]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[1] = (m[2] * m[7] - m[1] * m[8]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[1] = (m[2] * m[7] - m[1] * m[8]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[2] = (m[1] * m[5] - m[2] * m[4]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[2] = (m[1] * m[5] - m[2] * m[4]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[2] = (m[1] * m[5] - m[2] * m[4]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[2] = (m[1] * m[5] - m[2] * m[4]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[3] = (m[5] * m[6] - m[3] * m[8]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[3] = (m[5] * m[6] - m[3] * m[8]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[3] = (m[5] * m[6] - m[3] * m[8]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[3] = (m[5] * m[6] - m[3] * m[8]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[3] = (m[5] * m[6] - m[3] * m[8]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[4] = (m[0] * m[8] - m[2] * m[6]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[4] = (m[0] * m[8] - m[2] * m[6]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[4] = (m[0] * m[8] - m[2] * m[6]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[4] = (m[0] * m[8] - m[2] * m[6]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[5] = (m[3] * m[2] - m[0] * m[5]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[5] = (m[3] * m[2] - m[0] * m[5]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[5] = (m[3] * m[2] - m[0] * m[5]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[5] = (m[3] * m[2] - m[0] * m[5]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[6] = (m[3] * m[7] - m[6] * m[4]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[6] = (m[3] * m[7] - m[6] * m[4]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[6] = (m[3] * m[7] - m[6] * m[4]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[6] = (m[3] * m[7] - m[6] * m[4]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[6] = (m[3] * m[7] - m[6] * m[4]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[7] = (m[6] * m[1] - m[0] * m[7]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[7] = (m[6] * m[1] - m[0] * m[7]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[7] = (m[6] * m[1] - m[0] * m[7]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[8] = (m[0] * m[4] - m[3] * m[1]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[8] = (m[0] * m[4] - m[3] * m[1]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: inv[8] = (m[0] * m[4] - m[3] * m[1]) * invdet;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse3x3,The following statement contains a magic number: i < 9
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: float[] inv = new float[16];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[0] = m[5] * m[10] * m[15] -              m[5] * m[11] * m[14] -              m[9] * m[6] * m[15] +              m[9] * m[7] * m[14] +              m[13] * m[6] * m[11] -              m[13] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[4] = -m[4] * m[10] * m[15] +              m[4] * m[11] * m[14] +              m[8] * m[6] * m[15] -              m[8] * m[7] * m[14] -              m[12] * m[6] * m[11] +              m[12] * m[7] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[8] = m[4] * m[9] * m[15] -              m[4] * m[11] * m[13] -              m[8] * m[5] * m[15] +              m[8] * m[7] * m[13] +              m[12] * m[5] * m[11] -              m[12] * m[7] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[12] = -m[4] * m[9] * m[14] +              m[4] * m[10] * m[13] +              m[8] * m[5] * m[14] -              m[8] * m[6] * m[13] -              m[12] * m[5] * m[10] +              m[12] * m[6] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[1] = -m[1] * m[10] * m[15] +              m[1] * m[11] * m[14] +              m[9] * m[2] * m[15] -              m[9] * m[3] * m[14] -              m[13] * m[2] * m[11] +              m[13] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[5] = m[0] * m[10] * m[15] -              m[0] * m[11] * m[14] -              m[8] * m[2] * m[15] +              m[8] * m[3] * m[14] +              m[12] * m[2] * m[11] -              m[12] * m[3] * m[10];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[9] = -m[0] * m[9] * m[15] +              m[0] * m[11] * m[13] +              m[8] * m[1] * m[15] -              m[8] * m[3] * m[13] -              m[12] * m[1] * m[11] +              m[12] * m[3] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[13] = m[0] * m[9] * m[14] -              m[0] * m[10] * m[13] -              m[8] * m[1] * m[14] +              m[8] * m[2] * m[13] +              m[12] * m[1] * m[10] -              m[12] * m[2] * m[9];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[2] = m[1] * m[6] * m[15] -              m[1] * m[7] * m[14] -              m[5] * m[2] * m[15] +              m[5] * m[3] * m[14] +              m[13] * m[2] * m[7] -              m[13] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[6] = -m[0] * m[6] * m[15] +              m[0] * m[7] * m[14] +              m[4] * m[2] * m[15] -              m[4] * m[3] * m[14] -              m[12] * m[2] * m[7] +              m[12] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[10] = m[0] * m[5] * m[15] -              m[0] * m[7] * m[13] -              m[4] * m[1] * m[15] +              m[4] * m[3] * m[13] +              m[12] * m[1] * m[7] -              m[12] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[14] = -m[0] * m[5] * m[14] +              m[0] * m[6] * m[13] +              m[4] * m[1] * m[14] -              m[4] * m[2] * m[13] -              m[12] * m[1] * m[6] +              m[12] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[3] = -m[1] * m[6] * m[11] +              m[1] * m[7] * m[10] +              m[5] * m[2] * m[11] -              m[5] * m[3] * m[10] -              m[9] * m[2] * m[7] +              m[9] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[7] = m[0] * m[6] * m[11] -              m[0] * m[7] * m[10] -              m[4] * m[2] * m[11] +              m[4] * m[3] * m[10] +              m[8] * m[2] * m[7] -              m[8] * m[3] * m[6];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[11] = -m[0] * m[5] * m[11] +              m[0] * m[7] * m[9] +              m[4] * m[1] * m[11] -              m[4] * m[3] * m[9] -              m[8] * m[1] * m[7] +              m[8] * m[3] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: inv[15] = m[0] * m[5] * m[10] -              m[0] * m[6] * m[9] -              m[4] * m[1] * m[10] +              m[4] * m[2] * m[9] +              m[8] * m[1] * m[6] -              m[8] * m[2] * m[5];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: det = m[0] * inv[0] + m[1] * inv[4] + m[2] * inv[8] + m[3] * inv[12];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: det = m[0] * inv[0] + m[1] * inv[4] + m[2] * inv[8] + m[3] * inv[12];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: det = m[0] * inv[0] + m[1] * inv[4] + m[2] * inv[8] + m[3] * inv[12];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: det = m[0] * inv[0] + m[1] * inv[4] + m[2] * inv[8] + m[3] * inv[12];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: det = m[0] * inv[0] + m[1] * inv[4] + m[2] * inv[8] + m[3] * inv[12];
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse4x4,The following statement contains a magic number: i < 16
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse,The following statement contains a magic number: switch (dim)              {                  case 3: return inverse3x3(x' y);                  case 4: return inverse4x4(x' y);                  default:                  {                      int info = 0;                      alglib.matinvreport rep = new alglib.matinvreport();                      double['] input = new double[dim' dim];                        int a = 0;                      foreach (var f in x)                      {                          input[a / dim' a % dim] = f;                          a++;                      }                        alglib.rmatrixinverse(ref input' dim' out info' out rep); // mat_inverse(x' y' dim);                        a = 0;                      foreach (var f in input)                      {                          y[a] = (float)f;                          a++;                      }                        return true;                  }              }
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,inverse,The following statement contains a magic number: switch (dim)              {                  case 3: return inverse3x3(x' y);                  case 4: return inverse4x4(x' y);                  default:                  {                      int info = 0;                      alglib.matinvreport rep = new alglib.matinvreport();                      double['] input = new double[dim' dim];                        int a = 0;                      foreach (var f in x)                      {                          input[a / dim' a % dim] = f;                          a++;                      }                        alglib.rmatrixinverse(ref input' dim' out info' out rep); // mat_inverse(x' y' dim);                        a = 0;                      foreach (var f in input)                      {                          y[a] = (float)f;                          a++;                      }                        return true;                  }              }
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,EarthRatesToBodyRatesRyan,The following statement contains a magic number: var psi = radians((360 - yaw)*1.0);
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,BodyRatesToEarthRates,The following statement contains a magic number: theta += 1.0e-10;
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,BodyRatesToEarthRates,The following statement contains a magic number: fabs(cos(theta)) < 1.0e-20
Magic Number,MissionPlanner.Utilities,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Utils.cs,gps_newpos,The following statement contains a magic number: double radius_of_earth = 6378100.0;
Magic Number,MissionPlanner.Utilities,utmpos,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\utmpos.cs,GetDistance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(Math.Abs(x - b.x)' 2) + Math.Pow(Math.Abs(y - b.y)' 2));
Magic Number,MissionPlanner.Utilities,utmpos,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\utmpos.cs,GetDistance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(Math.Abs(x - b.x)' 2) + Math.Pow(Math.Abs(y - b.y)' 2));
Magic Number,MissionPlanner.Utilities,utmpos,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\utmpos.cs,GetBearing,The following statement contains a magic number: return (MathHelper.rad2deg * (Math.Atan2(x' y)) + 360) % 360;
Magic Number,MissionPlanner.Utilities,utmpos,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\utmpos.cs,GetBearing,The following statement contains a magic number: return (MathHelper.rad2deg * (Math.Atan2(x' y)) + 360) % 360;
Magic Number,MissionPlanner.Utilities,utmpos,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\utmpos.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ y.GetHashCode();
Magic Number,MissionPlanner.Utilities,utmpos,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\utmpos.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ zone;
Magic Number,MissionPlanner.Utilities,Vario,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Vario.cs,mainloop,The following statement contains a magic number: float note = climbrate *30 + MidTone;
Magic Number,MissionPlanner.Utilities,Vario,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Vario.cs,mainloop,The following statement contains a magic number: Console.Beep((int)note' 300 - (int)(climbrate * 5));
Magic Number,MissionPlanner.Utilities,Vario,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Vario.cs,mainloop,The following statement contains a magic number: Console.Beep((int)note' 300 - (int)(climbrate * 5));
Magic Number,MissionPlanner.Utilities,Vario,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Vario.cs,mainloop,The following statement contains a magic number: System.Threading.Thread.Sleep(20);
Magic Number,MissionPlanner.Utilities,Vario,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Vario.cs,mainloop,The following statement contains a magic number: Math.Abs(climbrate) > 0.3
Magic Number,MissionPlanner.Utilities,VersionDetection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\VersionDetection.cs,GetVersion,The following statement contains a magic number: string verstring = match.Groups[1].Value.ToString() + "." + match.Groups[2].Value.ToString();
Magic Number,MissionPlanner.Utilities,VersionDetection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\VersionDetection.cs,GetVersion,The following statement contains a magic number: verstring += "." + match.Groups[4].Value.ToString();
Magic Number,MissionPlanner.Utilities,VersionDetection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\VersionDetection.cs,GetVersion,The following statement contains a magic number: !String.IsNullOrEmpty(match.Groups[4].Value)
Magic Number,MissionPlanner.Utilities,VersionDetection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\VersionDetection.cs,GetVersion,The following statement contains a magic number: verstring += "." + match.Groups[5].Value.ToString();
Magic Number,MissionPlanner.Utilities,VersionDetection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\VersionDetection.cs,GetVersion,The following statement contains a magic number: !String.IsNullOrEmpty(match.Groups[5].Value)
Magic Number,MissionPlanner.Utilities,VersionDetection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\VersionDetection.cs,GetVersion,The following statement contains a magic number: !String.IsNullOrEmpty(match.Groups[6].Value)
Magic Number,MissionPlanner.Utilities,VersionDetection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\VersionDetection.cs,GetVersion,The following statement contains a magic number: verstring += "." + (char) ((match.Groups[6].Value.ToString().ToLower()[0]) - 0x30);
Magic Number,MissionPlanner.Utilities,VersionDetection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\VersionDetection.cs,GetVersion,The following statement contains a magic number: !String.IsNullOrEmpty(match.Groups[7].Value)
Magic Number,MissionPlanner.Utilities,vlcrender,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\vlcrender.cs,Start,The following statement contains a magic number: inst = library.m_libvlc_new(4'                  new string[] {":sout-udp-caching=0"' ":udp-caching=0"' ":rtsp-caching=0"' ":tcp-caching=0"});
Magic Number,MissionPlanner.Utilities,vlcrender,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\vlcrender.cs,Start,The following statement contains a magic number: library.libvlc_video_set_format(this.mp' "RV32"' (uint)Width' (uint)Height' (uint)Width * 4);
Magic Number,MissionPlanner.Utilities,vlcrender,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\vlcrender.cs,Setup,The following statement contains a magic number: pitches = width * 4;
Magic Number,MissionPlanner.Utilities,vlcrender,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\vlcrender.cs,Setup,The following statement contains a magic number: imageIntPtr = Marshal.AllocHGlobal(Width * 4 * Height);
Magic Number,MissionPlanner.Utilities,vlcrender,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\vlcrender.cs,vlc_lock,The following statement contains a magic number: imageIntPtr = Marshal.AllocHGlobal(Width * 4 * Height);
Magic Number,MissionPlanner.Utilities,vlcrender,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\vlcrender.cs,vlc_picture,The following statement contains a magic number: var image = (Bitmap)new Bitmap(Width' Height' 4 * Width' SKColorType.Bgra8888' picture).Clone();
Magic Number,MissionPlanner.Utilities,ZeroConf,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\ZeroConf.cs,resolverAsync,The following statement contains a magic number: Thread.Sleep(4000);
Magic Number,ClipperLib,Int128,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,Int128Mul,The following statement contains a magic number: UInt64 int1Hi = (UInt64)lhs >> 32;
Magic Number,ClipperLib,Int128,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,Int128Mul,The following statement contains a magic number: UInt64 int2Hi = (UInt64)rhs >> 32;
Magic Number,ClipperLib,Int128,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,Int128Mul,The following statement contains a magic number: hi = (Int64)(a + (c >> 32));
Magic Number,ClipperLib,Int128,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,Int128Mul,The following statement contains a magic number: lo = (c << 32) + b;
Magic Number,ClipperLib,ClipperBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,AddPath,The following statement contains a magic number: (Closed && highI < 2) || (!Closed && highI < 1)
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,Round,The following statement contains a magic number: return value < 0 ? (cInt)(value - 0.5) : (cInt)(value + 0.5);
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,Round,The following statement contains a magic number: return value < 0 ? (cInt)(value - 0.5) : (cInt)(value + 0.5);
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,BuildResult,The following statement contains a magic number: cnt < 2
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,BuildResult2,The following statement contains a magic number: (outRec.IsOpen && cnt < 2) ||                    (!outRec.IsOpen && cnt < 3)
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,BuildResult2,The following statement contains a magic number: (outRec.IsOpen && cnt < 2) ||                    (!outRec.IsOpen && cnt < 3)
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,PointInPolygon,The following statement contains a magic number: cnt < 3
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,Area,The following statement contains a magic number: cnt < 3
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,Area,The following statement contains a magic number: return -a * 0.5;
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,Area,The following statement contains a magic number: return a * 0.5;
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,CleanPolygon,The following statement contains a magic number: cnt < 3
Magic Number,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,Minkowski,The following statement contains a magic number: Path quad = new Path(4);
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,Round,The following statement contains a magic number: return value < 0 ? (cInt)(value - 0.5) : (cInt)(value + 0.5);
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,Round,The following statement contains a magic number: return value < 0 ? (cInt)(value - 0.5) : (cInt)(value + 0.5);
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,AddPath,The following statement contains a magic number: endType == EndType.etClosedPolygon && j < 2
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,DoOffset,The following statement contains a magic number: m_miterLim = 2 / (MiterLimit * MiterLimit);
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,DoOffset,The following statement contains a magic number: MiterLimit > 2
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,DoOffset,The following statement contains a magic number: m_destPolys.Capacity = m_polyNodes.ChildCount * 2;
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,DoOffset,The following statement contains a magic number: len == 0 || (delta <= 0 && (len < 3 ||                    node.m_endtype != EndType.etClosedPolygon))
Magic Number,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,DoSquare,The following statement contains a magic number: double dx = Math.Tan(Math.Atan2(m_sinA'                  m_normals[k].X * m_normals[j].X + m_normals[k].Y * m_normals[j].Y) / 4);
Magic Number,MissionPlanner.Comms,CommsSerialScan,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\CommsSerialScan.cs,doread,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,MissionPlanner.Log,DFLogScript,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,mag_heading_df,The following statement contains a magic number: mag += new Vector3(ofs[0]' ofs[1]' ofs[2]) - new Vector3(MAG.OfsX' MAG.OfsY' MAG.OfsZ);
Magic Number,MissionPlanner.Log,DFLogScript,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,mag_heading_df,The following statement contains a magic number: diagonals = new Vector3(diagonals[0]' diagonals[1]' diagonals[2]);
Magic Number,MissionPlanner.Log,DFLogScript,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,mag_heading_df,The following statement contains a magic number: offdiagonals = new Vector3(offdiagonals[0]' offdiagonals[1]' offdiagonals[2]);
Magic Number,MissionPlanner.Log,DFLogScript,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,mag_heading_df,The following statement contains a magic number: heading += 360;
Magic Number,MissionPlanner.Log,DFLogScript,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,delta,The following statement contains a magic number: tnow = tusec * 1.0e-6;
Magic Number,MissionPlanner.Log,DFLogScript,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,ProcessExpression,The following statement contains a magic number: var type = match.Groups[2].Value.ToString();
Magic Number,MissionPlanner.Log,DFLogScript,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,ProcessExpression,The following statement contains a magic number: var field = match.Groups[3].Value.ToString();
Magic Number,MissionPlanner.Log,DFLogScript,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,ProcessExpression,The following statement contains a magic number: var filter2 = Regex.Replace(filter1' @"(([A-z0-9_]{2'20})\.([A-z0-9_]+))"'                  match => match.Groups[2].ToString() + match.Groups[3]);
Magic Number,MissionPlanner.Log,DFLogScript,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,ProcessExpression,The following statement contains a magic number: var filter2 = Regex.Replace(filter1' @"(([A-z0-9_]{2'20})\.([A-z0-9_]+))"'                  match => match.Groups[2].ToString() + match.Groups[3]);
Magic Number,MissionPlanner.Log,DFLogScript,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,ProcessExpression,The following statement contains a magic number: var filter3 = Regex.Replace(filter2' @"([""']{1}[^""]+[""']{1})"'                  match => BitConverter.ToUInt64(match.Groups[0].Value.MakeBytesSize(8)' 0).ToString());
Magic Number,MissionPlanner.Log,atan2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,getParametersNumber,The following statement contains a magic number: return 2;
Magic Number,MissionPlanner.Log,lowpass,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,getParameterName,The following statement contains a magic number: argumentIndex == 2
Magic Number,MissionPlanner.Log,lowpass,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,getParametersNumber,The following statement contains a magic number: return 3;
Magic Number,MissionPlanner.Log,lowpass,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,setParameterValue,The following statement contains a magic number: argumentIndex == 2
Magic Number,MissionPlanner.Log,deltaF,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,calculate,The following statement contains a magic number: tnow = tusec * 1.0e-6;
Magic Number,MissionPlanner.Log,deltaF,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,getParameterName,The following statement contains a magic number: argumentIndex == 2
Magic Number,MissionPlanner.Log,deltaF,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,getParametersNumber,The following statement contains a magic number: return 3;
Magic Number,MissionPlanner.Log,deltaF,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\DFLogScript.cs,setParameterValue,The following statement contains a magic number: argumentIndex == 2
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: double minx = 99999;
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: double maxx = -99999;
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: double miny = 99999;
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: double maxy = -99999;
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: packet == null || packet.Length < 5
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: var id = packet.sysid * 256 + packet.compid;
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: loc_list[id].Add(new PointLatLngAlt(loc.lat / 10000000.0f' loc.lon / 10000000.0f));
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: loc_list[id].Add(new PointLatLngAlt(loc.lat / 10000000.0f' loc.lon / 10000000.0f));
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: minx = Math.Min(minx' loc.lon / 10000000.0f);
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: maxx = Math.Max(maxx' loc.lon / 10000000.0f);
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: miny = Math.Min(miny' loc.lat / 10000000.0f);
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: maxy = Math.Max(maxy' loc.lat / 10000000.0f);
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: var area = RectLatLng.FromLTRB(minx - 0.001' maxy + 0.001' maxx + 0.001' miny - 0.001);
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: var area = RectLatLng.FromLTRB(minx - 0.001' maxy + 0.001' maxx + 0.001' miny - 0.001);
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: var area = RectLatLng.FromLTRB(minx - 0.001' maxy + 0.001' maxx + 0.001' miny - 0.001);
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: var area = RectLatLng.FromLTRB(minx - 0.001' maxy + 0.001' maxx + 0.001' miny - 0.001);
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,ProcessFile,The following statement contains a magic number: loc_list.Count > 0 && loc_list.First().Value.Count > 10
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,DoTextMap,The following statement contains a magic number: var map = new Bitmap(100' 100);
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,DoTextMap,The following statement contains a magic number: var map = new Bitmap(100' 100);
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,GetMap,The following statement contains a magic number: int zoom = 16;
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,GetMap,The following statement contains a magic number: pxDelta.X > 2000
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,GetMap,The following statement contains a magic number: int padding = 10;
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,GetMap,The following statement contains a magic number: Bitmap bmpDestination = new Bitmap((int) pxDelta.X + padding*2' (int) pxDelta.Y + padding*2);
Magic Number,MissionPlanner.Log,LogMap,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogMap.cs,GetMap,The following statement contains a magic number: Bitmap bmpDestination = new Bitmap((int) pxDelta.X + padding*2' (int) pxDelta.Y + padding*2);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKMLFirstPerson,The following statement contains a magic number: data.Append(@"          <gx:FlyTo>              <gx:duration>" + ((gpspackets - lastgpspacket)*0.1).ToString(new System.Globalization.CultureInfo("en-US")) + @"</gx:duration>              <gx:flyToMode>smooth</gx:flyToMode>              <Camera>                  <longitude>" + mod.model.Location.longitude.ToString(new System.Globalization.CultureInfo("en-US")) +                              @"</longitude>                  <latitude>" + mod.model.Location.latitude.ToString(new System.Globalization.CultureInfo("en-US")) +                              @"</latitude>                  <altitude>" + mod.model.Location.altitude.ToString(new System.Globalization.CultureInfo("en-US")) +                              @"</altitude>                  <roll>" + mod.model.Orientation.roll.ToString(new System.Globalization.CultureInfo("en-US")) + @"</roll>                  <tilt>" + (90 - mod.model.Orientation.tilt).ToString(new System.Globalization.CultureInfo("en-US")) +                              @"</tilt>                  <heading>" + mod.model.Orientation.heading.ToString(new System.Globalization.CultureInfo("en-US")) +                              @"</heading>                                <altitudeMode>absolute</altitudeMode>              </Camera>          </gx:FlyTo>  ");
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKMLFirstPerson,The following statement contains a magic number: data.Append(@"          <gx:FlyTo>              <gx:duration>" + ((gpspackets - lastgpspacket)*0.1).ToString(new System.Globalization.CultureInfo("en-US")) + @"</gx:duration>              <gx:flyToMode>smooth</gx:flyToMode>              <Camera>                  <longitude>" + mod.model.Location.longitude.ToString(new System.Globalization.CultureInfo("en-US")) +                              @"</longitude>                  <latitude>" + mod.model.Location.latitude.ToString(new System.Globalization.CultureInfo("en-US")) +                              @"</latitude>                  <altitude>" + mod.model.Location.altitude.ToString(new System.Globalization.CultureInfo("en-US")) +                              @"</altitude>                  <roll>" + mod.model.Orientation.roll.ToString(new System.Globalization.CultureInfo("en-US")) + @"</roll>                  <tilt>" + (90 - mod.model.Orientation.tilt).ToString(new System.Globalization.CultureInfo("en-US")) +                              @"</tilt>                  <heading>" + mod.model.Orientation.heading.ToString(new System.Globalization.CultureInfo("en-US")) +                              @"</heading>                                <altitudeMode>absolute</altitudeMode>              </Camera>          </gx:FlyTo>  ");
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKMLFirstPerson,The following statement contains a magic number: zipStream.SetLevel(9);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKMLFirstPerson,The following statement contains a magic number: byte[] buffer = new byte[4096];
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKMLFirstPerson,The following statement contains a magic number: buffer = new byte[4096];
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKMLFirstPerson,The following statement contains a magic number: position = new List<Core.Geometry.Point3D>[200];
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,GetFromGps,The following statement contains a magic number: DateTime datum = new DateTime(1980' 1' 6' 0' 0' 0' DateTimeKind.Utc);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,GetFromGps,The following statement contains a magic number: DateTime datum = new DateTime(1980' 1' 6' 0' 0' 0' DateTimeKind.Utc);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,GetFromGps,The following statement contains a magic number: DateTime week = datum.AddDays(weeknumber*7);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeWPFile,The following statement contains a magic number: var Frame = 3.0;
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The following statement contains a magic number: sv > 32
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The following statement contains a magic number: DateTime gpstime = GetFromGps(week' weekms/1000.0);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The following statement contains a magic number: rinexoutput.WriteLine("> {0'4} {1'2} {2'2} {3'2} {4'2}{5'11}  {6'1}{7'3}"' gpstime.Year'                          gpstime.Month'                          gpstime.Day' gpstime.Hour' gpstime.Minute'                          (gpstime.Second + (gpstime.Millisecond/1000.0)).ToString("0.0000000"'                              System.Globalization.CultureInfo.InvariantCulture)' 0' NSats);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The following statement contains a magic number: sv -= 100;
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The following statement contains a magic number: gnss == 2
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The following statement contains a magic number: gnss == 3
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The following statement contains a magic number: gnss == 4
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The following statement contains a magic number: sv -= 192;
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The following statement contains a magic number: gnss == 5
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The following statement contains a magic number: gnss == 6
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The following statement contains a magic number: var sn_rnx = Math.Min(Math.Max((int)(cno / 6)' 1)' 9);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeRinex,The following statement contains a magic number: var sn_rnx = Math.Min(Math.Max((int)(cno / 6)' 1)' 9);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,HexStringToColor,The following statement contains a magic number: hc.Length != 8
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,HexStringToColor,The following statement contains a magic number: string a = hc.Substring(0' 2);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,HexStringToColor,The following statement contains a magic number: string r = hc.Substring(6' 2);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,HexStringToColor,The following statement contains a magic number: string r = hc.Substring(6' 2);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,HexStringToColor,The following statement contains a magic number: string g = hc.Substring(4' 2);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,HexStringToColor,The following statement contains a magic number: string g = hc.Substring(4' 2);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,HexStringToColor,The following statement contains a magic number: string b = hc.Substring(2' 2);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,HexStringToColor,The following statement contains a magic number: string b = hc.Substring(2' 2);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: style.Add(new LineStyle(HexStringToColor("7f00ffff")' 4));
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: Color color = Color.FromArgb(0xff' (stylecode >> 16) & 0xff' (stylecode >> 8) & 0xff'                      (stylecode >> 0) & 0xff);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: Color color = Color.FromArgb(0xff' (stylecode >> 16) & 0xff' (stylecode >> 8) & 0xff'                      (stylecode >> 0) & 0xff);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: style2.Add(new LineStyle(color' 4));
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: item.GetDistance(lastplla) < 0.1 &&                      lastPoint3D.Z >= (newpoint.Z - 0.3) &&                      lastPoint3D.Z <= (newpoint.Z + 0.3)
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: item.GetDistance(lastplla) < 0.1 &&                      lastPoint3D.Z >= (newpoint.Z - 0.3) &&                      lastPoint3D.Z <= (newpoint.Z + 0.3)
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: item.GetDistance(lastplla) < 0.1 &&                      lastPoint3D.Z >= (newpoint.Z - 0.3) &&                      lastPoint3D.Z <= (newpoint.Z + 0.3)
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: pmPOS.LineString.coordinates.Count > 20000
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: model.Scale.x = 2;
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: model.Scale.y = 2;
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: model.Scale.z = 2;
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: pmplane.description = @"<![CDATA[                <table>                  <tr><td>Roll: " + model.Orientation.roll + @" </td></tr>                  <tr><td>Pitch: " + model.Orientation.tilt + @" </td></tr>                  <tr><td>Yaw: " + model.Orientation.heading + @" </td></tr>                  <tr><td>WP dist " + mod.ntun[2] + @" </td></tr>  				<tr><td>tar bear " + mod.ntun[3] + @" </td></tr>  				<tr><td>nav bear " + mod.ntun[4] + @" </td></tr>  				<tr><td>alt error " + mod.ntun[5] + @" </td></tr>                </table>              ]]>";
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: pmplane.description = @"<![CDATA[                <table>                  <tr><td>Roll: " + model.Orientation.roll + @" </td></tr>                  <tr><td>Pitch: " + model.Orientation.tilt + @" </td></tr>                  <tr><td>Yaw: " + model.Orientation.heading + @" </td></tr>                  <tr><td>WP dist " + mod.ntun[2] + @" </td></tr>  				<tr><td>tar bear " + mod.ntun[3] + @" </td></tr>  				<tr><td>nav bear " + mod.ntun[4] + @" </td></tr>  				<tr><td>alt error " + mod.ntun[5] + @" </td></tr>                </table>              ]]>";
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: pmplane.description = @"<![CDATA[                <table>                  <tr><td>Roll: " + model.Orientation.roll + @" </td></tr>                  <tr><td>Pitch: " + model.Orientation.tilt + @" </td></tr>                  <tr><td>Yaw: " + model.Orientation.heading + @" </td></tr>                  <tr><td>WP dist " + mod.ntun[2] + @" </td></tr>  				<tr><td>tar bear " + mod.ntun[3] + @" </td></tr>  				<tr><td>nav bear " + mod.ntun[4] + @" </td></tr>  				<tr><td>alt error " + mod.ntun[5] + @" </td></tr>                </table>              ]]>";
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: pmplane.description = @"<![CDATA[                <table>                  <tr><td>Roll: " + model.Orientation.roll + @" </td></tr>                  <tr><td>Pitch: " + model.Orientation.tilt + @" </td></tr>                  <tr><td>Yaw: " + model.Orientation.heading + @" </td></tr>                  <tr><td>WP dist " + mod.ntun[2] + @" </td></tr>  				<tr><td>tar bear " + mod.ntun[3] + @" </td></tr>  				<tr><td>nav bear " + mod.ntun[4] + @" </td></tr>  				<tr><td>alt error " + mod.ntun[5] + @" </td></tr>                </table>              ]]>";
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: zipStream.SetLevel(9);
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: byte[] buffer = new byte[4096];
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: buffer = new byte[4096];
Magic Number,MissionPlanner.Log,LogOutput,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogOutput.cs,writeKML,The following statement contains a magic number: position = new List<Core.Geometry.Point3D>[200];
Magic Number,MissionPlanner.Log,LogSort,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogSort.cs,SortLogs,The following statement contains a magic number: Parallel.ForEach(logs' logfile =>                  //foreach (var logfile in logs)              {                  if (masterdestdir == "")                      masterdestdir = Path.GetDirectoryName(logfile);                    try                  {                      FileInfo info;                                         info = new FileInfo(logfile);                            // delete 0 size files                          if (info.Length == 0)                          {                              try                              {                                  File.Delete(logfile);                              }                              catch                              {                              }                                return;                          }                        // move small logs - most likerly invalid                      if (info.Length <= 1024)                      {                          try                          {                              string destdir = masterdestdir + Path.DirectorySeparatorChar                                                             + "SMALL" + Path.DirectorySeparatorChar;                                if (!Directory.Exists(destdir))                                  Directory.CreateDirectory(destdir);                                log.Info("Move log small " + logfile + " to " + destdir + Path.GetFileName(logfile));                                MoveFileUsingMask(logfile' destdir);                          }                          catch                          {                          }                            return;                      }                        bool issitl = false;                      var sysid = 0;                      var compid = 0;                      var aptype = MAVLink.MAV_TYPE.GENERIC;                      var packetsseen = 0;                        var parse = new MAVLink.MavlinkParse(true);                      using (var binfile = File.Open(logfile' FileMode.Open' FileAccess.Read' FileShare.Read))                      {                          var midpoint = binfile.Length / 8;                            binfile.Seek(midpoint' SeekOrigin.Begin);                            MAVLink.MAVLinkMessage packet;                            List<MAVLink.MAVLinkMessage> hblist = new List<MAVLink.MAVLinkMessage>();                            try                          {                              var length = binfile.Length;                              while (binfile.Position < length)                              {                                  packet = parse.ReadPacket(binfile);                                  // no gcs packets                                  if (packet == null || packet.compid == 190)                                      continue;                                    if (packet.msgid == (uint) MAVLink.MAVLINK_MSG_ID.SIMSTATE)                                  {                                      packetsseen++;                                      issitl = true;                                  }                                  else if (packet.msgid == (uint) MAVLink.MAVLINK_MSG_ID.HEARTBEAT)                                  {                                      packetsseen++;                                      hblist.Add(packet);                                        var hb = (MAVLink.mavlink_heartbeat_t) packet.data;                                      sysid = packet.sysid;                                      compid = packet.compid;                                      aptype = (MAVLink.MAV_TYPE) hb.type;                                        if (hblist.Count > 10)                                          break;                                  }                                  else if (packet != MAVLink.MAVLinkMessage.Invalid)                                  {                                      packetsseen++;                                      if (sysid == 0)                                          sysid = packet.sysid;                                      if(compid == 0)                                          compid = packet.compid;                                  }                              }                          } catch (EndOfStreamException) { }                          catch { }                            if (hblist.Count == 0)                          {                              binfile.Close();                                if (!Directory.Exists(masterdestdir + Path.DirectorySeparatorChar + "BAD"))                                  Directory.CreateDirectory(masterdestdir + Path.DirectorySeparatorChar +                                                            "BAD");                                log.Info("Move log bad " + logfile + " to " + masterdestdir +                                       Path.DirectorySeparatorChar + "BAD" + Path.DirectorySeparatorChar +                                       Path.GetFileName(logfile) + " " + info.Length);                                MoveFileUsingMask(logfile'                                  masterdestdir + Path.DirectorySeparatorChar + "BAD" +                                  Path.DirectorySeparatorChar);                              return;                          }                            // find most appropriate                          if (hblist.GroupBy(a => a.sysid * 256 + a.compid).ToArray().Length > 1)                          {                              foreach (var mav in hblist)                              {                                  var hb = (MAVLink.mavlink_heartbeat_t) mav.data;                                  if (hb.type == (byte) MAVLink.MAV_TYPE.ANTENNA_TRACKER)                                      continue;                                  if (hb.type == (byte) MAVLink.MAV_TYPE.GCS)                                      continue;                                    sysid = mav.sysid;                                  compid = mav.compid;                                  aptype = (MAVLink.MAV_TYPE) hb.type;                              }                          }                            binfile.Close();                            string destdir = masterdestdir + Path.DirectorySeparatorChar                                                         + aptype.ToString() + Path.DirectorySeparatorChar                                                         + sysid + Path.DirectorySeparatorChar;                            if (issitl)                          {                              destdir = masterdestdir + Path.DirectorySeparatorChar                                                      + "SITL" + Path.DirectorySeparatorChar                                                      + aptype.ToString() + Path.DirectorySeparatorChar                                                      + sysid + Path.DirectorySeparatorChar;                          }                            if (!Directory.Exists(destdir))                              Directory.CreateDirectory(destdir);                            MoveFileUsingMask(logfile' destdir);                      }                  }                  catch                  {                      return;                  }              });
Magic Number,MissionPlanner.Log,LogSort,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogSort.cs,SortLogs,The following statement contains a magic number: Parallel.ForEach(logs' logfile =>                  //foreach (var logfile in logs)              {                  if (masterdestdir == "")                      masterdestdir = Path.GetDirectoryName(logfile);                    try                  {                      FileInfo info;                                         info = new FileInfo(logfile);                            // delete 0 size files                          if (info.Length == 0)                          {                              try                              {                                  File.Delete(logfile);                              }                              catch                              {                              }                                return;                          }                        // move small logs - most likerly invalid                      if (info.Length <= 1024)                      {                          try                          {                              string destdir = masterdestdir + Path.DirectorySeparatorChar                                                             + "SMALL" + Path.DirectorySeparatorChar;                                if (!Directory.Exists(destdir))                                  Directory.CreateDirectory(destdir);                                log.Info("Move log small " + logfile + " to " + destdir + Path.GetFileName(logfile));                                MoveFileUsingMask(logfile' destdir);                          }                          catch                          {                          }                            return;                      }                        bool issitl = false;                      var sysid = 0;                      var compid = 0;                      var aptype = MAVLink.MAV_TYPE.GENERIC;                      var packetsseen = 0;                        var parse = new MAVLink.MavlinkParse(true);                      using (var binfile = File.Open(logfile' FileMode.Open' FileAccess.Read' FileShare.Read))                      {                          var midpoint = binfile.Length / 8;                            binfile.Seek(midpoint' SeekOrigin.Begin);                            MAVLink.MAVLinkMessage packet;                            List<MAVLink.MAVLinkMessage> hblist = new List<MAVLink.MAVLinkMessage>();                            try                          {                              var length = binfile.Length;                              while (binfile.Position < length)                              {                                  packet = parse.ReadPacket(binfile);                                  // no gcs packets                                  if (packet == null || packet.compid == 190)                                      continue;                                    if (packet.msgid == (uint) MAVLink.MAVLINK_MSG_ID.SIMSTATE)                                  {                                      packetsseen++;                                      issitl = true;                                  }                                  else if (packet.msgid == (uint) MAVLink.MAVLINK_MSG_ID.HEARTBEAT)                                  {                                      packetsseen++;                                      hblist.Add(packet);                                        var hb = (MAVLink.mavlink_heartbeat_t) packet.data;                                      sysid = packet.sysid;                                      compid = packet.compid;                                      aptype = (MAVLink.MAV_TYPE) hb.type;                                        if (hblist.Count > 10)                                          break;                                  }                                  else if (packet != MAVLink.MAVLinkMessage.Invalid)                                  {                                      packetsseen++;                                      if (sysid == 0)                                          sysid = packet.sysid;                                      if(compid == 0)                                          compid = packet.compid;                                  }                              }                          } catch (EndOfStreamException) { }                          catch { }                            if (hblist.Count == 0)                          {                              binfile.Close();                                if (!Directory.Exists(masterdestdir + Path.DirectorySeparatorChar + "BAD"))                                  Directory.CreateDirectory(masterdestdir + Path.DirectorySeparatorChar +                                                            "BAD");                                log.Info("Move log bad " + logfile + " to " + masterdestdir +                                       Path.DirectorySeparatorChar + "BAD" + Path.DirectorySeparatorChar +                                       Path.GetFileName(logfile) + " " + info.Length);                                MoveFileUsingMask(logfile'                                  masterdestdir + Path.DirectorySeparatorChar + "BAD" +                                  Path.DirectorySeparatorChar);                              return;                          }                            // find most appropriate                          if (hblist.GroupBy(a => a.sysid * 256 + a.compid).ToArray().Length > 1)                          {                              foreach (var mav in hblist)                              {                                  var hb = (MAVLink.mavlink_heartbeat_t) mav.data;                                  if (hb.type == (byte) MAVLink.MAV_TYPE.ANTENNA_TRACKER)                                      continue;                                  if (hb.type == (byte) MAVLink.MAV_TYPE.GCS)                                      continue;                                    sysid = mav.sysid;                                  compid = mav.compid;                                  aptype = (MAVLink.MAV_TYPE) hb.type;                              }                          }                            binfile.Close();                            string destdir = masterdestdir + Path.DirectorySeparatorChar                                                         + aptype.ToString() + Path.DirectorySeparatorChar                                                         + sysid + Path.DirectorySeparatorChar;                            if (issitl)                          {                              destdir = masterdestdir + Path.DirectorySeparatorChar                                                      + "SITL" + Path.DirectorySeparatorChar                                                      + aptype.ToString() + Path.DirectorySeparatorChar                                                      + sysid + Path.DirectorySeparatorChar;                          }                            if (!Directory.Exists(destdir))                              Directory.CreateDirectory(destdir);                            MoveFileUsingMask(logfile' destdir);                      }                  }                  catch                  {                      return;                  }              });
Magic Number,MissionPlanner.Log,LogSort,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogSort.cs,SortLogs,The following statement contains a magic number: Parallel.ForEach(logs' logfile =>                  //foreach (var logfile in logs)              {                  if (masterdestdir == "")                      masterdestdir = Path.GetDirectoryName(logfile);                    try                  {                      FileInfo info;                                         info = new FileInfo(logfile);                            // delete 0 size files                          if (info.Length == 0)                          {                              try                              {                                  File.Delete(logfile);                              }                              catch                              {                              }                                return;                          }                        // move small logs - most likerly invalid                      if (info.Length <= 1024)                      {                          try                          {                              string destdir = masterdestdir + Path.DirectorySeparatorChar                                                             + "SMALL" + Path.DirectorySeparatorChar;                                if (!Directory.Exists(destdir))                                  Directory.CreateDirectory(destdir);                                log.Info("Move log small " + logfile + " to " + destdir + Path.GetFileName(logfile));                                MoveFileUsingMask(logfile' destdir);                          }                          catch                          {                          }                            return;                      }                        bool issitl = false;                      var sysid = 0;                      var compid = 0;                      var aptype = MAVLink.MAV_TYPE.GENERIC;                      var packetsseen = 0;                        var parse = new MAVLink.MavlinkParse(true);                      using (var binfile = File.Open(logfile' FileMode.Open' FileAccess.Read' FileShare.Read))                      {                          var midpoint = binfile.Length / 8;                            binfile.Seek(midpoint' SeekOrigin.Begin);                            MAVLink.MAVLinkMessage packet;                            List<MAVLink.MAVLinkMessage> hblist = new List<MAVLink.MAVLinkMessage>();                            try                          {                              var length = binfile.Length;                              while (binfile.Position < length)                              {                                  packet = parse.ReadPacket(binfile);                                  // no gcs packets                                  if (packet == null || packet.compid == 190)                                      continue;                                    if (packet.msgid == (uint) MAVLink.MAVLINK_MSG_ID.SIMSTATE)                                  {                                      packetsseen++;                                      issitl = true;                                  }                                  else if (packet.msgid == (uint) MAVLink.MAVLINK_MSG_ID.HEARTBEAT)                                  {                                      packetsseen++;                                      hblist.Add(packet);                                        var hb = (MAVLink.mavlink_heartbeat_t) packet.data;                                      sysid = packet.sysid;                                      compid = packet.compid;                                      aptype = (MAVLink.MAV_TYPE) hb.type;                                        if (hblist.Count > 10)                                          break;                                  }                                  else if (packet != MAVLink.MAVLinkMessage.Invalid)                                  {                                      packetsseen++;                                      if (sysid == 0)                                          sysid = packet.sysid;                                      if(compid == 0)                                          compid = packet.compid;                                  }                              }                          } catch (EndOfStreamException) { }                          catch { }                            if (hblist.Count == 0)                          {                              binfile.Close();                                if (!Directory.Exists(masterdestdir + Path.DirectorySeparatorChar + "BAD"))                                  Directory.CreateDirectory(masterdestdir + Path.DirectorySeparatorChar +                                                            "BAD");                                log.Info("Move log bad " + logfile + " to " + masterdestdir +                                       Path.DirectorySeparatorChar + "BAD" + Path.DirectorySeparatorChar +                                       Path.GetFileName(logfile) + " " + info.Length);                                MoveFileUsingMask(logfile'                                  masterdestdir + Path.DirectorySeparatorChar + "BAD" +                                  Path.DirectorySeparatorChar);                              return;                          }                            // find most appropriate                          if (hblist.GroupBy(a => a.sysid * 256 + a.compid).ToArray().Length > 1)                          {                              foreach (var mav in hblist)                              {                                  var hb = (MAVLink.mavlink_heartbeat_t) mav.data;                                  if (hb.type == (byte) MAVLink.MAV_TYPE.ANTENNA_TRACKER)                                      continue;                                  if (hb.type == (byte) MAVLink.MAV_TYPE.GCS)                                      continue;                                    sysid = mav.sysid;                                  compid = mav.compid;                                  aptype = (MAVLink.MAV_TYPE) hb.type;                              }                          }                            binfile.Close();                            string destdir = masterdestdir + Path.DirectorySeparatorChar                                                         + aptype.ToString() + Path.DirectorySeparatorChar                                                         + sysid + Path.DirectorySeparatorChar;                            if (issitl)                          {                              destdir = masterdestdir + Path.DirectorySeparatorChar                                                      + "SITL" + Path.DirectorySeparatorChar                                                      + aptype.ToString() + Path.DirectorySeparatorChar                                                      + sysid + Path.DirectorySeparatorChar;                          }                            if (!Directory.Exists(destdir))                              Directory.CreateDirectory(destdir);                            MoveFileUsingMask(logfile' destdir);                      }                  }                  catch                  {                      return;                  }              });
Magic Number,MissionPlanner.Log,LogSort,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogSort.cs,SortLogs,The following statement contains a magic number: Parallel.ForEach(logs' logfile =>                  //foreach (var logfile in logs)              {                  if (masterdestdir == "")                      masterdestdir = Path.GetDirectoryName(logfile);                    try                  {                      FileInfo info;                                         info = new FileInfo(logfile);                            // delete 0 size files                          if (info.Length == 0)                          {                              try                              {                                  File.Delete(logfile);                              }                              catch                              {                              }                                return;                          }                        // move small logs - most likerly invalid                      if (info.Length <= 1024)                      {                          try                          {                              string destdir = masterdestdir + Path.DirectorySeparatorChar                                                             + "SMALL" + Path.DirectorySeparatorChar;                                if (!Directory.Exists(destdir))                                  Directory.CreateDirectory(destdir);                                log.Info("Move log small " + logfile + " to " + destdir + Path.GetFileName(logfile));                                MoveFileUsingMask(logfile' destdir);                          }                          catch                          {                          }                            return;                      }                        bool issitl = false;                      var sysid = 0;                      var compid = 0;                      var aptype = MAVLink.MAV_TYPE.GENERIC;                      var packetsseen = 0;                        var parse = new MAVLink.MavlinkParse(true);                      using (var binfile = File.Open(logfile' FileMode.Open' FileAccess.Read' FileShare.Read))                      {                          var midpoint = binfile.Length / 8;                            binfile.Seek(midpoint' SeekOrigin.Begin);                            MAVLink.MAVLinkMessage packet;                            List<MAVLink.MAVLinkMessage> hblist = new List<MAVLink.MAVLinkMessage>();                            try                          {                              var length = binfile.Length;                              while (binfile.Position < length)                              {                                  packet = parse.ReadPacket(binfile);                                  // no gcs packets                                  if (packet == null || packet.compid == 190)                                      continue;                                    if (packet.msgid == (uint) MAVLink.MAVLINK_MSG_ID.SIMSTATE)                                  {                                      packetsseen++;                                      issitl = true;                                  }                                  else if (packet.msgid == (uint) MAVLink.MAVLINK_MSG_ID.HEARTBEAT)                                  {                                      packetsseen++;                                      hblist.Add(packet);                                        var hb = (MAVLink.mavlink_heartbeat_t) packet.data;                                      sysid = packet.sysid;                                      compid = packet.compid;                                      aptype = (MAVLink.MAV_TYPE) hb.type;                                        if (hblist.Count > 10)                                          break;                                  }                                  else if (packet != MAVLink.MAVLinkMessage.Invalid)                                  {                                      packetsseen++;                                      if (sysid == 0)                                          sysid = packet.sysid;                                      if(compid == 0)                                          compid = packet.compid;                                  }                              }                          } catch (EndOfStreamException) { }                          catch { }                            if (hblist.Count == 0)                          {                              binfile.Close();                                if (!Directory.Exists(masterdestdir + Path.DirectorySeparatorChar + "BAD"))                                  Directory.CreateDirectory(masterdestdir + Path.DirectorySeparatorChar +                                                            "BAD");                                log.Info("Move log bad " + logfile + " to " + masterdestdir +                                       Path.DirectorySeparatorChar + "BAD" + Path.DirectorySeparatorChar +                                       Path.GetFileName(logfile) + " " + info.Length);                                MoveFileUsingMask(logfile'                                  masterdestdir + Path.DirectorySeparatorChar + "BAD" +                                  Path.DirectorySeparatorChar);                              return;                          }                            // find most appropriate                          if (hblist.GroupBy(a => a.sysid * 256 + a.compid).ToArray().Length > 1)                          {                              foreach (var mav in hblist)                              {                                  var hb = (MAVLink.mavlink_heartbeat_t) mav.data;                                  if (hb.type == (byte) MAVLink.MAV_TYPE.ANTENNA_TRACKER)                                      continue;                                  if (hb.type == (byte) MAVLink.MAV_TYPE.GCS)                                      continue;                                    sysid = mav.sysid;                                  compid = mav.compid;                                  aptype = (MAVLink.MAV_TYPE) hb.type;                              }                          }                            binfile.Close();                            string destdir = masterdestdir + Path.DirectorySeparatorChar                                                         + aptype.ToString() + Path.DirectorySeparatorChar                                                         + sysid + Path.DirectorySeparatorChar;                            if (issitl)                          {                              destdir = masterdestdir + Path.DirectorySeparatorChar                                                      + "SITL" + Path.DirectorySeparatorChar                                                      + aptype.ToString() + Path.DirectorySeparatorChar                                                      + sysid + Path.DirectorySeparatorChar;                          }                            if (!Directory.Exists(destdir))                              Directory.CreateDirectory(destdir);                            MoveFileUsingMask(logfile' destdir);                      }                  }                  catch                  {                      return;                  }              });
Magic Number,MissionPlanner.Log,LogSort,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\LogSort.cs,SortLogs,The following statement contains a magic number: Parallel.ForEach(logs' logfile =>                  //foreach (var logfile in logs)              {                  if (masterdestdir == "")                      masterdestdir = Path.GetDirectoryName(logfile);                    try                  {                      FileInfo info;                                         info = new FileInfo(logfile);                            // delete 0 size files                          if (info.Length == 0)                          {                              try                              {                                  File.Delete(logfile);                              }                              catch                              {                              }                                return;                          }                        // move small logs - most likerly invalid                      if (info.Length <= 1024)                      {                          try                          {                              string destdir = masterdestdir + Path.DirectorySeparatorChar                                                             + "SMALL" + Path.DirectorySeparatorChar;                                if (!Directory.Exists(destdir))                                  Directory.CreateDirectory(destdir);                                log.Info("Move log small " + logfile + " to " + destdir + Path.GetFileName(logfile));                                MoveFileUsingMask(logfile' destdir);                          }                          catch                          {                          }                            return;                      }                        bool issitl = false;                      var sysid = 0;                      var compid = 0;                      var aptype = MAVLink.MAV_TYPE.GENERIC;                      var packetsseen = 0;                        var parse = new MAVLink.MavlinkParse(true);                      using (var binfile = File.Open(logfile' FileMode.Open' FileAccess.Read' FileShare.Read))                      {                          var midpoint = binfile.Length / 8;                            binfile.Seek(midpoint' SeekOrigin.Begin);                            MAVLink.MAVLinkMessage packet;                            List<MAVLink.MAVLinkMessage> hblist = new List<MAVLink.MAVLinkMessage>();                            try                          {                              var length = binfile.Length;                              while (binfile.Position < length)                              {                                  packet = parse.ReadPacket(binfile);                                  // no gcs packets                                  if (packet == null || packet.compid == 190)                                      continue;                                    if (packet.msgid == (uint) MAVLink.MAVLINK_MSG_ID.SIMSTATE)                                  {                                      packetsseen++;                                      issitl = true;                                  }                                  else if (packet.msgid == (uint) MAVLink.MAVLINK_MSG_ID.HEARTBEAT)                                  {                                      packetsseen++;                                      hblist.Add(packet);                                        var hb = (MAVLink.mavlink_heartbeat_t) packet.data;                                      sysid = packet.sysid;                                      compid = packet.compid;                                      aptype = (MAVLink.MAV_TYPE) hb.type;                                        if (hblist.Count > 10)                                          break;                                  }                                  else if (packet != MAVLink.MAVLinkMessage.Invalid)                                  {                                      packetsseen++;                                      if (sysid == 0)                                          sysid = packet.sysid;                                      if(compid == 0)                                          compid = packet.compid;                                  }                              }                          } catch (EndOfStreamException) { }                          catch { }                            if (hblist.Count == 0)                          {                              binfile.Close();                                if (!Directory.Exists(masterdestdir + Path.DirectorySeparatorChar + "BAD"))                                  Directory.CreateDirectory(masterdestdir + Path.DirectorySeparatorChar +                                                            "BAD");                                log.Info("Move log bad " + logfile + " to " + masterdestdir +                                       Path.DirectorySeparatorChar + "BAD" + Path.DirectorySeparatorChar +                                       Path.GetFileName(logfile) + " " + info.Length);                                MoveFileUsingMask(logfile'                                  masterdestdir + Path.DirectorySeparatorChar + "BAD" +                                  Path.DirectorySeparatorChar);                              return;                          }                            // find most appropriate                          if (hblist.GroupBy(a => a.sysid * 256 + a.compid).ToArray().Length > 1)                          {                              foreach (var mav in hblist)                              {                                  var hb = (MAVLink.mavlink_heartbeat_t) mav.data;                                  if (hb.type == (byte) MAVLink.MAV_TYPE.ANTENNA_TRACKER)                                      continue;                                  if (hb.type == (byte) MAVLink.MAV_TYPE.GCS)                                      continue;                                    sysid = mav.sysid;                                  compid = mav.compid;                                  aptype = (MAVLink.MAV_TYPE) hb.type;                              }                          }                            binfile.Close();                            string destdir = masterdestdir + Path.DirectorySeparatorChar                                                         + aptype.ToString() + Path.DirectorySeparatorChar                                                         + sysid + Path.DirectorySeparatorChar;                            if (issitl)                          {                              destdir = masterdestdir + Path.DirectorySeparatorChar                                                      + "SITL" + Path.DirectorySeparatorChar                                                      + aptype.ToString() + Path.DirectorySeparatorChar                                                      + sysid + Path.DirectorySeparatorChar;                          }                            if (!Directory.Exists(destdir))                              Directory.CreateDirectory(destdir);                            MoveFileUsingMask(logfile' destdir);                      }                  }                  catch                  {                      return;                  }              });
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,ProcessLog,The following statement contains a magic number: log.Info("ProcessLog start " + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,ProcessLog,The following statement contains a magic number: log.Info("ProcessLog start " + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,ProcessLog,The following statement contains a magic number: a%1000 == 0
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,ProcessLog,The following statement contains a magic number: string[] names = new string[items.Length - 5 + 1];
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,ProcessLog,The following statement contains a magic number: Array.ConstrainedCopy(items' 5' names' 1' names.Length - 1);
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,ProcessLog,The following statement contains a magic number: MLArray format = CreateCellArray(items[3].Trim() + "_label"' names);
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,ProcessLog,The following statement contains a magic number: items[3] == "PARM"
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,ProcessLog,The following statement contains a magic number: len[items[3]] = names.Length;
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,ProcessLog,The following statement contains a magic number: a%2000000 == 0 && !Environment.Is64BitProcess
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,DoWrite,The following statement contains a magic number: log.Info("DoWrite start " + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,DoWrite,The following statement contains a magic number: log.Info("DoWrite start " + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,DoWrite,The following statement contains a magic number: log.Info("DoWrite Double " + item.Key + " " + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,DoWrite,The following statement contains a magic number: log.Info("DoWrite Double " + item.Key + " " + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,DoWrite,The following statement contains a magic number: log.Info("DoWrite Cell " + item.Key + " " + (GC.GetTotalMemory(false) / 1024.0 / 1024.0));
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,DoWrite,The following statement contains a magic number: log.Info("DoWrite Cell " + item.Key + " " + (GC.GetTotalMemory(false) / 1024.0 / 1024.0));
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,DoWrite,The following statement contains a magic number: log.Info("DoWrite mllist " + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,DoWrite,The following statement contains a magic number: log.Info("DoWrite mllist " + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,DoWrite,The following statement contains a magic number: MLCell cell = new MLCell("PARM"' new int[] {param.Keys.Count' 2});
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,DoWrite,The following statement contains a magic number: log.Info("DoWrite before" + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,DoWrite,The following statement contains a magic number: log.Info("DoWrite before" + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,DoWrite,The following statement contains a magic number: log.Info("DoWrite done" + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,DoWrite,The following statement contains a magic number: log.Info("DoWrite done" + (GC.GetTotalMemory(false)/1024.0/1024.0));
Magic Number,MissionPlanner.Log,MatLab,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\MatLab.cs,GetMatLabSerialDate,The following statement contains a magic number: double answer = (dt.AddYears(1).AddDays(2) - timebase).TotalDays;
Magic Number,Simplify,Douglas,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fitCurve.cs,DouglasPeuckerReduction,The following statement contains a magic number: Points == null || Points.Count < 3
Magic Number,Simplify,Douglas,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fitCurve.cs,PerpendicularDistance,The following statement contains a magic number: Double area = Math.Abs(.5 * (Point1.X * Point2.Y + Point2.X *              Point.Y + Point.X * Point1.Y - Point2.X * Point1.Y - Point.X *              Point2.Y - Point1.X * Point.Y));
Magic Number,Simplify,Douglas,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fitCurve.cs,PerpendicularDistance,The following statement contains a magic number: Double bottom = Math.Sqrt(Math.Pow(Point1.X - Point2.X' 2) +              Math.Pow(Point1.Y - Point2.Y' 2));
Magic Number,Simplify,Douglas,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fitCurve.cs,PerpendicularDistance,The following statement contains a magic number: Double bottom = Math.Sqrt(Math.Pow(Point1.X - Point2.X' 2) +              Math.Pow(Point1.Y - Point2.Y' 2));
Magic Number,Simplify,Douglas,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\fitCurve.cs,PerpendicularDistance,The following statement contains a magic number: Double height = area / bottom * 2;
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,readGPSMsgInLog,The following statement contains a magic number: gps.Value.fix_type <= 2
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,readGPSMsgInLog,The following statement contains a magic number: location.Lat = pos.Value.lat / 1e7;
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,readGPSMsgInLog,The following statement contains a magic number: location.Lon = pos.Value.lon / 1e7;
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,readGPSMsgInLog,The following statement contains a magic number: location.RelAlt = pos.Value.relative_alt / 1000.0f;
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,readGPSMsgInLog,The following statement contains a magic number: location.AltAMSL = pos.Value.alt / 1000.0f;
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,readCAMMsgInLog,The following statement contains a magic number: location.Time = FromUTCTimeMilliseconds((long)(msg.time_usec / 1000));
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,readCAMMsgInLog,The following statement contains a magic number: location.Lat = msg.lat / 1e7;
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,readCAMMsgInLog,The following statement contains a magic number: location.Lon = msg.lng / 1e7;
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,FromUTCTimeMilliseconds,The following statement contains a magic number: var epoch = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,GetTimeFromGps,The following statement contains a magic number: int LEAP_SECONDS = 17;
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,GetTimeFromGps,The following statement contains a magic number: DateTime datum = new DateTime(1980' 1' 6' 0' 0' 0' DateTimeKind.Utc);
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,GetTimeFromGps,The following statement contains a magic number: DateTime datum = new DateTime(1980' 1' 6' 0' 0' 0' DateTimeKind.Utc);
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,GetTimeFromGps,The following statement contains a magic number: DateTime week = datum.AddDays(weeknumber * 7);
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,ToMilliseconds,The following statement contains a magic number: var epoch = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,EstimateOffset,The following statement contains a magic number: a < 4
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,doworkGPSOFFSET,The following statement contains a magic number: Parallel.ForEach(files' filename =>              {                  PictureInformation p = new PictureInformation();                    // Fill shot time in Picture                  p.ShotTimeReportedByCamera = getPhotoTime(filename);                    // Lookfor corresponding Location in vehicleLocationList                  DateTime correctedTime = p.ShotTimeReportedByCamera.AddSeconds(-offset);                  VehicleLocation shotLocation = LookForLocation(correctedTime' vehicleLocations' 5000);                    if (shotLocation == null)                  {                      AppendText("Photo " + Path.GetFileNameWithoutExtension(filename) +                                 " NOT PROCESSED. No GPS match in the log file. Please take care\n");                  }                  else                  {                      p.Lat = shotLocation.Lat;                      p.Lon = shotLocation.Lon;                      p.AltAMSL = shotLocation.AltAMSL;                        p.RelAlt = shotLocation.RelAlt;                        p.Pitch = shotLocation.Pitch;                      p.Roll = shotLocation.Roll;                      p.Yaw = shotLocation.Yaw;                        p.SAlt = shotLocation.SAlt;                        p.Time = shotLocation.Time;                        p.Path = filename;                        lock(picturesInformationTemp)                          picturesInformationTemp.Add(filename' p);                        AppendText("Photo " + Path.GetFileNameWithoutExtension(filename) +                                 " PROCESSED with GPS position found " +                                 (shotLocation.Time - correctedTime).Milliseconds + " ms away\n");                  }              });
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,newpos,The following statement contains a magic number: double radius_of_earth = 6378100.0;
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,newpos,The following statement contains a magic number: double brng = radians((bearing + 360)%360);
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,newpos,The following statement contains a magic number: double brng = radians((bearing + 360)%360);
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,coordtobytearray,The following statement contains a magic number: byte[] output = new byte[sizeof (double)*3];
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,coordtobytearray,The following statement contains a magic number: int m = (int) ((coord - d)*60);
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,coordtobytearray,The following statement contains a magic number: double s = ((((coord - d)*60) - m)*60);
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,coordtobytearray,The following statement contains a magic number: double s = ((((coord - d)*60) - m)*60);
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,coordtobytearray,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes((uint) 1)' 0' output' 4' sizeof (uint));
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,coordtobytearray,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes((uint) m)' 0' output' 8' sizeof (uint));
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,coordtobytearray,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes((uint) 1)' 0' output' 12' sizeof (uint));
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,coordtobytearray,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes((uint)(s * 1.0e7))' 0' output' 16' sizeof(uint));
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,coordtobytearray,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes((uint)(s * 1.0e7))' 0' output' 16' sizeof(uint));
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,coordtobytearray,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes((uint)1.0e7)' 0' output' 20' sizeof(uint));
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,coordtobytearray,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes((uint)1.0e7)' 0' output' 20' sizeof(uint));
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,CreateReportFiles,The following statement contains a magic number: overlayfolder.AddFeature(                          new GroundOverlay()                          {                              Name = filenameWithoutExt'                              Visibility = false'                              Time = tstamp'                              AltitudeMode = AltitudeMode.ClampToGround'                              Bounds = new LatLonBox()                              {                                  Rotation = -alpha % 360'                                  North = rect.Bottom'                                  East = rect.Right'                                  West = rect.Left'                                  South = rect.Top'                              }'                              Icon = new SharpKml.Dom.Icon()                              {                                  Href = new Uri(filename.ToLower()' UriKind.Relative)'                              }'                          }                      );
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,getboundingbox,The following statement contains a magic number: double minx = 999' miny = 999' maxx = -999' maxy = -999;
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,getboundingbox,The following statement contains a magic number: double minx = 999' miny = 999' maxx = -999' maxy = -999;
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,getboundingbox,The following statement contains a magic number: double minx = 999' miny = 999' maxx = -999' maxy = -999;
Magic Number,MissionPlanner.GeoRef,GeoRefImageBase,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\GeoRefImageBase.cs,getboundingbox,The following statement contains a magic number: double minx = 999' miny = 999' maxx = -999' maxy = -999;
Magic Number,MissionPlanner.GeoRef,PictureInformation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PictureInformation.cs,PictureInformation,The following statement contains a magic number: width = 3200;
Magic Number,MissionPlanner.GeoRef,PictureInformation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\PictureInformation.cs,PictureInformation,The following statement contains a magic number: height = 2400;
Magic Number,MissionPlanner.GeoRef,Rational,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Rational.cs,GetBytes,The following statement contains a magic number: byte[] answer = new byte[8];
Magic Number,MissionPlanner.GeoRef,Rational,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Rational.cs,GetBytes,The following statement contains a magic number: Array.Copy(BitConverter.GetBytes((uint) dem)' 0' answer' 4' sizeof (uint));
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,pv_location_to_vector,The following statement contains a magic number: Vector3 tmp = new Vector3((loc.Lat*1.0e7f - home.Lat*1.0e7f)*LATLON_TO_CM'                 (loc.Lng*1.0e7f - home.Lng*1.0e7f)*LATLON_TO_CM*scaleLongDown' loc.Alt*100);
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,pv_location_to_vector,The following statement contains a magic number: Vector3 tmp = new Vector3((loc.Lat*1.0e7f - home.Lat*1.0e7f)*LATLON_TO_CM'                 (loc.Lng*1.0e7f - home.Lng*1.0e7f)*LATLON_TO_CM*scaleLongDown' loc.Alt*100);
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,pv_location_to_vector,The following statement contains a magic number: Vector3 tmp = new Vector3((loc.Lat*1.0e7f - home.Lat*1.0e7f)*LATLON_TO_CM'                 (loc.Lng*1.0e7f - home.Lng*1.0e7f)*LATLON_TO_CM*scaleLongDown' loc.Alt*100);
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,pv_location_to_vector,The following statement contains a magic number: Vector3 tmp = new Vector3((loc.Lat*1.0e7f - home.Lat*1.0e7f)*LATLON_TO_CM'                 (loc.Lng*1.0e7f - home.Lng*1.0e7f)*LATLON_TO_CM*scaleLongDown' loc.Alt*100);
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,pv_location_to_vector,The following statement contains a magic number: Vector3 tmp = new Vector3((loc.Lat*1.0e7f - home.Lat*1.0e7f)*LATLON_TO_CM'                 (loc.Lng*1.0e7f - home.Lng*1.0e7f)*LATLON_TO_CM*scaleLongDown' loc.Alt*100);
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,pv_vector_to_location,The following statement contains a magic number: return new PointLatLngAlt(pv_get_lat(loc)*1.0e-7f' pv_get_lon(loc)*1.0e-7f' loc.z/100' "");
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,pv_vector_to_location,The following statement contains a magic number: return new PointLatLngAlt(pv_get_lat(loc)*1.0e-7f' pv_get_lon(loc)*1.0e-7f' loc.z/100' "");
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,pv_vector_to_location,The following statement contains a magic number: return new PointLatLngAlt(pv_get_lat(loc)*1.0e-7f' pv_get_lon(loc)*1.0e-7f' loc.z/100' "");
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,pv_get_lat,The following statement contains a magic number: return (int32_t) (home.Lat*1.0e7f) + (int32_t) (pos_vec.x/LATLON_TO_CM);
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,pv_get_lon,The following statement contains a magic number: return (int32_t) (home.Lng*1.0e7f) + (int32_t) (pos_vec.y/LATLON_TO_CM*scaleLongUp);
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,set_spline_origin_and_destination,The following statement contains a magic number: _spline_origin_vel = (destination - origin)*0.1f;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,set_spline_origin_and_destination,The following statement contains a magic number: switch (seg_end_type)             {                 case spline_segment_end_type.SEGMENT_END_STOP:                     // if vehicle stops at the destination set destination velocity to 0.1 * distance vector from origin to destination                     _spline_destination_vel = (destination - origin)*0.1f;                     _flags.fast_waypoint = false;                     break;                  case spline_segment_end_type.SEGMENT_END_STRAIGHT:                     // if next segment is straight' vehicle's final velocity should face along the next segment's position                     _spline_destination_vel = (next_destination - destination);                     _flags.fast_waypoint = true;                     break;                  case spline_segment_end_type.SEGMENT_END_SPLINE:                     // if next segment is splined' vehicle's final velocity should face parallel to the line from the origin to the next destination                     _spline_destination_vel = (next_destination - origin);                     _flags.fast_waypoint = true;                     break;             }
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,set_spline_origin_and_destination,The following statement contains a magic number: float pos_len = (float) (destination - origin).length()*4.0f;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,calc_slow_down_distance,The following statement contains a magic number: _slow_down_dist = speed_cms*speed_cms/(4.0f*accel_cmss);
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,update_spline,The following statement contains a magic number: float dt = (now - _wp_last_update)/1000.0f;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,update_spline,The following statement contains a magic number: dt > 0.095f
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,update_spline_solution,The following statement contains a magic number: _hermite_spline_solution[2] = -origin*3.0f - origin_vel*2.0f + dest*3.0f - dest_vel;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,update_spline_solution,The following statement contains a magic number: _hermite_spline_solution[2] = -origin*3.0f - origin_vel*2.0f + dest*3.0f - dest_vel;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,update_spline_solution,The following statement contains a magic number: _hermite_spline_solution[2] = -origin*3.0f - origin_vel*2.0f + dest*3.0f - dest_vel;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,update_spline_solution,The following statement contains a magic number: _hermite_spline_solution[2] = -origin*3.0f - origin_vel*2.0f + dest*3.0f - dest_vel;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,update_spline_solution,The following statement contains a magic number: _hermite_spline_solution[3] = origin*2.0f + origin_vel - dest*2.0f + dest_vel;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,update_spline_solution,The following statement contains a magic number: _hermite_spline_solution[3] = origin*2.0f + origin_vel - dest*2.0f + dest_vel;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,update_spline_solution,The following statement contains a magic number: _hermite_spline_solution[3] = origin*2.0f + origin_vel - dest*2.0f + dest_vel;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,advance_spline_target_along_track,The following statement contains a magic number: _spline_vel_scaler = (float) Math.Sqrt(spline_dist_to_wp*2.0f*_wp_accel_cms);
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,calc_spline_pos_vel,The following statement contains a magic number: position = _hermite_spline_solution[0] +                        _hermite_spline_solution[1]*spline_time +                        _hermite_spline_solution[2]*spline_time_sqrd +                        _hermite_spline_solution[3]*spline_time_cubed;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,calc_spline_pos_vel,The following statement contains a magic number: position = _hermite_spline_solution[0] +                        _hermite_spline_solution[1]*spline_time +                        _hermite_spline_solution[2]*spline_time_sqrd +                        _hermite_spline_solution[3]*spline_time_cubed;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,calc_spline_pos_vel,The following statement contains a magic number: velocity = _hermite_spline_solution[1] +                        _hermite_spline_solution[2]*2.0f*spline_time +                        _hermite_spline_solution[3]*3.0f*spline_time_sqrd;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,calc_spline_pos_vel,The following statement contains a magic number: velocity = _hermite_spline_solution[1] +                        _hermite_spline_solution[2]*2.0f*spline_time +                        _hermite_spline_solution[3]*3.0f*spline_time_sqrd;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,calc_spline_pos_vel,The following statement contains a magic number: velocity = _hermite_spline_solution[1] +                        _hermite_spline_solution[2]*2.0f*spline_time +                        _hermite_spline_solution[3]*3.0f*spline_time_sqrd;
Magic Number,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,calc_spline_pos_vel,The following statement contains a magic number: velocity = _hermite_spline_solution[1] +                        _hermite_spline_solution[2]*2.0f*spline_time +                        _hermite_spline_solution[3]*3.0f*spline_time_sqrd;
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,ReplaceMetaCharsMatch,The following statement contains a magic number: return Convert.ToChar(Convert.ToByte(m.Groups[2].Value' 8)).ToString();
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,ReplaceMetaCharsMatch,The following statement contains a magic number: return Convert.ToChar(Convert.ToByte(m.Groups[2].Value' 8)).ToString();
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,ReplaceMetaCharsMatch,The following statement contains a magic number: m.Groups[2].Length == 3
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,ReplaceMetaCharsMatch,The following statement contains a magic number: m.Groups[2].Length == 3
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: string flags = m.Groups[2].Value;
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: m.Groups[2] != null && m.Groups[2].Value.Length > 0
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: m.Groups[2] != null && m.Groups[2].Value.Length > 0
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: fieldLength = Convert.ToInt32(m.Groups[3].Value);
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: flagZeroPadding = (m.Groups[3].Value[0] == '0');
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: m.Groups[3] != null && m.Groups[3].Value.Length > 0
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: m.Groups[3] != null && m.Groups[3].Value.Length > 0
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: fieldPrecision = Convert.ToInt32(m.Groups[4].Value);
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: m.Groups[4] != null && m.Groups[4].Value.Length > 0
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: m.Groups[4] != null && m.Groups[4].Value.Length > 0
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: shortLongIndicator = m.Groups[5].Value[0];
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: m.Groups[5] != null && m.Groups[5].Value.Length > 0
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: m.Groups[5] != null && m.Groups[5].Value.Length > 0
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: formatSpecifier = m.Groups[6].Value[0];
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: m.Groups[6] != null && m.Groups[6].Value.Length > 0
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: m.Groups[6] != null && m.Groups[6].Value.Length > 0
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,sprintf,The following statement contains a magic number: fieldPrecision = 6;
Magic Number,AT.MIN,Tools,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Tools.cs,FormatOct,The following statement contains a magic number: w = Convert.ToString(UnboxToLong(Value' true)' 8);
Magic Number,MissionPlanner.Warnings,CustomWarning,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Warnings\CustomWarning.cs,CustomWarning,The following statement contains a magic number: RepeatTime = 10;
Magic Number,MissionPlanner.Warnings,WarningEngine,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Warnings\WarningEngine.cs,MainLoop,The following statement contains a magic number: System.Threading.Thread.Sleep(10);
Magic Number,MissionPlanner.Warnings,WarningEngine,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Warnings\WarningEngine.cs,MainLoop,The following statement contains a magic number: System.Threading.Thread.Sleep(100);
Duplicate Code,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,JoinPoints,The method contains a code clone-set at the following line numbers (starting from the method definition): ((28' 51)' (135' 158))
Missing Default,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following switch statement is missing a default case: switch (balance)              {                  case 3:                      /* All coefficients are positive' thus return the first triangle. */                      return 0;                  case -3:                      /* All coefficients are negative' which means that the coefficients for                       * -w are positive' thus return the first triangle's opposite. */                      return 10;                  case 2:                      /* Two coefficients are positive and one is zero' thus v crosses one of                       * the edges of the first triangle. */                      return inclusive ? 0 : -1;                  case -2:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      return inclusive ? 10 : -1;                  case 1:                      /* There are two possible cases when balance is 1:                       *                       * 1) Two coefficients are zero' which means v crosses one of the                       * vertices of the first triangle.                       *                       * 2) Two coefficients are positive and one is negative. Let a and b be                       * vertices with positive coefficients and c the one with the negative                       * coefficient. That means that v crosses the triangle formed by a' b                       * and -c. The vector -c happens to be the 3-th vertex' with respect to                       * (a' b)' of the first triangle's neighbor umbrella with respect to a                       * and b. Thus' v crosses one of the components of that umbrella. */                      if (zero_count == 2)                      {                          return inclusive ? 0 : -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;                  case -1:                      /* Analogous to the previous case' but for the opposite of the first                       * triangle. */                      if (zero_count == 2)                      {                          return inclusive ? 10 : -1;                      }                        if (!is_zero(w.x) && w.x > 0)                      {                          umbrella = 4;                      }                      else if (!is_zero(w.y) && w.y > 0)                      {                          umbrella = 5;                      }                      else                      {                          umbrella = 3;                      }                      w = -w;                        break;                  case 0:                      /* There are two possible cases when balance is 1:                       *                       * 1) The vector v is the null vector' which doesn't cross any section.                       *                       * 2) One coefficient is zero' another is positive and yet another is                       * negative. Let a' b and c be the respective vertices for those                       * coefficients' then the statements in case (2) for when balance is 1                       * are also valid here.                       */                      if (zero_count == 3)                      {                          return -1;                      }                        if (!is_zero(w.x) && w.x < 0)                      {                          umbrella = 1;                      }                      else if (!is_zero(w.y) && w.y < 0)                      {                          umbrella = 2;                      }                      else                      {                          umbrella = 0;                      }                        break;              }
Missing Default,MissionPlanner.Utilities,AP_GeodesicGrid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\AP_GeodesicGrid.cs,_triangle_index,The following switch statement is missing a default case: switch (umbrella % 3)              {                  case 0:                      w.z = -w.z;                      break;                  case 1:                      w = new Vector3(w.y' w.z' -w.x);                      break;                  case 2:                      w = new Vector3(w.z' w.x' -w.y);                      break;              }
Missing Default,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ReadMessage,The following switch statement is missing a default case: switch (log_step)                      {                          case 0:                              if (data == HEAD_BYTE1)                              {                                  log_step++;                              }                              break;                            case 1:                              if (data == HEAD_BYTE2)                              {                                  log_step++;                              }                              else                              {                                  log_step = 0;                              }                              break;                            case 2:                              log_step = 0;                              try                              {                                  string line = String.Join("' "' logEntryObjects(data' br).Select((a) =>                                                {                                                    if (a.IsNumber())                                                        return (((IConvertible)a).ToString(CultureInfo.InvariantCulture));                                                    else                                                        return a.ToString();                                                })) + "\r\n";                                    // we need to know the mav type to use the correct mode list.                                  if (line.Contains("PARM' RATE_RLL_P") || line.Contains("ArduCopter") ||                                      line.Contains("Copter"))                                  {                                      _firmware = "ArduCopter2";                                  }                                  else if ((line.Contains("PARM' H_SWASH_PLATE")) || line.Contains("ArduCopter"))                                  {                                      _firmware = "ArduCopter2";                                  }                                  else if (line.Contains("PARM' PTCH2SRV_P") || line.Contains("ArduPlane") ||                                           line.Contains("Plane"))                                  {                                      _firmware ="ArduPlane";                                  }                                  else if (line.Contains("PARM' SKID_STEER_OUT") || line.Contains("ArduRover") ||                                           line.Contains("Rover"))                                  {                                      _firmware = "ArduRover";                                  }                                  else if (line.Contains("AntennaTracker") || line.Contains("Tracker"))                                  {                                      _firmware = "ArduTracker";                                  }                                    return line;                              }                              catch                              {                                  Console.WriteLine("Bad Binary log line {0}"' data);                              }                              break;                      }
Missing Default,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ReadMessageTypeOffset,The following switch statement is missing a default case: switch (log_step)                  {                      case 0:                          if (data == HEAD_BYTE1)                          {                              log_step++;                          }                            break;                        case 1:                          if (data == HEAD_BYTE2)                          {                              log_step++;                          }                          else                          {                              log_step = 0;                          }                            break;                        case 2:                          log_step = 0;                          try                          {                              long pos = br.Position - 3;                              // read fmt or seek length of packet                              logEntryFMT(data' br);                                return (data' pos);                          }                          catch                          {                              Console.WriteLine("Bad Binary log line {0}"' data);                          }                            break;                  }
Missing Default,MissionPlanner.Utilities,BinaryLog,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\BinaryLog.cs,ReadMessageObjects,The following switch statement is missing a default case: switch (log_step)                      {                          case 0:                              if (data == HEAD_BYTE1)                              {                                  log_step++;                              }                              break;                            case 1:                              if (data == HEAD_BYTE2)                              {                                  log_step++;                              }                              else                              {                                  log_step = 0;                              }                              break;                            case 2:                              log_step = 0;                              try                              {                                  var line = logEntryObjects(data' br);                                    return line;                              }                              catch                              {                                  Console.WriteLine("Bad Binary log line {0}"' data);                              }                              break;                      }
Missing Default,MissionPlanner.Utilities,dfgpslag,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\dfgpslag.cs,getdata,The following switch statement is missing a default case: switch (item.msgtype)                  {                      case "GPS":                      case "GPS2":                          if ((Byte)item.GetRaw("Status") >= 3)                          {                              var v = new Vector3(                                  (Single) item.GetRaw("Spd") * Math.Cos(radians((Single) item.GetRaw("GCrs")))'                                  (Single) item.GetRaw("Spd") * Math.Sin(radians((Single) item.GetRaw("GCrs")))'                                  (Single) item.GetRaw("VZ"));                              vel.Add(v);                              timestamps.Add(item.time);                              accel_indexes.Add(Math.Max(gaccel.Count - 1' 0));                          }                            break;                      case "IMU":                          if (ATT.HasValue)                          {                              gaccel.Add(earth_accel_df(item' ATT.Value));                              if (IMU.HasValue)                              {                                  var dt = item.time - IMU.Value.time;                                  dtsum += dt.TotalSeconds;                                  dtcount += 1;                              }                              IMU = item;                          }                          break;                      case "ATT":                          ATT = item;                          break;                  }
Missing Default,MissionPlanner.Utilities,L10NU,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\L10NU.cs,L10NU,The following switch statement is missing a default case: switch (lang)              {                  case "zh-CN":                  case "zh-Hans":                      lines = Regex.Split(Resources.strings_zhHans' "\r\n|\r|\n");                      break;              }
Missing Default,MissionPlanner.Utilities,Vector3<T>,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Vector3.cs,rotate,The following switch statement is missing a default case: switch (rotation)              {                  case Rotation.ROTATION_NONE:                  case Rotation.ROTATION_MAX:                      return this;                    case Rotation.ROTATION_YAW_45:                  {                      tmp = (T) (IConvertible) (HALF_SQRT_2 * (xd - yd));                      y = (T) (IConvertible) (HALF_SQRT_2 * (xd + yd));                      x = tmp;                      return this;                  }                  case Rotation.ROTATION_YAW_90:                  {                      tmp = x;                      x = (T) (IConvertible) (-yd);                      y = tmp;                      return this;                  }                  case Rotation.ROTATION_YAW_135:                  {                      tmp = (T) (IConvertible) (-HALF_SQRT_2 * (xd + yd));                      y = (T) (IConvertible) (HALF_SQRT_2 * (xd - yd));                      x = tmp;                      return this;                  }                  case Rotation.ROTATION_YAW_180:                      x = (T) (IConvertible) (-xd);                      y = (T) (IConvertible) (-yd);                      return this;                    case Rotation.ROTATION_YAW_225:                  {                      tmp = (T) (IConvertible) (HALF_SQRT_2 * (yd - xd));                      y = (T) (IConvertible) (-HALF_SQRT_2 * (xd + yd));                      x = tmp;                      return this;                  }                  case Rotation.ROTATION_YAW_270:                  {                      tmp = x;                      x = y;                      y = (T) (IConvertible) (-(double) (IConvertible) tmp);                      return this;                  }                  case Rotation.ROTATION_YAW_315:                  {                      tmp = (T) (IConvertible) (HALF_SQRT_2 * (xd + yd));                      y = (T) (IConvertible) (HALF_SQRT_2 * (yd - xd));                      x = tmp;                      return this;                  }                  case Rotation.ROTATION_ROLL_180:                  {                      y = (T) (IConvertible) (-yd);                      z = (T) (IConvertible) (-zd);                      return this;                  }                  case Rotation.ROTATION_ROLL_180_YAW_45:                  {                      tmp = (T) (IConvertible) (HALF_SQRT_2 * (xd + yd));                      y = (T) (IConvertible) (HALF_SQRT_2 * (xd - yd));                      x = tmp;                      z = (T) (IConvertible) (-zd);                      return this;                  }                  case Rotation.ROTATION_ROLL_180_YAW_90:                  {                      tmp = x;                      x = y;                      y = tmp;                      z = (T) (IConvertible) (-zd);                      return this;                  }                  case Rotation.ROTATION_ROLL_180_YAW_135:                  {                      tmp = (T) (IConvertible) (HALF_SQRT_2 * (yd - xd));                      y = (T) (IConvertible) (HALF_SQRT_2 * (yd + xd));                      x = tmp;                      z = (T) (IConvertible) (-zd);                      return this;                  }                  case Rotation.ROTATION_PITCH_180:                  {                      x = (T) (IConvertible) (-xd);                      z = (T) (IConvertible) (-zd);                      return this;                  }                  case Rotation.ROTATION_ROLL_180_YAW_225:                  {                      tmp = (T) (IConvertible) (-HALF_SQRT_2 * (xd + yd));                      y = (T) (IConvertible) (HALF_SQRT_2 * (yd - xd));                      x = (T) (IConvertible) tmp;                      z = (T) (IConvertible) (-zd);                      return this;                  }                  case Rotation.ROTATION_ROLL_180_YAW_270:                  {                      tmp = (T) (IConvertible) xd;                      x = (T) (IConvertible) (-yd);                      y = (T) (IConvertible) (-(double) (IConvertible) tmp);                      z = (T) (IConvertible) (-zd);                      return this;                  }                  case Rotation.ROTATION_ROLL_180_YAW_315:                  {                      tmp = (T) (IConvertible) (HALF_SQRT_2 * (xd - yd));                      y = (T) (IConvertible) (-HALF_SQRT_2 * (xd + yd));                      x = (T) (IConvertible) tmp;                      z = (T) (IConvertible) (-zd);                      return this;                  }                  case Rotation.ROTATION_ROLL_90:                  {                      tmp = (T) (IConvertible) zd;                      z = (T) (IConvertible) yd;                      y = (T) (IConvertible) (-(double) (IConvertible) tmp);                      return this;                  }                  case Rotation.ROTATION_ROLL_90_YAW_45:                  {                      tmp = (T) (IConvertible) zd;                      z = (T) (IConvertible) yd;                      y = (T) (IConvertible) (-(double) (IConvertible) tmp);                      tmp = (T) (IConvertible) (HALF_SQRT_2 * (xd - yd));                      y = (T) (IConvertible) (HALF_SQRT_2 * (xd + yd));                      x = (T) (IConvertible) tmp;                      return this;                  }                  case Rotation.ROTATION_ROLL_90_YAW_90:                  {                      tmp = (T) (IConvertible) zd;                      z = (T) (IConvertible) yd;                      y = (T) (IConvertible) (-(double) (IConvertible) tmp);                      tmp = (T) (IConvertible) xd;                      x = (T) (IConvertible) (-yd);                      y = (T) (IConvertible) tmp;                      return this;                  }                  case Rotation.ROTATION_ROLL_90_YAW_135:                  {                      tmp = (T) (IConvertible) zd;                      z = (T) (IConvertible) yd;                      y = (T) (IConvertible) (-(double) (IConvertible) tmp);                      tmp = (T) (IConvertible) (-HALF_SQRT_2 * (xd + yd));                      y = (T) (IConvertible) (HALF_SQRT_2 * (xd - yd));                      x = (T) (IConvertible) tmp;                      return this;                  }                  case Rotation.ROTATION_ROLL_270:                  {                      tmp = (T) (IConvertible) zd;                      z = (T) (IConvertible) (-yd);                      y = (T) (IConvertible) tmp;                      return this;                  }                  case Rotation.ROTATION_ROLL_270_YAW_45:                  {                      tmp = (T) (IConvertible) zd;                      z = (T) (IConvertible) (-yd);                      y = (T) (IConvertible) tmp;                      tmp = (T) (IConvertible) (HALF_SQRT_2 * (xd - yd));                      y = (T) (IConvertible) (HALF_SQRT_2 * (xd + yd));                      x = (T) (IConvertible) tmp;                      return this;                  }                  case Rotation.ROTATION_ROLL_270_YAW_90:                  {                      tmp = (T) (IConvertible) zd;                      z = (T) (IConvertible) (-yd);                      y = (T) (IConvertible) tmp;                      tmp = (T) (IConvertible) xd;                      x = (T) (IConvertible) (-yd);                      y = (T) (IConvertible) tmp;                      return this;                  }                  case Rotation.ROTATION_ROLL_270_YAW_135:                  {                      tmp = (T) (IConvertible) zd;                      z = (T) (IConvertible) (-yd);                      y = (T) (IConvertible) tmp;                      tmp = (T) (IConvertible) (-HALF_SQRT_2 * (xd + yd));                      y = (T) (IConvertible) (HALF_SQRT_2 * (xd - yd));                      x = (T) (IConvertible) tmp;                      return this;                  }                  case Rotation.ROTATION_PITCH_90:                  {                      tmp = (T) (IConvertible) zd;                      z = (T) (IConvertible) (-xd);                      x = (T) (IConvertible) tmp;                      return this;                  }                  case Rotation.ROTATION_PITCH_270:                  {                      tmp = (T) (IConvertible) zd;                      z = (T) (IConvertible) xd;                      x = (T) (IConvertible) (-(double) (IConvertible) tmp);                      return this;                  }              }
Missing Default,ClipperLib,Clipper,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,IntersectEdges,The following switch statement is missing a default case: switch (m_ClipType)                      {                          case ClipType.ctIntersection:                              if (e1Wc2 > 0 && e2Wc2 > 0)                                  AddLocalMinPoly(e1' e2' pt);                              break;                          case ClipType.ctUnion:                              if (e1Wc2 <= 0 && e2Wc2 <= 0)                                  AddLocalMinPoly(e1' e2' pt);                              break;                          case ClipType.ctDifference:                              if (((e1.PolyTyp == PolyType.ptClip) && (e1Wc2 > 0) && (e2Wc2 > 0)) ||                                  ((e1.PolyTyp == PolyType.ptSubject) && (e1Wc2 <= 0) && (e2Wc2 <= 0)))                                  AddLocalMinPoly(e1' e2' pt);                              break;                          case ClipType.ctXor:                              AddLocalMinPoly(e1' e2' pt);                              break;                      }
Missing Default,ClipperLib,ClipperOffset,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\clipper.cs,OffsetPoint,The following switch statement is missing a default case: switch (jointype)                  {                      case JoinType.jtMiter:                          {                              double r = 1 + (m_normals[j].X * m_normals[k].X +                                m_normals[j].Y * m_normals[k].Y);                              if (r >= m_miterLim) DoMiter(j' k' r); else DoSquare(j' k);                              break;                          }                      case JoinType.jtSquare: DoSquare(j' k); break;                      case JoinType.jtRound: DoRound(j' k); break;                  }
Missing Default,MissionPlanner.Controls.Waypoints,Spline2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Spline2.cs,set_spline_origin_and_destination,The following switch statement is missing a default case: switch (seg_end_type)             {                 case spline_segment_end_type.SEGMENT_END_STOP:                     // if vehicle stops at the destination set destination velocity to 0.1 * distance vector from origin to destination                     _spline_destination_vel = (destination - origin)*0.1f;                     _flags.fast_waypoint = false;                     break;                  case spline_segment_end_type.SEGMENT_END_STRAIGHT:                     // if next segment is straight' vehicle's final velocity should face along the next segment's position                     _spline_destination_vel = (next_destination - destination);                     _flags.fast_waypoint = true;                     break;                  case spline_segment_end_type.SEGMENT_END_SPLINE:                     // if next segment is splined' vehicle's final velocity should face parallel to the line from the origin to the next destination                     _spline_destination_vel = (next_destination - origin);                     _flags.fast_waypoint = true;                     break;             }
Missing Default,MissionPlanner.Warnings,CustomWarning,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\Utilities\Warnings\CustomWarning.cs,CheckValue,The following switch statement is missing a default case: switch (ConditionType)              {                  case Conditional.EQ:                      if (GetValue == Warning)                          return true;                      break;                  case Conditional.GT:                      if (GetValue > Warning)                          return true;                      break;                  case Conditional.GTEQ:                      if (GetValue >= Warning)                          return true;                      break;                  case Conditional.LT:                      if (GetValue < Warning)                          return true;                      break;                  case Conditional.LTEQ:                      if (GetValue <= Warning)                          return true;                      break;                  case Conditional.NEQ:                      if (GetValue != Warning)                          return true;                      break;                  case Conditional.NONE:                        break;              }
