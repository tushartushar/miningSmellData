Implementation smell,Namespace,Class,File,Method,Description
Long Method,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetDescription,The method has 133 lines of code.
Long Method,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessDirectory,The method has 103 lines of code.
Long Method,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The method has 163 lines of code.
Long Method,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessTag,The method has 135 lines of code.
Long Method,com,Run,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\Run.cs,Main,The method has 136 lines of code.
Long Method,com.utils.xml,XmlNewOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlNewOutPutStreamHandler.cs,CreateTag,The method has 139 lines of code.
Complex Method,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetStringArray,Cyclomatic complexity of the method is 10
Complex Method,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetIntArray,Cyclomatic complexity of the method is 9
Complex Method,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetByteArray,Cyclomatic complexity of the method is 9
Complex Method,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetString,Cyclomatic complexity of the method is 12
Complex Method,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetDescription,Cyclomatic complexity of the method is 40
Complex Method,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetWhiteBalanceDescription,Cyclomatic complexity of the method is 9
Complex Method,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetExposureModeDescription,Cyclomatic complexity of the method is 8
Complex Method,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetIsoDescription,Cyclomatic complexity of the method is 8
Complex Method,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetEasyShootingModeDescription,Cyclomatic complexity of the method is 14
Complex Method,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFocusMode1Description,Cyclomatic complexity of the method is 9
Complex Method,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFlashModeDescription,Cyclomatic complexity of the method is 10
Complex Method,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,SetIntArray,Cyclomatic complexity of the method is 13
Complex Method,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetDescription,Cyclomatic complexity of the method is 13
Complex Method,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetCcdSensitivityDescription,Cyclomatic complexity of the method is 8
Complex Method,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetWhiteBalanceDescription,Cyclomatic complexity of the method is 8
Complex Method,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetDescription,Cyclomatic complexity of the method is 29
Complex Method,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetWhiteBalance1Description,Cyclomatic complexity of the method is 8
Complex Method,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetImageSizeDescription,Cyclomatic complexity of the method is 9
Complex Method,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetDescription,Cyclomatic complexity of the method is 64
Complex Method,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetNewSubfileTypeDescription,Cyclomatic complexity of the method is 9
Complex Method,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetExposureProgramDescription,Cyclomatic complexity of the method is 10
Complex Method,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetPhotometricInterpretationDescription,Cyclomatic complexity of the method is 16
Complex Method,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,Cyclomatic complexity of the method is 29
Complex Method,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetLightSourceDescription,Cyclomatic complexity of the method is 14
Complex Method,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetMeteringModeDescription,Cyclomatic complexity of the method is 10
Complex Method,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetOrientationDescription,Cyclomatic complexity of the method is 10
Complex Method,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetSensingMethodDescription,Cyclomatic complexity of the method is 9
Complex Method,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessDirectory,Cyclomatic complexity of the method is 16
Complex Method,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,Cyclomatic complexity of the method is 19
Complex Method,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessTag,Cyclomatic complexity of the method is 20
Complex Method,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ReadCommentString,Cyclomatic complexity of the method is 9
Complex Method,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetDescription,Cyclomatic complexity of the method is 15
Complex Method,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetPictureModeDescription,Cyclomatic complexity of the method is 11
Complex Method,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetWhiteBalanceDescription,Cyclomatic complexity of the method is 10
Complex Method,com.drew.metadata.exif,GpsDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\GpsDescriptor.cs,GetDescription,Cyclomatic complexity of the method is 12
Complex Method,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetDescription,Cyclomatic complexity of the method is 9
Complex Method,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetWhiteBalanceDescription,Cyclomatic complexity of the method is 9
Complex Method,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetQualityDescription,Cyclomatic complexity of the method is 8
Complex Method,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetDescription,Cyclomatic complexity of the method is 9
Complex Method,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetAutoFocusPositionDescription,Cyclomatic complexity of the method is 8
Complex Method,com.drew.metadata.exif,OlympusDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDescriptor.cs,GetSpecialModeDescription,Cyclomatic complexity of the method is 10
Complex Method,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetDescription,Cyclomatic complexity of the method is 13
Complex Method,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetWhiteBalanceDescription,Cyclomatic complexity of the method is 8
Complex Method,com.drew.metadata.iptc,IptcReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcReader.cs,ProcessTag,Cyclomatic complexity of the method is 8
Complex Method,com.drew.metadata.jpeg,JpegDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\jpeg\JpegDescriptor.cs,GetDescription,Cyclomatic complexity of the method is 8
Complex Method,com,Run,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\Run.cs,Main,Cyclomatic complexity of the method is 9
Complex Method,com.utils.xml,XmlNewOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlNewOutPutStreamHandler.cs,CreateTag,Cyclomatic complexity of the method is 23
Long Parameter List,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessTag,The method has 5 parameters. Parameters: directory' tagType' tagValueOffset' componentCount' formatCode
Long Parameter List,com.drew.metadata.iptc,IptcReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcReader.cs,ProcessTag,The method has 5 parameters. Parameters: aDirectory' aDirectoryType' aTagType' anOffset' aTagByteCount
Long Parameter List,com.utils.xml,XmlNewOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlNewOutPutStreamHandler.cs,Open,The method has 5 parameters. Parameters: aBuff' aTagName' attName1' attValue1' isNewLine
Long Parameter List,com.utils.xml,XmlNewOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlNewOutPutStreamHandler.cs,Open,The method has 7 parameters. Parameters: aBuff' aTagName' attName1' attValue1' attName2' attValue2' isNewLine
Long Parameter List,com.utils.xml,XmlOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlOutPutStreamHandler.cs,Open,The method has 5 parameters. Parameters: aBuff' aTagName' attName1' attValue1' isNewLine
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_SELF_TIMER_DELAY is 33.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_CONTINUOUS_DRIVE_MODE is 38.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_EASY_SHOOTING_MODE is 35.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_METERING_MODE is 30.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_AF_POINT_SELECTED is 34.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_EXPOSURE_MODE is 30.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_LONG_FOCAL_LENGTH is 34.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_SHORT_FOCAL_LENGTH is 35.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_FOCAL_UNITS_PER_MM is 35.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_FLASH_ACTIVITY is 31.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_FLASH_DETAILS is 30.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_ImageStabilization is 35.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_DisplayAperture is 32.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_ZoomSourceWidth is 32.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_ZoomTargetWidth is 32.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_SpotMeteringMode is 33.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE1_ManualFlashOutput is 34.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_FocalLength_FocalType is 31.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_FocalLength_FocalLength is 33.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_FocalLength_FocalPlaneXSize is 37.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_FocalLength_FocalPlaneYSize is 37.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE2_WHITE_BALANCE is 30.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE2_SEQUENCE_NUMBER is 32.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE2_AF_POINT_USED is 30.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE2_AUTO_EXPOSURE_BRACKETING is 41.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE2_AEB_BRACKET_VALUE is 34.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE2_SUBJECT_DISTANCE is 33.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_CUSTOM_FUNCTION_LONG_EXPOSURE_NOISE_REDUCTION is 55.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_CUSTOM_FUNCTION_SHUTTER_AUTO_EXPOSURE_LOCK_BUTTONS is 60.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_CUSTOM_FUNCTION_MIRROR_LOCKUP is 39.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_CUSTOM_FUNCTION_TV_AV_AND_EXPOSURE_LEVEL is 50.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_CUSTOM_FUNCTION_AF_ASSIST_LIGHT is 41.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_CUSTOM_FUNCTION_SHUTTER_SPEED_IN_AV_MODE is 50.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_CUSTOM_FUNCTION_BRACKETTING is 37.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_CUSTOM_FUNCTION_SHUTTER_CURTAIN_SYNC is 46.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_CUSTOM_FUNCTION_AF_STOP is 33.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_CUSTOM_FUNCTION_FILL_FLASH_REDUCTION is 46.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_CUSTOM_FUNCTION_MENU_BUTTON_RETURN is 44.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_CUSTOM_FUNCTION_SET_BUTTON_FUNCTION is 45.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_CUSTOM_FUNCTION_SENSOR_CLEANING is 41.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_OriginalDecisionDataOffset is 36.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_PersonalFunctionValues is 32.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_InternalSerialNumber is 30.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_WhiteBalanceMatching is 30.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE2_TargetAperture is 31.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE2_TargetExposureTime is 35.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE2_ExposureCompensation is 37.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE2_OpticalZoomCode is 32.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE2_FlashGuideNumber is 33.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_STATE2_FocusDistanceLower is 35.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_ProcessingInfo_ToneCurve is 34.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_ProcessingInfo_Sharpness is 34.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_ProcessingInfo_SharpnessFrequency is 43.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_ProcessingInfo_SensorRedLevel is 39.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_ProcessingInfo_SensorBlueLevel is 40.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_ProcessingInfo_WhiteBalanceRed is 40.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_ProcessingInfo_WhiteBalanceBlue is 41.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_ProcessingInfo_WhiteBalance is 37.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_ProcessingInfo_ColorTemperature is 41.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_ProcessingInfo_PictureStyle is 37.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_ProcessingInfo_DigitalGain is 36.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_ProcessingInfo_WBShiftAB is 34.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_ProcessingInfo_WBShiftGM is 34.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_SensorInfo_SensorWidth is 32.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_SensorInfo_SensorHeight is 33.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_SensorInfo_SensorLeftBorder is 37.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_SensorInfo_SensorTopBorder is 36.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_SensorInfo_SensorRightBorder is 38.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_SensorInfo_SensorBottomBorder is 39.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_SensorInfo_BlackMaskLeftBorder is 40.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_SensorInfo_BlackMaskTopBorder is 39.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_SensorInfo_BlackMaskRightBorder is 41.
Long Identifier,com.drew.metadata.exif,CanonDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDirectory.cs,,The length of the parameter TAG_CANON_SensorInfo_BlackMaskBottomBorder is 42.
Long Identifier,com.drew.metadata.exif,CasioType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Directory.cs,,The length of the parameter TAG_CASIO_TYPE2_THUMBNAIL_DIMENSIONS is 36.
Long Identifier,com.drew.metadata.exif,CasioType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Directory.cs,,The length of the parameter TAG_CASIO_TYPE2_THUMBNAIL_SIZE is 30.
Long Identifier,com.drew.metadata.exif,CasioType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Directory.cs,,The length of the parameter TAG_CASIO_TYPE2_THUMBNAIL_OFFSET is 32.
Long Identifier,com.drew.metadata.exif,CasioType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Directory.cs,,The length of the parameter TAG_CASIO_TYPE2_ISO_SENSITIVITY is 31.
Long Identifier,com.drew.metadata.exif,CasioType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Directory.cs,,The length of the parameter TAG_CASIO_TYPE2_WHITE_BALANCE_1 is 31.
Long Identifier,com.drew.metadata.exif,CasioType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Directory.cs,,The length of the parameter TAG_CASIO_TYPE2_PRINT_IMAGE_MATCHING_INFO is 41.
Long Identifier,com.drew.metadata.exif,CasioType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Directory.cs,,The length of the parameter TAG_CASIO_TYPE2_CASIO_PREVIEW_THUMBNAIL is 39.
Long Identifier,com.drew.metadata.exif,CasioType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Directory.cs,,The length of the parameter TAG_CASIO_TYPE2_WHITE_BALANCE_BIAS is 34.
Long Identifier,com.drew.metadata.exif,CasioType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Directory.cs,,The length of the parameter TAG_CASIO_TYPE2_WHITE_BALANCE_2 is 31.
Long Identifier,com.drew.metadata.exif,CasioType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Directory.cs,,The length of the parameter TAG_CASIO_TYPE2_OBJECT_DISTANCE is 31.
Long Identifier,com.drew.metadata.exif,CasioType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Directory.cs,,The length of the parameter TAG_CASIO_TYPE2_FLASH_DISTANCE is 30.
Long Identifier,com.drew.metadata.exif,CasioType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Directory.cs,,The length of the parameter TAG_CASIO_TYPE2_CCD_ISO_SENSITIVITY is 35.
Long Identifier,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,,The length of the parameter allowDecimalRepresentationOfRationals is 37.
Long Identifier,com.drew.metadata.exif,ExifDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDirectory.cs,,The length of the parameter TAG_PHOTOMETRIC_INTERPRETATION is 30.
Long Identifier,com.drew.metadata.exif,ExifDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDirectory.cs,,The length of the parameter PHOTOMETRIC_INTERPRETATION_MONOCHROME is 37.
Long Identifier,com.drew.metadata.exif,ExifDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDirectory.cs,,The length of the parameter PHOTOMETRIC_INTERPRETATION_RGB is 30.
Long Identifier,com.drew.metadata.exif,ExifDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDirectory.cs,,The length of the parameter PHOTOMETRIC_INTERPRETATION_YCBCR is 32.
Long Identifier,com.drew.metadata.exif,ExifDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDirectory.cs,,The length of the parameter TAG_DEVICE_SETTING_DESCRIPTION is 30.
Long Identifier,com.drew.metadata.exif,FujifilmDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDirectory.cs,,The length of the parameter TAG_FUJIFILM_MAKERNOTE_VERSION is 30.
Long Identifier,com.drew.metadata.exif,FujifilmDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDirectory.cs,,The length of the parameter TAG_FUJIFILM_CONTINUOUS_TAKING_OR_AUTO_BRACKETTING is 50.
Long Identifier,com.drew.metadata.exif,KyoceraDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\KyoceraDirectory.cs,,The length of the parameter TAG_KYOCERA_PROPRIETARY_THUMBNAIL is 33.
Long Identifier,com.drew.metadata.exif,KyoceraDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\KyoceraDirectory.cs,,The length of the parameter TAG_KYOCERA_PRINT_IMAGE_MATCHING_INFO is 37.
Long Identifier,com.drew.metadata.exif,NikonType1Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Directory.cs,,The length of the parameter TAG_NIKON_TYPE1_IMAGE_ADJUSTMENT is 32.
Long Identifier,com.drew.metadata.exif,NikonType1Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Directory.cs,,The length of the parameter TAG_NIKON_TYPE1_CCD_SENSITIVITY is 31.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_FIRMWARE_VERSION is 32.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_QUALITY_AND_FILE_FORMAT is 39.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_CAMERA_WHITE_BALANCE is 36.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_CAMERA_SHARPENING is 33.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_FLASH_SYNC_MODE is 31.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_AUTO_FLASH_MODE is 31.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_CAMERA_WHITE_BALANCE_FINE is 41.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_CAMERA_WHITE_BALANCE_RB_COEFF is 45.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_AUTO_FLASH_COMPENSATION is 39.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_IMAGE_ADJUSTMENT is 32.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_CAMERA_TONE_COMPENSATION is 40.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_MANUAL_FOCUS_DISTANCE is 37.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_AF_FOCUS_POSITION is 33.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_CAMERA_COLOR_MODE is 33.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_CAMERA_HUE_ADJUSTMENT is 37.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_NOISE_REDUCTION is 31.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_EXPOSURE_SEQUENCE_NUMBER is 40.
Long Identifier,com.drew.metadata.exif,NikonType2Directory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Directory.cs,,The length of the parameter TAG_NIKON_TYPE2_CAPTURE_EDITOR_DATA is 35.
Long Identifier,com.drew.metadata.exif,OlympusDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDirectory.cs,,The length of the parameter TAG_OLYMPUS_COMPRESSED_IMAGE_SIZE is 33.
Long Identifier,com.drew.metadata.exif,OlympusDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDirectory.cs,,The length of the parameter TAG_OLYMPUS_MINOLTA_THUMBNAIL_OFFSET_1 is 38.
Long Identifier,com.drew.metadata.exif,OlympusDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDirectory.cs,,The length of the parameter TAG_OLYMPUS_MINOLTA_THUMBNAIL_OFFSET_2 is 38.
Long Identifier,com.drew.metadata.exif,OlympusDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDirectory.cs,,The length of the parameter TAG_OLYMPUS_MINOLTA_THUMBNAIL_LENGTH is 36.
Long Identifier,com.drew.metadata.exif,OlympusDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDirectory.cs,,The length of the parameter TAG_OLYMPUS_ORIGINAL_MANUFACTURER_MODEL is 39.
Long Identifier,com.drew.metadata.exif,OlympusDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDirectory.cs,,The length of the parameter TAG_OLYMPUS_PRINT_IMAGE_MATCHING_INFO is 37.
Long Identifier,com.drew.metadata.exif,PanasonicDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PanasonicDirectory.cs,,The length of the parameter TAG_PANASONIC_PRINT_IMAGE_MATCHING_INFO is 39.
Long Identifier,com.drew.metadata.exif,PentaxDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDirectory.cs,,The length of the parameter TAG_PENTAX_PRINT_IMAGE_MATCHING_INFO is 36.
Long Identifier,com.drew.metadata.iptc,IptcDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcDirectory.cs,,The length of the parameter TAG_COUNTRY_OR_PRIMARY_LOCATION is 31.
Long Identifier,com.drew.metadata.iptc,IptcDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcDirectory.cs,,The length of the parameter TAG_ORIGINAL_TRANSMISSION_REFERENCE is 35.
Long Statement,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetInt,The length of the statement  "                    throw new MetadataException("Unable to parse as int object of type:'" + lcObj.GetType() + "' that look like:'" + lcObj.ToString() + "'"' e);" is 140.
Long Statement,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetDouble,The length of the statement  "                    throw new MetadataException("Unable to parse as double object of type:'" + lcObj.GetType() + "' that look like:'" + lcObj.ToString() + "'"' e);" is 143.
Long Statement,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetFloat,The length of the statement  "                    throw new MetadataException("Unable to parse as float object of type:'" + lcObj.GetType() + "' that look like:'" + lcObj.ToString() + "'"' e);" is 142.
Long Statement,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetLong,The length of the statement  "                    throw new MetadataException("Unable to parse as long object of type:'" + lcObj.GetType() + "' that look like:'" + lcObj.ToString() + "'"' e);" is 141.
Long Statement,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetBoolean,The length of the statement  "                    throw new MetadataException("Unable to parse as boolean object of type:'" + lcObj.GetType() + "' that look like:'" + lcObj.ToString() + "'"' e);" is 144.
Long Statement,com.drew.metadata,Metadata,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\Metadata.cs,GetDirectory,The length of the statement  "                throw new ArgumentException("Class type passed to GetDirectory must be an implementation of com.drew.metadata.AbstractDirectory"); " is 130.
Long Statement,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetReferenceBlackWhiteDescription,The length of the statement  "			string[] lcSPos = new string[] {lcInts[0].ToString()' lcInts[1].ToString()'lcInts[2].ToString()'lcInts[3].ToString()'lcInts[4].ToString()'lcInts[5].ToString()}; " is 160.
Long Statement,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetYResolutionDescription,The length of the statement  "			return BUNDLE["DOTS_PER"' lcResolution.ToSimpleString(allowDecimalRepresentationOfRationals)'GetResolutionDescription().ToLower()]; " is 131.
Long Statement,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetXResolutionDescription,The length of the statement  "			return BUNDLE["DOTS_PER"' lcResolution.ToSimpleString(allowDecimalRepresentationOfRationals)'GetResolutionDescription().ToLower()]; " is 131.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessDirectory,The length of the statement  "            // check for directories we've already visited to avoid stack overflows when recursive/cyclic directory structures exist " is 120.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessDirectory,The length of the statement  "                        ProcessDirectory(this.metadata.GetDirectory("com.drew.metadata.exif.ExifDirectory")' processedDirectoryOffsets' subdirOffset' tiffHeaderOffset); " is 144.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessDirectory,The length of the statement  "                        ProcessDirectory(this.metadata.GetDirectory("com.drew.metadata.exif.ExifInteropDirectory")' processedDirectoryOffsets' subdirOffset' tiffHeaderOffset); " is 151.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessDirectory,The length of the statement  "                        ProcessDirectory(this.metadata.GetDirectory("com.drew.metadata.exif.GpsDirectory")' processedDirectoryOffsets' subdirOffset' tiffHeaderOffset); " is 143.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessDirectory,The length of the statement  "                    Trace.TraceWarning("Last 4 bytes of IFD reference another IFD with an address that is out of bounds\nNote this could have been caused by jhead 1.3 cropping too much"); " is 167.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessDirectory,The length of the statement  "                    Trace.TraceWarning("Last 4 bytes of IFD reference another IFD with an address that is before the start of this directory"); " is 123.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                    this.metadata.GetDirectory("com.drew.metadata.exif.OlympusDirectory")' processedDirectoryOffsets' subdirOffset + 8' tiffHeaderOffset); " is 134.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                            this.metadata.GetDirectory("com.drew.metadata.exif.NikonType1Directory")' processedDirectoryOffsets' subdirOffset + 8' tiffHeaderOffset); " is 137.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                            this.metadata.GetDirectory("com.drew.metadata.exif.NikonType2Directory")' processedDirectoryOffsets' subdirOffset + 18' subdirOffset + 10); " is 139.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                        this.metadata.GetDirectory("com.drew.metadata.exif.NikonType2Directory")' processedDirectoryOffsets' subdirOffset' tiffHeaderOffset); " is 133.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                    this.metadata.GetDirectory("com.drew.metadata.exif.SonyDirectory")' processedDirectoryOffsets' subdirOffset + 12' tiffHeaderOffset); " is 132.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                    this.metadata.GetDirectory("com.drew.metadata.exif.KodakDirectory")' processedDirectoryOffsets' subdirOffset + 20' tiffHeaderOffset); " is 133.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                    this.metadata.GetDirectory("com.drew.metadata.exif.CanonDirectory")' processedDirectoryOffsets' subdirOffset' tiffHeaderOffset); " is 128.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                    ProcessDirectory(this.metadata.GetDirectory("com.drew.metadata.exif.CasioType2Directory")' processedDirectoryOffsets' subdirOffset + 6' tiffHeaderOffset); " is 154.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                    ProcessDirectory(this.metadata.GetDirectory("com.drew.metadata.exif.CasioType1Directory")' processedDirectoryOffsets' subdirOffset' tiffHeaderOffset); " is 150.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                ProcessDirectory(this.metadata.GetDirectory("com.drew.metadata.exif.FujifilmDirectory")' processedDirectoryOffsets' ifdStart' tiffHeaderOffset); " is 144.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                ProcessDirectory(this.metadata.GetDirectory("com.drew.metadata.exif.OlympusDirectory")' processedDirectoryOffsets' subdirOffset' tiffHeaderOffset); " is 147.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "            else if ("KC".Equals(firstTwoChars) || "MINOL".Equals(firstFiveChars) || "MLY".Equals(firstThreeChars) || "+M+M+M+M".Equals(firstEightChars)) " is 141.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                ProcessDirectory(this.metadata.GetDirectory("com.drew.metadata.exif.KyoceraDirectory")' processedDirectoryOffsets' subdirOffset + 22' tiffHeaderOffset); " is 152.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                ProcessDirectory(this.metadata.GetDirectory("com.drew.metadata.exif.PanasonicDirectory")' processedDirectoryOffsets' subdirOffset + 12' tiffHeaderOffset); " is 154.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                ProcessDirectory(this.metadata.GetDirectory("com.drew.metadata.exif.CasioType2Directory")' processedDirectoryOffsets' subdirOffset + 6' subdirOffset); " is 150.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "            else if (cameraModel != null && (cameraModel.ToUpper().StartsWith("PENTAX") || cameraModel.ToUpper().StartsWith("ASAHI"))) " is 122.
Long Statement,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The length of the statement  "                ProcessDirectory(this.metadata.GetDirectory("com.drew.metadata.exif.PentaxDirectory")' processedDirectoryOffsets' subdirOffset' subdirOffset); " is 142.
Long Statement,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetLensDescription,The length of the statement  "            string[] tab = new string[] { lensValues[0].IntValue().ToString()' lensValues[1].IntValue().ToString()' lensValues[2].IntValue().ToString()' lensValues[3].IntValue().ToString() }; " is 179.
Long Statement,com,Run,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\Run.cs,Main,The length of the statement  "                Console.Error.WriteLine("     - Will show you all *.jpg|*.raw|*.cr2|*.crw in c:\\ and img1.jpg and img2.jpg info as text:"); " is 124.
Long Statement,com,Run,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\Run.cs,Main,The length of the statement  "                Console.Error.WriteLine("     - Will show you all *.jpg|*.raw|*.cr2|*.crw in c:\\Temp\\ and all its subdirectories as XML but with no unkown tags:"); " is 149.
Long Statement,com,Run,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\Run.cs,Main,The length of the statement  "                Console.Error.WriteLine("     - Will put in a file called sample.xml all c:\\Temp\\ *.jpg|*.raw|*.cr2|*.crw and all its subdirectories as XML but with no unkown tags:"); " is 169.
Long Statement,com,Run,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\Run.cs,Main,The length of the statement  "                string[] lcOutputParams = new string[] { "ISO-8859-1"' lcXslFileName' lcFileNameLst.Count.ToString()' dtdFile' useCDDATA }; " is 123.
Long Statement,com.utils,Utils,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\Utils.cs,SearchAllFileIn,The length of the statement  "                string[] lc2List = Directory.GetFiles(aRootDirectory' aSearchPattern' (doRecurse) ? SearchOption.AllDirectories : SearchOption.TopDirectoryOnly); " is 145.
Complex Conditional,com.drew.lang,Rational,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\lang\Rational.cs,GetSimplifiedInstance,The conditional expression  "(lcFactor % 2 == 0 && lcFactor > 2)                      || (lcFactor % 5 == 0 && lcFactor > 5)"  is complex.
Complex Conditional,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetInt,The conditional expression  "lcObj is int || lcObj is byte || lcObj is long || lcObj is float || lcObj is double"  is complex.
Complex Conditional,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetDouble,The conditional expression  "lcObj is double || lcObj is string || lcObj is int || lcObj is byte || lcObj is long || lcObj is float"  is complex.
Complex Conditional,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetFloat,The conditional expression  "lcObj is float || lcObj is string || lcObj is int || lcObj is byte || lcObj is long || lcObj is double"  is complex.
Complex Conditional,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetLong,The conditional expression  "lcObj is long || lcObj is string || lcObj is int || lcObj is byte || lcObj is double || lcObj is double"  is complex.
Complex Conditional,com.drew.metadata,Tag,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\Tag.cs,GetTagValue,The conditional expression  "this.tagType == ExifDirectory.TAG_DATETIME                  || this.tagType == ExifDirectory.TAG_DATETIME_DIGITIZED                  || this.tagType == ExifDirectory.TAG_DATETIME_ORIGINAL                  || this.tagType == IptcDirectory.TAG_DATE_CREATED"  is complex.
Complex Conditional,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The conditional expression  ""KC".Equals(firstTwoChars) || "MINOL".Equals(firstFiveChars) || "MLY".Equals(firstThreeChars) || "+M+M+M+M".Equals(firstEightChars)"  is complex.
Complex Conditional,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetAutoFocusPositionDescription,The conditional expression  "values.Length != 4 || values[0] != 0 || values[2] != 0 || values[3] != 0"  is complex.
Complex Conditional,com.utils.xml,XmlNewOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlNewOutPutStreamHandler.cs,CreateTag,The conditional expression  "!this.DoUnknown                      && (lcName.ToLower().StartsWith("unknown") || (lcDescription != null && lcDescription                          .ToLower().StartsWith("unknown")))"  is complex.
Empty Catch Block,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetDate,The method has an empty catch block.
Empty Catch Block,com.drew.metadata,Tag,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\Tag.cs,GetTagValue,The method has an empty catch block.
Empty Catch Block,com.drew.metadata.iptc,IptcReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcReader.cs,ProcessTag,The method has an empty catch block.
Empty Catch Block,com.utils.xml,TxtOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\TxtOutPutStreamHandler.cs,CreateTag,The method has an empty catch block.
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCLuminance,The following statement contains a magic number: short[] lengths = {   								  0' 0' 1' 5' 1' 1' 1' 1' 1' 1' 0' 0' 0' 0' 0' 0' 0 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCLuminance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCLuminance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCLuminance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCLuminance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCLuminance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCLuminance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCLuminance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCLuminance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCLuminance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCLuminance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCChrominance,The following statement contains a magic number: short[] lengths = { // 0-base  								  0' 0' 3' 1' 1' 1' 1' 1' 1' 1' 1' 1' 0' 0' 0' 0' 0 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCChrominance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCChrominance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCChrominance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCChrominance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCChrominance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCChrominance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCChrominance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCChrominance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCChrominance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdDCChrominance,The following statement contains a magic number: short[] symbols = {  								  0' 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACLuminance,The following statement contains a magic number: short[] lengths = { // 0-base  								  0' 0' 2' 1' 3' 3' 2' 4' 3' 5' 5' 4' 4' 0' 0' 1' 0x7d };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACLuminance,The following statement contains a magic number: short[] lengths = { // 0-base  								  0' 0' 2' 1' 3' 3' 2' 4' 3' 5' 5' 4' 4' 0' 0' 1' 0x7d };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACLuminance,The following statement contains a magic number: short[] lengths = { // 0-base  								  0' 0' 2' 1' 3' 3' 2' 4' 3' 5' 5' 4' 4' 0' 0' 1' 0x7d };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACLuminance,The following statement contains a magic number: short[] lengths = { // 0-base  								  0' 0' 2' 1' 3' 3' 2' 4' 3' 5' 5' 4' 4' 0' 0' 1' 0x7d };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACLuminance,The following statement contains a magic number: short[] lengths = { // 0-base  								  0' 0' 2' 1' 3' 3' 2' 4' 3' 5' 5' 4' 4' 0' 0' 1' 0x7d };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACLuminance,The following statement contains a magic number: short[] lengths = { // 0-base  								  0' 0' 2' 1' 3' 3' 2' 4' 3' 5' 5' 4' 4' 0' 0' 1' 0x7d };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACLuminance,The following statement contains a magic number: short[] lengths = { // 0-base  								  0' 0' 2' 1' 3' 3' 2' 4' 3' 5' 5' 4' 4' 0' 0' 1' 0x7d };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACLuminance,The following statement contains a magic number: short[] lengths = { // 0-base  								  0' 0' 2' 1' 3' 3' 2' 4' 3' 5' 5' 4' 4' 0' 0' 1' 0x7d };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACLuminance,The following statement contains a magic number: short[] lengths = { // 0-base  								  0' 0' 2' 1' 3' 3' 2' 4' 3' 5' 5' 4' 4' 0' 0' 1' 0x7d };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACLuminance,The following statement contains a magic number: short[] lengths = { // 0-base  								  0' 0' 2' 1' 3' 3' 2' 4' 3' 5' 5' 4' 4' 0' 0' 1' 0x7d };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACChrominance,The following statement contains a magic number: short[] lengths =  { // 0-base  								   0' 0' 2' 1' 2' 4' 4' 3' 4' 7' 5' 4' 4' 0' 1' 2' 0x77 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACChrominance,The following statement contains a magic number: short[] lengths =  { // 0-base  								   0' 0' 2' 1' 2' 4' 4' 3' 4' 7' 5' 4' 4' 0' 1' 2' 0x77 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACChrominance,The following statement contains a magic number: short[] lengths =  { // 0-base  								   0' 0' 2' 1' 2' 4' 4' 3' 4' 7' 5' 4' 4' 0' 1' 2' 0x77 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACChrominance,The following statement contains a magic number: short[] lengths =  { // 0-base  								   0' 0' 2' 1' 2' 4' 4' 3' 4' 7' 5' 4' 4' 0' 1' 2' 0x77 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACChrominance,The following statement contains a magic number: short[] lengths =  { // 0-base  								   0' 0' 2' 1' 2' 4' 4' 3' 4' 7' 5' 4' 4' 0' 1' 2' 0x77 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACChrominance,The following statement contains a magic number: short[] lengths =  { // 0-base  								   0' 0' 2' 1' 2' 4' 4' 3' 4' 7' 5' 4' 4' 0' 1' 2' 0x77 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACChrominance,The following statement contains a magic number: short[] lengths =  { // 0-base  								   0' 0' 2' 1' 2' 4' 4' 3' 4' 7' 5' 4' 4' 0' 1' 2' 0x77 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACChrominance,The following statement contains a magic number: short[] lengths =  { // 0-base  								   0' 0' 2' 1' 2' 4' 4' 3' 4' 7' 5' 4' 4' 0' 1' 2' 0x77 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACChrominance,The following statement contains a magic number: short[] lengths =  { // 0-base  								   0' 0' 2' 1' 2' 4' 4' 3' 4' 7' 5' 4' 4' 0' 1' 2' 0x77 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACChrominance,The following statement contains a magic number: short[] lengths =  { // 0-base  								   0' 0' 2' 1' 2' 4' 4' 3' 4' 7' 5' 4' 4' 0' 1' 2' 0x77 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,InitStdACChrominance,The following statement contains a magic number: short[] lengths =  { // 0-base  								   0' 0' 2' 1' 2' 4' 4' 3' 4' 7' 5' 4' 4' 0' 1' 2' 0x77 };
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,checkTable,The following statement contains a magic number: int numVals=2;
Magic Number,com.codec.jpeg,JPEGHuffmanTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGHuffmanTable.cs,checkTable,The following statement contains a magic number: numVals *= 2;
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdLuminance,The following statement contains a magic number: int[] lumVals = {  								16'   11'  12'  14'  12'  10'  16'  14'  								13'   14'  18'  17'  16'  19'  24'  40'  								26'   24'  22'  22'  24'  49'  35'  37'  								29'   40'  58'  51'  61'  60'  57'  51'  								56'   55'  64'  72'  92'  78'  64'  68'  								87'   69'  55'  56'  80' 109'  81'  87'  								95'   98' 103' 104' 103'  62'  77' 113'  								121' 112' 100' 120'  92' 101' 103'  99  							};
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,InitStdChrominance,The following statement contains a magic number: int [] chromVals = {  								   17'  18'  18'  24'  21'  24'  47'  26'  								   26'  47'  99'  66'  56'  66'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99'  								   99'  99'  99'  99'  99'  99'  99'  99  							   };
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,GetScaledInstance,The following statement contains a magic number: long  max    = (forceBaseline)?255L:32767L;
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,GetScaledInstance,The following statement contains a magic number: long  max    = (forceBaseline)?255L:32767L;
Magic Number,com.codec.jpeg,JPEGQTable,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\codec\jpeg\JPEGQTable.cs,GetScaledInstance,The following statement contains a magic number: long holder = (long)((quantval[i] * scaleFactor) + 0.5);
Magic Number,com.drew.imaging.jpg,JpegSegmentData,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\imaging\jpg\JpegSegmentData.cs,JpegSegmentData,The following statement contains a magic number: this.segmentDataMap = new Dictionary<byte' IList<byte[]>>(10);
Magic Number,com.drew.imaging.jpg,JpegSegmentReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\imaging\jpg\JpegSegmentReader.cs,ReadSegments,The following statement contains a magic number: lcOffset += 2;
Magic Number,com.drew.imaging.jpg,JpegSegmentReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\imaging\jpg\JpegSegmentReader.cs,ReadSegments,The following statement contains a magic number: byte[] lcSegmentLengthBytes = new byte[2];
Magic Number,com.drew.imaging.jpg,JpegSegmentReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\imaging\jpg\JpegSegmentReader.cs,ReadSegments,The following statement contains a magic number: lcInStream.Read(lcSegmentLengthBytes' 0' 2);
Magic Number,com.drew.imaging.jpg,JpegSegmentReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\imaging\jpg\JpegSegmentReader.cs,ReadSegments,The following statement contains a magic number: lcOffset += 2;
Magic Number,com.drew.imaging.jpg,JpegSegmentReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\imaging\jpg\JpegSegmentReader.cs,ReadSegments,The following statement contains a magic number: int lcSegmentLength =                          ((lcSegmentLengthBytes[0] << 8) & 0xFF00)                          | (lcSegmentLengthBytes[1] & 0xFF);
Magic Number,com.drew.imaging.jpg,JpegSegmentReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\imaging\jpg\JpegSegmentReader.cs,ReadSegments,The following statement contains a magic number: lcSegmentLength -= 2;
Magic Number,com.drew.imaging.jpg,JpegSegmentReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\imaging\jpg\JpegSegmentReader.cs,IsValidJpegHeaderBytes,The following statement contains a magic number: byte[] lcHeader = new byte[2];
Magic Number,com.drew.imaging.jpg,JpegSegmentReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\imaging\jpg\JpegSegmentReader.cs,IsValidJpegHeaderBytes,The following statement contains a magic number: aFileStream.Read(lcHeader' 0' 2);
Magic Number,com.drew.lang,Rational,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\lang\Rational.cs,TooComplexForSimplification,The following statement contains a magic number: double lcMaxPossibleCalculations =                  (((double)(Math.Min(this.denominator' this.numerator) - 1) / 5d) + 2);
Magic Number,com.drew.lang,Rational,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\lang\Rational.cs,TooComplexForSimplification,The following statement contains a magic number: double lcMaxPossibleCalculations =                  (((double)(Math.Min(this.denominator' this.numerator) - 1) / 5d) + 2);
Magic Number,com.drew.lang,Rational,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\lang\Rational.cs,GetSimplifiedInstance,The following statement contains a magic number: (lcFactor % 2 == 0 && lcFactor > 2)                      || (lcFactor % 5 == 0 && lcFactor > 5)
Magic Number,com.drew.lang,Rational,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\lang\Rational.cs,GetSimplifiedInstance,The following statement contains a magic number: (lcFactor % 2 == 0 && lcFactor > 2)                      || (lcFactor % 5 == 0 && lcFactor > 5)
Magic Number,com.drew.lang,Rational,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\lang\Rational.cs,GetSimplifiedInstance,The following statement contains a magic number: (lcFactor % 2 == 0 && lcFactor > 2)                      || (lcFactor % 5 == 0 && lcFactor > 5)
Magic Number,com.drew.lang,Rational,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\lang\Rational.cs,GetSimplifiedInstance,The following statement contains a magic number: (lcFactor % 2 == 0 && lcFactor > 2)                      || (lcFactor % 5 == 0 && lcFactor > 5)
Magic Number,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,AbstractDirectory,The following statement contains a magic number: AbstractDirectory.tagNameMap = new Dictionary<Type' IDictionary<int' string>>(25);
Magic Number,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetTagName,The following statement contains a magic number: StringBuilder buff = new StringBuilder(32);
Magic Number,com.drew.metadata,AbstractDirectory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractDirectory.cs,GetTagName,The following statement contains a magic number: i < 4 - lcHex.Length
Magic Number,com.drew.metadata,AbstractMetadataReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractMetadataReader.cs,Get32Bits,The following statement contains a magic number: return ((this.data[anOffset] & 255) << 8) | (this.data[anOffset + 1] & 255);
Magic Number,com.drew.metadata,AbstractMetadataReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractMetadataReader.cs,Get32Bits,The following statement contains a magic number: return ((this.data[anOffset] & 255) << 8) | (this.data[anOffset + 1] & 255);
Magic Number,com.drew.metadata,AbstractMetadataReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractMetadataReader.cs,Get32Bits,The following statement contains a magic number: return ((this.data[anOffset] & 255) << 8) | (this.data[anOffset + 1] & 255);
Magic Number,com.drew.metadata,AbstractMetadataReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\AbstractMetadataReader.cs,Get16Bits,The following statement contains a magic number: return (this.data[anOffset] & 255);
Magic Number,com.drew.metadata,Tag,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\Tag.cs,GetTagTypeHex,The following statement contains a magic number: lcHex.Length < 4
Magic Number,com.drew.metadata,Tag,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\Tag.cs,ToString,The following statement contains a magic number: StringBuilder buff = new StringBuilder(64);
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetMenuButtonReturnPositionDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0: return BUNDLE["TOP"];                  case 1: return BUNDLE["PREVIOUS_VOLATILE"];                  case 2: return BUNDLE["PREVIOUS"];                  default: return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetSetButtonFunctionWhenShootingDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0: return BUNDLE["NOT_ASSIGNED"];                  case 1: return BUNDLE["CHANGE_QUALITY"];                  case 2: return BUNDLE["CHANGE_ISO_SPEED"];                  case 3: return BUNDLE["SELECT_PARAMETERS"];                  default: return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetSetButtonFunctionWhenShootingDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0: return BUNDLE["NOT_ASSIGNED"];                  case 1: return BUNDLE["CHANGE_QUALITY"];                  case 2: return BUNDLE["CHANGE_ISO_SPEED"];                  case 3: return BUNDLE["SELECT_PARAMETERS"];                  default: return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetLensAutoFocusStopButtonDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0: return BUNDLE["AF_STOP"];                  case 1: return BUNDLE["OPERATE_AF"];                  case 2: return BUNDLE["LOCK_AE_AND_START_TIMER"];                  default: return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetAutoExposureBrackettingSequenceAndAutoCancellationDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0: return BUNDLE["0_M_P_ENABLED"];                  case 1: return BUNDLE["0_M_P_DISABLED"];                  case 2: return BUNDLE["M_0_P_ENABLED"];                  case 3: return BUNDLE["M_0_P_DISABLED"];                  default: return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetAutoExposureBrackettingSequenceAndAutoCancellationDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0: return BUNDLE["0_M_P_ENABLED"];                  case 1: return BUNDLE["0_M_P_DISABLED"];                  case 2: return BUNDLE["M_0_P_ENABLED"];                  case 3: return BUNDLE["M_0_P_DISABLED"];                  default: return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetShutterAutoExposureLockButtonDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0: return BUNDLE["AF_AE_LOCK"];                  case 1: return BUNDLE["AE_LOCK_AF"];                  case 2: return BUNDLE["AE_AF_LOCK"];                  case 3: return BUNDLE["AE_RELEASE_AE_AF"];                  default: return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetShutterAutoExposureLockButtonDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0: return BUNDLE["AF_AE_LOCK"];                  case 1: return BUNDLE["AE_LOCK_AF"];                  case 2: return BUNDLE["AE_AF_LOCK"];                  case 3: return BUNDLE["AE_RELEASE_AE_AF"];                  default: return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetQualityDescription,The following statement contains a magic number: switch (lcVal)              {                  case 2:                      return BUNDLE["NORMAL"];                  case 3:                      return BUNDLE["FINE"];                  case 5:                      return BUNDLE["SUPERFINE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetQualityDescription,The following statement contains a magic number: switch (lcVal)              {                  case 2:                      return BUNDLE["NORMAL"];                  case 3:                      return BUNDLE["FINE"];                  case 5:                      return BUNDLE["SUPERFINE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetQualityDescription,The following statement contains a magic number: switch (lcVal)              {                  case 2:                      return BUNDLE["NORMAL"];                  case 3:                      return BUNDLE["FINE"];                  case 5:                      return BUNDLE["SUPERFINE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetDigitalZoomDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["NO_DIGITAL_ZOOM"];                  case 1:                      return BUNDLE["DIGITAL_ZOOM"' "2"];                  case 2:                      return BUNDLE["DIGITAL_ZOOM"' "4"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFocusTypeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["MANUAL"];                  case 1:                  case 2:                      return BUNDLE["AUTO"];                  case 3:                      return BUNDLE["CLOSE_UP_MACRO"];                  case 8:                      return BUNDLE["LOCKED_PAN_MODE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFocusTypeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["MANUAL"];                  case 1:                  case 2:                      return BUNDLE["AUTO"];                  case 3:                      return BUNDLE["CLOSE_UP_MACRO"];                  case 8:                      return BUNDLE["LOCKED_PAN_MODE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFocusTypeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["MANUAL"];                  case 1:                  case 2:                      return BUNDLE["AUTO"];                  case 3:                      return BUNDLE["CLOSE_UP_MACRO"];                  case 8:                      return BUNDLE["LOCKED_PAN_MODE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFlashBiasDescription,The following statement contains a magic number: return BUNDLE["FLASH_BIAS_NEW"' ((isNegative) ? "-" : "")' (lcVal / 32.0).ToString()];
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["SUNNY"];  				case 2 :  					return BUNDLE["CLOUDY"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["FLASH"];  				case 6 :  					return BUNDLE["CUSTOM"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["SUNNY"];  				case 2 :  					return BUNDLE["CLOUDY"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["FLASH"];  				case 6 :  					return BUNDLE["CUSTOM"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["SUNNY"];  				case 2 :  					return BUNDLE["CLOUDY"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["FLASH"];  				case 6 :  					return BUNDLE["CUSTOM"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["SUNNY"];  				case 2 :  					return BUNDLE["CLOUDY"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["FLASH"];  				case 6 :  					return BUNDLE["CUSTOM"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["SUNNY"];  				case 2 :  					return BUNDLE["CLOUDY"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["FLASH"];  				case 6 :  					return BUNDLE["CUSTOM"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFlashDetailsDescription,The following statement contains a magic number: ((lcVal << 14) & 1) > 0
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFlashDetailsDescription,The following statement contains a magic number: ((lcVal << 13) & 1) > 0
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFlashDetailsDescription,The following statement contains a magic number: ((lcVal << 11) & 1) > 0
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFlashDetailsDescription,The following statement contains a magic number: ((lcVal << 4) & 1) > 0
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetExposureModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["EASY_SHOOTING"];  				case 1 :  					return BUNDLE["PROGRAM"];  				case 2 :  					return BUNDLE["TV_PRIORITY"];  				case 3 :  					return BUNDLE["AV_PRIORITY"];  				case 4 :  					return BUNDLE["MANUAL"];  				case 5 :  					return BUNDLE["A_DEP"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetExposureModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["EASY_SHOOTING"];  				case 1 :  					return BUNDLE["PROGRAM"];  				case 2 :  					return BUNDLE["TV_PRIORITY"];  				case 3 :  					return BUNDLE["AV_PRIORITY"];  				case 4 :  					return BUNDLE["MANUAL"];  				case 5 :  					return BUNDLE["A_DEP"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetExposureModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["EASY_SHOOTING"];  				case 1 :  					return BUNDLE["PROGRAM"];  				case 2 :  					return BUNDLE["TV_PRIORITY"];  				case 3 :  					return BUNDLE["AV_PRIORITY"];  				case 4 :  					return BUNDLE["MANUAL"];  				case 5 :  					return BUNDLE["A_DEP"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetExposureModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["EASY_SHOOTING"];  				case 1 :  					return BUNDLE["PROGRAM"];  				case 2 :  					return BUNDLE["TV_PRIORITY"];  				case 3 :  					return BUNDLE["AV_PRIORITY"];  				case 4 :  					return BUNDLE["MANUAL"];  				case 5 :  					return BUNDLE["A_DEP"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetMeteringModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 3 :  					return BUNDLE["EVALUATIVE"];  				case 4 :  					return BUNDLE["PARTIAL"];  				case 5 :  					return BUNDLE["CENTER_WEIGHTED"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetMeteringModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 3 :  					return BUNDLE["EVALUATIVE"];  				case 4 :  					return BUNDLE["PARTIAL"];  				case 5 :  					return BUNDLE["CENTER_WEIGHTED"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetMeteringModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 3 :  					return BUNDLE["EVALUATIVE"];  				case 4 :  					return BUNDLE["PARTIAL"];  				case 5 :  					return BUNDLE["CENTER_WEIGHTED"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetIsoDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["ISO_NOT_SPECIFIED"];  				case 15 :  					return BUNDLE["AUTO"];  				case 16 :  					return BUNDLE["ISO"' "50"];  				case 17 :  					return BUNDLE["ISO"' "100"];  				case 18 :  					return BUNDLE["ISO"' "200"];  				case 19 :  					return BUNDLE["ISO"' "400"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetIsoDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["ISO_NOT_SPECIFIED"];  				case 15 :  					return BUNDLE["AUTO"];  				case 16 :  					return BUNDLE["ISO"' "50"];  				case 17 :  					return BUNDLE["ISO"' "100"];  				case 18 :  					return BUNDLE["ISO"' "200"];  				case 19 :  					return BUNDLE["ISO"' "400"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetIsoDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["ISO_NOT_SPECIFIED"];  				case 15 :  					return BUNDLE["AUTO"];  				case 16 :  					return BUNDLE["ISO"' "50"];  				case 17 :  					return BUNDLE["ISO"' "100"];  				case 18 :  					return BUNDLE["ISO"' "200"];  				case 19 :  					return BUNDLE["ISO"' "400"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetIsoDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["ISO_NOT_SPECIFIED"];  				case 15 :  					return BUNDLE["AUTO"];  				case 16 :  					return BUNDLE["ISO"' "50"];  				case 17 :  					return BUNDLE["ISO"' "100"];  				case 18 :  					return BUNDLE["ISO"' "200"];  				case 19 :  					return BUNDLE["ISO"' "400"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetIsoDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["ISO_NOT_SPECIFIED"];  				case 15 :  					return BUNDLE["AUTO"];  				case 16 :  					return BUNDLE["ISO"' "50"];  				case 17 :  					return BUNDLE["ISO"' "100"];  				case 18 :  					return BUNDLE["ISO"' "200"];  				case 19 :  					return BUNDLE["ISO"' "400"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetEasyShootingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["FULL_AUTO"];  				case 1 :  					return BUNDLE["MANUAL"];  				case 2 :  					return BUNDLE["LANDSCAPE"];  				case 3 :  					return BUNDLE["FAST_SHUTTER"];  				case 4 :  					return BUNDLE["SLOW_SHUTTER"];  				case 5 :  					return BUNDLE["NIGHT"];  				case 6 :  					return BUNDLE["BLACK_AND_WHITE"];  				case 7 :  					return BUNDLE["SEPIA"];  				case 8 :  					return BUNDLE["PORTRAIT"];  				case 9 :  					return BUNDLE["SPORTS"];  				case 10 :  					return BUNDLE["MACRO_CLOSEUP"];  				case 11 :  					return BUNDLE["PAN_FOCUS"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetEasyShootingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["FULL_AUTO"];  				case 1 :  					return BUNDLE["MANUAL"];  				case 2 :  					return BUNDLE["LANDSCAPE"];  				case 3 :  					return BUNDLE["FAST_SHUTTER"];  				case 4 :  					return BUNDLE["SLOW_SHUTTER"];  				case 5 :  					return BUNDLE["NIGHT"];  				case 6 :  					return BUNDLE["BLACK_AND_WHITE"];  				case 7 :  					return BUNDLE["SEPIA"];  				case 8 :  					return BUNDLE["PORTRAIT"];  				case 9 :  					return BUNDLE["SPORTS"];  				case 10 :  					return BUNDLE["MACRO_CLOSEUP"];  				case 11 :  					return BUNDLE["PAN_FOCUS"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetEasyShootingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["FULL_AUTO"];  				case 1 :  					return BUNDLE["MANUAL"];  				case 2 :  					return BUNDLE["LANDSCAPE"];  				case 3 :  					return BUNDLE["FAST_SHUTTER"];  				case 4 :  					return BUNDLE["SLOW_SHUTTER"];  				case 5 :  					return BUNDLE["NIGHT"];  				case 6 :  					return BUNDLE["BLACK_AND_WHITE"];  				case 7 :  					return BUNDLE["SEPIA"];  				case 8 :  					return BUNDLE["PORTRAIT"];  				case 9 :  					return BUNDLE["SPORTS"];  				case 10 :  					return BUNDLE["MACRO_CLOSEUP"];  				case 11 :  					return BUNDLE["PAN_FOCUS"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetEasyShootingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["FULL_AUTO"];  				case 1 :  					return BUNDLE["MANUAL"];  				case 2 :  					return BUNDLE["LANDSCAPE"];  				case 3 :  					return BUNDLE["FAST_SHUTTER"];  				case 4 :  					return BUNDLE["SLOW_SHUTTER"];  				case 5 :  					return BUNDLE["NIGHT"];  				case 6 :  					return BUNDLE["BLACK_AND_WHITE"];  				case 7 :  					return BUNDLE["SEPIA"];  				case 8 :  					return BUNDLE["PORTRAIT"];  				case 9 :  					return BUNDLE["SPORTS"];  				case 10 :  					return BUNDLE["MACRO_CLOSEUP"];  				case 11 :  					return BUNDLE["PAN_FOCUS"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetEasyShootingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["FULL_AUTO"];  				case 1 :  					return BUNDLE["MANUAL"];  				case 2 :  					return BUNDLE["LANDSCAPE"];  				case 3 :  					return BUNDLE["FAST_SHUTTER"];  				case 4 :  					return BUNDLE["SLOW_SHUTTER"];  				case 5 :  					return BUNDLE["NIGHT"];  				case 6 :  					return BUNDLE["BLACK_AND_WHITE"];  				case 7 :  					return BUNDLE["SEPIA"];  				case 8 :  					return BUNDLE["PORTRAIT"];  				case 9 :  					return BUNDLE["SPORTS"];  				case 10 :  					return BUNDLE["MACRO_CLOSEUP"];  				case 11 :  					return BUNDLE["PAN_FOCUS"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetEasyShootingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["FULL_AUTO"];  				case 1 :  					return BUNDLE["MANUAL"];  				case 2 :  					return BUNDLE["LANDSCAPE"];  				case 3 :  					return BUNDLE["FAST_SHUTTER"];  				case 4 :  					return BUNDLE["SLOW_SHUTTER"];  				case 5 :  					return BUNDLE["NIGHT"];  				case 6 :  					return BUNDLE["BLACK_AND_WHITE"];  				case 7 :  					return BUNDLE["SEPIA"];  				case 8 :  					return BUNDLE["PORTRAIT"];  				case 9 :  					return BUNDLE["SPORTS"];  				case 10 :  					return BUNDLE["MACRO_CLOSEUP"];  				case 11 :  					return BUNDLE["PAN_FOCUS"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetEasyShootingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["FULL_AUTO"];  				case 1 :  					return BUNDLE["MANUAL"];  				case 2 :  					return BUNDLE["LANDSCAPE"];  				case 3 :  					return BUNDLE["FAST_SHUTTER"];  				case 4 :  					return BUNDLE["SLOW_SHUTTER"];  				case 5 :  					return BUNDLE["NIGHT"];  				case 6 :  					return BUNDLE["BLACK_AND_WHITE"];  				case 7 :  					return BUNDLE["SEPIA"];  				case 8 :  					return BUNDLE["PORTRAIT"];  				case 9 :  					return BUNDLE["SPORTS"];  				case 10 :  					return BUNDLE["MACRO_CLOSEUP"];  				case 11 :  					return BUNDLE["PAN_FOCUS"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetEasyShootingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["FULL_AUTO"];  				case 1 :  					return BUNDLE["MANUAL"];  				case 2 :  					return BUNDLE["LANDSCAPE"];  				case 3 :  					return BUNDLE["FAST_SHUTTER"];  				case 4 :  					return BUNDLE["SLOW_SHUTTER"];  				case 5 :  					return BUNDLE["NIGHT"];  				case 6 :  					return BUNDLE["BLACK_AND_WHITE"];  				case 7 :  					return BUNDLE["SEPIA"];  				case 8 :  					return BUNDLE["PORTRAIT"];  				case 9 :  					return BUNDLE["SPORTS"];  				case 10 :  					return BUNDLE["MACRO_CLOSEUP"];  				case 11 :  					return BUNDLE["PAN_FOCUS"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetEasyShootingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["FULL_AUTO"];  				case 1 :  					return BUNDLE["MANUAL"];  				case 2 :  					return BUNDLE["LANDSCAPE"];  				case 3 :  					return BUNDLE["FAST_SHUTTER"];  				case 4 :  					return BUNDLE["SLOW_SHUTTER"];  				case 5 :  					return BUNDLE["NIGHT"];  				case 6 :  					return BUNDLE["BLACK_AND_WHITE"];  				case 7 :  					return BUNDLE["SEPIA"];  				case 8 :  					return BUNDLE["PORTRAIT"];  				case 9 :  					return BUNDLE["SPORTS"];  				case 10 :  					return BUNDLE["MACRO_CLOSEUP"];  				case 11 :  					return BUNDLE["PAN_FOCUS"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetEasyShootingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["FULL_AUTO"];  				case 1 :  					return BUNDLE["MANUAL"];  				case 2 :  					return BUNDLE["LANDSCAPE"];  				case 3 :  					return BUNDLE["FAST_SHUTTER"];  				case 4 :  					return BUNDLE["SLOW_SHUTTER"];  				case 5 :  					return BUNDLE["NIGHT"];  				case 6 :  					return BUNDLE["BLACK_AND_WHITE"];  				case 7 :  					return BUNDLE["SEPIA"];  				case 8 :  					return BUNDLE["PORTRAIT"];  				case 9 :  					return BUNDLE["SPORTS"];  				case 10 :  					return BUNDLE["MACRO_CLOSEUP"];  				case 11 :  					return BUNDLE["PAN_FOCUS"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetImageSizeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["LARGE"];  				case 1 :  					return BUNDLE["MEDIUM"];  				case 2 :  					return BUNDLE["SMALL"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFocusMode1Description,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["ONE_SHOT"];  				case 1 :  					return BUNDLE["AI_SERVO"];  				case 2 :  					return BUNDLE["AI_FOCUS"];  				case 3 :  					return BUNDLE["MF"];  				case 4 :  					// TODO should check field 32 here (FOCUS_MODE_2)  					return BUNDLE["SINGLE"];  				case 5 :  					return BUNDLE["CONTINUOUS"];  				case 6 :  					return BUNDLE["MF"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFocusMode1Description,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["ONE_SHOT"];  				case 1 :  					return BUNDLE["AI_SERVO"];  				case 2 :  					return BUNDLE["AI_FOCUS"];  				case 3 :  					return BUNDLE["MF"];  				case 4 :  					// TODO should check field 32 here (FOCUS_MODE_2)  					return BUNDLE["SINGLE"];  				case 5 :  					return BUNDLE["CONTINUOUS"];  				case 6 :  					return BUNDLE["MF"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFocusMode1Description,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["ONE_SHOT"];  				case 1 :  					return BUNDLE["AI_SERVO"];  				case 2 :  					return BUNDLE["AI_FOCUS"];  				case 3 :  					return BUNDLE["MF"];  				case 4 :  					// TODO should check field 32 here (FOCUS_MODE_2)  					return BUNDLE["SINGLE"];  				case 5 :  					return BUNDLE["CONTINUOUS"];  				case 6 :  					return BUNDLE["MF"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFocusMode1Description,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["ONE_SHOT"];  				case 1 :  					return BUNDLE["AI_SERVO"];  				case 2 :  					return BUNDLE["AI_FOCUS"];  				case 3 :  					return BUNDLE["MF"];  				case 4 :  					// TODO should check field 32 here (FOCUS_MODE_2)  					return BUNDLE["SINGLE"];  				case 5 :  					return BUNDLE["CONTINUOUS"];  				case 6 :  					return BUNDLE["MF"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFocusMode1Description,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["ONE_SHOT"];  				case 1 :  					return BUNDLE["AI_SERVO"];  				case 2 :  					return BUNDLE["AI_FOCUS"];  				case 3 :  					return BUNDLE["MF"];  				case 4 :  					// TODO should check field 32 here (FOCUS_MODE_2)  					return BUNDLE["SINGLE"];  				case 5 :  					return BUNDLE["CONTINUOUS"];  				case 6 :  					return BUNDLE["MF"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFlashModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["NO_FLASH_FIRED"];  				case 1 :  					return BUNDLE["AUTO"];  				case 2 :  					return BUNDLE["ON"];  				case 3 :  					return BUNDLE["RED_EYE_REDUCTION"];  				case 4 :  					return BUNDLE["SLOW_SYNCHRO"];  				case 5 :  					return BUNDLE["AUTO_AND_RED_EYE_REDUCTION"];  				case 6 :  					return BUNDLE["ON_AND_RED_EYE_REDUCTION"];  				case 16 :  					// note: this lcVal not set on Canon D30  					return BUNDLE["EXTERNAL_FLASH"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFlashModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["NO_FLASH_FIRED"];  				case 1 :  					return BUNDLE["AUTO"];  				case 2 :  					return BUNDLE["ON"];  				case 3 :  					return BUNDLE["RED_EYE_REDUCTION"];  				case 4 :  					return BUNDLE["SLOW_SYNCHRO"];  				case 5 :  					return BUNDLE["AUTO_AND_RED_EYE_REDUCTION"];  				case 6 :  					return BUNDLE["ON_AND_RED_EYE_REDUCTION"];  				case 16 :  					// note: this lcVal not set on Canon D30  					return BUNDLE["EXTERNAL_FLASH"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFlashModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["NO_FLASH_FIRED"];  				case 1 :  					return BUNDLE["AUTO"];  				case 2 :  					return BUNDLE["ON"];  				case 3 :  					return BUNDLE["RED_EYE_REDUCTION"];  				case 4 :  					return BUNDLE["SLOW_SYNCHRO"];  				case 5 :  					return BUNDLE["AUTO_AND_RED_EYE_REDUCTION"];  				case 6 :  					return BUNDLE["ON_AND_RED_EYE_REDUCTION"];  				case 16 :  					// note: this lcVal not set on Canon D30  					return BUNDLE["EXTERNAL_FLASH"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFlashModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["NO_FLASH_FIRED"];  				case 1 :  					return BUNDLE["AUTO"];  				case 2 :  					return BUNDLE["ON"];  				case 3 :  					return BUNDLE["RED_EYE_REDUCTION"];  				case 4 :  					return BUNDLE["SLOW_SYNCHRO"];  				case 5 :  					return BUNDLE["AUTO_AND_RED_EYE_REDUCTION"];  				case 6 :  					return BUNDLE["ON_AND_RED_EYE_REDUCTION"];  				case 16 :  					// note: this lcVal not set on Canon D30  					return BUNDLE["EXTERNAL_FLASH"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFlashModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["NO_FLASH_FIRED"];  				case 1 :  					return BUNDLE["AUTO"];  				case 2 :  					return BUNDLE["ON"];  				case 3 :  					return BUNDLE["RED_EYE_REDUCTION"];  				case 4 :  					return BUNDLE["SLOW_SYNCHRO"];  				case 5 :  					return BUNDLE["AUTO_AND_RED_EYE_REDUCTION"];  				case 6 :  					return BUNDLE["ON_AND_RED_EYE_REDUCTION"];  				case 16 :  					// note: this lcVal not set on Canon D30  					return BUNDLE["EXTERNAL_FLASH"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetFlashModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["NO_FLASH_FIRED"];  				case 1 :  					return BUNDLE["AUTO"];  				case 2 :  					return BUNDLE["ON"];  				case 3 :  					return BUNDLE["RED_EYE_REDUCTION"];  				case 4 :  					return BUNDLE["SLOW_SYNCHRO"];  				case 5 :  					return BUNDLE["AUTO_AND_RED_EYE_REDUCTION"];  				case 6 :  					return BUNDLE["ON_AND_RED_EYE_REDUCTION"];  				case 16 :  					// note: this lcVal not set on Canon D30  					return BUNDLE["EXTERNAL_FLASH"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetSelfTimerDelayDescription,The following statement contains a magic number: return BUNDLE["SELF_TIMER_DELAY"' ((double) lcVal * 0.1d).ToString()];
Magic Number,com.drew.metadata.exif,CanonDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CanonDescriptor.cs,GetMacroModeDescription,The following statement contains a magic number: switch (lcVal)   			{                  case 0:                      return BUNDLE["OFF"];  				case 1 :  					return BUNDLE["MACRO"];  				case 2 :  					return BUNDLE["NORMAL"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetCcdSensitivityDescription,The following statement contains a magic number: switch (lcVal)   			{  					// these four for QV3000  				case 64 :  					return BUNDLE["NORMAL"];  				case 125 :  					return BUNDLE["CCD_P_1"];  				case 250 :  					return BUNDLE["CCD_P_2"];  				case 244 :  					return BUNDLE["CCD_P_3"];  					// these two for QV8000/2000  				case 80 :  					return BUNDLE["NORMAL"];  				case 100 :  					return BUNDLE["HIGH"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetCcdSensitivityDescription,The following statement contains a magic number: switch (lcVal)   			{  					// these four for QV3000  				case 64 :  					return BUNDLE["NORMAL"];  				case 125 :  					return BUNDLE["CCD_P_1"];  				case 250 :  					return BUNDLE["CCD_P_2"];  				case 244 :  					return BUNDLE["CCD_P_3"];  					// these two for QV8000/2000  				case 80 :  					return BUNDLE["NORMAL"];  				case 100 :  					return BUNDLE["HIGH"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetCcdSensitivityDescription,The following statement contains a magic number: switch (lcVal)   			{  					// these four for QV3000  				case 64 :  					return BUNDLE["NORMAL"];  				case 125 :  					return BUNDLE["CCD_P_1"];  				case 250 :  					return BUNDLE["CCD_P_2"];  				case 244 :  					return BUNDLE["CCD_P_3"];  					// these two for QV8000/2000  				case 80 :  					return BUNDLE["NORMAL"];  				case 100 :  					return BUNDLE["HIGH"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetCcdSensitivityDescription,The following statement contains a magic number: switch (lcVal)   			{  					// these four for QV3000  				case 64 :  					return BUNDLE["NORMAL"];  				case 125 :  					return BUNDLE["CCD_P_1"];  				case 250 :  					return BUNDLE["CCD_P_2"];  				case 244 :  					return BUNDLE["CCD_P_3"];  					// these two for QV8000/2000  				case 80 :  					return BUNDLE["NORMAL"];  				case 100 :  					return BUNDLE["HIGH"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetCcdSensitivityDescription,The following statement contains a magic number: switch (lcVal)   			{  					// these four for QV3000  				case 64 :  					return BUNDLE["NORMAL"];  				case 125 :  					return BUNDLE["CCD_P_1"];  				case 250 :  					return BUNDLE["CCD_P_2"];  				case 244 :  					return BUNDLE["CCD_P_3"];  					// these two for QV8000/2000  				case 80 :  					return BUNDLE["NORMAL"];  				case 100 :  					return BUNDLE["HIGH"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetCcdSensitivityDescription,The following statement contains a magic number: switch (lcVal)   			{  					// these four for QV3000  				case 64 :  					return BUNDLE["NORMAL"];  				case 125 :  					return BUNDLE["CCD_P_1"];  				case 250 :  					return BUNDLE["CCD_P_2"];  				case 244 :  					return BUNDLE["CCD_P_3"];  					// these two for QV8000/2000  				case 80 :  					return BUNDLE["NORMAL"];  				case 100 :  					return BUNDLE["HIGH"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetSaturationDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["NORMAL"];  				case 1 :  					return BUNDLE["LOW"];  				case 2 :  					return BUNDLE["HIGH"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetContrastDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["NORMAL"];  				case 1 :  					return BUNDLE["LOW"];  				case 2 :  					return BUNDLE["HIGH"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetSharpnessDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["NORMAL"];  				case 1 :  					return BUNDLE["SOFT"];;  				case 2 :  					return BUNDLE["HARD"];;  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["AUTO"];  				case 2 :  					return BUNDLE["TUNGSTEN"];  				case 3 :  					return BUNDLE["DAYLIGHT"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["SHADE"];  				case 129 :  					return BUNDLE["MANUAL"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["AUTO"];  				case 2 :  					return BUNDLE["TUNGSTEN"];  				case 3 :  					return BUNDLE["DAYLIGHT"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["SHADE"];  				case 129 :  					return BUNDLE["MANUAL"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["AUTO"];  				case 2 :  					return BUNDLE["TUNGSTEN"];  				case 3 :  					return BUNDLE["DAYLIGHT"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["SHADE"];  				case 129 :  					return BUNDLE["MANUAL"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["AUTO"];  				case 2 :  					return BUNDLE["TUNGSTEN"];  				case 3 :  					return BUNDLE["DAYLIGHT"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["SHADE"];  				case 129 :  					return BUNDLE["MANUAL"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["AUTO"];  				case 2 :  					return BUNDLE["TUNGSTEN"];  				case 3 :  					return BUNDLE["DAYLIGHT"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["SHADE"];  				case 129 :  					return BUNDLE["MANUAL"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetFlashIntensityDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 11 :  					return BUNDLE["WEAK"];  				case 13 :  					return BUNDLE["NORMAL"];  				case 15 :  					return BUNDLE["STRONG"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetFlashIntensityDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 11 :  					return BUNDLE["WEAK"];  				case 13 :  					return BUNDLE["NORMAL"];  				case 15 :  					return BUNDLE["STRONG"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetFlashIntensityDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 11 :  					return BUNDLE["WEAK"];  				case 13 :  					return BUNDLE["NORMAL"];  				case 15 :  					return BUNDLE["STRONG"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetFlashModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["AUTO"];  				case 2 :  					return BUNDLE["ON"];  				case 3 :  					return BUNDLE["OFF"];  				case 4 :                      // this documented as additional value for off here:                      // http://www.ozhiker.com/electronics/pjmt/jpeg_info/casio_mn.html  					return BUNDLE["RED_EYE_REDUCTION"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetFlashModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["AUTO"];  				case 2 :  					return BUNDLE["ON"];  				case 3 :  					return BUNDLE["OFF"];  				case 4 :                      // this documented as additional value for off here:                      // http://www.ozhiker.com/electronics/pjmt/jpeg_info/casio_mn.html  					return BUNDLE["RED_EYE_REDUCTION"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetFlashModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["AUTO"];  				case 2 :  					return BUNDLE["ON"];  				case 3 :  					return BUNDLE["OFF"];  				case 4 :                      // this documented as additional value for off here:                      // http://www.ozhiker.com/electronics/pjmt/jpeg_info/casio_mn.html  					return BUNDLE["RED_EYE_REDUCTION"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetFocusingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 2 :  					return BUNDLE["MACRO"];  				case 3 :  					return BUNDLE["AUTO_FOCUS"];  				case 4 :  					return BUNDLE["MANUAL_FOCUS"];  				case 5 :  					return BUNDLE["INFINITY"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetFocusingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 2 :  					return BUNDLE["MACRO"];  				case 3 :  					return BUNDLE["AUTO_FOCUS"];  				case 4 :  					return BUNDLE["MANUAL_FOCUS"];  				case 5 :  					return BUNDLE["INFINITY"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetFocusingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 2 :  					return BUNDLE["MACRO"];  				case 3 :  					return BUNDLE["AUTO_FOCUS"];  				case 4 :  					return BUNDLE["MANUAL_FOCUS"];  				case 5 :  					return BUNDLE["INFINITY"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetFocusingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 2 :  					return BUNDLE["MACRO"];  				case 3 :  					return BUNDLE["AUTO_FOCUS"];  				case 4 :  					return BUNDLE["MANUAL_FOCUS"];  				case 5 :  					return BUNDLE["INFINITY"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetQualityDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["ECONOMY"];  				case 2 :  					return BUNDLE["NORMAL"];  				case 3 :  					return BUNDLE["FINE"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetQualityDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["ECONOMY"];  				case 2 :  					return BUNDLE["NORMAL"];  				case 3 :  					return BUNDLE["FINE"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetFocussingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 2 :  					return BUNDLE["MACRO"];  				case 3 :  					return BUNDLE["AUTO_FOCUS"];  				case 4 :  					return BUNDLE["MANUAL_FOCUS"];  				case 5 :  					return BUNDLE["INFINITY"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetFocussingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 2 :  					return BUNDLE["MACRO"];  				case 3 :  					return BUNDLE["AUTO_FOCUS"];  				case 4 :  					return BUNDLE["MANUAL_FOCUS"];  				case 5 :  					return BUNDLE["INFINITY"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetFocussingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 2 :  					return BUNDLE["MACRO"];  				case 3 :  					return BUNDLE["AUTO_FOCUS"];  				case 4 :  					return BUNDLE["MANUAL_FOCUS"];  				case 5 :  					return BUNDLE["INFINITY"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetFocussingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 2 :  					return BUNDLE["MACRO"];  				case 3 :  					return BUNDLE["AUTO_FOCUS"];  				case 4 :  					return BUNDLE["MANUAL_FOCUS"];  				case 5 :  					return BUNDLE["INFINITY"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetRecordingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["SINGLE_SHUTTER"];  				case 2 :  					return BUNDLE["PANORAMA"];  				case 3 :  					return BUNDLE["NIGHT_SCENE"];  				case 4 :  					return BUNDLE["PORTRAIT"];  				case 5 :  					return BUNDLE["LANDSCAPE"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetRecordingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["SINGLE_SHUTTER"];  				case 2 :  					return BUNDLE["PANORAMA"];  				case 3 :  					return BUNDLE["NIGHT_SCENE"];  				case 4 :  					return BUNDLE["PORTRAIT"];  				case 5 :  					return BUNDLE["LANDSCAPE"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetRecordingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["SINGLE_SHUTTER"];  				case 2 :  					return BUNDLE["PANORAMA"];  				case 3 :  					return BUNDLE["NIGHT_SCENE"];  				case 4 :  					return BUNDLE["PORTRAIT"];  				case 5 :  					return BUNDLE["LANDSCAPE"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType1Descriptor.cs,GetRecordingModeDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["SINGLE_SHUTTER"];  				case 2 :  					return BUNDLE["PANORAMA"];  				case 3 :  					return BUNDLE["NIGHT_SCENE"];  				case 4 :  					return BUNDLE["PORTRAIT"];  				case 5 :  					return BUNDLE["LANDSCAPE"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetFocusMode2Description,The following statement contains a magic number: switch (lcVal)              {                  case 1:                      return BUNDLE["FIXATION"];                  case 6:                      return BUNDLE["MULTI_AREA_FOCUS"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetQualityDescription,The following statement contains a magic number: switch (lcVal)              {                  case 3:                      return BUNDLE["FINE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetRecordModeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 2:                      return BUNDLE["NORMAL"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetWhiteBalance2Description,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["MANUAL"];                  case 1:                      return BUNDLE["AUTO"]; // unsure about this                  case 4:                      return BUNDLE["FLASH"]; // unsure about this                  case 12:                      return BUNDLE["FLASH"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetWhiteBalance2Description,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["MANUAL"];                  case 1:                      return BUNDLE["AUTO"]; // unsure about this                  case 4:                      return BUNDLE["FLASH"]; // unsure about this                  case 12:                      return BUNDLE["FLASH"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetSharpnessDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return "-1";                  case 1:                      return BUNDLE["NORMAL"];                  case 2:                      return "+1";                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetContrastDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return "-1";                  case 1:                      return BUNDLE["NORMAL"];                  case 2:                      return "+1";                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetSaturationDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return "-1";                  case 1:                      return BUNDLE["NORMAL"];                  case 2:                      return "+1";                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetFocalLengthDescription,The following statement contains a magic number: return BUNDLE["DISTANCE_MM"' (lcVal / 10.0).ToString()];
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetWhiteBalance1Description,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["AUTO"];                  case 1:                      return BUNDLE["DAYLIGHT"];                  case 2:                      return BUNDLE["SHADE"];                  case 3:                      return BUNDLE["TUNGSTEN"];                  case 4:                      return BUNDLE["FLUORESCENT"];                  case 5:                      return BUNDLE["MANUAL"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetWhiteBalance1Description,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["AUTO"];                  case 1:                      return BUNDLE["DAYLIGHT"];                  case 2:                      return BUNDLE["SHADE"];                  case 3:                      return BUNDLE["TUNGSTEN"];                  case 4:                      return BUNDLE["FLUORESCENT"];                  case 5:                      return BUNDLE["MANUAL"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetWhiteBalance1Description,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["AUTO"];                  case 1:                      return BUNDLE["DAYLIGHT"];                  case 2:                      return BUNDLE["SHADE"];                  case 3:                      return BUNDLE["TUNGSTEN"];                  case 4:                      return BUNDLE["FLUORESCENT"];                  case 5:                      return BUNDLE["MANUAL"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetWhiteBalance1Description,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["AUTO"];                  case 1:                      return BUNDLE["DAYLIGHT"];                  case 2:                      return BUNDLE["SHADE"];                  case 3:                      return BUNDLE["TUNGSTEN"];                  case 4:                      return BUNDLE["FLUORESCENT"];                  case 5:                      return BUNDLE["MANUAL"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetIsoSensitivityDescription,The following statement contains a magic number: switch (lcVal)              {                  case 3:                      return BUNDLE["ISO"' "50"];                  case 4:                      return BUNDLE["ISO"'"64"];                  case 6:                      return BUNDLE["ISO"'"100"];                  case 9:                      return BUNDLE["ISO"'"200"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetIsoSensitivityDescription,The following statement contains a magic number: switch (lcVal)              {                  case 3:                      return BUNDLE["ISO"' "50"];                  case 4:                      return BUNDLE["ISO"'"64"];                  case 6:                      return BUNDLE["ISO"'"100"];                  case 9:                      return BUNDLE["ISO"'"200"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetIsoSensitivityDescription,The following statement contains a magic number: switch (lcVal)              {                  case 3:                      return BUNDLE["ISO"' "50"];                  case 4:                      return BUNDLE["ISO"'"64"];                  case 6:                      return BUNDLE["ISO"'"100"];                  case 9:                      return BUNDLE["ISO"'"200"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetIsoSensitivityDescription,The following statement contains a magic number: switch (lcVal)              {                  case 3:                      return BUNDLE["ISO"' "50"];                  case 4:                      return BUNDLE["ISO"'"64"];                  case 6:                      return BUNDLE["ISO"'"100"];                  case 9:                      return BUNDLE["ISO"'"200"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetImageSizeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0: return BUNDLE["PIXELS"' "640 x 480"];                  case 4: return BUNDLE["PIXELS"' "1600 x 1200"];                  case 5: return BUNDLE["PIXELS"' "2048 x 1536"];                  case 20: return BUNDLE["PIXELS"' "2288 x 1712"];                  case 21: return BUNDLE["PIXELS"' "2592 x 1944"];                  case 22: return BUNDLE["PIXELS"' "2304 x 1728"];                  case 36: return BUNDLE["PIXELS"' "3008 x 2008"];                  default: return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetImageSizeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0: return BUNDLE["PIXELS"' "640 x 480"];                  case 4: return BUNDLE["PIXELS"' "1600 x 1200"];                  case 5: return BUNDLE["PIXELS"' "2048 x 1536"];                  case 20: return BUNDLE["PIXELS"' "2288 x 1712"];                  case 21: return BUNDLE["PIXELS"' "2592 x 1944"];                  case 22: return BUNDLE["PIXELS"' "2304 x 1728"];                  case 36: return BUNDLE["PIXELS"' "3008 x 2008"];                  default: return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetImageSizeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0: return BUNDLE["PIXELS"' "640 x 480"];                  case 4: return BUNDLE["PIXELS"' "1600 x 1200"];                  case 5: return BUNDLE["PIXELS"' "2048 x 1536"];                  case 20: return BUNDLE["PIXELS"' "2288 x 1712"];                  case 21: return BUNDLE["PIXELS"' "2592 x 1944"];                  case 22: return BUNDLE["PIXELS"' "2304 x 1728"];                  case 36: return BUNDLE["PIXELS"' "3008 x 2008"];                  default: return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetImageSizeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0: return BUNDLE["PIXELS"' "640 x 480"];                  case 4: return BUNDLE["PIXELS"' "1600 x 1200"];                  case 5: return BUNDLE["PIXELS"' "2048 x 1536"];                  case 20: return BUNDLE["PIXELS"' "2288 x 1712"];                  case 21: return BUNDLE["PIXELS"' "2592 x 1944"];                  case 22: return BUNDLE["PIXELS"' "2304 x 1728"];                  case 36: return BUNDLE["PIXELS"' "3008 x 2008"];                  default: return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetImageSizeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0: return BUNDLE["PIXELS"' "640 x 480"];                  case 4: return BUNDLE["PIXELS"' "1600 x 1200"];                  case 5: return BUNDLE["PIXELS"' "2048 x 1536"];                  case 20: return BUNDLE["PIXELS"' "2288 x 1712"];                  case 21: return BUNDLE["PIXELS"' "2592 x 1944"];                  case 22: return BUNDLE["PIXELS"' "2304 x 1728"];                  case 36: return BUNDLE["PIXELS"' "3008 x 2008"];                  default: return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetImageSizeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0: return BUNDLE["PIXELS"' "640 x 480"];                  case 4: return BUNDLE["PIXELS"' "1600 x 1200"];                  case 5: return BUNDLE["PIXELS"' "2048 x 1536"];                  case 20: return BUNDLE["PIXELS"' "2288 x 1712"];                  case 21: return BUNDLE["PIXELS"' "2592 x 1944"];                  case 22: return BUNDLE["PIXELS"' "2304 x 1728"];                  case 36: return BUNDLE["PIXELS"' "3008 x 2008"];                  default: return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetQualityModeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 1:                      return BUNDLE["FINE"];                  case 2:                      return BUNDLE["SUPERFINE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,CasioType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\CasioType2Descriptor.cs,GetThumbnailDimensionsDescription,The following statement contains a magic number: lcDimensions.Length != 2
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetExposureModeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["AUTO_EXPOSURE"];                  case 1:                      return BUNDLE["MANUAL_EXPOSURE"];                  case 2:                      return BUNDLE["AUTO_BRACKET"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetSceneCaptureTypeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["STANDARD"];                  case 1:                      return BUNDLE["LANDSCAPE"];                  case 2:                      return BUNDLE["PORTRAIT"];                  case 3:                      return BUNDLE["NIGHT_SCENE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetSceneCaptureTypeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["STANDARD"];                  case 1:                      return BUNDLE["LANDSCAPE"];                  case 2:                      return BUNDLE["PORTRAIT"];                  case 3:                      return BUNDLE["NIGHT_SCENE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetGainControlDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["NONE"];                  case 1:                      return BUNDLE["LOW_GAIN_UP"];                  case 2:                      return BUNDLE["LOW_GAIN_DOWN"];                  case 3:                      return BUNDLE["HIGH_GAIN_UP"];                  case 4:                      return BUNDLE["HIGH_GAIN_DOWN"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetGainControlDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["NONE"];                  case 1:                      return BUNDLE["LOW_GAIN_UP"];                  case 2:                      return BUNDLE["LOW_GAIN_DOWN"];                  case 3:                      return BUNDLE["HIGH_GAIN_UP"];                  case 4:                      return BUNDLE["HIGH_GAIN_DOWN"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetGainControlDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["NONE"];                  case 1:                      return BUNDLE["LOW_GAIN_UP"];                  case 2:                      return BUNDLE["LOW_GAIN_DOWN"];                  case 3:                      return BUNDLE["HIGH_GAIN_UP"];                  case 4:                      return BUNDLE["HIGH_GAIN_DOWN"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetContrastDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["NONE"];                  case 1:                      return BUNDLE["SOFT"];                  case 2:                      return BUNDLE["HARD"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,getSubfileTypeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 1: return BUNDLE["FULL_RESOLUTION_IMAGE"];                  case 2: return BUNDLE["REDUCED_RESOLUTION_IMAGE"];                  case 3: return BUNDLE["SINGLE_PAGE_OF_MULTI_PAGE_IMAGE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,getSubfileTypeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 1: return BUNDLE["FULL_RESOLUTION_IMAGE"];                  case 2: return BUNDLE["REDUCED_RESOLUTION_IMAGE"];                  case 3: return BUNDLE["SINGLE_PAGE_OF_MULTI_PAGE_IMAGE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetNewSubfileTypeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 1: return BUNDLE["FULL_RESOLUTION_IMAGE"];                  case 2: return BUNDLE["REDUCED_RESOLUTION_IMAGE"];                  case 3: return BUNDLE["SINGLE_PAGE_OF_MULTI_PAGE_REDUCED_RESOLUTION_IMAGE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["TRANSPARENCY_MASK_OF_REDUCED_RESOLUTION_IMAGE"];                  case 6: return BUNDLE["TRANSPARENCY_MASK_OF_MULTI_PAGE_IMAGE"];                  case 7: return BUNDLE["TRANSPARENCY_MASK_OF_REDUCED_RESOLUTION_MULTI_PAGE_IMAGE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetNewSubfileTypeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 1: return BUNDLE["FULL_RESOLUTION_IMAGE"];                  case 2: return BUNDLE["REDUCED_RESOLUTION_IMAGE"];                  case 3: return BUNDLE["SINGLE_PAGE_OF_MULTI_PAGE_REDUCED_RESOLUTION_IMAGE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["TRANSPARENCY_MASK_OF_REDUCED_RESOLUTION_IMAGE"];                  case 6: return BUNDLE["TRANSPARENCY_MASK_OF_MULTI_PAGE_IMAGE"];                  case 7: return BUNDLE["TRANSPARENCY_MASK_OF_REDUCED_RESOLUTION_MULTI_PAGE_IMAGE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetNewSubfileTypeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 1: return BUNDLE["FULL_RESOLUTION_IMAGE"];                  case 2: return BUNDLE["REDUCED_RESOLUTION_IMAGE"];                  case 3: return BUNDLE["SINGLE_PAGE_OF_MULTI_PAGE_REDUCED_RESOLUTION_IMAGE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["TRANSPARENCY_MASK_OF_REDUCED_RESOLUTION_IMAGE"];                  case 6: return BUNDLE["TRANSPARENCY_MASK_OF_MULTI_PAGE_IMAGE"];                  case 7: return BUNDLE["TRANSPARENCY_MASK_OF_REDUCED_RESOLUTION_MULTI_PAGE_IMAGE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetNewSubfileTypeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 1: return BUNDLE["FULL_RESOLUTION_IMAGE"];                  case 2: return BUNDLE["REDUCED_RESOLUTION_IMAGE"];                  case 3: return BUNDLE["SINGLE_PAGE_OF_MULTI_PAGE_REDUCED_RESOLUTION_IMAGE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["TRANSPARENCY_MASK_OF_REDUCED_RESOLUTION_IMAGE"];                  case 6: return BUNDLE["TRANSPARENCY_MASK_OF_MULTI_PAGE_IMAGE"];                  case 7: return BUNDLE["TRANSPARENCY_MASK_OF_REDUCED_RESOLUTION_MULTI_PAGE_IMAGE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetNewSubfileTypeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 1: return BUNDLE["FULL_RESOLUTION_IMAGE"];                  case 2: return BUNDLE["REDUCED_RESOLUTION_IMAGE"];                  case 3: return BUNDLE["SINGLE_PAGE_OF_MULTI_PAGE_REDUCED_RESOLUTION_IMAGE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["TRANSPARENCY_MASK_OF_REDUCED_RESOLUTION_IMAGE"];                  case 6: return BUNDLE["TRANSPARENCY_MASK_OF_MULTI_PAGE_IMAGE"];                  case 7: return BUNDLE["TRANSPARENCY_MASK_OF_REDUCED_RESOLUTION_MULTI_PAGE_IMAGE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetNewSubfileTypeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 1: return BUNDLE["FULL_RESOLUTION_IMAGE"];                  case 2: return BUNDLE["REDUCED_RESOLUTION_IMAGE"];                  case 3: return BUNDLE["SINGLE_PAGE_OF_MULTI_PAGE_REDUCED_RESOLUTION_IMAGE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["TRANSPARENCY_MASK_OF_REDUCED_RESOLUTION_IMAGE"];                  case 6: return BUNDLE["TRANSPARENCY_MASK_OF_MULTI_PAGE_IMAGE"];                  case 7: return BUNDLE["TRANSPARENCY_MASK_OF_REDUCED_RESOLUTION_MULTI_PAGE_IMAGE"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetThresholdingDescription,The following statement contains a magic number: switch (lcVal)              {                  case 1: return BUNDLE["NO_DITHERING_OR_HALFTONING"];                  case 2: return BUNDLE["ORDERED_DITHER_OR_HALFTONE"];                  case 3: return BUNDLE["RANDOMIZED_DITHER"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetThresholdingDescription,The following statement contains a magic number: switch (lcVal)              {                  case 1: return BUNDLE["NO_DITHERING_OR_HALFTONING"];                  case 2: return BUNDLE["ORDERED_DITHER_OR_HALFTONE"];                  case 3: return BUNDLE["RANDOMIZED_DITHER"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetFillOrderDescription,The following statement contains a magic number: switch (lcVal)              {                  case 1: return BUNDLE["NORMAL"];                  case 2: return BUNDLE["REVERSED"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetSubjectDistanceRangeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 1:                      return BUNDLE["MACRO"];                  case 2:                      return BUNDLE["CLOSE_VIEW"];                  case 3:                      return BUNDLE["DISTANT_VIEW"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetSubjectDistanceRangeDescription,The following statement contains a magic number: switch (lcVal)              {                  case 1:                      return BUNDLE["MACRO"];                  case 2:                      return BUNDLE["CLOSE_VIEW"];                  case 3:                      return BUNDLE["DISTANT_VIEW"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetSharpnessDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["NONE"];                  case 1:                      return BUNDLE["LOW"];                  case 2:                      return BUNDLE["HARD"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetSaturationDescription,The following statement contains a magic number: switch (lcVal)              {                  case 0:                      return BUNDLE["NONE"];                  case 1:                      return BUNDLE["LOW_SATURATION"];                  case 2:                      return BUNDLE["HIGH_SATURATION"];                  default:                      return BUNDLE["UNKNOWN"' lcVal.ToString()];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetIsoEquivalentDescription,The following statement contains a magic number: lcIsoEquiv *= 200;
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetIsoEquivalentDescription,The following statement contains a magic number: lcIsoEquiv < 50
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetReferenceBlackWhiteDescription,The following statement contains a magic number: string[] lcSPos = new string[] {lcInts[0].ToString()' lcInts[1].ToString()'lcInts[2].ToString()'lcInts[3].ToString()'lcInts[4].ToString()'lcInts[5].ToString()};
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetReferenceBlackWhiteDescription,The following statement contains a magic number: string[] lcSPos = new string[] {lcInts[0].ToString()' lcInts[1].ToString()'lcInts[2].ToString()'lcInts[3].ToString()'lcInts[4].ToString()'lcInts[5].ToString()};
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetReferenceBlackWhiteDescription,The following statement contains a magic number: string[] lcSPos = new string[] {lcInts[0].ToString()' lcInts[1].ToString()'lcInts[2].ToString()'lcInts[3].ToString()'lcInts[4].ToString()'lcInts[5].ToString()};
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetReferenceBlackWhiteDescription,The following statement contains a magic number: string[] lcSPos = new string[] {lcInts[0].ToString()' lcInts[1].ToString()'lcInts[2].ToString()'lcInts[3].ToString()'lcInts[4].ToString()'lcInts[5].ToString()};
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetFileSourceDescription,The following statement contains a magic number: lcFileSource == 3
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetMaxApertureValueDescription,The following statement contains a magic number: double lcRootTwo = Math.Sqrt(2);
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetApertureValueDescription,The following statement contains a magic number: double lcRootTwo = Math.Sqrt(2);
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetExposureProgramDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["MANUAL_CONTROL"];  				case 2 :  					return BUNDLE["PROGRAM_NORMAL"];  				case 3 :  					return BUNDLE["APERTURE_PRIORITY"];  				case 4 :  					return BUNDLE["SHUTTER_PRIORITY"];  				case 5 :  					return BUNDLE["PROGRAM_CREATIVE"];  				case 6 :  					return BUNDLE["PROGRAM_ACTION"];  				case 7 :  					return BUNDLE["PORTRAIT_MODE"];  				case 8 :  					return BUNDLE["LANDSCAPE_MODE"];  				default :  					return BUNDLE["UNKNOWN_PROGRAM"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetExposureProgramDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["MANUAL_CONTROL"];  				case 2 :  					return BUNDLE["PROGRAM_NORMAL"];  				case 3 :  					return BUNDLE["APERTURE_PRIORITY"];  				case 4 :  					return BUNDLE["SHUTTER_PRIORITY"];  				case 5 :  					return BUNDLE["PROGRAM_CREATIVE"];  				case 6 :  					return BUNDLE["PROGRAM_ACTION"];  				case 7 :  					return BUNDLE["PORTRAIT_MODE"];  				case 8 :  					return BUNDLE["LANDSCAPE_MODE"];  				default :  					return BUNDLE["UNKNOWN_PROGRAM"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetExposureProgramDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["MANUAL_CONTROL"];  				case 2 :  					return BUNDLE["PROGRAM_NORMAL"];  				case 3 :  					return BUNDLE["APERTURE_PRIORITY"];  				case 4 :  					return BUNDLE["SHUTTER_PRIORITY"];  				case 5 :  					return BUNDLE["PROGRAM_CREATIVE"];  				case 6 :  					return BUNDLE["PROGRAM_ACTION"];  				case 7 :  					return BUNDLE["PORTRAIT_MODE"];  				case 8 :  					return BUNDLE["LANDSCAPE_MODE"];  				default :  					return BUNDLE["UNKNOWN_PROGRAM"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetExposureProgramDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["MANUAL_CONTROL"];  				case 2 :  					return BUNDLE["PROGRAM_NORMAL"];  				case 3 :  					return BUNDLE["APERTURE_PRIORITY"];  				case 4 :  					return BUNDLE["SHUTTER_PRIORITY"];  				case 5 :  					return BUNDLE["PROGRAM_CREATIVE"];  				case 6 :  					return BUNDLE["PROGRAM_ACTION"];  				case 7 :  					return BUNDLE["PORTRAIT_MODE"];  				case 8 :  					return BUNDLE["LANDSCAPE_MODE"];  				default :  					return BUNDLE["UNKNOWN_PROGRAM"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetExposureProgramDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["MANUAL_CONTROL"];  				case 2 :  					return BUNDLE["PROGRAM_NORMAL"];  				case 3 :  					return BUNDLE["APERTURE_PRIORITY"];  				case 4 :  					return BUNDLE["SHUTTER_PRIORITY"];  				case 5 :  					return BUNDLE["PROGRAM_CREATIVE"];  				case 6 :  					return BUNDLE["PROGRAM_ACTION"];  				case 7 :  					return BUNDLE["PORTRAIT_MODE"];  				case 8 :  					return BUNDLE["LANDSCAPE_MODE"];  				default :  					return BUNDLE["UNKNOWN_PROGRAM"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetExposureProgramDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["MANUAL_CONTROL"];  				case 2 :  					return BUNDLE["PROGRAM_NORMAL"];  				case 3 :  					return BUNDLE["APERTURE_PRIORITY"];  				case 4 :  					return BUNDLE["SHUTTER_PRIORITY"];  				case 5 :  					return BUNDLE["PROGRAM_CREATIVE"];  				case 6 :  					return BUNDLE["PROGRAM_ACTION"];  				case 7 :  					return BUNDLE["PORTRAIT_MODE"];  				case 8 :  					return BUNDLE["LANDSCAPE_MODE"];  				default :  					return BUNDLE["UNKNOWN_PROGRAM"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetExposureProgramDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 1 :  					return BUNDLE["MANUAL_CONTROL"];  				case 2 :  					return BUNDLE["PROGRAM_NORMAL"];  				case 3 :  					return BUNDLE["APERTURE_PRIORITY"];  				case 4 :  					return BUNDLE["SHUTTER_PRIORITY"];  				case 5 :  					return BUNDLE["PROGRAM_CREATIVE"];  				case 6 :  					return BUNDLE["PROGRAM_ACTION"];  				case 7 :  					return BUNDLE["PORTRAIT_MODE"];  				case 8 :  					return BUNDLE["LANDSCAPE_MODE"];  				default :  					return BUNDLE["UNKNOWN_PROGRAM"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetYCbCrSubsamplingDescription,The following statement contains a magic number: lcPositions[0] == 2 && lcPositions[1] == 1
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetPlanarConfigurationDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_PLANAR_CONFIGURATION))   			{  				case 1 :  					return BUNDLE["CHUNKY"];  				case 2 :  					return BUNDLE["SEPARATE"];  				default :  					return BUNDLE["UNKNOWN_CONFIGURATION"];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetPhotometricInterpretationDescription,The following statement contains a magic number: switch (base.directory                  .GetInt(ExifDirectory.TAG_PHOTOMETRIC_INTERPRETATION))              {                  case 0: return BUNDLE["WHITE_IS_ZERO"];                  case 1: return BUNDLE["BLACK_IS_ZERO"];                  case 2: return BUNDLE["RGB"];                  case 3: return BUNDLE["RGB_PALETTE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["CMYK"];                  case 6: return BUNDLE["YCBCR"];                  case 8: return BUNDLE["CIELAB"];                  case 9: return BUNDLE["ICCLAB"];                  case 10: return BUNDLE["ITULAB"];                  case 32803: return BUNDLE["COLOR_FILTER_ARRAY"];                  case 32844: return BUNDLE["PIXAR_LOGL"];                  case 32845: return BUNDLE["PIXAR_LOGLUV"];                  case 32892: return BUNDLE["LINEAR_RAW"];                  default: return BUNDLE["UNKNOWN_COLOR_SPACE"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetPhotometricInterpretationDescription,The following statement contains a magic number: switch (base.directory                  .GetInt(ExifDirectory.TAG_PHOTOMETRIC_INTERPRETATION))              {                  case 0: return BUNDLE["WHITE_IS_ZERO"];                  case 1: return BUNDLE["BLACK_IS_ZERO"];                  case 2: return BUNDLE["RGB"];                  case 3: return BUNDLE["RGB_PALETTE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["CMYK"];                  case 6: return BUNDLE["YCBCR"];                  case 8: return BUNDLE["CIELAB"];                  case 9: return BUNDLE["ICCLAB"];                  case 10: return BUNDLE["ITULAB"];                  case 32803: return BUNDLE["COLOR_FILTER_ARRAY"];                  case 32844: return BUNDLE["PIXAR_LOGL"];                  case 32845: return BUNDLE["PIXAR_LOGLUV"];                  case 32892: return BUNDLE["LINEAR_RAW"];                  default: return BUNDLE["UNKNOWN_COLOR_SPACE"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetPhotometricInterpretationDescription,The following statement contains a magic number: switch (base.directory                  .GetInt(ExifDirectory.TAG_PHOTOMETRIC_INTERPRETATION))              {                  case 0: return BUNDLE["WHITE_IS_ZERO"];                  case 1: return BUNDLE["BLACK_IS_ZERO"];                  case 2: return BUNDLE["RGB"];                  case 3: return BUNDLE["RGB_PALETTE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["CMYK"];                  case 6: return BUNDLE["YCBCR"];                  case 8: return BUNDLE["CIELAB"];                  case 9: return BUNDLE["ICCLAB"];                  case 10: return BUNDLE["ITULAB"];                  case 32803: return BUNDLE["COLOR_FILTER_ARRAY"];                  case 32844: return BUNDLE["PIXAR_LOGL"];                  case 32845: return BUNDLE["PIXAR_LOGLUV"];                  case 32892: return BUNDLE["LINEAR_RAW"];                  default: return BUNDLE["UNKNOWN_COLOR_SPACE"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetPhotometricInterpretationDescription,The following statement contains a magic number: switch (base.directory                  .GetInt(ExifDirectory.TAG_PHOTOMETRIC_INTERPRETATION))              {                  case 0: return BUNDLE["WHITE_IS_ZERO"];                  case 1: return BUNDLE["BLACK_IS_ZERO"];                  case 2: return BUNDLE["RGB"];                  case 3: return BUNDLE["RGB_PALETTE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["CMYK"];                  case 6: return BUNDLE["YCBCR"];                  case 8: return BUNDLE["CIELAB"];                  case 9: return BUNDLE["ICCLAB"];                  case 10: return BUNDLE["ITULAB"];                  case 32803: return BUNDLE["COLOR_FILTER_ARRAY"];                  case 32844: return BUNDLE["PIXAR_LOGL"];                  case 32845: return BUNDLE["PIXAR_LOGLUV"];                  case 32892: return BUNDLE["LINEAR_RAW"];                  default: return BUNDLE["UNKNOWN_COLOR_SPACE"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetPhotometricInterpretationDescription,The following statement contains a magic number: switch (base.directory                  .GetInt(ExifDirectory.TAG_PHOTOMETRIC_INTERPRETATION))              {                  case 0: return BUNDLE["WHITE_IS_ZERO"];                  case 1: return BUNDLE["BLACK_IS_ZERO"];                  case 2: return BUNDLE["RGB"];                  case 3: return BUNDLE["RGB_PALETTE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["CMYK"];                  case 6: return BUNDLE["YCBCR"];                  case 8: return BUNDLE["CIELAB"];                  case 9: return BUNDLE["ICCLAB"];                  case 10: return BUNDLE["ITULAB"];                  case 32803: return BUNDLE["COLOR_FILTER_ARRAY"];                  case 32844: return BUNDLE["PIXAR_LOGL"];                  case 32845: return BUNDLE["PIXAR_LOGLUV"];                  case 32892: return BUNDLE["LINEAR_RAW"];                  default: return BUNDLE["UNKNOWN_COLOR_SPACE"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetPhotometricInterpretationDescription,The following statement contains a magic number: switch (base.directory                  .GetInt(ExifDirectory.TAG_PHOTOMETRIC_INTERPRETATION))              {                  case 0: return BUNDLE["WHITE_IS_ZERO"];                  case 1: return BUNDLE["BLACK_IS_ZERO"];                  case 2: return BUNDLE["RGB"];                  case 3: return BUNDLE["RGB_PALETTE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["CMYK"];                  case 6: return BUNDLE["YCBCR"];                  case 8: return BUNDLE["CIELAB"];                  case 9: return BUNDLE["ICCLAB"];                  case 10: return BUNDLE["ITULAB"];                  case 32803: return BUNDLE["COLOR_FILTER_ARRAY"];                  case 32844: return BUNDLE["PIXAR_LOGL"];                  case 32845: return BUNDLE["PIXAR_LOGLUV"];                  case 32892: return BUNDLE["LINEAR_RAW"];                  default: return BUNDLE["UNKNOWN_COLOR_SPACE"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetPhotometricInterpretationDescription,The following statement contains a magic number: switch (base.directory                  .GetInt(ExifDirectory.TAG_PHOTOMETRIC_INTERPRETATION))              {                  case 0: return BUNDLE["WHITE_IS_ZERO"];                  case 1: return BUNDLE["BLACK_IS_ZERO"];                  case 2: return BUNDLE["RGB"];                  case 3: return BUNDLE["RGB_PALETTE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["CMYK"];                  case 6: return BUNDLE["YCBCR"];                  case 8: return BUNDLE["CIELAB"];                  case 9: return BUNDLE["ICCLAB"];                  case 10: return BUNDLE["ITULAB"];                  case 32803: return BUNDLE["COLOR_FILTER_ARRAY"];                  case 32844: return BUNDLE["PIXAR_LOGL"];                  case 32845: return BUNDLE["PIXAR_LOGLUV"];                  case 32892: return BUNDLE["LINEAR_RAW"];                  default: return BUNDLE["UNKNOWN_COLOR_SPACE"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetPhotometricInterpretationDescription,The following statement contains a magic number: switch (base.directory                  .GetInt(ExifDirectory.TAG_PHOTOMETRIC_INTERPRETATION))              {                  case 0: return BUNDLE["WHITE_IS_ZERO"];                  case 1: return BUNDLE["BLACK_IS_ZERO"];                  case 2: return BUNDLE["RGB"];                  case 3: return BUNDLE["RGB_PALETTE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["CMYK"];                  case 6: return BUNDLE["YCBCR"];                  case 8: return BUNDLE["CIELAB"];                  case 9: return BUNDLE["ICCLAB"];                  case 10: return BUNDLE["ITULAB"];                  case 32803: return BUNDLE["COLOR_FILTER_ARRAY"];                  case 32844: return BUNDLE["PIXAR_LOGL"];                  case 32845: return BUNDLE["PIXAR_LOGLUV"];                  case 32892: return BUNDLE["LINEAR_RAW"];                  default: return BUNDLE["UNKNOWN_COLOR_SPACE"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetPhotometricInterpretationDescription,The following statement contains a magic number: switch (base.directory                  .GetInt(ExifDirectory.TAG_PHOTOMETRIC_INTERPRETATION))              {                  case 0: return BUNDLE["WHITE_IS_ZERO"];                  case 1: return BUNDLE["BLACK_IS_ZERO"];                  case 2: return BUNDLE["RGB"];                  case 3: return BUNDLE["RGB_PALETTE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["CMYK"];                  case 6: return BUNDLE["YCBCR"];                  case 8: return BUNDLE["CIELAB"];                  case 9: return BUNDLE["ICCLAB"];                  case 10: return BUNDLE["ITULAB"];                  case 32803: return BUNDLE["COLOR_FILTER_ARRAY"];                  case 32844: return BUNDLE["PIXAR_LOGL"];                  case 32845: return BUNDLE["PIXAR_LOGLUV"];                  case 32892: return BUNDLE["LINEAR_RAW"];                  default: return BUNDLE["UNKNOWN_COLOR_SPACE"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetPhotometricInterpretationDescription,The following statement contains a magic number: switch (base.directory                  .GetInt(ExifDirectory.TAG_PHOTOMETRIC_INTERPRETATION))              {                  case 0: return BUNDLE["WHITE_IS_ZERO"];                  case 1: return BUNDLE["BLACK_IS_ZERO"];                  case 2: return BUNDLE["RGB"];                  case 3: return BUNDLE["RGB_PALETTE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["CMYK"];                  case 6: return BUNDLE["YCBCR"];                  case 8: return BUNDLE["CIELAB"];                  case 9: return BUNDLE["ICCLAB"];                  case 10: return BUNDLE["ITULAB"];                  case 32803: return BUNDLE["COLOR_FILTER_ARRAY"];                  case 32844: return BUNDLE["PIXAR_LOGL"];                  case 32845: return BUNDLE["PIXAR_LOGLUV"];                  case 32892: return BUNDLE["LINEAR_RAW"];                  default: return BUNDLE["UNKNOWN_COLOR_SPACE"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetPhotometricInterpretationDescription,The following statement contains a magic number: switch (base.directory                  .GetInt(ExifDirectory.TAG_PHOTOMETRIC_INTERPRETATION))              {                  case 0: return BUNDLE["WHITE_IS_ZERO"];                  case 1: return BUNDLE["BLACK_IS_ZERO"];                  case 2: return BUNDLE["RGB"];                  case 3: return BUNDLE["RGB_PALETTE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["CMYK"];                  case 6: return BUNDLE["YCBCR"];                  case 8: return BUNDLE["CIELAB"];                  case 9: return BUNDLE["ICCLAB"];                  case 10: return BUNDLE["ITULAB"];                  case 32803: return BUNDLE["COLOR_FILTER_ARRAY"];                  case 32844: return BUNDLE["PIXAR_LOGL"];                  case 32845: return BUNDLE["PIXAR_LOGLUV"];                  case 32892: return BUNDLE["LINEAR_RAW"];                  default: return BUNDLE["UNKNOWN_COLOR_SPACE"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetPhotometricInterpretationDescription,The following statement contains a magic number: switch (base.directory                  .GetInt(ExifDirectory.TAG_PHOTOMETRIC_INTERPRETATION))              {                  case 0: return BUNDLE["WHITE_IS_ZERO"];                  case 1: return BUNDLE["BLACK_IS_ZERO"];                  case 2: return BUNDLE["RGB"];                  case 3: return BUNDLE["RGB_PALETTE"];                  case 4: return BUNDLE["TRANSPARENCY_MASK"];                  case 5: return BUNDLE["CMYK"];                  case 6: return BUNDLE["YCBCR"];                  case 8: return BUNDLE["CIELAB"];                  case 9: return BUNDLE["ICCLAB"];                  case 10: return BUNDLE["ITULAB"];                  case 32803: return BUNDLE["COLOR_FILTER_ARRAY"];                  case 32844: return BUNDLE["PIXAR_LOGL"];                  case 32845: return BUNDLE["PIXAR_LOGLUV"];                  case 32892: return BUNDLE["LINEAR_RAW"];                  default: return BUNDLE["UNKNOWN_COLOR_SPACE"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetCompressionDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_COMPRESSION))              {                  case 1: return BUNDLE["UNCOMPRESSED"];                  case 2: return BUNDLE["CCITT_1D"];                  case 3: return BUNDLE["T4_GROUP_3_FAC"];                  case 4: return BUNDLE["T6_GROUP_4_FAC"];                  case 5: return BUNDLE["LZW"];                  case 6: return BUNDLE["JPEG_OLD_STYLE"];                  case 7: return BUNDLE["JPEG"];                  case 8: return BUNDLE["ADOBE_DEFLATE"];                  case 9: return BUNDLE["JBIG_B_W"];                  case 10: return BUNDLE["JBIG_COLOR"];                  case 32766: return BUNDLE["NEXT"];                  case 32771: return BUNDLE["CCIRLEW"];                  case 32773: return BUNDLE["PACKBITS"];                  case 32809: return BUNDLE["THUNDERSCA"];                  case 32895: return BUNDLE["IT8CTPAD"];                  case 32896: return BUNDLE["IT8LW"];                  case 32897: return BUNDLE["IT8MP"];                  case 32898: return BUNDLE["IT8BL"];                  case 32908: return BUNDLE["PIXARFILM"];                  case 32909: return BUNDLE["PIXARLOG"];                  case 32946: return BUNDLE["DEFLATE"];                  case 32947: return BUNDLE["DCS"];                  case 32661: return BUNDLE["JBIG"];                  case 32676: return BUNDLE["SGILOG"];                  case 32677: return BUNDLE["SGILOG24"];                  case 32712: return BUNDLE["JPEG_2000"];                  case 32713: return BUNDLE["NIKON_NEF_COMPRESSED"];                  default: return BUNDLE["UNKNOWN_COMPRESSION"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetFocalPlaneResolutionUnitDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_FOCAL_PLANE_UNIT))   			{  				case 1 :  					return BUNDLE["NO_UNIT"];  				case 2 :  					return BUNDLE["INCHES"];  				case 3 :  					return BUNDLE["CM"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetFocalPlaneResolutionUnitDescription,The following statement contains a magic number: switch (base.directory.GetInt(ExifDirectory.TAG_FOCAL_PLANE_UNIT))   			{  				case 1 :  					return BUNDLE["NO_UNIT"];  				case 2 :  					return BUNDLE["INCHES"];  				case 3 :  					return BUNDLE["CM"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetColorSpaceDescription,The following statement contains a magic number: switch (lcColorSpace)              {                  case 1: return BUNDLE["SRGB"];                  case 65535: return BUNDLE["UNDEFINED"];                  default: return BUNDLE["UNKNOWN"];              }
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetLightSourceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["DAYLIGHT"];  				case 2 :  					return BUNDLE["FLUORESCENT"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 10 :  					return BUNDLE["FLASH"];  				case 17 :  					return BUNDLE["STANDARD_LIGHT"];  				case 18 :  					return BUNDLE["STANDARD_LIGHT_B"];  				case 19 :  					return BUNDLE["STANDARD_LIGHT_C"];  				case 20 :  					return BUNDLE["D55"];  				case 21 :  					return BUNDLE["D65"];  				case 22 :  					return BUNDLE["D75"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetLightSourceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["DAYLIGHT"];  				case 2 :  					return BUNDLE["FLUORESCENT"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 10 :  					return BUNDLE["FLASH"];  				case 17 :  					return BUNDLE["STANDARD_LIGHT"];  				case 18 :  					return BUNDLE["STANDARD_LIGHT_B"];  				case 19 :  					return BUNDLE["STANDARD_LIGHT_C"];  				case 20 :  					return BUNDLE["D55"];  				case 21 :  					return BUNDLE["D65"];  				case 22 :  					return BUNDLE["D75"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetLightSourceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["DAYLIGHT"];  				case 2 :  					return BUNDLE["FLUORESCENT"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 10 :  					return BUNDLE["FLASH"];  				case 17 :  					return BUNDLE["STANDARD_LIGHT"];  				case 18 :  					return BUNDLE["STANDARD_LIGHT_B"];  				case 19 :  					return BUNDLE["STANDARD_LIGHT_C"];  				case 20 :  					return BUNDLE["D55"];  				case 21 :  					return BUNDLE["D65"];  				case 22 :  					return BUNDLE["D75"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetLightSourceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["DAYLIGHT"];  				case 2 :  					return BUNDLE["FLUORESCENT"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 10 :  					return BUNDLE["FLASH"];  				case 17 :  					return BUNDLE["STANDARD_LIGHT"];  				case 18 :  					return BUNDLE["STANDARD_LIGHT_B"];  				case 19 :  					return BUNDLE["STANDARD_LIGHT_C"];  				case 20 :  					return BUNDLE["D55"];  				case 21 :  					return BUNDLE["D65"];  				case 22 :  					return BUNDLE["D75"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetLightSourceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["DAYLIGHT"];  				case 2 :  					return BUNDLE["FLUORESCENT"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 10 :  					return BUNDLE["FLASH"];  				case 17 :  					return BUNDLE["STANDARD_LIGHT"];  				case 18 :  					return BUNDLE["STANDARD_LIGHT_B"];  				case 19 :  					return BUNDLE["STANDARD_LIGHT_C"];  				case 20 :  					return BUNDLE["D55"];  				case 21 :  					return BUNDLE["D65"];  				case 22 :  					return BUNDLE["D75"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetLightSourceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["DAYLIGHT"];  				case 2 :  					return BUNDLE["FLUORESCENT"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 10 :  					return BUNDLE["FLASH"];  				case 17 :  					return BUNDLE["STANDARD_LIGHT"];  				case 18 :  					return BUNDLE["STANDARD_LIGHT_B"];  				case 19 :  					return BUNDLE["STANDARD_LIGHT_C"];  				case 20 :  					return BUNDLE["D55"];  				case 21 :  					return BUNDLE["D65"];  				case 22 :  					return BUNDLE["D75"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetLightSourceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["DAYLIGHT"];  				case 2 :  					return BUNDLE["FLUORESCENT"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 10 :  					return BUNDLE["FLASH"];  				case 17 :  					return BUNDLE["STANDARD_LIGHT"];  				case 18 :  					return BUNDLE["STANDARD_LIGHT_B"];  				case 19 :  					return BUNDLE["STANDARD_LIGHT_C"];  				case 20 :  					return BUNDLE["D55"];  				case 21 :  					return BUNDLE["D65"];  				case 22 :  					return BUNDLE["D75"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetLightSourceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["DAYLIGHT"];  				case 2 :  					return BUNDLE["FLUORESCENT"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 10 :  					return BUNDLE["FLASH"];  				case 17 :  					return BUNDLE["STANDARD_LIGHT"];  				case 18 :  					return BUNDLE["STANDARD_LIGHT_B"];  				case 19 :  					return BUNDLE["STANDARD_LIGHT_C"];  				case 20 :  					return BUNDLE["D55"];  				case 21 :  					return BUNDLE["D65"];  				case 22 :  					return BUNDLE["D75"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetLightSourceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["DAYLIGHT"];  				case 2 :  					return BUNDLE["FLUORESCENT"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 10 :  					return BUNDLE["FLASH"];  				case 17 :  					return BUNDLE["STANDARD_LIGHT"];  				case 18 :  					return BUNDLE["STANDARD_LIGHT_B"];  				case 19 :  					return BUNDLE["STANDARD_LIGHT_C"];  				case 20 :  					return BUNDLE["D55"];  				case 21 :  					return BUNDLE["D65"];  				case 22 :  					return BUNDLE["D75"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetLightSourceDescription,The following statement contains a magic number: switch (lcVal)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["DAYLIGHT"];  				case 2 :  					return BUNDLE["FLUORESCENT"];  				case 3 :  					return BUNDLE["TUNGSTEN"];  				case 10 :  					return BUNDLE["FLASH"];  				case 17 :  					return BUNDLE["STANDARD_LIGHT"];  				case 18 :  					return BUNDLE["STANDARD_LIGHT_B"];  				case 19 :  					return BUNDLE["STANDARD_LIGHT_C"];  				case 20 :  					return BUNDLE["D55"];  				case 21 :  					return BUNDLE["D65"];  				case 22 :  					return BUNDLE["D75"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return BUNDLE["UNKNOWN"' lcVal.ToString()];  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetMeteringModeDescription,The following statement contains a magic number: switch (lcMeteringMode)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["AVERAGE"];  				case 2 :  					return BUNDLE["CENTER_WEIGHTED_AVERAGE"];  				case 3 :  					return BUNDLE["SPOT"];  				case 4 :  					return BUNDLE["MULTI_SPOT"];  				case 5 :  					return BUNDLE["MULTI_SEGMENT"];  				case 6 :  					return BUNDLE["PARTIAL"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetMeteringModeDescription,The following statement contains a magic number: switch (lcMeteringMode)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["AVERAGE"];  				case 2 :  					return BUNDLE["CENTER_WEIGHTED_AVERAGE"];  				case 3 :  					return BUNDLE["SPOT"];  				case 4 :  					return BUNDLE["MULTI_SPOT"];  				case 5 :  					return BUNDLE["MULTI_SEGMENT"];  				case 6 :  					return BUNDLE["PARTIAL"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetMeteringModeDescription,The following statement contains a magic number: switch (lcMeteringMode)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["AVERAGE"];  				case 2 :  					return BUNDLE["CENTER_WEIGHTED_AVERAGE"];  				case 3 :  					return BUNDLE["SPOT"];  				case 4 :  					return BUNDLE["MULTI_SPOT"];  				case 5 :  					return BUNDLE["MULTI_SEGMENT"];  				case 6 :  					return BUNDLE["PARTIAL"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetMeteringModeDescription,The following statement contains a magic number: switch (lcMeteringMode)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["AVERAGE"];  				case 2 :  					return BUNDLE["CENTER_WEIGHTED_AVERAGE"];  				case 3 :  					return BUNDLE["SPOT"];  				case 4 :  					return BUNDLE["MULTI_SPOT"];  				case 5 :  					return BUNDLE["MULTI_SEGMENT"];  				case 6 :  					return BUNDLE["PARTIAL"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetMeteringModeDescription,The following statement contains a magic number: switch (lcMeteringMode)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["AVERAGE"];  				case 2 :  					return BUNDLE["CENTER_WEIGHTED_AVERAGE"];  				case 3 :  					return BUNDLE["SPOT"];  				case 4 :  					return BUNDLE["MULTI_SPOT"];  				case 5 :  					return BUNDLE["MULTI_SEGMENT"];  				case 6 :  					return BUNDLE["PARTIAL"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetMeteringModeDescription,The following statement contains a magic number: switch (lcMeteringMode)   			{  				case 0 :  					return BUNDLE["UNKNOWN"];  				case 1 :  					return BUNDLE["AVERAGE"];  				case 2 :  					return BUNDLE["CENTER_WEIGHTED_AVERAGE"];  				case 3 :  					return BUNDLE["SPOT"];  				case 4 :  					return BUNDLE["MULTI_SPOT"];  				case 5 :  					return BUNDLE["MULTI_SEGMENT"];  				case 6 :  					return BUNDLE["PARTIAL"];  				case 255 :  					return BUNDLE["OTHER"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetShutterSpeedDescription,The following statement contains a magic number: float lcApexPower = (float)(1 / (Math.Exp(lcApexValue * Math.Log(2))));
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetShutterSpeedDescription,The following statement contains a magic number: long lcApexPower10 = (long)Math.Round((double)lcApexPower * 10.0);
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetShutterSpeedDescription,The following statement contains a magic number: float lcFApexPower = (float)lcApexPower10 / 10.0f;
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetYCbCrPositioningDescription,The following statement contains a magic number: switch (lcYCbCrPosition)   			{  				case 1 :  					return BUNDLE["CENTER_OF_PIXEL_ARRAY"];  				case 2 :  					return BUNDLE["DATUM_POINT"];  				default :  					return lcYCbCrPosition.ToString();  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetOrientationDescription,The following statement contains a magic number: switch (lcOrientation)   			{  				case 1 :  					return BUNDLE["TOP_LEFT_SIDE"];  				case 2 :  					return BUNDLE["TOP_RIGHT_SIDE"];  				case 3 :  					return BUNDLE["BOTTOM_RIGHT_SIDE"];  				case 4 :  					return BUNDLE["BOTTOM_LEFT_SIDE"];  				case 5 :  					return BUNDLE["LEFT_SIDE_TOP"];  				case 6 :  					return BUNDLE["RIGHT_SIDE_TOP"];  				case 7 :  					return BUNDLE["RIGHT_SIDE_BOTTOM"];  				case 8 :  					return BUNDLE["LEFT_SIDE_BOTTOM"];  				default :  					return lcOrientation.ToString();  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetOrientationDescription,The following statement contains a magic number: switch (lcOrientation)   			{  				case 1 :  					return BUNDLE["TOP_LEFT_SIDE"];  				case 2 :  					return BUNDLE["TOP_RIGHT_SIDE"];  				case 3 :  					return BUNDLE["BOTTOM_RIGHT_SIDE"];  				case 4 :  					return BUNDLE["BOTTOM_LEFT_SIDE"];  				case 5 :  					return BUNDLE["LEFT_SIDE_TOP"];  				case 6 :  					return BUNDLE["RIGHT_SIDE_TOP"];  				case 7 :  					return BUNDLE["RIGHT_SIDE_BOTTOM"];  				case 8 :  					return BUNDLE["LEFT_SIDE_BOTTOM"];  				default :  					return lcOrientation.ToString();  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetOrientationDescription,The following statement contains a magic number: switch (lcOrientation)   			{  				case 1 :  					return BUNDLE["TOP_LEFT_SIDE"];  				case 2 :  					return BUNDLE["TOP_RIGHT_SIDE"];  				case 3 :  					return BUNDLE["BOTTOM_RIGHT_SIDE"];  				case 4 :  					return BUNDLE["BOTTOM_LEFT_SIDE"];  				case 5 :  					return BUNDLE["LEFT_SIDE_TOP"];  				case 6 :  					return BUNDLE["RIGHT_SIDE_TOP"];  				case 7 :  					return BUNDLE["RIGHT_SIDE_BOTTOM"];  				case 8 :  					return BUNDLE["LEFT_SIDE_BOTTOM"];  				default :  					return lcOrientation.ToString();  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetOrientationDescription,The following statement contains a magic number: switch (lcOrientation)   			{  				case 1 :  					return BUNDLE["TOP_LEFT_SIDE"];  				case 2 :  					return BUNDLE["TOP_RIGHT_SIDE"];  				case 3 :  					return BUNDLE["BOTTOM_RIGHT_SIDE"];  				case 4 :  					return BUNDLE["BOTTOM_LEFT_SIDE"];  				case 5 :  					return BUNDLE["LEFT_SIDE_TOP"];  				case 6 :  					return BUNDLE["RIGHT_SIDE_TOP"];  				case 7 :  					return BUNDLE["RIGHT_SIDE_BOTTOM"];  				case 8 :  					return BUNDLE["LEFT_SIDE_BOTTOM"];  				default :  					return lcOrientation.ToString();  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetOrientationDescription,The following statement contains a magic number: switch (lcOrientation)   			{  				case 1 :  					return BUNDLE["TOP_LEFT_SIDE"];  				case 2 :  					return BUNDLE["TOP_RIGHT_SIDE"];  				case 3 :  					return BUNDLE["BOTTOM_RIGHT_SIDE"];  				case 4 :  					return BUNDLE["BOTTOM_LEFT_SIDE"];  				case 5 :  					return BUNDLE["LEFT_SIDE_TOP"];  				case 6 :  					return BUNDLE["RIGHT_SIDE_TOP"];  				case 7 :  					return BUNDLE["RIGHT_SIDE_BOTTOM"];  				case 8 :  					return BUNDLE["LEFT_SIDE_BOTTOM"];  				default :  					return lcOrientation.ToString();  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetOrientationDescription,The following statement contains a magic number: switch (lcOrientation)   			{  				case 1 :  					return BUNDLE["TOP_LEFT_SIDE"];  				case 2 :  					return BUNDLE["TOP_RIGHT_SIDE"];  				case 3 :  					return BUNDLE["BOTTOM_RIGHT_SIDE"];  				case 4 :  					return BUNDLE["BOTTOM_LEFT_SIDE"];  				case 5 :  					return BUNDLE["LEFT_SIDE_TOP"];  				case 6 :  					return BUNDLE["RIGHT_SIDE_TOP"];  				case 7 :  					return BUNDLE["RIGHT_SIDE_BOTTOM"];  				case 8 :  					return BUNDLE["LEFT_SIDE_BOTTOM"];  				default :  					return lcOrientation.ToString();  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetOrientationDescription,The following statement contains a magic number: switch (lcOrientation)   			{  				case 1 :  					return BUNDLE["TOP_LEFT_SIDE"];  				case 2 :  					return BUNDLE["TOP_RIGHT_SIDE"];  				case 3 :  					return BUNDLE["BOTTOM_RIGHT_SIDE"];  				case 4 :  					return BUNDLE["BOTTOM_LEFT_SIDE"];  				case 5 :  					return BUNDLE["LEFT_SIDE_TOP"];  				case 6 :  					return BUNDLE["RIGHT_SIDE_TOP"];  				case 7 :  					return BUNDLE["RIGHT_SIDE_BOTTOM"];  				case 8 :  					return BUNDLE["LEFT_SIDE_BOTTOM"];  				default :  					return lcOrientation.ToString();  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetResolutionDescription,The following statement contains a magic number: switch (lcResolutionUnit)   			{  				case 1 :  					return BUNDLE["NO_UNIT"];  				case 2 :  					return BUNDLE["INCHES"];  				case 3 :  					return BUNDLE["CM"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetResolutionDescription,The following statement contains a magic number: switch (lcResolutionUnit)   			{  				case 1 :  					return BUNDLE["NO_UNIT"];  				case 2 :  					return BUNDLE["INCHES"];  				case 3 :  					return BUNDLE["CM"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetSensingMethodDescription,The following statement contains a magic number: switch (lcSensingMethod)   			{  				case 1 :  					return BUNDLE["NOT_DEFINED"];  				case 2 :  					return BUNDLE["ONE_CHIP_COLOR"];  				case 3 :  					return BUNDLE["TWO_CHIP_COLOR"];  				case 4 :  					return BUNDLE["THREE_CHIP_COLOR"];  				case 5 :  					return BUNDLE["COLOR_SEQUENTIAL"];  				case 7 :  					return BUNDLE["TRILINEAR_SENSOR"];  				case 8 :  					return BUNDLE["COLOR_SEQUENTIAL_LINEAR"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetSensingMethodDescription,The following statement contains a magic number: switch (lcSensingMethod)   			{  				case 1 :  					return BUNDLE["NOT_DEFINED"];  				case 2 :  					return BUNDLE["ONE_CHIP_COLOR"];  				case 3 :  					return BUNDLE["TWO_CHIP_COLOR"];  				case 4 :  					return BUNDLE["THREE_CHIP_COLOR"];  				case 5 :  					return BUNDLE["COLOR_SEQUENTIAL"];  				case 7 :  					return BUNDLE["TRILINEAR_SENSOR"];  				case 8 :  					return BUNDLE["COLOR_SEQUENTIAL_LINEAR"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetSensingMethodDescription,The following statement contains a magic number: switch (lcSensingMethod)   			{  				case 1 :  					return BUNDLE["NOT_DEFINED"];  				case 2 :  					return BUNDLE["ONE_CHIP_COLOR"];  				case 3 :  					return BUNDLE["TWO_CHIP_COLOR"];  				case 4 :  					return BUNDLE["THREE_CHIP_COLOR"];  				case 5 :  					return BUNDLE["COLOR_SEQUENTIAL"];  				case 7 :  					return BUNDLE["TRILINEAR_SENSOR"];  				case 8 :  					return BUNDLE["COLOR_SEQUENTIAL_LINEAR"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetSensingMethodDescription,The following statement contains a magic number: switch (lcSensingMethod)   			{  				case 1 :  					return BUNDLE["NOT_DEFINED"];  				case 2 :  					return BUNDLE["ONE_CHIP_COLOR"];  				case 3 :  					return BUNDLE["TWO_CHIP_COLOR"];  				case 4 :  					return BUNDLE["THREE_CHIP_COLOR"];  				case 5 :  					return BUNDLE["COLOR_SEQUENTIAL"];  				case 7 :  					return BUNDLE["TRILINEAR_SENSOR"];  				case 8 :  					return BUNDLE["COLOR_SEQUENTIAL_LINEAR"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetSensingMethodDescription,The following statement contains a magic number: switch (lcSensingMethod)   			{  				case 1 :  					return BUNDLE["NOT_DEFINED"];  				case 2 :  					return BUNDLE["ONE_CHIP_COLOR"];  				case 3 :  					return BUNDLE["TWO_CHIP_COLOR"];  				case 4 :  					return BUNDLE["THREE_CHIP_COLOR"];  				case 5 :  					return BUNDLE["COLOR_SEQUENTIAL"];  				case 7 :  					return BUNDLE["TRILINEAR_SENSOR"];  				case 8 :  					return BUNDLE["COLOR_SEQUENTIAL_LINEAR"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetSensingMethodDescription,The following statement contains a magic number: switch (lcSensingMethod)   			{  				case 1 :  					return BUNDLE["NOT_DEFINED"];  				case 2 :  					return BUNDLE["ONE_CHIP_COLOR"];  				case 3 :  					return BUNDLE["TWO_CHIP_COLOR"];  				case 4 :  					return BUNDLE["THREE_CHIP_COLOR"];  				case 5 :  					return BUNDLE["COLOR_SEQUENTIAL"];  				case 7 :  					return BUNDLE["TRILINEAR_SENSOR"];  				case 8 :  					return BUNDLE["COLOR_SEQUENTIAL_LINEAR"];  				default :  					return "";  			}
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,GetComponentConfigurationDescription,The following statement contains a magic number: i < Math.Min(4' lcComponents.Length)
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,ConvertBytesToVersionString,The following statement contains a magic number: i == 2
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,ConvertBytesToVersionString,The following statement contains a magic number: someComponents[i] > 31
Magic Number,com.drew.metadata.exif,ExifDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifDescriptor.cs,ConvertBytesToVersionString,The following statement contains a magic number: i < 4 && i < someComponents.Length
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ExtractIFD,The following statement contains a magic number: string byteOrderIdentifier = Utils.Decode(base.data' aTiffHeaderOffset' 2' false);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ExtractIFD,The following statement contains a magic number: this.Get16Bits(2 + aTiffHeaderOffset) != 0x2a
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ExtractIFD,The following statement contains a magic number: int firstDirectoryOffset = this.Get32Bits(4 + aTiffHeaderOffset) + aTiffHeaderOffset;
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ExtractIFD,The following statement contains a magic number: firstDirectoryOffset = 14;
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,Extract,The following statement contains a magic number: base.data.Length <= 14
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,Extract,The following statement contains a magic number: !"Exif\0\0".Equals(Utils.Decode(base.data' 0' 6' false))
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,Extract,The following statement contains a magic number: string byteOrderIdentifier = Utils.Decode(base.data' 6' 2' false);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,Extract,The following statement contains a magic number: string byteOrderIdentifier = Utils.Decode(base.data' 6' 2' false);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,Extract,The following statement contains a magic number: Get16Bits(8) != 0x2a
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,Extract,The following statement contains a magic number: int firstDirectoryOffSet = Get32Bits(10) + TIFF_HEADER_START_OFFSET;
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,Extract,The following statement contains a magic number: firstDirectoryOffSet = 14;
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,IsDirectoryLengthValid,The following statement contains a magic number: int dirLength = (2 + (12 * dirTagCount) + 4);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,IsDirectoryLengthValid,The following statement contains a magic number: int dirLength = (2 + (12 * dirTagCount) + 4);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,IsDirectoryLengthValid,The following statement contains a magic number: int dirLength = (2 + (12 * dirTagCount) + 4);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,CalculateTagOffset,The following statement contains a magic number: return dirStartOffset + 2 + (12 * entryNumber);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,CalculateTagOffset,The following statement contains a magic number: return dirStartOffset + 2 + (12 * entryNumber);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,CalculateTagValueOffset,The following statement contains a magic number: int offsetVal = Get32Bits(dirEntryOffset + 8);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,CalculateTagValueOffset,The following statement contains a magic number: byteCount > 4
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,CalculateTagValueOffset,The following statement contains a magic number: return dirEntryOffset + 8;
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessDirectory,The following statement contains a magic number: int formatCode = Get16Bits(tagOffset + 2);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessDirectory,The following statement contains a magic number: int componentCount = Get32Bits(tagOffset + 4);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The following statement contains a magic number: string firstTwoChars = Utils.Decode(base.data' subdirOffset' 2' false);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The following statement contains a magic number: string firstThreeChars = Utils.Decode(base.data' subdirOffset' 3' false);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The following statement contains a magic number: string firstFourChars = Utils.Decode(base.data' subdirOffset' 4' false);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The following statement contains a magic number: string firstFiveChars = Utils.Decode(base.data' subdirOffset' 5' false);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The following statement contains a magic number: string firstSixChars = Utils.Decode(base.data' subdirOffset' 6' false);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The following statement contains a magic number: string firstSevenChars = Utils.Decode(base.data' subdirOffset' 7' false);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The following statement contains a magic number: string firstEightChars = Utils.Decode(base.data' subdirOffset' 8' false);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessMakerNote,The following statement contains a magic number: ProcessDirectory(                      this.metadata.GetDirectory("com.drew.metadata.exif.OlympusDirectory")' processedDirectoryOffsets' subdirOffset + 8' tiffHeaderOffset);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessTag,The following statement contains a magic number: switch (formatCode)              {                  case FMT_UNDEFINED:                      Debug.Write("Found a tag made of bytes");                      // this includes exif user comments                      byte[] tagBytes = new byte[componentCount];                      int byteCount = componentCount * BYTES_PER_FORMAT[formatCode];                      for (int i = 0; i < byteCount; i++)                      {                          tagBytes[i] = base.data[tagValueOffset + i];                      }                      directory.SetObject(tagType' tagBytes);                      break;                  case FMT_STRING:                      Debug.Write("Found a tag made of string");                      string lcStr = null;                      if (tagType == ExifDirectory.TAG_USER_COMMENT)                      {                          lcStr =                              ReadCommentString(                              tagValueOffset'                              componentCount'                              formatCode);                      }                      else                      {                          lcStr = ReadString(tagValueOffset' componentCount);                      }                      directory.SetObject(tagType' lcStr);                      break;                  case FMT_SRATIONAL: //goto case FMT_URATIONAL;                  case FMT_URATIONAL:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of rational");                          Rational rational = new Rational(Get32Bits(tagValueOffset)' Get32Bits(tagValueOffset + 4));                          directory.SetObject(tagType' rational);                        }                      else                      {                          Debug.Write("Found a tag made of rationals");                          Rational[] rationals = new Rational[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              rationals[i] = new Rational(Get32Bits(tagValueOffset + (8 * i))' Get32Bits(tagValueOffset + 4 + (8 * i)));                          }                          directory.SetObject(tagType' rationals);                                                }                        break;                  case FMT_SBYTE: //goto case FMT_BYTE;                  case FMT_BYTE:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of byte");                          // this may need to be a byte' but I think casting to int is fine                          int b = base.data[tagValueOffset];                          directory.SetObject(tagType' b);                      }                      else                      {                          Debug.Write("Found a tag made of bytes but will use ints");                          int[] bytes = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              bytes[i] = base.data[tagValueOffset + i];                          }                          directory.SetIntArray(tagType' bytes);                      }                      break;                  case FMT_SINGLE: //goto case FMT_DOUBLE;                  case FMT_DOUBLE:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of double but will use int");                          int i = base.data[tagValueOffset];                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of doubles but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = base.data[tagValueOffset + i];                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  case FMT_USHORT: //goto case FMT_SSHORT;                  case FMT_SSHORT:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of short but will use int");                          int i = Get16Bits(tagValueOffset);                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of shorts but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = Get16Bits(tagValueOffset + (i * 2));                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  case FMT_SLONG: //goto case FMT_ULONG;                  case FMT_ULONG:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of long but will use int");                          int i = Get32Bits(tagValueOffset);                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of longs but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = Get32Bits(tagValueOffset + (i * 4));                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  default:                      Trace.TraceWarning("Unknown format code " + formatCode + " for tag " + tagType);                      break;              }
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessTag,The following statement contains a magic number: switch (formatCode)              {                  case FMT_UNDEFINED:                      Debug.Write("Found a tag made of bytes");                      // this includes exif user comments                      byte[] tagBytes = new byte[componentCount];                      int byteCount = componentCount * BYTES_PER_FORMAT[formatCode];                      for (int i = 0; i < byteCount; i++)                      {                          tagBytes[i] = base.data[tagValueOffset + i];                      }                      directory.SetObject(tagType' tagBytes);                      break;                  case FMT_STRING:                      Debug.Write("Found a tag made of string");                      string lcStr = null;                      if (tagType == ExifDirectory.TAG_USER_COMMENT)                      {                          lcStr =                              ReadCommentString(                              tagValueOffset'                              componentCount'                              formatCode);                      }                      else                      {                          lcStr = ReadString(tagValueOffset' componentCount);                      }                      directory.SetObject(tagType' lcStr);                      break;                  case FMT_SRATIONAL: //goto case FMT_URATIONAL;                  case FMT_URATIONAL:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of rational");                          Rational rational = new Rational(Get32Bits(tagValueOffset)' Get32Bits(tagValueOffset + 4));                          directory.SetObject(tagType' rational);                        }                      else                      {                          Debug.Write("Found a tag made of rationals");                          Rational[] rationals = new Rational[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              rationals[i] = new Rational(Get32Bits(tagValueOffset + (8 * i))' Get32Bits(tagValueOffset + 4 + (8 * i)));                          }                          directory.SetObject(tagType' rationals);                                                }                        break;                  case FMT_SBYTE: //goto case FMT_BYTE;                  case FMT_BYTE:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of byte");                          // this may need to be a byte' but I think casting to int is fine                          int b = base.data[tagValueOffset];                          directory.SetObject(tagType' b);                      }                      else                      {                          Debug.Write("Found a tag made of bytes but will use ints");                          int[] bytes = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              bytes[i] = base.data[tagValueOffset + i];                          }                          directory.SetIntArray(tagType' bytes);                      }                      break;                  case FMT_SINGLE: //goto case FMT_DOUBLE;                  case FMT_DOUBLE:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of double but will use int");                          int i = base.data[tagValueOffset];                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of doubles but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = base.data[tagValueOffset + i];                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  case FMT_USHORT: //goto case FMT_SSHORT;                  case FMT_SSHORT:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of short but will use int");                          int i = Get16Bits(tagValueOffset);                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of shorts but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = Get16Bits(tagValueOffset + (i * 2));                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  case FMT_SLONG: //goto case FMT_ULONG;                  case FMT_ULONG:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of long but will use int");                          int i = Get32Bits(tagValueOffset);                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of longs but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = Get32Bits(tagValueOffset + (i * 4));                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  default:                      Trace.TraceWarning("Unknown format code " + formatCode + " for tag " + tagType);                      break;              }
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessTag,The following statement contains a magic number: switch (formatCode)              {                  case FMT_UNDEFINED:                      Debug.Write("Found a tag made of bytes");                      // this includes exif user comments                      byte[] tagBytes = new byte[componentCount];                      int byteCount = componentCount * BYTES_PER_FORMAT[formatCode];                      for (int i = 0; i < byteCount; i++)                      {                          tagBytes[i] = base.data[tagValueOffset + i];                      }                      directory.SetObject(tagType' tagBytes);                      break;                  case FMT_STRING:                      Debug.Write("Found a tag made of string");                      string lcStr = null;                      if (tagType == ExifDirectory.TAG_USER_COMMENT)                      {                          lcStr =                              ReadCommentString(                              tagValueOffset'                              componentCount'                              formatCode);                      }                      else                      {                          lcStr = ReadString(tagValueOffset' componentCount);                      }                      directory.SetObject(tagType' lcStr);                      break;                  case FMT_SRATIONAL: //goto case FMT_URATIONAL;                  case FMT_URATIONAL:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of rational");                          Rational rational = new Rational(Get32Bits(tagValueOffset)' Get32Bits(tagValueOffset + 4));                          directory.SetObject(tagType' rational);                        }                      else                      {                          Debug.Write("Found a tag made of rationals");                          Rational[] rationals = new Rational[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              rationals[i] = new Rational(Get32Bits(tagValueOffset + (8 * i))' Get32Bits(tagValueOffset + 4 + (8 * i)));                          }                          directory.SetObject(tagType' rationals);                                                }                        break;                  case FMT_SBYTE: //goto case FMT_BYTE;                  case FMT_BYTE:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of byte");                          // this may need to be a byte' but I think casting to int is fine                          int b = base.data[tagValueOffset];                          directory.SetObject(tagType' b);                      }                      else                      {                          Debug.Write("Found a tag made of bytes but will use ints");                          int[] bytes = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              bytes[i] = base.data[tagValueOffset + i];                          }                          directory.SetIntArray(tagType' bytes);                      }                      break;                  case FMT_SINGLE: //goto case FMT_DOUBLE;                  case FMT_DOUBLE:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of double but will use int");                          int i = base.data[tagValueOffset];                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of doubles but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = base.data[tagValueOffset + i];                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  case FMT_USHORT: //goto case FMT_SSHORT;                  case FMT_SSHORT:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of short but will use int");                          int i = Get16Bits(tagValueOffset);                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of shorts but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = Get16Bits(tagValueOffset + (i * 2));                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  case FMT_SLONG: //goto case FMT_ULONG;                  case FMT_ULONG:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of long but will use int");                          int i = Get32Bits(tagValueOffset);                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of longs but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = Get32Bits(tagValueOffset + (i * 4));                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  default:                      Trace.TraceWarning("Unknown format code " + formatCode + " for tag " + tagType);                      break;              }
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessTag,The following statement contains a magic number: switch (formatCode)              {                  case FMT_UNDEFINED:                      Debug.Write("Found a tag made of bytes");                      // this includes exif user comments                      byte[] tagBytes = new byte[componentCount];                      int byteCount = componentCount * BYTES_PER_FORMAT[formatCode];                      for (int i = 0; i < byteCount; i++)                      {                          tagBytes[i] = base.data[tagValueOffset + i];                      }                      directory.SetObject(tagType' tagBytes);                      break;                  case FMT_STRING:                      Debug.Write("Found a tag made of string");                      string lcStr = null;                      if (tagType == ExifDirectory.TAG_USER_COMMENT)                      {                          lcStr =                              ReadCommentString(                              tagValueOffset'                              componentCount'                              formatCode);                      }                      else                      {                          lcStr = ReadString(tagValueOffset' componentCount);                      }                      directory.SetObject(tagType' lcStr);                      break;                  case FMT_SRATIONAL: //goto case FMT_URATIONAL;                  case FMT_URATIONAL:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of rational");                          Rational rational = new Rational(Get32Bits(tagValueOffset)' Get32Bits(tagValueOffset + 4));                          directory.SetObject(tagType' rational);                        }                      else                      {                          Debug.Write("Found a tag made of rationals");                          Rational[] rationals = new Rational[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              rationals[i] = new Rational(Get32Bits(tagValueOffset + (8 * i))' Get32Bits(tagValueOffset + 4 + (8 * i)));                          }                          directory.SetObject(tagType' rationals);                                                }                        break;                  case FMT_SBYTE: //goto case FMT_BYTE;                  case FMT_BYTE:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of byte");                          // this may need to be a byte' but I think casting to int is fine                          int b = base.data[tagValueOffset];                          directory.SetObject(tagType' b);                      }                      else                      {                          Debug.Write("Found a tag made of bytes but will use ints");                          int[] bytes = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              bytes[i] = base.data[tagValueOffset + i];                          }                          directory.SetIntArray(tagType' bytes);                      }                      break;                  case FMT_SINGLE: //goto case FMT_DOUBLE;                  case FMT_DOUBLE:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of double but will use int");                          int i = base.data[tagValueOffset];                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of doubles but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = base.data[tagValueOffset + i];                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  case FMT_USHORT: //goto case FMT_SSHORT;                  case FMT_SSHORT:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of short but will use int");                          int i = Get16Bits(tagValueOffset);                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of shorts but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = Get16Bits(tagValueOffset + (i * 2));                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  case FMT_SLONG: //goto case FMT_ULONG;                  case FMT_ULONG:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of long but will use int");                          int i = Get32Bits(tagValueOffset);                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of longs but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = Get32Bits(tagValueOffset + (i * 4));                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  default:                      Trace.TraceWarning("Unknown format code " + formatCode + " for tag " + tagType);                      break;              }
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessTag,The following statement contains a magic number: switch (formatCode)              {                  case FMT_UNDEFINED:                      Debug.Write("Found a tag made of bytes");                      // this includes exif user comments                      byte[] tagBytes = new byte[componentCount];                      int byteCount = componentCount * BYTES_PER_FORMAT[formatCode];                      for (int i = 0; i < byteCount; i++)                      {                          tagBytes[i] = base.data[tagValueOffset + i];                      }                      directory.SetObject(tagType' tagBytes);                      break;                  case FMT_STRING:                      Debug.Write("Found a tag made of string");                      string lcStr = null;                      if (tagType == ExifDirectory.TAG_USER_COMMENT)                      {                          lcStr =                              ReadCommentString(                              tagValueOffset'                              componentCount'                              formatCode);                      }                      else                      {                          lcStr = ReadString(tagValueOffset' componentCount);                      }                      directory.SetObject(tagType' lcStr);                      break;                  case FMT_SRATIONAL: //goto case FMT_URATIONAL;                  case FMT_URATIONAL:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of rational");                          Rational rational = new Rational(Get32Bits(tagValueOffset)' Get32Bits(tagValueOffset + 4));                          directory.SetObject(tagType' rational);                        }                      else                      {                          Debug.Write("Found a tag made of rationals");                          Rational[] rationals = new Rational[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              rationals[i] = new Rational(Get32Bits(tagValueOffset + (8 * i))' Get32Bits(tagValueOffset + 4 + (8 * i)));                          }                          directory.SetObject(tagType' rationals);                                                }                        break;                  case FMT_SBYTE: //goto case FMT_BYTE;                  case FMT_BYTE:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of byte");                          // this may need to be a byte' but I think casting to int is fine                          int b = base.data[tagValueOffset];                          directory.SetObject(tagType' b);                      }                      else                      {                          Debug.Write("Found a tag made of bytes but will use ints");                          int[] bytes = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              bytes[i] = base.data[tagValueOffset + i];                          }                          directory.SetIntArray(tagType' bytes);                      }                      break;                  case FMT_SINGLE: //goto case FMT_DOUBLE;                  case FMT_DOUBLE:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of double but will use int");                          int i = base.data[tagValueOffset];                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of doubles but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = base.data[tagValueOffset + i];                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  case FMT_USHORT: //goto case FMT_SSHORT;                  case FMT_SSHORT:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of short but will use int");                          int i = Get16Bits(tagValueOffset);                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of shorts but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = Get16Bits(tagValueOffset + (i * 2));                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  case FMT_SLONG: //goto case FMT_ULONG;                  case FMT_ULONG:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of long but will use int");                          int i = Get32Bits(tagValueOffset);                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of longs but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = Get32Bits(tagValueOffset + (i * 4));                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  default:                      Trace.TraceWarning("Unknown format code " + formatCode + " for tag " + tagType);                      break;              }
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ProcessTag,The following statement contains a magic number: switch (formatCode)              {                  case FMT_UNDEFINED:                      Debug.Write("Found a tag made of bytes");                      // this includes exif user comments                      byte[] tagBytes = new byte[componentCount];                      int byteCount = componentCount * BYTES_PER_FORMAT[formatCode];                      for (int i = 0; i < byteCount; i++)                      {                          tagBytes[i] = base.data[tagValueOffset + i];                      }                      directory.SetObject(tagType' tagBytes);                      break;                  case FMT_STRING:                      Debug.Write("Found a tag made of string");                      string lcStr = null;                      if (tagType == ExifDirectory.TAG_USER_COMMENT)                      {                          lcStr =                              ReadCommentString(                              tagValueOffset'                              componentCount'                              formatCode);                      }                      else                      {                          lcStr = ReadString(tagValueOffset' componentCount);                      }                      directory.SetObject(tagType' lcStr);                      break;                  case FMT_SRATIONAL: //goto case FMT_URATIONAL;                  case FMT_URATIONAL:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of rational");                          Rational rational = new Rational(Get32Bits(tagValueOffset)' Get32Bits(tagValueOffset + 4));                          directory.SetObject(tagType' rational);                        }                      else                      {                          Debug.Write("Found a tag made of rationals");                          Rational[] rationals = new Rational[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              rationals[i] = new Rational(Get32Bits(tagValueOffset + (8 * i))' Get32Bits(tagValueOffset + 4 + (8 * i)));                          }                          directory.SetObject(tagType' rationals);                                                }                        break;                  case FMT_SBYTE: //goto case FMT_BYTE;                  case FMT_BYTE:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of byte");                          // this may need to be a byte' but I think casting to int is fine                          int b = base.data[tagValueOffset];                          directory.SetObject(tagType' b);                      }                      else                      {                          Debug.Write("Found a tag made of bytes but will use ints");                          int[] bytes = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              bytes[i] = base.data[tagValueOffset + i];                          }                          directory.SetIntArray(tagType' bytes);                      }                      break;                  case FMT_SINGLE: //goto case FMT_DOUBLE;                  case FMT_DOUBLE:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of double but will use int");                          int i = base.data[tagValueOffset];                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of doubles but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = base.data[tagValueOffset + i];                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  case FMT_USHORT: //goto case FMT_SSHORT;                  case FMT_SSHORT:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of short but will use int");                          int i = Get16Bits(tagValueOffset);                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of shorts but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = Get16Bits(tagValueOffset + (i * 2));                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  case FMT_SLONG: //goto case FMT_ULONG;                  case FMT_ULONG:                      if (componentCount == 1)                      {                          Debug.Write("Found a tag made of long but will use int");                          int i = Get32Bits(tagValueOffset);                          directory.SetObject(tagType' i);                      }                      else                      {                          Debug.Write("Found a tag made of longs but will use ints");                          int[] ints = new int[componentCount];                          for (int i = 0; i < componentCount; i++)                          {                              ints[i] = Get32Bits(tagValueOffset + (i * 4));                          }                          directory.SetIntArray(tagType' ints);                      }                      break;                  default:                      Trace.TraceWarning("Unknown format code " + formatCode + " for tag " + tagType);                      break;              }
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ReadCommentString,The following statement contains a magic number: return ReadString(tagValueOffSet + i' 1999);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ReadCommentString,The following statement contains a magic number: i < 10
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ReadCommentString,The following statement contains a magic number: "ASCII".Equals(Utils.Decode(base.data' tagValueOffSet' 5' false))
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,ReadCommentString,The following statement contains a magic number: return ReadString(tagValueOffSet' 1999);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,CalculateDirectoryEntryOffSet,The following statement contains a magic number: return (ifdStartOffSet + 2 + (12 * entryNumber));
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,CalculateDirectoryEntryOffSet,The following statement contains a magic number: return (ifdStartOffSet + 2 + (12 * entryNumber));
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,Get16Bits,The following statement contains a magic number: return (base.data[offSet] << 8 & 0xFF00) | (base.data[offSet + 1] & 0xFF);
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,Get32Bits,The following statement contains a magic number: return (int)(((uint)(base.data[offSet] << 24 & 0xFF000000))                      | ((uint)(base.data[offSet + 1] << 16 & 0xFF0000))                      | ((uint)(base.data[offSet + 2] << 8 & 0xFF00))                      | ((uint)(base.data[offSet + 3] & 0xFF)));
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,Get32Bits,The following statement contains a magic number: return (int)(((uint)(base.data[offSet] << 24 & 0xFF000000))                      | ((uint)(base.data[offSet + 1] << 16 & 0xFF0000))                      | ((uint)(base.data[offSet + 2] << 8 & 0xFF00))                      | ((uint)(base.data[offSet + 3] & 0xFF)));
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,Get32Bits,The following statement contains a magic number: return (int)(((uint)(base.data[offSet] << 24 & 0xFF000000))                      | ((uint)(base.data[offSet + 1] << 16 & 0xFF0000))                      | ((uint)(base.data[offSet + 2] << 8 & 0xFF00))                      | ((uint)(base.data[offSet + 3] & 0xFF)));
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,Get32Bits,The following statement contains a magic number: return (int)(((uint)(base.data[offSet] << 24 & 0xFF000000))                      | ((uint)(base.data[offSet + 1] << 16 & 0xFF0000))                      | ((uint)(base.data[offSet + 2] << 8 & 0xFF00))                      | ((uint)(base.data[offSet + 3] & 0xFF)));
Magic Number,com.drew.metadata.exif,ExifReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\ExifReader.cs,Get32Bits,The following statement contains a magic number: return (int)(((uint)(base.data[offSet] << 24 & 0xFF000000))                      | ((uint)(base.data[offSet + 1] << 16 & 0xFF0000))                      | ((uint)(base.data[offSet + 2] << 8 & 0xFF00))                      | ((uint)(base.data[offSet + 3] & 0xFF)));
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetPictureModeDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["PORTRAIT_SCENE"];  				case 2 :  					return BUNDLE["LANDSCAPE_SCENE"];  				case 4 :  					return BUNDLE["SPORTS_SCENE"];  				case 5 :  					return BUNDLE["NIGHT_SCENE"];  				case 6 :  					return BUNDLE["PROGRAM_AE"];  				case 256 :  					return BUNDLE["APERTURE_PRIORITY_AE"];  				case 512 :  					return BUNDLE["SHUTTER_PRIORITY_AE"];  				case 768 :  					return BUNDLE["MANUAL_EXPOSURE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetPictureModeDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["PORTRAIT_SCENE"];  				case 2 :  					return BUNDLE["LANDSCAPE_SCENE"];  				case 4 :  					return BUNDLE["SPORTS_SCENE"];  				case 5 :  					return BUNDLE["NIGHT_SCENE"];  				case 6 :  					return BUNDLE["PROGRAM_AE"];  				case 256 :  					return BUNDLE["APERTURE_PRIORITY_AE"];  				case 512 :  					return BUNDLE["SHUTTER_PRIORITY_AE"];  				case 768 :  					return BUNDLE["MANUAL_EXPOSURE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetPictureModeDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["PORTRAIT_SCENE"];  				case 2 :  					return BUNDLE["LANDSCAPE_SCENE"];  				case 4 :  					return BUNDLE["SPORTS_SCENE"];  				case 5 :  					return BUNDLE["NIGHT_SCENE"];  				case 6 :  					return BUNDLE["PROGRAM_AE"];  				case 256 :  					return BUNDLE["APERTURE_PRIORITY_AE"];  				case 512 :  					return BUNDLE["SHUTTER_PRIORITY_AE"];  				case 768 :  					return BUNDLE["MANUAL_EXPOSURE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetPictureModeDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["PORTRAIT_SCENE"];  				case 2 :  					return BUNDLE["LANDSCAPE_SCENE"];  				case 4 :  					return BUNDLE["SPORTS_SCENE"];  				case 5 :  					return BUNDLE["NIGHT_SCENE"];  				case 6 :  					return BUNDLE["PROGRAM_AE"];  				case 256 :  					return BUNDLE["APERTURE_PRIORITY_AE"];  				case 512 :  					return BUNDLE["SHUTTER_PRIORITY_AE"];  				case 768 :  					return BUNDLE["MANUAL_EXPOSURE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetPictureModeDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["PORTRAIT_SCENE"];  				case 2 :  					return BUNDLE["LANDSCAPE_SCENE"];  				case 4 :  					return BUNDLE["SPORTS_SCENE"];  				case 5 :  					return BUNDLE["NIGHT_SCENE"];  				case 6 :  					return BUNDLE["PROGRAM_AE"];  				case 256 :  					return BUNDLE["APERTURE_PRIORITY_AE"];  				case 512 :  					return BUNDLE["SHUTTER_PRIORITY_AE"];  				case 768 :  					return BUNDLE["MANUAL_EXPOSURE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetPictureModeDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["PORTRAIT_SCENE"];  				case 2 :  					return BUNDLE["LANDSCAPE_SCENE"];  				case 4 :  					return BUNDLE["SPORTS_SCENE"];  				case 5 :  					return BUNDLE["NIGHT_SCENE"];  				case 6 :  					return BUNDLE["PROGRAM_AE"];  				case 256 :  					return BUNDLE["APERTURE_PRIORITY_AE"];  				case 512 :  					return BUNDLE["SHUTTER_PRIORITY_AE"];  				case 768 :  					return BUNDLE["MANUAL_EXPOSURE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetPictureModeDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["PORTRAIT_SCENE"];  				case 2 :  					return BUNDLE["LANDSCAPE_SCENE"];  				case 4 :  					return BUNDLE["SPORTS_SCENE"];  				case 5 :  					return BUNDLE["NIGHT_SCENE"];  				case 6 :  					return BUNDLE["PROGRAM_AE"];  				case 256 :  					return BUNDLE["APERTURE_PRIORITY_AE"];  				case 512 :  					return BUNDLE["SHUTTER_PRIORITY_AE"];  				case 768 :  					return BUNDLE["MANUAL_EXPOSURE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetFlashModeDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["ON"];  				case 2 :  					return BUNDLE["OFF"];  				case 3 :  					return BUNDLE["RED_EYE_REDUCTION"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetFlashModeDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["ON"];  				case 2 :  					return BUNDLE["OFF"];  				case 3 :  					return BUNDLE["RED_EYE_REDUCTION"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetToneDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["NORMAL_STD"];  				case 256 :  					return BUNDLE["HIGH_HARD"];  				case 512 :  					return BUNDLE["LOW_ORG"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetToneDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["NORMAL_STD"];  				case 256 :  					return BUNDLE["HIGH_HARD"];  				case 512 :  					return BUNDLE["LOW_ORG"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetColorDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["NORMAL_STD"];  				case 256 :  					return BUNDLE["HIGH"];  				case 512 :  					return BUNDLE["LOW_ORG"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetColorDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["NORMAL_STD"];  				case 256 :  					return BUNDLE["HIGH"];  				case 512 :  					return BUNDLE["LOW_ORG"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 256 :  					return BUNDLE["DAYLIGHT"];  				case 512 :  					return BUNDLE["CLOUDY"];  				case 768 :  					return BUNDLE["DAYLIGHTCOLOR_FLUORESCENCE"];  				case 769 :  					return BUNDLE["DAYWHITECOLOR_FLUORESCENCE"];  				case 770 :  					return BUNDLE["WHITE_FLUORESCENCE"];  				case 1024 :  					return BUNDLE["INCANDENSCENSE"];  				case 3840 :  					return BUNDLE["CUSTOM_WHITE_BALANCE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 256 :  					return BUNDLE["DAYLIGHT"];  				case 512 :  					return BUNDLE["CLOUDY"];  				case 768 :  					return BUNDLE["DAYLIGHTCOLOR_FLUORESCENCE"];  				case 769 :  					return BUNDLE["DAYWHITECOLOR_FLUORESCENCE"];  				case 770 :  					return BUNDLE["WHITE_FLUORESCENCE"];  				case 1024 :  					return BUNDLE["INCANDENSCENSE"];  				case 3840 :  					return BUNDLE["CUSTOM_WHITE_BALANCE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 256 :  					return BUNDLE["DAYLIGHT"];  				case 512 :  					return BUNDLE["CLOUDY"];  				case 768 :  					return BUNDLE["DAYLIGHTCOLOR_FLUORESCENCE"];  				case 769 :  					return BUNDLE["DAYWHITECOLOR_FLUORESCENCE"];  				case 770 :  					return BUNDLE["WHITE_FLUORESCENCE"];  				case 1024 :  					return BUNDLE["INCANDENSCENSE"];  				case 3840 :  					return BUNDLE["CUSTOM_WHITE_BALANCE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 256 :  					return BUNDLE["DAYLIGHT"];  				case 512 :  					return BUNDLE["CLOUDY"];  				case 768 :  					return BUNDLE["DAYLIGHTCOLOR_FLUORESCENCE"];  				case 769 :  					return BUNDLE["DAYWHITECOLOR_FLUORESCENCE"];  				case 770 :  					return BUNDLE["WHITE_FLUORESCENCE"];  				case 1024 :  					return BUNDLE["INCANDENSCENSE"];  				case 3840 :  					return BUNDLE["CUSTOM_WHITE_BALANCE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 256 :  					return BUNDLE["DAYLIGHT"];  				case 512 :  					return BUNDLE["CLOUDY"];  				case 768 :  					return BUNDLE["DAYLIGHTCOLOR_FLUORESCENCE"];  				case 769 :  					return BUNDLE["DAYWHITECOLOR_FLUORESCENCE"];  				case 770 :  					return BUNDLE["WHITE_FLUORESCENCE"];  				case 1024 :  					return BUNDLE["INCANDENSCENSE"];  				case 3840 :  					return BUNDLE["CUSTOM_WHITE_BALANCE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 256 :  					return BUNDLE["DAYLIGHT"];  				case 512 :  					return BUNDLE["CLOUDY"];  				case 768 :  					return BUNDLE["DAYLIGHTCOLOR_FLUORESCENCE"];  				case 769 :  					return BUNDLE["DAYWHITECOLOR_FLUORESCENCE"];  				case 770 :  					return BUNDLE["WHITE_FLUORESCENCE"];  				case 1024 :  					return BUNDLE["INCANDENSCENSE"];  				case 3840 :  					return BUNDLE["CUSTOM_WHITE_BALANCE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 256 :  					return BUNDLE["DAYLIGHT"];  				case 512 :  					return BUNDLE["CLOUDY"];  				case 768 :  					return BUNDLE["DAYLIGHTCOLOR_FLUORESCENCE"];  				case 769 :  					return BUNDLE["DAYWHITECOLOR_FLUORESCENCE"];  				case 770 :  					return BUNDLE["WHITE_FLUORESCENCE"];  				case 1024 :  					return BUNDLE["INCANDENSCENSE"];  				case 3840 :  					return BUNDLE["CUSTOM_WHITE_BALANCE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetSharpnessDescription,The following statement contains a magic number: switch (aValue)   			{  				case 1 :  				case 2 :  					return BUNDLE["SOFT"];  				case 3 :  					return BUNDLE["NORMAL"];  				case 4 :  				case 5 :  					return BUNDLE["HARD"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetSharpnessDescription,The following statement contains a magic number: switch (aValue)   			{  				case 1 :  				case 2 :  					return BUNDLE["SOFT"];  				case 3 :  					return BUNDLE["NORMAL"];  				case 4 :  				case 5 :  					return BUNDLE["HARD"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetSharpnessDescription,The following statement contains a magic number: switch (aValue)   			{  				case 1 :  				case 2 :  					return BUNDLE["SOFT"];  				case 3 :  					return BUNDLE["NORMAL"];  				case 4 :  				case 5 :  					return BUNDLE["HARD"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,FujifilmDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\FujifilmDescriptor.cs,GetSharpnessDescription,The following statement contains a magic number: switch (aValue)   			{  				case 1 :  				case 2 :  					return BUNDLE["SOFT"];  				case 3 :  					return BUNDLE["NORMAL"];  				case 4 :  				case 5 :  					return BUNDLE["HARD"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,GpsDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\GpsDescriptor.cs,GetHoursMinutesSecondsDescription,The following statement contains a magic number: float sec = components[2].FloatValue();
Magic Number,com.drew.metadata.exif,GpsDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\GpsDescriptor.cs,GetHoursMinutesSecondsDescription,The following statement contains a magic number: sec += (min % 1) * 60;
Magic Number,com.drew.metadata.exif,GpsDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\GpsDescriptor.cs,GetGpsTimeStampDescription,The following statement contains a magic number: string[] tab = new string[] {timeComponents[0].ToString()' timeComponents[1].ToString()' timeComponents[2].ToString()};
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["PRESET"];  				case 2 :  					return BUNDLE["DAYLIGHT"];  				case 3 :  					return BUNDLE["INCANDESCENSE"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["CLOUDY"];  				case 6 :  					return BUNDLE["SPEEDLIGHT"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["PRESET"];  				case 2 :  					return BUNDLE["DAYLIGHT"];  				case 3 :  					return BUNDLE["INCANDESCENSE"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["CLOUDY"];  				case 6 :  					return BUNDLE["SPEEDLIGHT"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["PRESET"];  				case 2 :  					return BUNDLE["DAYLIGHT"];  				case 3 :  					return BUNDLE["INCANDESCENSE"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["CLOUDY"];  				case 6 :  					return BUNDLE["SPEEDLIGHT"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["PRESET"];  				case 2 :  					return BUNDLE["DAYLIGHT"];  				case 3 :  					return BUNDLE["INCANDESCENSE"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["CLOUDY"];  				case 6 :  					return BUNDLE["SPEEDLIGHT"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["AUTO"];  				case 1 :  					return BUNDLE["PRESET"];  				case 2 :  					return BUNDLE["DAYLIGHT"];  				case 3 :  					return BUNDLE["INCANDESCENSE"];  				case 4 :  					return BUNDLE["FLUORESCENT"];  				case 5 :  					return BUNDLE["CLOUDY"];  				case 6 :  					return BUNDLE["SPEEDLIGHT"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetCcdSensitivityDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["ISO"'"80"];  				case 2 :  					return BUNDLE["ISO"'"160"];  				case 4 :  					return BUNDLE["ISO"'"320"];  				case 5 :  					return BUNDLE["ISO"'"100"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetCcdSensitivityDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["ISO"'"80"];  				case 2 :  					return BUNDLE["ISO"'"160"];  				case 4 :  					return BUNDLE["ISO"'"320"];  				case 5 :  					return BUNDLE["ISO"'"100"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetCcdSensitivityDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["ISO"'"80"];  				case 2 :  					return BUNDLE["ISO"'"160"];  				case 4 :  					return BUNDLE["ISO"'"320"];  				case 5 :  					return BUNDLE["ISO"'"100"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetImageAdjustmentDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["NORMAL"];  				case 1 :  					return BUNDLE["BRIGHT_P"];  				case 2 :  					return BUNDLE["BRIGHT_M"];  				case 3 :  					return BUNDLE["CONTRAST_P"];  				case 4 :  					return BUNDLE["CONTRAST_M"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetImageAdjustmentDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["NORMAL"];  				case 1 :  					return BUNDLE["BRIGHT_P"];  				case 2 :  					return BUNDLE["BRIGHT_M"];  				case 3 :  					return BUNDLE["CONTRAST_P"];  				case 4 :  					return BUNDLE["CONTRAST_M"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetImageAdjustmentDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["NORMAL"];  				case 1 :  					return BUNDLE["BRIGHT_P"];  				case 2 :  					return BUNDLE["BRIGHT_M"];  				case 3 :  					return BUNDLE["CONTRAST_P"];  				case 4 :  					return BUNDLE["CONTRAST_M"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetColorModeDescription,The following statement contains a magic number: switch (aValue)   			{  				case 1 :  					return BUNDLE["COLOR"];  				case 2 :  					return BUNDLE["MONOCHROME"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetQualityDescription,The following statement contains a magic number: switch (aValue)   			{  				case 1 :  					return BUNDLE["VGA_BASIC"];  				case 2 :  					return BUNDLE["VGA_NORMAL"];  				case 3 :  					return BUNDLE["VGA_FINE"];  				case 4 :  					return BUNDLE["SXGA_BASIC"];  				case 5 :  					return BUNDLE["SXGA_NORMAL"];  				case 6 :  					return BUNDLE["SXGA_FINE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetQualityDescription,The following statement contains a magic number: switch (aValue)   			{  				case 1 :  					return BUNDLE["VGA_BASIC"];  				case 2 :  					return BUNDLE["VGA_NORMAL"];  				case 3 :  					return BUNDLE["VGA_FINE"];  				case 4 :  					return BUNDLE["SXGA_BASIC"];  				case 5 :  					return BUNDLE["SXGA_NORMAL"];  				case 6 :  					return BUNDLE["SXGA_FINE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetQualityDescription,The following statement contains a magic number: switch (aValue)   			{  				case 1 :  					return BUNDLE["VGA_BASIC"];  				case 2 :  					return BUNDLE["VGA_NORMAL"];  				case 3 :  					return BUNDLE["VGA_FINE"];  				case 4 :  					return BUNDLE["SXGA_BASIC"];  				case 5 :  					return BUNDLE["SXGA_NORMAL"];  				case 6 :  					return BUNDLE["SXGA_FINE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetQualityDescription,The following statement contains a magic number: switch (aValue)   			{  				case 1 :  					return BUNDLE["VGA_BASIC"];  				case 2 :  					return BUNDLE["VGA_NORMAL"];  				case 3 :  					return BUNDLE["VGA_FINE"];  				case 4 :  					return BUNDLE["SXGA_BASIC"];  				case 5 :  					return BUNDLE["SXGA_NORMAL"];  				case 6 :  					return BUNDLE["SXGA_FINE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType1Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType1Descriptor.cs,GetQualityDescription,The following statement contains a magic number: switch (aValue)   			{  				case 1 :  					return BUNDLE["VGA_BASIC"];  				case 2 :  					return BUNDLE["VGA_NORMAL"];  				case 3 :  					return BUNDLE["VGA_FINE"];  				case 4 :  					return BUNDLE["SXGA_BASIC"];  				case 5 :  					return BUNDLE["SXGA_NORMAL"];  				case 6 :  					return BUNDLE["SXGA_FINE"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetAutoFocusPositionDescription,The following statement contains a magic number: values.Length != 4 || values[0] != 0 || values[2] != 0 || values[3] != 0
Magic Number,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetAutoFocusPositionDescription,The following statement contains a magic number: values.Length != 4 || values[0] != 0 || values[2] != 0 || values[3] != 0
Magic Number,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetAutoFocusPositionDescription,The following statement contains a magic number: values.Length != 4 || values[0] != 0 || values[2] != 0 || values[3] != 0
Magic Number,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetAutoFocusPositionDescription,The following statement contains a magic number: switch (values[1])              {                  case 0:                      return BUNDLE["CENTER"];                  case 1:                      return BUNDLE["TOP"];                  case 2:                      return BUNDLE["BOTTOM"];                  case 3:                      return BUNDLE["LEFT"];                  case 4:                      return BUNDLE["RIGHT"];                  default:                      return BUNDLE["UNKNOWN"' values[1].ToString()];              }
Magic Number,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetAutoFocusPositionDescription,The following statement contains a magic number: switch (values[1])              {                  case 0:                      return BUNDLE["CENTER"];                  case 1:                      return BUNDLE["TOP"];                  case 2:                      return BUNDLE["BOTTOM"];                  case 3:                      return BUNDLE["LEFT"];                  case 4:                      return BUNDLE["RIGHT"];                  default:                      return BUNDLE["UNKNOWN"' values[1].ToString()];              }
Magic Number,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetAutoFocusPositionDescription,The following statement contains a magic number: switch (values[1])              {                  case 0:                      return BUNDLE["CENTER"];                  case 1:                      return BUNDLE["TOP"];                  case 2:                      return BUNDLE["BOTTOM"];                  case 3:                      return BUNDLE["LEFT"];                  case 4:                      return BUNDLE["RIGHT"];                  default:                      return BUNDLE["UNKNOWN"' values[1].ToString()];              }
Magic Number,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetAutoFlashCompensation,The following statement contains a magic number: byte denominator = bytes[2];
Magic Number,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetAutoFlashCompensation,The following statement contains a magic number: bytes.Length == 3
Magic Number,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetLensDescription,The following statement contains a magic number: lensValues.Length != 4
Magic Number,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetLensDescription,The following statement contains a magic number: string[] tab = new string[] { lensValues[0].IntValue().ToString()' lensValues[1].IntValue().ToString()' lensValues[2].IntValue().ToString()' lensValues[3].IntValue().ToString() };
Magic Number,com.drew.metadata.exif,NikonType2Descriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\NikonType2Descriptor.cs,GetLensDescription,The following statement contains a magic number: string[] tab = new string[] { lensValues[0].IntValue().ToString()' lensValues[1].IntValue().ToString()' lensValues[2].IntValue().ToString()' lensValues[3].IntValue().ToString() };
Magic Number,com.drew.metadata.exif,OlympusDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDescriptor.cs,GetDigiZoomRatioDescription,The following statement contains a magic number: switch (aValue)   			{  				case 0 :  					return BUNDLE["NORMAL"];                  case 1:                      return BUNDLE["DIGITAL_ZOOM"' "1"];  				case 2 :                      return BUNDLE["DIGITAL_ZOOM"' "2"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString()];  			}
Magic Number,com.drew.metadata.exif,OlympusDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDescriptor.cs,GetJpegQualityDescription,The following statement contains a magic number: switch (aValue)   			{  				case 1 :  					return BUNDLE["SQ"];  				case 2 :  					return BUNDLE["HQ"];  				case 3 :  					return BUNDLE["SHQ"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString() ];  			}
Magic Number,com.drew.metadata.exif,OlympusDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDescriptor.cs,GetJpegQualityDescription,The following statement contains a magic number: switch (aValue)   			{  				case 1 :  					return BUNDLE["SQ"];  				case 2 :  					return BUNDLE["HQ"];  				case 3 :  					return BUNDLE["SHQ"];  				default :  					return BUNDLE["UNKNOWN"' aValue.ToString() ];  			}
Magic Number,com.drew.metadata.exif,OlympusDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDescriptor.cs,GetSpecialModeDescription,The following statement contains a magic number: switch (values[0])   			{  				case 0 :  					desc.Append(BUNDLE["NORMAL_PICTURE_TAKING_MODE"]);  					break;  				case 1 :  					desc.Append(BUNDLE["UNKNOWN_PICTURE_TAKING_MODE"]);  					break;  				case 2 :  					desc.Append(BUNDLE["FAST_PICTURE_TAKING_MODE"]);  					break;  				case 3 :  					desc.Append(BUNDLE["PANORAMA_PICTURE_TAKING_MODE"]);  					break;  				default :  					desc.Append(BUNDLE["UNKNOWN_PICTURE_TAKING_MODE"]);  					break;  			}
Magic Number,com.drew.metadata.exif,OlympusDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDescriptor.cs,GetSpecialModeDescription,The following statement contains a magic number: switch (values[0])   			{  				case 0 :  					desc.Append(BUNDLE["NORMAL_PICTURE_TAKING_MODE"]);  					break;  				case 1 :  					desc.Append(BUNDLE["UNKNOWN_PICTURE_TAKING_MODE"]);  					break;  				case 2 :  					desc.Append(BUNDLE["FAST_PICTURE_TAKING_MODE"]);  					break;  				case 3 :  					desc.Append(BUNDLE["PANORAMA_PICTURE_TAKING_MODE"]);  					break;  				default :  					desc.Append(BUNDLE["UNKNOWN_PICTURE_TAKING_MODE"]);  					break;  			}
Magic Number,com.drew.metadata.exif,OlympusDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDescriptor.cs,GetSpecialModeDescription,The following statement contains a magic number: switch (values[2])   			{  				case 1 :  					desc.Append(BUNDLE["LEFT_TO_RIGHT_PAN_DIR"]);  					break;  				case 2 :  					desc.Append(BUNDLE["RIGHT_TO_LEFT_PAN_DIR"]);  					break;  				case 3 :  					desc.Append(BUNDLE["BOTTOM_TO_TOP_PAN_DIR"]);  					break;  				case 4 :  					desc.Append(BUNDLE["TOP_TO_BOTTOM_PAN_DIR"]);  					break;  			}
Magic Number,com.drew.metadata.exif,OlympusDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDescriptor.cs,GetSpecialModeDescription,The following statement contains a magic number: switch (values[2])   			{  				case 1 :  					desc.Append(BUNDLE["LEFT_TO_RIGHT_PAN_DIR"]);  					break;  				case 2 :  					desc.Append(BUNDLE["RIGHT_TO_LEFT_PAN_DIR"]);  					break;  				case 3 :  					desc.Append(BUNDLE["BOTTOM_TO_TOP_PAN_DIR"]);  					break;  				case 4 :  					desc.Append(BUNDLE["TOP_TO_BOTTOM_PAN_DIR"]);  					break;  			}
Magic Number,com.drew.metadata.exif,OlympusDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDescriptor.cs,GetSpecialModeDescription,The following statement contains a magic number: switch (values[2])   			{  				case 1 :  					desc.Append(BUNDLE["LEFT_TO_RIGHT_PAN_DIR"]);  					break;  				case 2 :  					desc.Append(BUNDLE["RIGHT_TO_LEFT_PAN_DIR"]);  					break;  				case 3 :  					desc.Append(BUNDLE["BOTTOM_TO_TOP_PAN_DIR"]);  					break;  				case 4 :  					desc.Append(BUNDLE["TOP_TO_BOTTOM_PAN_DIR"]);  					break;  			}
Magic Number,com.drew.metadata.exif,OlympusDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDescriptor.cs,GetSpecialModeDescription,The following statement contains a magic number: switch (values[2])   			{  				case 1 :  					desc.Append(BUNDLE["LEFT_TO_RIGHT_PAN_DIR"]);  					break;  				case 2 :  					desc.Append(BUNDLE["RIGHT_TO_LEFT_PAN_DIR"]);  					break;  				case 3 :  					desc.Append(BUNDLE["BOTTOM_TO_TOP_PAN_DIR"]);  					break;  				case 4 :  					desc.Append(BUNDLE["TOP_TO_BOTTOM_PAN_DIR"]);  					break;  			}
Magic Number,com.drew.metadata.exif,PanasonicDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PanasonicDescriptor.cs,GetMacroModeDescription,The following statement contains a magic number: switch (value)              {                  case 1:                      return BUNDLE["ON"];                  case 2:                      return BUNDLE["OFF"];                  default:                      return BUNDLE["UNKNOWN"' value.ToString()];              }
Magic Number,com.drew.metadata.exif,PanasonicDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PanasonicDescriptor.cs,GetRecordModeDescription,The following statement contains a magic number: switch (value)              {                  case 1:                      return BUNDLE["NORMAL"];                  case 2:                      return BUNDLE["PORTRAIT"];                  case 9:                      return BUNDLE["MACRO"];                  default:                      return BUNDLE["UNKNOWN"' value.ToString()];              }
Magic Number,com.drew.metadata.exif,PanasonicDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PanasonicDescriptor.cs,GetRecordModeDescription,The following statement contains a magic number: switch (value)              {                  case 1:                      return BUNDLE["NORMAL"];                  case 2:                      return BUNDLE["PORTRAIT"];                  case 9:                      return BUNDLE["MACRO"];                  default:                      return BUNDLE["UNKNOWN"' value.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetColorDescription,The following statement contains a magic number: switch (aValue)              {                  case 1: return BUNDLE["NORMAL"];                  case 2: return BUNDLE["BLACK_AND_WHITE"];                  case 3: return BUNDLE["SEPIA"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetColorDescription,The following statement contains a magic number: switch (aValue)              {                  case 1: return BUNDLE["NORMAL"];                  case 2: return BUNDLE["BLACK_AND_WHITE"];                  case 3: return BUNDLE["SEPIA"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetIsoSpeedDescription,The following statement contains a magic number: switch (aValue)              {                  case 100:                  case 10: return BUNDLE["ISO"' "100"];                  case 16:                  case 200: return BUNDLE["ISO"' "200"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetIsoSpeedDescription,The following statement contains a magic number: switch (aValue)              {                  case 100:                  case 10: return BUNDLE["ISO"' "100"];                  case 16:                  case 200: return BUNDLE["ISO"' "200"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetIsoSpeedDescription,The following statement contains a magic number: switch (aValue)              {                  case 100:                  case 10: return BUNDLE["ISO"' "100"];                  case 16:                  case 200: return BUNDLE["ISO"' "200"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetIsoSpeedDescription,The following statement contains a magic number: switch (aValue)              {                  case 100:                  case 10: return BUNDLE["ISO"' "100"];                  case 16:                  case 200: return BUNDLE["ISO"' "200"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetSaturationDescription,The following statement contains a magic number: switch (aValue)              {                  case 0: return BUNDLE["NORMAL"];                  case 1: return BUNDLE["LOW"];                  case 2: return BUNDLE["HIGH"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetContrastDescription,The following statement contains a magic number: switch (aValue)              {                  case 0: return BUNDLE["NORMAL"];                  case 1: return BUNDLE["LOW"];                  case 2: return BUNDLE["HIGH"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetSharpnessDescription,The following statement contains a magic number: switch (aValue)              {                  case 0: return BUNDLE["NORMAL"];                  case 1: return BUNDLE["SOFT"];                  case 2: return BUNDLE["HARD"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)              {                  case 0: return BUNDLE["AUTO"];                  case 1: return BUNDLE["DAYLIGHT"];                  case 2: return BUNDLE["SHADE"];                  case 3: return BUNDLE["TUNGSTEN"];                  case 4: return BUNDLE["FLUORESCENT"];                  case 5: return BUNDLE["MANUAL"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)              {                  case 0: return BUNDLE["AUTO"];                  case 1: return BUNDLE["DAYLIGHT"];                  case 2: return BUNDLE["SHADE"];                  case 3: return BUNDLE["TUNGSTEN"];                  case 4: return BUNDLE["FLUORESCENT"];                  case 5: return BUNDLE["MANUAL"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)              {                  case 0: return BUNDLE["AUTO"];                  case 1: return BUNDLE["DAYLIGHT"];                  case 2: return BUNDLE["SHADE"];                  case 3: return BUNDLE["TUNGSTEN"];                  case 4: return BUNDLE["FLUORESCENT"];                  case 5: return BUNDLE["MANUAL"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetWhiteBalanceDescription,The following statement contains a magic number: switch (aValue)              {                  case 0: return BUNDLE["AUTO"];                  case 1: return BUNDLE["DAYLIGHT"];                  case 2: return BUNDLE["SHADE"];                  case 3: return BUNDLE["TUNGSTEN"];                  case 4: return BUNDLE["FLUORESCENT"];                  case 5: return BUNDLE["MANUAL"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetFlashModeDescription,The following statement contains a magic number: switch (aValue)              {                  case 1: return BUNDLE["AUTO"];                  case 2: return BUNDLE["FLASH_ON"];                  case 4: return BUNDLE["FLASH_OFF"];                  case 6: return BUNDLE["RED_EYE_REDUCTION"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetFlashModeDescription,The following statement contains a magic number: switch (aValue)              {                  case 1: return BUNDLE["AUTO"];                  case 2: return BUNDLE["FLASH_ON"];                  case 4: return BUNDLE["FLASH_OFF"];                  case 6: return BUNDLE["RED_EYE_REDUCTION"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetFlashModeDescription,The following statement contains a magic number: switch (aValue)              {                  case 1: return BUNDLE["AUTO"];                  case 2: return BUNDLE["FLASH_ON"];                  case 4: return BUNDLE["FLASH_OFF"];                  case 6: return BUNDLE["RED_EYE_REDUCTION"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetFocusModeDescription,The following statement contains a magic number: switch (aValue)              {                  case 2: return BUNDLE["CUSTOM"];                  case 3: return BUNDLE["AUTO"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetFocusModeDescription,The following statement contains a magic number: switch (aValue)              {                  case 2: return BUNDLE["CUSTOM"];                  case 3: return BUNDLE["AUTO"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetQualityLevelDescription,The following statement contains a magic number: switch (aValue)              {                  case 0: return BUNDLE["GOOD"];                  case 1: return BUNDLE["BETTER"];                  case 2: return BUNDLE["BEST"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetCaptureModeDescription,The following statement contains a magic number: switch (aValue)              {                  case 1: return BUNDLE["AUTO"];                  case 2: return BUNDLE["NIGHT_SCENE"];                  case 3: return BUNDLE["MANUAL"];                  case 4: return BUNDLE["MULTIPLE"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetCaptureModeDescription,The following statement contains a magic number: switch (aValue)              {                  case 1: return BUNDLE["AUTO"];                  case 2: return BUNDLE["NIGHT_SCENE"];                  case 3: return BUNDLE["MANUAL"];                  case 4: return BUNDLE["MULTIPLE"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.exif,PentaxDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\PentaxDescriptor.cs,GetCaptureModeDescription,The following statement contains a magic number: switch (aValue)              {                  case 1: return BUNDLE["AUTO"];                  case 2: return BUNDLE["NIGHT_SCENE"];                  case 3: return BUNDLE["MANUAL"];                  case 4: return BUNDLE["MULTIPLE"];                  default: return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.iptc,IptcDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcDescriptor.cs,GetUrgencyDescription,The following statement contains a magic number: switch (aValue)              {                  case 49:                      return BUNDLE["HIGH"];                  case 54:                      return BUNDLE["NORMAL"];                  case 56:                      return BUNDLE["LOW"];                  default:                      return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.iptc,IptcDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcDescriptor.cs,GetUrgencyDescription,The following statement contains a magic number: switch (aValue)              {                  case 49:                      return BUNDLE["HIGH"];                  case 54:                      return BUNDLE["NORMAL"];                  case 56:                      return BUNDLE["LOW"];                  default:                      return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.iptc,IptcDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcDescriptor.cs,GetUrgencyDescription,The following statement contains a magic number: switch (aValue)              {                  case 49:                      return BUNDLE["HIGH"];                  case 54:                      return BUNDLE["NORMAL"];                  case 56:                      return BUNDLE["LOW"];                  default:                      return BUNDLE["UNKNOWN"' aValue.ToString()];              }
Magic Number,com.drew.metadata.iptc,IptcReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcReader.cs,Extract,The following statement contains a magic number: (offset + 5) >= base.data.Length
Magic Number,com.drew.metadata.iptc,IptcReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcReader.cs,Extract,The following statement contains a magic number: offset += 2;
Magic Number,com.drew.metadata.iptc,IptcReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcReader.cs,ProcessTag,The following statement contains a magic number: int tagIdentifier = aTagType | (aDirectoryType << 8);
Magic Number,com.drew.metadata.iptc,IptcReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcReader.cs,ProcessTag,The following statement contains a magic number: switch (tagIdentifier)              {                  case IptcDirectory.TAG_RECORD_VERSION:                      // short                      short shortValue = (short)((base.data[anOffset] << 8) | base.data[anOffset + 1]);                      aDirectory.SetObject(tagIdentifier' shortValue);                      return;                  case IptcDirectory.TAG_URGENCY:                      // byte                      aDirectory.SetObject(tagIdentifier' base.data[anOffset]);                      return;                  case IptcDirectory.TAG_RELEASE_DATE:                  case IptcDirectory.TAG_DATE_CREATED:                      // Date object                      if (aTagByteCount >= 8)                      {                          string dateStr = Utils.Decode(base.data' anOffset' aTagByteCount' false);                          try                          {                              int year = Convert.ToInt32(dateStr.Substring(0' 4));                              int month = Convert.ToInt32(dateStr.Substring(4' 2)); //No -1 here;                              int day = Convert.ToInt32(dateStr.Substring(6' 2));                              DateTime date = new DateTime(year' month' day);                              aDirectory.SetObject(tagIdentifier' date);                              return;                          }                          catch (Exception)                          {                              // fall through and we'll store whatever was there as a String                          }                      }                      break; // Added for .Net compiler                  //case IptcDirectory.TAG_RELEASE_TIME:                  //case IptcDirectory.TAG_TIME_CREATED:               }
Magic Number,com.drew.metadata.iptc,IptcReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcReader.cs,ProcessTag,The following statement contains a magic number: switch (tagIdentifier)              {                  case IptcDirectory.TAG_RECORD_VERSION:                      // short                      short shortValue = (short)((base.data[anOffset] << 8) | base.data[anOffset + 1]);                      aDirectory.SetObject(tagIdentifier' shortValue);                      return;                  case IptcDirectory.TAG_URGENCY:                      // byte                      aDirectory.SetObject(tagIdentifier' base.data[anOffset]);                      return;                  case IptcDirectory.TAG_RELEASE_DATE:                  case IptcDirectory.TAG_DATE_CREATED:                      // Date object                      if (aTagByteCount >= 8)                      {                          string dateStr = Utils.Decode(base.data' anOffset' aTagByteCount' false);                          try                          {                              int year = Convert.ToInt32(dateStr.Substring(0' 4));                              int month = Convert.ToInt32(dateStr.Substring(4' 2)); //No -1 here;                              int day = Convert.ToInt32(dateStr.Substring(6' 2));                              DateTime date = new DateTime(year' month' day);                              aDirectory.SetObject(tagIdentifier' date);                              return;                          }                          catch (Exception)                          {                              // fall through and we'll store whatever was there as a String                          }                      }                      break; // Added for .Net compiler                  //case IptcDirectory.TAG_RELEASE_TIME:                  //case IptcDirectory.TAG_TIME_CREATED:               }
Magic Number,com.drew.metadata.iptc,IptcReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcReader.cs,ProcessTag,The following statement contains a magic number: switch (tagIdentifier)              {                  case IptcDirectory.TAG_RECORD_VERSION:                      // short                      short shortValue = (short)((base.data[anOffset] << 8) | base.data[anOffset + 1]);                      aDirectory.SetObject(tagIdentifier' shortValue);                      return;                  case IptcDirectory.TAG_URGENCY:                      // byte                      aDirectory.SetObject(tagIdentifier' base.data[anOffset]);                      return;                  case IptcDirectory.TAG_RELEASE_DATE:                  case IptcDirectory.TAG_DATE_CREATED:                      // Date object                      if (aTagByteCount >= 8)                      {                          string dateStr = Utils.Decode(base.data' anOffset' aTagByteCount' false);                          try                          {                              int year = Convert.ToInt32(dateStr.Substring(0' 4));                              int month = Convert.ToInt32(dateStr.Substring(4' 2)); //No -1 here;                              int day = Convert.ToInt32(dateStr.Substring(6' 2));                              DateTime date = new DateTime(year' month' day);                              aDirectory.SetObject(tagIdentifier' date);                              return;                          }                          catch (Exception)                          {                              // fall through and we'll store whatever was there as a String                          }                      }                      break; // Added for .Net compiler                  //case IptcDirectory.TAG_RELEASE_TIME:                  //case IptcDirectory.TAG_TIME_CREATED:               }
Magic Number,com.drew.metadata.iptc,IptcReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcReader.cs,ProcessTag,The following statement contains a magic number: switch (tagIdentifier)              {                  case IptcDirectory.TAG_RECORD_VERSION:                      // short                      short shortValue = (short)((base.data[anOffset] << 8) | base.data[anOffset + 1]);                      aDirectory.SetObject(tagIdentifier' shortValue);                      return;                  case IptcDirectory.TAG_URGENCY:                      // byte                      aDirectory.SetObject(tagIdentifier' base.data[anOffset]);                      return;                  case IptcDirectory.TAG_RELEASE_DATE:                  case IptcDirectory.TAG_DATE_CREATED:                      // Date object                      if (aTagByteCount >= 8)                      {                          string dateStr = Utils.Decode(base.data' anOffset' aTagByteCount' false);                          try                          {                              int year = Convert.ToInt32(dateStr.Substring(0' 4));                              int month = Convert.ToInt32(dateStr.Substring(4' 2)); //No -1 here;                              int day = Convert.ToInt32(dateStr.Substring(6' 2));                              DateTime date = new DateTime(year' month' day);                              aDirectory.SetObject(tagIdentifier' date);                              return;                          }                          catch (Exception)                          {                              // fall through and we'll store whatever was there as a String                          }                      }                      break; // Added for .Net compiler                  //case IptcDirectory.TAG_RELEASE_TIME:                  //case IptcDirectory.TAG_TIME_CREATED:               }
Magic Number,com.drew.metadata.iptc,IptcReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcReader.cs,ProcessTag,The following statement contains a magic number: switch (tagIdentifier)              {                  case IptcDirectory.TAG_RECORD_VERSION:                      // short                      short shortValue = (short)((base.data[anOffset] << 8) | base.data[anOffset + 1]);                      aDirectory.SetObject(tagIdentifier' shortValue);                      return;                  case IptcDirectory.TAG_URGENCY:                      // byte                      aDirectory.SetObject(tagIdentifier' base.data[anOffset]);                      return;                  case IptcDirectory.TAG_RELEASE_DATE:                  case IptcDirectory.TAG_DATE_CREATED:                      // Date object                      if (aTagByteCount >= 8)                      {                          string dateStr = Utils.Decode(base.data' anOffset' aTagByteCount' false);                          try                          {                              int year = Convert.ToInt32(dateStr.Substring(0' 4));                              int month = Convert.ToInt32(dateStr.Substring(4' 2)); //No -1 here;                              int day = Convert.ToInt32(dateStr.Substring(6' 2));                              DateTime date = new DateTime(year' month' day);                              aDirectory.SetObject(tagIdentifier' date);                              return;                          }                          catch (Exception)                          {                              // fall through and we'll store whatever was there as a String                          }                      }                      break; // Added for .Net compiler                  //case IptcDirectory.TAG_RELEASE_TIME:                  //case IptcDirectory.TAG_TIME_CREATED:               }
Magic Number,com.drew.metadata.iptc,IptcReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcReader.cs,ProcessTag,The following statement contains a magic number: switch (tagIdentifier)              {                  case IptcDirectory.TAG_RECORD_VERSION:                      // short                      short shortValue = (short)((base.data[anOffset] << 8) | base.data[anOffset + 1]);                      aDirectory.SetObject(tagIdentifier' shortValue);                      return;                  case IptcDirectory.TAG_URGENCY:                      // byte                      aDirectory.SetObject(tagIdentifier' base.data[anOffset]);                      return;                  case IptcDirectory.TAG_RELEASE_DATE:                  case IptcDirectory.TAG_DATE_CREATED:                      // Date object                      if (aTagByteCount >= 8)                      {                          string dateStr = Utils.Decode(base.data' anOffset' aTagByteCount' false);                          try                          {                              int year = Convert.ToInt32(dateStr.Substring(0' 4));                              int month = Convert.ToInt32(dateStr.Substring(4' 2)); //No -1 here;                              int day = Convert.ToInt32(dateStr.Substring(6' 2));                              DateTime date = new DateTime(year' month' day);                              aDirectory.SetObject(tagIdentifier' date);                              return;                          }                          catch (Exception)                          {                              // fall through and we'll store whatever was there as a String                          }                      }                      break; // Added for .Net compiler                  //case IptcDirectory.TAG_RELEASE_TIME:                  //case IptcDirectory.TAG_TIME_CREATED:               }
Magic Number,com.drew.metadata.iptc,IptcReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcReader.cs,ProcessTag,The following statement contains a magic number: switch (tagIdentifier)              {                  case IptcDirectory.TAG_RECORD_VERSION:                      // short                      short shortValue = (short)((base.data[anOffset] << 8) | base.data[anOffset + 1]);                      aDirectory.SetObject(tagIdentifier' shortValue);                      return;                  case IptcDirectory.TAG_URGENCY:                      // byte                      aDirectory.SetObject(tagIdentifier' base.data[anOffset]);                      return;                  case IptcDirectory.TAG_RELEASE_DATE:                  case IptcDirectory.TAG_DATE_CREATED:                      // Date object                      if (aTagByteCount >= 8)                      {                          string dateStr = Utils.Decode(base.data' anOffset' aTagByteCount' false);                          try                          {                              int year = Convert.ToInt32(dateStr.Substring(0' 4));                              int month = Convert.ToInt32(dateStr.Substring(4' 2)); //No -1 here;                              int day = Convert.ToInt32(dateStr.Substring(6' 2));                              DateTime date = new DateTime(year' month' day);                              aDirectory.SetObject(tagIdentifier' date);                              return;                          }                          catch (Exception)                          {                              // fall through and we'll store whatever was there as a String                          }                      }                      break; // Added for .Net compiler                  //case IptcDirectory.TAG_RELEASE_TIME:                  //case IptcDirectory.TAG_TIME_CREATED:               }
Magic Number,com.drew.metadata.jpeg,JpegComponent,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\jpeg\JpegComponent.cs,GetComponentName,The following statement contains a magic number: switch (this.componentId)   			{  				case 1 :  					return "Y";  				case 2 :  					return "Cb";  				case 3 :  					return "Cr";  				case 4 :  					return "I";  				case 5 :  					return "Q";                  default :                      throw new MetadataException("Unsupported component id: " + this.componentId);  			}
Magic Number,com.drew.metadata.jpeg,JpegComponent,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\jpeg\JpegComponent.cs,GetComponentName,The following statement contains a magic number: switch (this.componentId)   			{  				case 1 :  					return "Y";  				case 2 :  					return "Cb";  				case 3 :  					return "Cr";  				case 4 :  					return "I";  				case 5 :  					return "Q";                  default :                      throw new MetadataException("Unsupported component id: " + this.componentId);  			}
Magic Number,com.drew.metadata.jpeg,JpegComponent,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\jpeg\JpegComponent.cs,GetComponentName,The following statement contains a magic number: switch (this.componentId)   			{  				case 1 :  					return "Y";  				case 2 :  					return "Cb";  				case 3 :  					return "Cr";  				case 4 :  					return "I";  				case 5 :  					return "Q";                  default :                      throw new MetadataException("Unsupported component id: " + this.componentId);  			}
Magic Number,com.drew.metadata.jpeg,JpegComponent,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\jpeg\JpegComponent.cs,GetComponentName,The following statement contains a magic number: switch (this.componentId)   			{  				case 1 :  					return "Y";  				case 2 :  					return "Cb";  				case 3 :  					return "Cr";  				case 4 :  					return "I";  				case 5 :  					return "Q";                  default :                      throw new MetadataException("Unsupported component id: " + this.componentId);  			}
Magic Number,com.drew.metadata.jpeg,JpegDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\jpeg\JpegDescriptor.cs,GetDescription,The following statement contains a magic number: switch(tagType)   			{  				case JpegDirectory.TAG_JPEG_COMPONENT_DATA_1 :  					return GetComponentDataDescription(0);  				case JpegDirectory.TAG_JPEG_COMPONENT_DATA_2 :  					return GetComponentDataDescription(1);  				case JpegDirectory.TAG_JPEG_COMPONENT_DATA_3 :  					return GetComponentDataDescription(2);  				case JpegDirectory.TAG_JPEG_COMPONENT_DATA_4 :  					return GetComponentDataDescription(3);  				case JpegDirectory.TAG_JPEG_DATA_PRECISION :  					return GetDataPrecisionDescription();  				case JpegDirectory.TAG_JPEG_IMAGE_HEIGHT :  					return GetImageHeightDescription();  				case JpegDirectory.TAG_JPEG_IMAGE_WIDTH :  					return GetImageWidthDescription();  				default :  					return base.directory.GetString(tagType);  			}
Magic Number,com.drew.metadata.jpeg,JpegDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\jpeg\JpegDescriptor.cs,GetDescription,The following statement contains a magic number: switch(tagType)   			{  				case JpegDirectory.TAG_JPEG_COMPONENT_DATA_1 :  					return GetComponentDataDescription(0);  				case JpegDirectory.TAG_JPEG_COMPONENT_DATA_2 :  					return GetComponentDataDescription(1);  				case JpegDirectory.TAG_JPEG_COMPONENT_DATA_3 :  					return GetComponentDataDescription(2);  				case JpegDirectory.TAG_JPEG_COMPONENT_DATA_4 :  					return GetComponentDataDescription(3);  				case JpegDirectory.TAG_JPEG_DATA_PRECISION :  					return GetDataPrecisionDescription();  				case JpegDirectory.TAG_JPEG_IMAGE_HEIGHT :  					return GetImageHeightDescription();  				case JpegDirectory.TAG_JPEG_IMAGE_WIDTH :  					return GetImageWidthDescription();  				default :  					return base.directory.GetString(tagType);  			}
Magic Number,com.drew.metadata.jpeg,JpegReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\jpeg\JpegReader.cs,Extract,The following statement contains a magic number: int offset = 6;
Magic Number,com,Run,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\Run.cs,FindAsXml,The following statement contains a magic number: Run.asXml = (byte)2;
Magic Number,com,SimpleRun,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\SimpleRun.cs,ShowOneFileAllMetaDataAllTag,The following statement contains a magic number: StringBuilder lcBuff = new StringBuilder(1024);
Magic Number,com,SimpleRun,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\SimpleRun.cs,ShowOneFileOnlyIptcAllTag,The following statement contains a magic number: StringBuilder lcBuff = new StringBuilder(1024);
Magic Number,com,SimpleRun,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\SimpleRun.cs,ShowOneFileOnlyIptcOnlyTagTAG_HEADLINE,The following statement contains a magic number: StringBuilder lcBuff = new StringBuilder(1024);
Magic Number,com.utils.bundle,SpecialResourceWriter,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\bundle\SpecialResourceWriter.cs,SpecialResourceWriter,The following statement contains a magic number: IList<IResourceBundle> allBundle = new List<IResourceBundle>(20);
Magic Number,com.utils.xml,TxtOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\TxtOutPutStreamHandler.cs,BuildForbidenChar,The following statement contains a magic number: Dictionary<string' string> lcResu = new Dictionary<string' string>(11);
Magic Number,com.utils.xml,XmlNewOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlNewOutPutStreamHandler.cs,BuildForbidenChar,The following statement contains a magic number: Dictionary<string' string> lcResu = new Dictionary<string' string>(5);
Magic Number,com.utils.xml,XmlNewOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlNewOutPutStreamHandler.cs,StartTextStream,The following statement contains a magic number: this.UseCDData = "true".Equals(someParam[4]' StringComparison.OrdinalIgnoreCase);
Magic Number,com.utils.xml,XmlNewOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlNewOutPutStreamHandler.cs,StartTextStream,The following statement contains a magic number: someParam.Length > 4
Magic Number,com.utils.xml,XmlNewOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlNewOutPutStreamHandler.cs,StartTextStream,The following statement contains a magic number: this.DtdFileName = someParam[3];
Magic Number,com.utils.xml,XmlNewOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlNewOutPutStreamHandler.cs,StartTextStream,The following statement contains a magic number: someParam.Length > 3
Magic Number,com.utils.xml,XmlNewOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlNewOutPutStreamHandler.cs,StartTextStream,The following statement contains a magic number: lcNbFile = Convert.ToInt16(someParam[2]);
Magic Number,com.utils.xml,XmlNewOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlNewOutPutStreamHandler.cs,StartTextStream,The following statement contains a magic number: someParam.Length > 2
Magic Number,com.utils.xml,XmlNewOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlNewOutPutStreamHandler.cs,EndTextStream,The following statement contains a magic number: lcNbFile = Convert.ToInt16(someParam[2]);
Magic Number,com.utils.xml,XmlNewOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlNewOutPutStreamHandler.cs,EndTextStream,The following statement contains a magic number: someParam.Length >= 2
Magic Number,com.utils.xml,XmlOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlOutPutStreamHandler.cs,BuildForbidenChar,The following statement contains a magic number: Dictionary<string' string> lcResu = new Dictionary<string' string>(5);
Magic Number,com.utils.xml,XmlOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlOutPutStreamHandler.cs,StartTextStream,The following statement contains a magic number: this.DtdFileName = someParam[3];
Magic Number,com.utils.xml,XmlOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlOutPutStreamHandler.cs,StartTextStream,The following statement contains a magic number: someParam.Length > 3
Magic Number,com.utils.xml,XmlOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlOutPutStreamHandler.cs,StartTextStream,The following statement contains a magic number: lcNbFile = Convert.ToInt16(someParam[2]);
Magic Number,com.utils.xml,XmlOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlOutPutStreamHandler.cs,StartTextStream,The following statement contains a magic number: someParam.Length > 2
Magic Number,com.utils.xml,XmlOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlOutPutStreamHandler.cs,EndTextStream,The following statement contains a magic number: lcNbFile = Convert.ToInt16(someParam[2]);
Magic Number,com.utils.xml,XmlOutPutStreamHandler,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\utils\xml\XmlOutPutStreamHandler.cs,EndTextStream,The following statement contains a magic number: someParam.Length >= 2
Missing Default,com.drew.metadata.exif,OlympusDescriptor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\exif\OlympusDescriptor.cs,GetSpecialModeDescription,The following switch statement is missing a default case: switch (values[2])   			{  				case 1 :  					desc.Append(BUNDLE["LEFT_TO_RIGHT_PAN_DIR"]);  					break;  				case 2 :  					desc.Append(BUNDLE["RIGHT_TO_LEFT_PAN_DIR"]);  					break;  				case 3 :  					desc.Append(BUNDLE["BOTTOM_TO_TOP_PAN_DIR"]);  					break;  				case 4 :  					desc.Append(BUNDLE["TOP_TO_BOTTOM_PAN_DIR"]);  					break;  			}
Missing Default,com.drew.metadata.iptc,IptcReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\MetaDataExtractorCSharp240d\com\drew\metadata\iptc\IptcReader.cs,ProcessTag,The following switch statement is missing a default case: switch (tagIdentifier)              {                  case IptcDirectory.TAG_RECORD_VERSION:                      // short                      short shortValue = (short)((base.data[anOffset] << 8) | base.data[anOffset + 1]);                      aDirectory.SetObject(tagIdentifier' shortValue);                      return;                  case IptcDirectory.TAG_URGENCY:                      // byte                      aDirectory.SetObject(tagIdentifier' base.data[anOffset]);                      return;                  case IptcDirectory.TAG_RELEASE_DATE:                  case IptcDirectory.TAG_DATE_CREATED:                      // Date object                      if (aTagByteCount >= 8)                      {                          string dateStr = Utils.Decode(base.data' anOffset' aTagByteCount' false);                          try                          {                              int year = Convert.ToInt32(dateStr.Substring(0' 4));                              int month = Convert.ToInt32(dateStr.Substring(4' 2)); //No -1 here;                              int day = Convert.ToInt32(dateStr.Substring(6' 2));                              DateTime date = new DateTime(year' month' day);                              aDirectory.SetObject(tagIdentifier' date);                              return;                          }                          catch (Exception)                          {                              // fall through and we'll store whatever was there as a String                          }                      }                      break; // Added for .Net compiler                  //case IptcDirectory.TAG_RELEASE_TIME:                  //case IptcDirectory.TAG_TIME_CREATED:               }
