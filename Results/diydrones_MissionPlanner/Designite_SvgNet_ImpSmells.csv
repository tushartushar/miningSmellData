Implementation smell,Namespace,Class,File,Method,Description
Long Method,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawString,The method has 101 lines of code.
Long Method,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawLines,The method has 136 lines of code.
Long Method,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The method has 315 lines of code.
Long Method,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawText,The method has 105 lines of code.
Long Method,SvgNet.SvgTypes,SvgPath,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromString,The method has 100 lines of code.
Complex Method,SvgNet,SvgStyledTransformedElement,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgStyledElement.cs,WriteXmlElements,Cyclomatic complexity of the method is 8
Complex Method,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawPath,Cyclomatic complexity of the method is 8
Complex Method,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawString,Cyclomatic complexity of the method is 10
Complex Method,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawLines,Cyclomatic complexity of the method is 9
Complex Method,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawPath,Cyclomatic complexity of the method is 11
Complex Method,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,Cyclomatic complexity of the method is 54
Complex Method,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchor,Cyclomatic complexity of the method is 12
Complex Method,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawText,Cyclomatic complexity of the method is 13
Complex Method,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,HandleBrush,Cyclomatic complexity of the method is 8
Complex Method,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawPath,Cyclomatic complexity of the method is 12
Complex Method,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawPath,Cyclomatic complexity of the method is 11
Complex Method,MetafileTools,MetafileParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,EnumerateMetafile,Cyclomatic complexity of the method is 17
Complex Method,MetafileTools,LineBuffer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GetPoints,Cyclomatic complexity of the method is 8
Complex Method,SvgNet.SvgTypes,SvgStyle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgStyle.cs,SvgStyle,Cyclomatic complexity of the method is 11
Complex Method,SvgNet.SvgTypes,SvgTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgTransformList.cs,FromString,Cyclomatic complexity of the method is 18
Complex Method,SvgNet.SvgTypes,SvgLength,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromString,Cyclomatic complexity of the method is 12
Complex Method,SvgNet.SvgTypes,SvgLength,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,ToString,Cyclomatic complexity of the method is 9
Complex Method,SvgNet.SvgTypes,SvgPath,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromString,Cyclomatic complexity of the method is 17
Long Parameter List,SvgNet,SvgFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgElementFactory.cs,RecCompXML,The method has 5 parameters. Parameters: entities' singletons' doc' el' idx
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawBezier,The method has 9 parameters. Parameters: pen' x1' y1' x2' y2' x3' y3' x4' y4
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawImage,The method has 6 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr' callback
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawImage,The method has 8 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit' imageAttrs
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawImage,The method has 8 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawImageUnscaled,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' x' y
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawString,The method has 6 parameters. Parameters: s' font' brush' x' y' format
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' point' format
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' layoutRectangle' format
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,MeasureString,The method has 6 parameters. Parameters: text' font' layoutArea' stringFormat' charactersFitted' linesFilled
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawBezier,The method has 9 parameters. Parameters: pen' x1' y1' x2' y2' x3' y3' x4' y4
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawImage,The method has 6 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr' callback
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawImage,The method has 8 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit' imageAttrs
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawImage,The method has 8 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawImageUnscaled,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawString,The method has 5 parameters. Parameters: text' font' brush1' x' y
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawString,The method has 6 parameters. Parameters: s' font' brush' x' y' format
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' point' format
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' layoutRectangle' format
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillEllipse,The method has 5 parameters. Parameters: brush' xi' yi' width' height
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPie,The method has 7 parameters. Parameters: brush' xi' yi' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,MeasureString,The method has 6 parameters. Parameters: text' font' layoutArea' stringFormat' charactersFitted' linesFilled
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawBezier,The method has 9 parameters. Parameters: pen' x1' y1' x2' y2' x3' y3' x4' y4
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The method has 6 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr' callback
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The method has 8 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit' imageAttrs
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The method has 8 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit' imageAttr
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImageUnscaled,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' x' y
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawString,The method has 6 parameters. Parameters: s' font' brush' x' y' format
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' point' format
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' layoutRectangle' format
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,MeasureString,The method has 6 parameters. Parameters: text' font' layoutArea' stringFormat' charactersFitted' linesFilled
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImagePixel,The method has 6 parameters. Parameters: container' c' x' y' w' h
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The method has 7 parameters. Parameters: x' y' width' height' startAngle' sweepAngle' pie
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,Spline2Bez,The method has 5 parameters. Parameters: points' start' num' closed' tension
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawBitmapData,The method has 6 parameters. Parameters: b' x' y' w' h' scale
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchor,The method has 7 parameters. Parameters: lc' clc' col' w' pt' angle' ignoreUnsupportedLineCaps
Long Parameter List,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawText,The method has 6 parameters. Parameters: s' font' brush' rect' fmt' ignoreRect
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawBezier,The method has 9 parameters. Parameters: pen' x1' y1' x2' y2' x3' y3' x4' y4
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImage,The method has 6 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr' callback
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImage,The method has 8 parameters. Parameters: img' rectangle' srcX' srcY' srcWidth' srcHeight' graphicsUnit' tileFlipXYAttributes
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImage,The method has 8 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit' imageAttr
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImage,The method has 5 parameters. Parameters: img' i' i1' width' height
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImage,The method has 8 parameters. Parameters: image' rectangle' p1' p2' p3' p4' graphicsUnit' TileFlipXYAttributes
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImageUnscaled,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' x' y
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawString,The method has 6 parameters. Parameters: s' font' brush' x' y' format
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' point' format
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' layoutRectangle' format
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawText,The method has 6 parameters. Parameters: s' font' brush' layoutRectangle' format' duno
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,MeasureString,The method has 6 parameters. Parameters: text' font' layoutArea' stringFormat' charactersFitted' linesFilled
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,GDIArc2SVGPath,The method has 7 parameters. Parameters: x' y' width' height' startAngle' sweepAngle' pie
Long Parameter List,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,Spline2Bez,The method has 5 parameters. Parameters: points' start' num' closed' tension
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawArc,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawBezier,The method has 9 parameters. Parameters: pen' x1' y1' x2' y2' x3' y3' x4' y4
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawBezier,The method has 5 parameters. Parameters: pen' pt1' pt2' pt3' pt4
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawCurve,The method has 5 parameters. Parameters: pen' points' offset' numberOfSegments' tension
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawEllipse,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawImage,The method has 5 parameters. Parameters: image' x' y' srcRect' srcUnit
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawImage,The method has 6 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr' callback
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawImage,The method has 5 parameters. Parameters: image' destPoints' srcRect' srcUnit' imageAttr
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawImage,The method has 8 parameters. Parameters: image' rectangle' srcX' srcY' srcWidth' srcHeight' graphicsUnit' tileFlipXYAttributes
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawImage,The method has 7 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawImage,The method has 8 parameters. Parameters: image' destRect' srcX' srcY' srcWidth' srcHeight' srcUnit' imageAttr
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawImageUnscaled,The method has 5 parameters. Parameters: image' x' y' width' height
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawLine,The method has 5 parameters. Parameters: pen' x1' y1' x2' y2
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawPie,The method has 7 parameters. Parameters: pen' x' y' width' height' startAngle' sweepAngle
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawRectangle,The method has 5 parameters. Parameters: pen' x' y' width' height
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' x' y
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawString,The method has 6 parameters. Parameters: s' font' brush' x' y' format
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' point' format
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawString,The method has 5 parameters. Parameters: s' font' brush' layoutRectangle' format
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawText,The method has 6 parameters. Parameters: s' font' brush' layoutRectangle' format' duno
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,FillEllipse,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,FillPie,The method has 7 parameters. Parameters: brush' x' y' width' height' startAngle' sweepAngle
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,FillRectangle,The method has 5 parameters. Parameters: brush' x' y' width' height
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,MeasureString,The method has 6 parameters. Parameters: text' font' layoutArea' stringFormat' charactersFitted' linesFilled
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,GDIArc2SVGPath,The method has 7 parameters. Parameters: x' y' width' height' startAngle' sweepAngle' pie
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,Spline2Bez,The method has 5 parameters. Parameters: points' start' num' closed' tension
Long Parameter List,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawBitmapData,The method has 6 parameters. Parameters: img' x' y' width' height' scale
Long Parameter List,SvgNet.SvgElements,SvgPatternElement,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgLinearGradient.cs,SvgPatternElement,The method has 5 parameters. Parameters: x' y' width' height' vport
Long Parameter List,SvgNet.SvgElements,SvgSvgElement,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgSvgElement.cs,SvgSvgElement,The method has 5 parameters. Parameters: x' y' width' height' vport
Long Parameter List,MetafileTools,MetafileParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,EnumerateMetafile,The method has 5 parameters. Parameters: emf' unitSize' destination' drawLine' fillPolygon
Long Statement,SvgNet.SvgGdi,GdiGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GDIGraphics.cs,MeasureString,The length of the statement  "            int a' b; var siz = _g.MeasureString(text' font' layoutArea' stringFormat' out a' out b); charactersFitted = a; linesFilled = b; return siz; " is 140.
Long Statement,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawString,The length of the statement  "                    //charbitmaps[charid] = charbitmaps[charid].Clone(new RectangleF(0' 0' maxx + 2' maxy + 2)' charbitmaps[charid].PixelFormat); " is 125.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawArc,The length of the statement  "            DrawArc(pen' (Single)rect.X' (Single)rect.X' (Single)rect.Width' (Single)rect.Height' (Single)startAngle' (Single)sweepAngle);" is 126.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawBezier,The length of the statement  "                D = "M " + x1.ToString("F"' CultureInfo.InvariantCulture) + " " + y1.ToString("F"' CultureInfo.InvariantCulture) + " C " +" is 122.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawBezier,The length of the statement  "            DrawBezier(pen' (Single)pt1.X' (Single)pt1.Y' (Single)pt2.X' (Single)pt2.Y' (Single)pt3.X' (Single)pt3.Y' (Single)pt4.X' (Single)pt4.Y);" is 136.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawBeziers,The length of the statement  "            string s = "M " + points[0].X.ToString("F"' CultureInfo.InvariantCulture) + " " + points[0].Y.ToString("F"' CultureInfo.InvariantCulture) + " C ";" is 146.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawBeziers,The length of the statement  "                s += points[i].X.ToString("F"' CultureInfo.InvariantCulture) + " " + points[i].Y.ToString("F"' CultureInfo.InvariantCulture) + " ";" is 131.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The length of the statement  "{ throw new SvgGdiNotImpl("DrawImage (Image image' PointF[] destPoints' RectangleF srcRect' GraphicsUnit srcUnit' ImageAttributes imageAttr)"); }" is 145.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The length of the statement  "{ throw new SvgGdiNotImpl("DrawImage (Image image' PointF[] destPoints' RectangleF srcRect' GraphicsUnit srcUnit' ImageAttributes imageAttr' Graphics.DrawImageAbort callback)"); }" is 179.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The length of the statement  "{ throw new SvgGdiNotImpl("DrawImage (Image image' Point[] destPoints' Rectangle srcRect' GraphicsUnit srcUnit' ImageAttributes imageAttr)"); }" is 143.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The length of the statement  "{ throw new SvgGdiNotImpl("DrawImage (Image image' Rectangle destRect' Single srcX' Single srcY' Single srcWidth' Single srcHeight' GraphicsUnit srcUnit)"); }" is 158.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The length of the statement  "{ throw new SvgGdiNotImpl("DrawImage (Image image' Rectangle destRect' Single srcX' Single srcY' Single srcWidth' Single srcHeight' GraphicsUnit srcUnit' ImageAttributes imageAttrs)"); }" is 186.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The length of the statement  "{ throw new SvgGdiNotImpl("DrawImage (Image image' Rectangle destRect' Int32 srcX' Int32 srcY' Int32 srcWidth' Int32 srcHeight' GraphicsUnit srcUnit)"); }" is 154.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImage,The length of the statement  "{ throw new SvgGdiNotImpl("DrawImage (Image image' Rectangle destRect' Int32 srcX' Int32 srcY' Int32 srcWidth' Int32 srcHeight' GraphicsUnit srcUnit' ImageAttributes imageAttr)"); }" is 181.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawPath,The length of the statement  "                    if (((lastType & PathPointType.PathTypeMask) == PathPointType.Line) && ((originType & PathPointType.PathTypeMask) == PathPointType.Line))" is 137.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawPie,The length of the statement  "            DrawPie(pen' (Single)rect.X' (Single)rect.X' (Single)rect.Width' (Single)rect.Height' (Single)startAngle' (Single)sweepAngle);" is 126.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The length of the statement  "            string s = "M " + start.X.ToString("F"' CultureInfo.InvariantCulture) + "'" + start.Y.ToString("F"' CultureInfo.InvariantCulture) +" is 131.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The length of the statement  "                " A " + (width / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " + (height / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " +" is 138.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The length of the statement  "                "0 " + longArc.ToString() + " 0 " + end.X.ToString("F"' CultureInfo.InvariantCulture) + " " + end.Y.ToString("F"' CultureInfo.InvariantCulture);" is 144.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The length of the statement  "                s += " L " + center.X.ToString("F"' CultureInfo.InvariantCulture) + "'" + center.Y.ToString("F"' CultureInfo.InvariantCulture);" is 127.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The length of the statement  "                s += " L " + start.X.ToString("F"' CultureInfo.InvariantCulture) + "'" + start.Y.ToString("F"' CultureInfo.InvariantCulture);" is 125.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawBitmapData,The length of the statement  "            SvgGroupElement g = new SvgGroupElement("bitmap_at_" + x.ToString("F"' CultureInfo.InvariantCulture) + "_" + y.ToString("F"' CultureInfo.InvariantCulture));" is 156.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillBeziers,The length of the statement  "            string s = "M " + points[0].X.ToString("F"' CultureInfo.InvariantCulture) + " " + points[0].Y.ToString("F"' CultureInfo.InvariantCulture) + " C ";" is 146.
Long Statement,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillBeziers,The length of the statement  "                s += points[i].X.ToString("F"' CultureInfo.InvariantCulture) + " " + points[i].Y.ToString("F"' CultureInfo.InvariantCulture) + " ";" is 131.
Long Statement,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,FromImage,The length of the statement  "            ans._surface = SKSurface.Create(new SKImageInfo(bmp.Width' bmp.Height' SKColorType.Bgra8888' SKAlphaType.Premul)' data.Scan0' data.Stride); " is 139.
Virtual Method Call from Constructor,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,SvgGraphics,The constructor "SvgGraphics" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,SvgGraphics,The constructor "SvgGraphics" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,SvgGraphics,The constructor "SvgGraphics" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgElements,SvgTextElement,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgTextElement.cs,SvgTextElement,The constructor "SvgTextElement" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgElements,SvgTextElement,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgTextElement.cs,SvgTextElement,The constructor "SvgTextElement" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgElements,SvgTspanElement,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgTextElement.cs,SvgTspanElement,The constructor "SvgTspanElement" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgElements,SvgTspanElement,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgTextElement.cs,SvgTspanElement,The constructor "SvgTspanElement" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgElements,SvgTitleElement,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgTitleElement.cs,SvgTitleElement,The constructor "SvgTitleElement" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgElements,SvgTitleElement,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgTitleElement.cs,SvgTitleElement,The constructor "SvgTitleElement" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgElements,SvgDescElement,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgTitleElement.cs,SvgDescElement,The constructor "SvgDescElement" calls a virtual method "AddChild".
Virtual Method Call from Constructor,SvgNet.SvgElements,SvgDescElement,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgTitleElement.cs,SvgDescElement,The constructor "SvgDescElement" calls a virtual method "AddChild".
Empty Catch Block,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchors,The method has an empty catch block.
Empty Catch Block,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchors,The method has an empty catch block.
Empty Catch Block,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,HandleBrush,The method has an empty catch block.
Empty Catch Block,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawImage,The method has an empty catch block.
Magic Number,SvgNet,SvgFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgElementFactory.cs,RecCompXML,The following statement contains a magic number: val.Length > 30
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,GL2,The following statement contains a magic number: npotSupported = v.Major >= 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawArc,The following statement contains a magic number: startAngle = 360 - startAngle;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawArc,The following statement contains a magic number: startAngle -= 30;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawArc,The following statement contains a magic number: x = (float)Math.Sin(i * deg2rad) * rect.Width / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawArc,The following statement contains a magic number: y = (float)Math.Cos(i * deg2rad) * rect.Height / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawArc,The following statement contains a magic number: x = x + rect.X + rect.Width / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawArc,The following statement contains a magic number: y = y + rect.Y + rect.Height / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawEllipse,The following statement contains a magic number: x = (float)Math.Sin(i * deg2rad) * rect.Width / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawEllipse,The following statement contains a magic number: y = (float)Math.Cos(i * deg2rad) * rect.Height / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawEllipse,The following statement contains a magic number: x = x + rect.X + rect.Width / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawEllipse,The following statement contains a magic number: y = y + rect.Y + rect.Height / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawEllipse,The following statement contains a magic number: i < 360
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawLines,The following statement contains a magic number: PointF last = new PointF(99999'0);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawLines,The following statement contains a magic number: last.X!=99999
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawPath,The following statement contains a magic number: type == 3
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawPath,The following statement contains a magic number: list.Count >= 2
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawString,The following statement contains a magic number: Pen _p = new Pen(brush.Color' 2);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawString,The following statement contains a magic number: int charid = charno ^ (int)(fontsize * 1000) ^ brush.Color.ToArgb();
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawString,The following statement contains a magic number: charDict[charid] = new character()                      {                          bitmap = new Bitmap(128' 128' System.Drawing.Imaging.PixelFormat.Format32bppArgb)'                          size = (int)fontsize                      };
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawString,The following statement contains a magic number: charDict[charid] = new character()                      {                          bitmap = new Bitmap(128' 128' System.Drawing.Imaging.PixelFormat.Format32bppArgb)'                          size = (int)fontsize                      };
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawString,The following statement contains a magic number: pth.AddString(cha + ""' font.FontFamily' 0' fontsize + 2' new Point((int)0' (int)0)'                                  StringFormat.GenericTypographic);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,DrawString,The following statement contains a magic number: charDict[charid].width = (int)(maxx + 2);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillEllipse,The following statement contains a magic number: x = (float)Math.Sin(i * deg2rad) * width / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillEllipse,The following statement contains a magic number: y = (float)Math.Cos(i * deg2rad) * height / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillEllipse,The following statement contains a magic number: x = x + xi + width / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillEllipse,The following statement contains a magic number: y = y + yi + height / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillEllipse,The following statement contains a magic number: i < 360
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPath,The following statement contains a magic number: tess.Tessellate(LibTessDotNet.WindingRule.EvenOdd' LibTessDotNet.ElementType.Polygons' 3);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPath,The following statement contains a magic number: GL.Color4(((SolidBrush)brush).Color.R / 255f' ((SolidBrush)brush).Color.G / 255f'                  ((SolidBrush)brush).Color.B / 255f' ((SolidBrush)brush).Color.A / 255f);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPath,The following statement contains a magic number: GL.Color4(((SolidBrush)brush).Color.R / 255f' ((SolidBrush)brush).Color.G / 255f'                  ((SolidBrush)brush).Color.B / 255f' ((SolidBrush)brush).Color.A / 255f);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPath,The following statement contains a magic number: GL.Color4(((SolidBrush)brush).Color.R / 255f' ((SolidBrush)brush).Color.G / 255f'                  ((SolidBrush)brush).Color.B / 255f' ((SolidBrush)brush).Color.A / 255f);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPath,The following statement contains a magic number: GL.Color4(((SolidBrush)brush).Color.R / 255f' ((SolidBrush)brush).Color.G / 255f'                  ((SolidBrush)brush).Color.B / 255f' ((SolidBrush)brush).Color.A / 255f);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPath,The following statement contains a magic number: var v0 = tess.Vertices[tess.Elements[i * 3]].Position;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPath,The following statement contains a magic number: var v1 = tess.Vertices[tess.Elements[i * 3 + 1]].Position;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPath,The following statement contains a magic number: var v2 = tess.Vertices[tess.Elements[i * 3 + 2]].Position;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPath,The following statement contains a magic number: var v2 = tess.Vertices[tess.Elements[i * 3 + 2]].Position;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPie,The following statement contains a magic number: GL.Color4(((SolidBrush)brush).Color.R / 255f' ((SolidBrush)brush).Color.G / 255f'                  ((SolidBrush)brush).Color.B / 255f' ((SolidBrush)brush).Color.A / 255f);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPie,The following statement contains a magic number: GL.Color4(((SolidBrush)brush).Color.R / 255f' ((SolidBrush)brush).Color.G / 255f'                  ((SolidBrush)brush).Color.B / 255f' ((SolidBrush)brush).Color.A / 255f);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPie,The following statement contains a magic number: GL.Color4(((SolidBrush)brush).Color.R / 255f' ((SolidBrush)brush).Color.G / 255f'                  ((SolidBrush)brush).Color.B / 255f' ((SolidBrush)brush).Color.A / 255f);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPie,The following statement contains a magic number: GL.Color4(((SolidBrush)brush).Color.R / 255f' ((SolidBrush)brush).Color.G / 255f'                  ((SolidBrush)brush).Color.B / 255f' ((SolidBrush)brush).Color.A / 255f);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPie,The following statement contains a magic number: x = (float)Math.Sin(i * deg2rad) * width / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPie,The following statement contains a magic number: y = (float)Math.Cos(i * deg2rad) * height / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPie,The following statement contains a magic number: x = x + xi + width / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPie,The following statement contains a magic number: y = y + yi + height / 2;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPolygon,The following statement contains a magic number: tess.Tessellate(LibTessDotNet.WindingRule.EvenOdd' LibTessDotNet.ElementType.Polygons' 3);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPolygon,The following statement contains a magic number: GL.Color4(((SolidBrush)brush).Color.R / 255f' ((SolidBrush)brush).Color.G / 255f'                  ((SolidBrush)brush).Color.B / 255f' ((SolidBrush)brush).Color.A / 255f);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPolygon,The following statement contains a magic number: GL.Color4(((SolidBrush)brush).Color.R / 255f' ((SolidBrush)brush).Color.G / 255f'                  ((SolidBrush)brush).Color.B / 255f' ((SolidBrush)brush).Color.A / 255f);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPolygon,The following statement contains a magic number: GL.Color4(((SolidBrush)brush).Color.R / 255f' ((SolidBrush)brush).Color.G / 255f'                  ((SolidBrush)brush).Color.B / 255f' ((SolidBrush)brush).Color.A / 255f);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPolygon,The following statement contains a magic number: GL.Color4(((SolidBrush)brush).Color.R / 255f' ((SolidBrush)brush).Color.G / 255f'                  ((SolidBrush)brush).Color.B / 255f' ((SolidBrush)brush).Color.A / 255f);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPolygon,The following statement contains a magic number: var v0 = tess.Vertices[tess.Elements[i * 3]].Position;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPolygon,The following statement contains a magic number: var v1 = tess.Vertices[tess.Elements[i * 3 + 1]].Position;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPolygon,The following statement contains a magic number: var v2 = tess.Vertices[tess.Elements[i * 3 + 2]].Position;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,FillPolygon,The following statement contains a magic number: var v2 = tess.Vertices[tess.Elements[i * 3 + 2]].Position;
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: float[] model = new float[16];
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: var current = new Matrix4(model[0]' model[1]' model[2]' model[3]'                      model[4]' model[5]' model[6]' model[7]'                      model[8]' model[9]' model[10]' model[11]'                      model[12]' model[13]' model[14]' model[15]);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: var current = new Matrix4(model[0]' model[1]' model[2]' model[3]'                      model[4]' model[5]' model[6]' model[7]'                      model[8]' model[9]' model[10]' model[11]'                      model[12]' model[13]' model[14]' model[15]);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: var current = new Matrix4(model[0]' model[1]' model[2]' model[3]'                      model[4]' model[5]' model[6]' model[7]'                      model[8]' model[9]' model[10]' model[11]'                      model[12]' model[13]' model[14]' model[15]);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: var current = new Matrix4(model[0]' model[1]' model[2]' model[3]'                      model[4]' model[5]' model[6]' model[7]'                      model[8]' model[9]' model[10]' model[11]'                      model[12]' model[13]' model[14]' model[15]);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: var current = new Matrix4(model[0]' model[1]' model[2]' model[3]'                      model[4]' model[5]' model[6]' model[7]'                      model[8]' model[9]' model[10]' model[11]'                      model[12]' model[13]' model[14]' model[15]);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: var current = new Matrix4(model[0]' model[1]' model[2]' model[3]'                      model[4]' model[5]' model[6]' model[7]'                      model[8]' model[9]' model[10]' model[11]'                      model[12]' model[13]' model[14]' model[15]);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: var current = new Matrix4(model[0]' model[1]' model[2]' model[3]'                      model[4]' model[5]' model[6]' model[7]'                      model[8]' model[9]' model[10]' model[11]'                      model[12]' model[13]' model[14]' model[15]);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: var current = new Matrix4(model[0]' model[1]' model[2]' model[3]'                      model[4]' model[5]' model[6]' model[7]'                      model[8]' model[9]' model[10]' model[11]'                      model[12]' model[13]' model[14]' model[15]);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: var current = new Matrix4(model[0]' model[1]' model[2]' model[3]'                      model[4]' model[5]' model[6]' model[7]'                      model[8]' model[9]' model[10]' model[11]'                      model[12]' model[13]' model[14]' model[15]);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: var current = new Matrix4(model[0]' model[1]' model[2]' model[3]'                      model[4]' model[5]' model[6]' model[7]'                      model[8]' model[9]' model[10]' model[11]'                      model[12]' model[13]' model[14]' model[15]);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: var current = new Matrix4(model[0]' model[1]' model[2]' model[3]'                      model[4]' model[5]' model[6]' model[7]'                      model[8]' model[9]' model[10]' model[11]'                      model[12]' model[13]' model[14]' model[15]);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: var current = new Matrix4(model[0]' model[1]' model[2]' model[3]'                      model[4]' model[5]' model[6]' model[7]'                      model[8]' model[9]' model[10]' model[11]'                      model[12]' model[13]' model[14]' model[15]);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: var current = new Matrix4(model[0]' model[1]' model[2]' model[3]'                      model[4]' model[5]' model[6]' model[7]'                      model[8]' model[9]' model[10]' model[11]'                      model[12]' model[13]' model[14]' model[15]);
Magic Number,SvgNet.SvgGdi,GL2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\GL2.cs,TranslateTransform,The following statement contains a magic number: var current = new Matrix4(model[0]' model[1]' model[2]' model[3]'                      model[4]' model[5]' model[6]' model[7]'                      model[8]' model[9]' model[10]' model[11]'                      model[12]' model[13]' model[14]' model[15]);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawClosedCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(points' 0' points.Length - 1' true' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawClosedCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' true' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(points' 0' points.Length - 1' false' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(points' offset' numberOfSegments' false' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' false' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEllipse,The following statement contains a magic number: SvgEllipseElement el = new SvgEllipseElement(x + width / 2' y + height / 2' width / 2' height / 2);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEllipse,The following statement contains a magic number: SvgEllipseElement el = new SvgEllipseElement(x + width / 2' y + height / 2' width / 2' height / 2);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEllipse,The following statement contains a magic number: SvgEllipseElement el = new SvgEllipseElement(x + width / 2' y + height / 2' width / 2' height / 2);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEllipse,The following statement contains a magic number: SvgEllipseElement el = new SvgEllipseElement(x + width / 2' y + height / 2' width / 2' height / 2);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawPath,The following statement contains a magic number: PointF[] bezierCurvePoints = new PointF[4];
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawPath,The following statement contains a magic number: switch ((PathPointType)subpath.PathTypes[i] & PathPointType.PathTypeMask) //Mask off non path-type types                     {                         case PathPointType.Start:                             start = subpath.PathPoints[i];                             bezierCurvePoints[0] = subpath.PathPoints[i];                             bezierCurvePointsIndex = 1;                             pen.DashStyle = originalPenDashStyle; //Reset pen dash mode to original when starting subpath                             continue;                         case PathPointType.Line:                                DrawLine(pen' start' subpath.PathPoints[i]); //Draw a line segment ftom start point                             start = subpath.PathPoints[i]; //Move start point to line end                             bezierCurvePoints[0] = subpath.PathPoints[i]; //A line point can also be the start of a Bezier curve                             bezierCurvePointsIndex = 1;                             continue;                         case PathPointType.Bezier3:                             bezierCurvePoints[bezierCurvePointsIndex++] = subpath.PathPoints[i];                             if (bezierCurvePointsIndex == 4) //If 4 points including start have been found then draw the Bezier curve                             {                                 DrawBezier(pen' bezierCurvePoints[0]' bezierCurvePoints[1]' bezierCurvePoints[2]' bezierCurvePoints[3]);                                 bezierCurvePoints = new PointF[4];                                 bezierCurvePoints[0] = subpath.PathPoints[i];                                 bezierCurvePointsIndex = 1;                                 start = subpath.PathPoints[i]; //Move start point to curve end                             }                             continue;                         default:                             switch ((PathPointType)subpath.PathTypes[i])                             {                                 case PathPointType.DashMode:                                     pen.DashStyle = DashStyle.Dash;                                     continue;                                 default:                                     throw new SvgException("Unknown path type value: " + subpath.PathTypes[i]);                             }                     }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawPath,The following statement contains a magic number: switch ((PathPointType)subpath.PathTypes[i] & PathPointType.PathTypeMask) //Mask off non path-type types                     {                         case PathPointType.Start:                             start = subpath.PathPoints[i];                             bezierCurvePoints[0] = subpath.PathPoints[i];                             bezierCurvePointsIndex = 1;                             pen.DashStyle = originalPenDashStyle; //Reset pen dash mode to original when starting subpath                             continue;                         case PathPointType.Line:                                DrawLine(pen' start' subpath.PathPoints[i]); //Draw a line segment ftom start point                             start = subpath.PathPoints[i]; //Move start point to line end                             bezierCurvePoints[0] = subpath.PathPoints[i]; //A line point can also be the start of a Bezier curve                             bezierCurvePointsIndex = 1;                             continue;                         case PathPointType.Bezier3:                             bezierCurvePoints[bezierCurvePointsIndex++] = subpath.PathPoints[i];                             if (bezierCurvePointsIndex == 4) //If 4 points including start have been found then draw the Bezier curve                             {                                 DrawBezier(pen' bezierCurvePoints[0]' bezierCurvePoints[1]' bezierCurvePoints[2]' bezierCurvePoints[3]);                                 bezierCurvePoints = new PointF[4];                                 bezierCurvePoints[0] = subpath.PathPoints[i];                                 bezierCurvePointsIndex = 1;                                 start = subpath.PathPoints[i]; //Move start point to curve end                             }                             continue;                         default:                             switch ((PathPointType)subpath.PathTypes[i])                             {                                 case PathPointType.DashMode:                                     pen.DashStyle = DashStyle.Dash;                                     continue;                                 default:                                     throw new SvgException("Unknown path type value: " + subpath.PathTypes[i]);                             }                     }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawPath,The following statement contains a magic number: switch ((PathPointType)subpath.PathTypes[i] & PathPointType.PathTypeMask) //Mask off non path-type types                     {                         case PathPointType.Start:                             start = subpath.PathPoints[i];                             bezierCurvePoints[0] = subpath.PathPoints[i];                             bezierCurvePointsIndex = 1;                             pen.DashStyle = originalPenDashStyle; //Reset pen dash mode to original when starting subpath                             continue;                         case PathPointType.Line:                                DrawLine(pen' start' subpath.PathPoints[i]); //Draw a line segment ftom start point                             start = subpath.PathPoints[i]; //Move start point to line end                             bezierCurvePoints[0] = subpath.PathPoints[i]; //A line point can also be the start of a Bezier curve                             bezierCurvePointsIndex = 1;                             continue;                         case PathPointType.Bezier3:                             bezierCurvePoints[bezierCurvePointsIndex++] = subpath.PathPoints[i];                             if (bezierCurvePointsIndex == 4) //If 4 points including start have been found then draw the Bezier curve                             {                                 DrawBezier(pen' bezierCurvePoints[0]' bezierCurvePoints[1]' bezierCurvePoints[2]' bezierCurvePoints[3]);                                 bezierCurvePoints = new PointF[4];                                 bezierCurvePoints[0] = subpath.PathPoints[i];                                 bezierCurvePointsIndex = 1;                                 start = subpath.PathPoints[i]; //Move start point to curve end                             }                             continue;                         default:                             switch ((PathPointType)subpath.PathTypes[i])                             {                                 case PathPointType.DashMode:                                     pen.DashStyle = DashStyle.Dash;                                     continue;                                 default:                                     throw new SvgException("Unknown path type value: " + subpath.PathTypes[i]);                             }                     }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawPath,The following statement contains a magic number: switch ((PathPointType)subpath.PathTypes[i] & PathPointType.PathTypeMask) //Mask off non path-type types                     {                         case PathPointType.Start:                             start = subpath.PathPoints[i];                             bezierCurvePoints[0] = subpath.PathPoints[i];                             bezierCurvePointsIndex = 1;                             pen.DashStyle = originalPenDashStyle; //Reset pen dash mode to original when starting subpath                             continue;                         case PathPointType.Line:                                DrawLine(pen' start' subpath.PathPoints[i]); //Draw a line segment ftom start point                             start = subpath.PathPoints[i]; //Move start point to line end                             bezierCurvePoints[0] = subpath.PathPoints[i]; //A line point can also be the start of a Bezier curve                             bezierCurvePointsIndex = 1;                             continue;                         case PathPointType.Bezier3:                             bezierCurvePoints[bezierCurvePointsIndex++] = subpath.PathPoints[i];                             if (bezierCurvePointsIndex == 4) //If 4 points including start have been found then draw the Bezier curve                             {                                 DrawBezier(pen' bezierCurvePoints[0]' bezierCurvePoints[1]' bezierCurvePoints[2]' bezierCurvePoints[3]);                                 bezierCurvePoints = new PointF[4];                                 bezierCurvePoints[0] = subpath.PathPoints[i];                                 bezierCurvePointsIndex = 1;                                 start = subpath.PathPoints[i]; //Move start point to curve end                             }                             continue;                         default:                             switch ((PathPointType)subpath.PathTypes[i])                             {                                 case PathPointType.DashMode:                                     pen.DashStyle = DashStyle.Dash;                                     continue;                                 default:                                     throw new SvgException("Unknown path type value: " + subpath.PathTypes[i]);                             }                     }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillClosedCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(points' 0' points.Length - 1' true' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillClosedCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(points' 0' points.Length - 1' true' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillClosedCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' true' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillClosedCurve,The following statement contains a magic number: PointF[] pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' true' .5f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillEllipse,The following statement contains a magic number: SvgEllipseElement el = new SvgEllipseElement(x + width / 2' y + height / 2' width / 2' height / 2);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillEllipse,The following statement contains a magic number: SvgEllipseElement el = new SvgEllipseElement(x + width / 2' y + height / 2' width / 2' height / 2);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillEllipse,The following statement contains a magic number: SvgEllipseElement el = new SvgEllipseElement(x + width / 2' y + height / 2' width / 2' height / 2);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillEllipse,The following statement contains a magic number: SvgEllipseElement el = new SvgEllipseElement(x + width / 2' y + height / 2' width / 2' height / 2);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,FillPath,The following statement contains a magic number: subpaths.NextSubpath(subpath' out isClosed) < 2
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,AddHatchBrushDetails,The following statement contains a magic number: switch (hs)             {                 case HatchStyle.Cross:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.BackwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.LightDownwardDiagonal:                 case HatchStyle.DarkDownwardDiagonal:                     l1 = new SvgLineElement(4' 0' 8' 4);                     l2 = new SvgLineElement(0' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.LightHorizontal:                 case HatchStyle.DarkHorizontal:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     break;                  case HatchStyle.LightUpwardDiagonal:                 case HatchStyle.DarkUpwardDiagonal:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 8' 8' 4);                     l3 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.LightVertical:                 case HatchStyle.DarkVertical:                     l1 = new SvgLineElement(2' 0' 2' 8);                     l2 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.DashedDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 4' 4);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.DashedHorizontal:                     l1 = new SvgLineElement(0' 2' 4' 2);                     l2 = new SvgLineElement(4' 6' 8' 6);                     break;                  case HatchStyle.DashedUpwardDiagonal:                     l1 = new SvgLineElement(4' 0' 0' 4);                     l2 = new SvgLineElement(8' 0' 4' 4);                     break;                  case HatchStyle.DashedVertical:                     l1 = new SvgLineElement(2' 0' 2' 4);                     l2 = new SvgLineElement(6' 4' 6' 8);                     break;                  case HatchStyle.DiagonalBrick:                     l1 = new SvgLineElement(0' 8' 8' 0);                     l2 = new SvgLineElement(0' 0' 4' 4);                     l3 = new SvgLineElement(7' 9' 9' 7);                     break;                  case HatchStyle.DiagonalCross:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Divot:                     l1 = new SvgLineElement(2' 2' 4' 4);                     l2 = new SvgLineElement(4' 4' 2' 6);                     break;                  case HatchStyle.DottedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 8' 8' 0);                     break;                  case HatchStyle.DottedGrid:                     l1 = new SvgLineElement(4' 0' 4' 8);                     l2 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.ForwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     break;                  case HatchStyle.Horizontal:                     l1 = new SvgLineElement(0' 4' 8' 4);                     break;                  case HatchStyle.HorizontalBrick:                     l1 = new SvgLineElement(0' 3' 8' 3);                     l2 = new SvgLineElement(3' 0' 3' 3);                     l3 = new SvgLineElement(0' 3' 0' 7);                     l4 = new SvgLineElement(0' 7' 7' 7);                     break;                  case HatchStyle.LargeCheckerBoard:                     l1 = new SvgRectElement(0' 0' 3f' 3f);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.LargeConfetti:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(2' 3' 1' 1);                     l3 = new SvgRectElement(5' 2' 1' 1);                     l4 = new SvgRectElement(6' 6' 1' 1);                     break;                  case HatchStyle.NarrowHorizontal:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.NarrowVertical:                     l1 = new SvgLineElement(1' 0' 1' 8);                     l2 = new SvgLineElement(3' 0' 3' 8);                     l3 = new SvgLineElement(5' 0' 5' 8);                     l4 = new SvgLineElement(7' 0' 7' 8);                     break;                  case HatchStyle.OutlinedDiamond:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(8' 0' 0' 8);                     break;                  case HatchStyle.Plaid:                     l1 = new SvgLineElement(0' 0' 8' 0);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgRectElement(0' 4' 3' 3);                     break;                  case HatchStyle.Shingle:                     l1 = new SvgLineElement(0' 2' 2' 0);                     l2 = new SvgLineElement(2' 0' 7' 5);                     l3 = new SvgLineElement(0' 3' 3' 7);                     break;                  case HatchStyle.SmallCheckerBoard:                     l1 = new SvgRectElement(0' 0' 1' 1);                     l2 = new SvgRectElement(4' 4' 1' 1);                     l3 = new SvgRectElement(4' 0' 1' 1);                     l4 = new SvgRectElement(0' 4' 1' 1);                     break;                  case HatchStyle.SmallConfetti:                     l1 = new SvgLineElement(0' 0' 2' 2);                     l2 = new SvgLineElement(7' 3' 5' 5);                     l3 = new SvgLineElement(2' 6' 4' 4);                     break;                  case HatchStyle.SmallGrid:                     l1 = new SvgLineElement(0' 2' 8' 2);                     l2 = new SvgLineElement(0' 6' 8' 6);                     l3 = new SvgLineElement(2' 0' 2' 8);                     l4 = new SvgLineElement(6' 0' 6' 8);                     break;                  case HatchStyle.SolidDiamond:                     l1 = new SvgPolygonElement("3 0 6 3 3 6 0 3");                     break;                  case HatchStyle.Sphere:                     l1 = new SvgEllipseElement(3' 3' 2' 2);                     break;                  case HatchStyle.Trellis:                     l1 = new SvgLineElement(0' 1' 8' 1);                     l2 = new SvgLineElement(0' 3' 8' 3);                     l3 = new SvgLineElement(0' 5' 8' 5);                     l4 = new SvgLineElement(0' 7' 8' 7);                     break;                  case HatchStyle.Vertical:                     l4 = new SvgLineElement(0' 0' 0' 8);                     break;                  case HatchStyle.Wave:                     l3 = new SvgLineElement(0' 4' 3' 2);                     l4 = new SvgLineElement(3' 2' 8' 4);                     break;                  case HatchStyle.Weave:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(8' 4' 4' 8);                     l3 = new SvgLineElement(0' 0' 0' 4);                     l4 = new SvgLineElement(0' 4' 4' 8);                     break;                  case HatchStyle.WideDownwardDiagonal:                     l1 = new SvgLineElement(0' 0' 8' 8);                     l2 = new SvgLineElement(0' 1' 8' 9);                     l3 = new SvgLineElement(7' 0' 8' 1);                     break;                  case HatchStyle.WideUpwardDiagonal:                     l1 = new SvgLineElement(8' 0' 0' 8);                     l2 = new SvgLineElement(8' 1' 0' 9);                     l3 = new SvgLineElement(0' 1' -1' 0);                     break;                  case HatchStyle.ZigZag:                     l1 = new SvgLineElement(0' 4' 4' 0);                     l2 = new SvgLineElement(4' 0' 8' 4);                     break;                  case HatchStyle.Percent05:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 4' 5' 4);                     break;                  case HatchStyle.Percent10:                     l1 = new SvgLineElement(0' 0' 1' 0);                     l2 = new SvgLineElement(4' 2' 5' 2);                     l3 = new SvgLineElement(2' 4' 3' 4);                     l4 = new SvgLineElement(6' 6' 7' 6);                     break;                  case HatchStyle.Percent20:                     l1 = new SvgLineElement(0' 0' 2' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 4' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent25:                     l1 = new SvgLineElement(0' 0' 3' 0);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgLineElement(2' 4' 5' 4);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent30:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgLineElement(4' 2' 6' 2);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgLineElement(5' 6' 7' 6);                     break;                  case HatchStyle.Percent40:                     l1 = new SvgRectElement(0' 0' 3' 1);                     l2 = new SvgRectElement(4' 2' 3' 1);                     l3 = new SvgRectElement(2' 4' 3' 1);                     l4 = new SvgRectElement(5' 6' 3' 1);                     break;                  case HatchStyle.Percent50:                     l1 = new SvgRectElement(0' 0' 3' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent60:                     l1 = new SvgRectElement(0' 0' 4' 3);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent70:                     l1 = new SvgRectElement(0' 0' 4' 5);                     l2 = new SvgRectElement(4' 4' 4' 4f);                     break;                  case HatchStyle.Percent75:                     l1 = new SvgRectElement(0' 0' 7' 3);                     l2 = new SvgRectElement(0' 2' 3' 7);                     break;                  case HatchStyle.Percent80:                     l1 = new SvgRectElement(0' 0' 7' 4);                     l2 = new SvgRectElement(0' 2' 4' 7);                     break;                  case HatchStyle.Percent90:                     l1 = new SvgRectElement(0' 0' 7' 5);                     l2 = new SvgRectElement(0' 2' 5' 7);                     break;                  default:                      break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ControlPoint,The following statement contains a magic number: v.X /= (float)Math.Sqrt(vlen / (10 * t * t));
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ControlPoint,The following statement contains a magic number: v.Y /= (float)Math.Sqrt(vlen / (10 * t * t));
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ControlPoints,The following statement contains a magic number: nlv.X /= (float)Math.Sqrt(nlvlen / (10 * t * t));
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ControlPoints,The following statement contains a magic number: nlv.Y /= (float)Math.Sqrt(nlvlen / (10 * t * t));
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ControlPoints,The following statement contains a magic number: nrv.X /= (float)Math.Sqrt(nrvlen / (10 * t * t));
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ControlPoints,The following statement contains a magic number: nrv.Y /= (float)Math.Sqrt(nrvlen / (10 * t * t));
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ControlPoints,The following statement contains a magic number: PointF[] ret = new PointF[2];
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImagePixel,The following statement contains a magic number: rc.Style.Set("opacity"' c.A / 255f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawImagePixel,The following statement contains a magic number: c.A < 255
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: PointF center = new PointF(x + width / 2f' y + height / 2f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: PointF center = new PointF(x + width / 2f' y + height / 2f);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: startAngle = (startAngle / 360f) * 2f * (float)Math.PI;
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: startAngle = (startAngle / 360f) * 2f * (float)Math.PI;
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: sweepAngle = (sweepAngle / 360f) * 2f * (float)Math.PI;
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: sweepAngle = (sweepAngle / 360f) * 2f * (float)Math.PI;
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: start.X = (float)Math.Cos(startAngle) * (width / 2f) + center.X;
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: start.Y = (float)Math.Sin(startAngle) * (height / 2f) + center.Y;
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: end.X = (float)Math.Cos(sweepAngle) * (width / 2f) + center.X;
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: end.Y = (float)Math.Sin(sweepAngle) * (height / 2f) + center.Y;
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: string s = "M " + start.X.ToString("F"' CultureInfo.InvariantCulture) + "'" + start.Y.ToString("F"' CultureInfo.InvariantCulture) +                 " A " + (width / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " + (height / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " +                 "0 " + longArc.ToString() + " 0 " + end.X.ToString("F"' CultureInfo.InvariantCulture) + " " + end.Y.ToString("F"' CultureInfo.InvariantCulture);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: string s = "M " + start.X.ToString("F"' CultureInfo.InvariantCulture) + "'" + start.Y.ToString("F"' CultureInfo.InvariantCulture) +                 " A " + (width / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " + (height / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " +                 "0 " + longArc.ToString() + " 0 " + end.X.ToString("F"' CultureInfo.InvariantCulture) + " " + end.Y.ToString("F"' CultureInfo.InvariantCulture);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,Spline2Bez,The following statement contains a magic number: res[res.Count - 2] = pts[0];
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc)             {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     points = new PointF[3];                     points[0] = new PointF(0' -w / 2f);                     points[1] = new PointF(-w' w);                     points[2] = new PointF(w' w);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.DiamondAnchor:                     points = new PointF[4];                     points[0] = new PointF(0' -w);                     points[1] = new PointF(w' 0);                     points[2] = new PointF(0' w);                     points[3] = new PointF(-w' 0);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null)                     {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImpl("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImpl("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc)             {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     points = new PointF[3];                     points[0] = new PointF(0' -w / 2f);                     points[1] = new PointF(-w' w);                     points[2] = new PointF(w' w);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.DiamondAnchor:                     points = new PointF[4];                     points[0] = new PointF(0' -w);                     points[1] = new PointF(w' 0);                     points[2] = new PointF(0' w);                     points[3] = new PointF(-w' 0);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null)                     {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImpl("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImpl("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc)             {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     points = new PointF[3];                     points[0] = new PointF(0' -w / 2f);                     points[1] = new PointF(-w' w);                     points[2] = new PointF(w' w);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.DiamondAnchor:                     points = new PointF[4];                     points[0] = new PointF(0' -w);                     points[1] = new PointF(w' 0);                     points[2] = new PointF(0' w);                     points[3] = new PointF(-w' 0);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null)                     {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImpl("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImpl("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc)             {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     points = new PointF[3];                     points[0] = new PointF(0' -w / 2f);                     points[1] = new PointF(-w' w);                     points[2] = new PointF(w' w);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.DiamondAnchor:                     points = new PointF[4];                     points[0] = new PointF(0' -w);                     points[1] = new PointF(w' 0);                     points[2] = new PointF(0' w);                     points[3] = new PointF(-w' 0);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null)                     {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImpl("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImpl("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc)             {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     points = new PointF[3];                     points[0] = new PointF(0' -w / 2f);                     points[1] = new PointF(-w' w);                     points[2] = new PointF(w' w);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.DiamondAnchor:                     points = new PointF[4];                     points[0] = new PointF(0' -w);                     points[1] = new PointF(w' 0);                     points[2] = new PointF(0' w);                     points[3] = new PointF(-w' 0);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null)                     {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImpl("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImpl("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc)             {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     points = new PointF[3];                     points[0] = new PointF(0' -w / 2f);                     points[1] = new PointF(-w' w);                     points[2] = new PointF(w' w);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.DiamondAnchor:                     points = new PointF[4];                     points[0] = new PointF(0' -w);                     points[1] = new PointF(w' 0);                     points[2] = new PointF(0' w);                     points[3] = new PointF(-w' 0);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null)                     {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImpl("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImpl("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc)             {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     points = new PointF[3];                     points[0] = new PointF(0' -w / 2f);                     points[1] = new PointF(-w' w);                     points[2] = new PointF(w' w);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.DiamondAnchor:                     points = new PointF[4];                     points[0] = new PointF(0' -w);                     points[1] = new PointF(w' 0);                     points[2] = new PointF(0' w);                     points[3] = new PointF(-w' 0);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null)                     {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImpl("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImpl("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc)             {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     points = new PointF[3];                     points[0] = new PointF(0' -w / 2f);                     points[1] = new PointF(-w' w);                     points[2] = new PointF(w' w);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.DiamondAnchor:                     points = new PointF[4];                     points[0] = new PointF(0' -w);                     points[1] = new PointF(w' 0);                     points[2] = new PointF(0' w);                     points[3] = new PointF(-w' 0);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null)                     {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImpl("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImpl("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc)             {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     points = new PointF[3];                     points[0] = new PointF(0' -w / 2f);                     points[1] = new PointF(-w' w);                     points[2] = new PointF(w' w);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.DiamondAnchor:                     points = new PointF[4];                     points[0] = new PointF(0' -w);                     points[1] = new PointF(w' 0);                     points[2] = new PointF(0' w);                     points[3] = new PointF(-w' 0);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null)                     {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImpl("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImpl("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: switch (lc)             {                 case LineCap.NoAnchor:                     break;                  case LineCap.Flat:                     // TODO: what is the correct look?                     break;                  case LineCap.ArrowAnchor:                     points = new PointF[3];                     points[0] = new PointF(0' -w / 2f);                     points[1] = new PointF(-w' w);                     points[2] = new PointF(w' w);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.DiamondAnchor:                     points = new PointF[4];                     points[0] = new PointF(0' -w);                     points[1] = new PointF(w' 0);                     points[2] = new PointF(0' w);                     points[3] = new PointF(-w' 0);                     anchor = new SvgPolygonElement(points);                     break;                  case LineCap.RoundAnchor:                     anchor = new SvgEllipseElement(0' 0' w' w);                     break;                  case LineCap.SquareAnchor:                     float ww = (w / 3) * 2;                     anchor = new SvgRectElement(0 - ww' 0 - ww' ww * 2' ww * 2);                     break;                  case LineCap.Custom:                     if (clc != null)                     {                         if (!ignoreUnsupportedLineCaps)                             throw new SvgGdiNotImpl("DrawEndAnchor custom");                     }                     break;                  default:                     if (!ignoreUnsupportedLineCaps)                         throw new SvgGdiNotImpl("DrawEndAnchor " + lc.ToString());                     break;             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawEndAnchor,The following statement contains a magic number: rotation.Rotate((angle / (float)Math.PI) * 180);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawText,The following statement contains a magic number: switch (fmt.Alignment)             {                 case StringAlignment.Near:                     break;                  case StringAlignment.Center:                     {                         if (ignoreRect)                             throw new SvgGdiNotImpl("DrawText automatic rect");                          txt.Style.Set("text-anchor"' "middle");                         txt.X = rect.X + rect.Width / 2;                     }                     break;                  case StringAlignment.Far:                     {                         if (ignoreRect)                             throw new SvgGdiNotImpl("DrawText automatic rect");                          txt.Style.Set("text-anchor"' "end");                         txt.X = rect.Right;                     }                     break;                  default:                     throw new SvgGdiNotImpl("DrawText horizontal alignment");             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawText,The following statement contains a magic number: switch (fmt.LineAlignment)             {                 case StringAlignment.Near:                     {                         // TODO: ??                         // txt.Style.Set("baseline-shift"' "-86%");//a guess.                         var span = new SvgTspanElement(s);                         span.DY = new SvgLength(txt.Style.Get("font-size").ToString());                         txt.Text = null;                         txt.AddChild(span);                     }                     break;                  case StringAlignment.Center:                     {                         if (ignoreRect)                             throw new SvgGdiNotImpl("DrawText automatic rect");                          txt.Y.Value = txt.Y.Value + (rect.Height / 2);                         var span = new SvgTspanElement(s);                         span.DY = new SvgLength(txt.Style.Get("font-size").ToString());                         span.DY.Value = span.DY.Value * ((1 - GetFontDescentPercentage(font)) - 0.5f);                         txt.Text = null;                         txt.AddChild(span);                     }                     break;                  case StringAlignment.Far:                     {                         if (ignoreRect)                             throw new SvgGdiNotImpl("DrawText automatic rect");                          txt.Y.Value = txt.Y.Value + rect.Height;                         // This would solve the alignment as well' but it's not supported by Internet Explorer                         //                         // txt.Attributes["dominant-baseline"] = "text-after-edge";                         var span = new SvgTspanElement(s);                         span.DY = new SvgLength(txt.Style.Get("font-size").ToString());                         span.DY.Value = span.DY.Value * ((1 - GetFontDescentPercentage(font)) - 1);                         txt.Text = null;                         txt.AddChild(span);                     }                     break;                  default:                     throw new SvgGdiNotImpl("DrawText vertical alignment");             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,DrawText,The following statement contains a magic number: switch (fmt.LineAlignment)             {                 case StringAlignment.Near:                     {                         // TODO: ??                         // txt.Style.Set("baseline-shift"' "-86%");//a guess.                         var span = new SvgTspanElement(s);                         span.DY = new SvgLength(txt.Style.Get("font-size").ToString());                         txt.Text = null;                         txt.AddChild(span);                     }                     break;                  case StringAlignment.Center:                     {                         if (ignoreRect)                             throw new SvgGdiNotImpl("DrawText automatic rect");                          txt.Y.Value = txt.Y.Value + (rect.Height / 2);                         var span = new SvgTspanElement(s);                         span.DY = new SvgLength(txt.Style.Get("font-size").ToString());                         span.DY.Value = span.DY.Value * ((1 - GetFontDescentPercentage(font)) - 0.5f);                         txt.Text = null;                         txt.AddChild(span);                     }                     break;                  case StringAlignment.Far:                     {                         if (ignoreRect)                             throw new SvgGdiNotImpl("DrawText automatic rect");                          txt.Y.Value = txt.Y.Value + rect.Height;                         // This would solve the alignment as well' but it's not supported by Internet Explorer                         //                         // txt.Attributes["dominant-baseline"] = "text-after-edge";                         var span = new SvgTspanElement(s);                         span.DY = new SvgLength(txt.Style.Get("font-size").ToString());                         span.DY.Value = span.DY.Value * ((1 - GetFontDescentPercentage(font)) - 1);                         txt.Text = null;                         txt.AddChild(span);                     }                     break;                  default:                     throw new SvgGdiNotImpl("DrawText vertical alignment");             }
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,HandleBrush,The following statement contains a magic number: SvgPatternElement patty = new SvgPatternElement(0' 0' 8' 8' null);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,HandleBrush,The following statement contains a magic number: SvgPatternElement patty = new SvgPatternElement(0' 0' 8' 8' null);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,HandleBrush,The following statement contains a magic number: SvgRectElement rc = new SvgRectElement(0' 0' 8' 8);
Magic Number,SvgNet.SvgGdi,SvgGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,HandleBrush,The following statement contains a magic number: SvgRectElement rc = new SvgRectElement(0' 0' 8' 8);
Magic Number,System,Extension,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,SKPaint,The following statement contains a magic number: return new SKPaint              {                  Typeface = SKTypeface.FromFamilyName(font.SystemFontName)'                  TextSize = font.Size * 1.4f'                  StrokeWidth = 2                };
Magic Number,System,Extension,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,SKPaint,The following statement contains a magic number: return new SKPaint              {                  Typeface = SKTypeface.FromFamilyName(font.SystemFontName)'                  TextSize = font.Size * 1.4f'                  StrokeWidth = 2                };
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,SkiaGraphics,The following statement contains a magic number: _surface = SKSurface.Create(9999' 9999' SKColorType.Bgra8888' SKAlphaType.Opaque);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,SkiaGraphics,The following statement contains a magic number: _surface = SKSurface.Create(9999' 9999' SKColorType.Bgra8888' SKAlphaType.Opaque);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawBeziers,The following statement contains a magic number: path.CubicTo(points[1].SKPoint()'                  points[2].SKPoint()'                  points[3].SKPoint());
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawBeziers,The following statement contains a magic number: path.CubicTo(points[1].SKPoint()'                  points[2].SKPoint()'                  points[3].SKPoint());
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawClosedCurve,The following statement contains a magic number: var pts = Spline2Bez(points' 0' points.Length - 1' true' .5f);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawClosedCurve,The following statement contains a magic number: var pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' true' .5f);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawCurve,The following statement contains a magic number: var pts = Spline2Bez(points' 0' points.Length - 1' false' .5f);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawCurve,The following statement contains a magic number: var pts = Spline2Bez(points' offset' numberOfSegments' false' .5f);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawCurve,The following statement contains a magic number: var pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' false' .5f);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawEllipse,The following statement contains a magic number: DrawArc(pen' x' y' width' height' 0' 360);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawPath,The following statement contains a magic number: var bezierCurvePoints = new PointF[4];
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawPath,The following statement contains a magic number: switch ((PathPointType) subpath.PathTypes[i] & PathPointType.PathTypeMask                      ) //Mask off non path-type types                      {                          case PathPointType.Start:                              start = PathPoints[i];                              bezierCurvePoints[0] = PathPoints[i];                              bezierCurvePointsIndex = 1;                              pen.DashStyle =                                  originalPenDashStyle; //Reset pen dash mode to original when starting subpath                              continue;                          case PathPointType.Line:                              DrawLine(pen' start' PathPoints[i]); //Draw a line segment ftom start point                              start = PathPoints[i]; //Move start point to line end                              bezierCurvePoints[0] =                                  PathPoints[i]; //A line point can also be the start of a Bezier curve                              bezierCurvePointsIndex = 1;                              continue;                          case PathPointType.Bezier3:                              bezierCurvePoints[bezierCurvePointsIndex++] = PathPoints[i];                              if (bezierCurvePointsIndex == 4                              ) //If 4 points including start have been found then draw the Bezier curve                              {                                  DrawBezier(pen' bezierCurvePoints[0]' bezierCurvePoints[1]' bezierCurvePoints[2]'                                      bezierCurvePoints[3]);                                  bezierCurvePoints = new PointF[4];                                  bezierCurvePoints[0] = PathPoints[i];                                  bezierCurvePointsIndex = 1;                                  start = PathPoints[i]; //Move start point to curve end                              }                                continue;                          default:                              switch ((PathPointType) subpath.PathTypes[i])                              {                                  case PathPointType.DashMode:                                      pen.DashStyle = DashStyle.Dash;                                      continue;                                  default:                                      throw new SvgException("Unknown path type value: " + subpath.PathTypes[i]);                              }                      }
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawPath,The following statement contains a magic number: switch ((PathPointType) subpath.PathTypes[i] & PathPointType.PathTypeMask                      ) //Mask off non path-type types                      {                          case PathPointType.Start:                              start = PathPoints[i];                              bezierCurvePoints[0] = PathPoints[i];                              bezierCurvePointsIndex = 1;                              pen.DashStyle =                                  originalPenDashStyle; //Reset pen dash mode to original when starting subpath                              continue;                          case PathPointType.Line:                              DrawLine(pen' start' PathPoints[i]); //Draw a line segment ftom start point                              start = PathPoints[i]; //Move start point to line end                              bezierCurvePoints[0] =                                  PathPoints[i]; //A line point can also be the start of a Bezier curve                              bezierCurvePointsIndex = 1;                              continue;                          case PathPointType.Bezier3:                              bezierCurvePoints[bezierCurvePointsIndex++] = PathPoints[i];                              if (bezierCurvePointsIndex == 4                              ) //If 4 points including start have been found then draw the Bezier curve                              {                                  DrawBezier(pen' bezierCurvePoints[0]' bezierCurvePoints[1]' bezierCurvePoints[2]'                                      bezierCurvePoints[3]);                                  bezierCurvePoints = new PointF[4];                                  bezierCurvePoints[0] = PathPoints[i];                                  bezierCurvePointsIndex = 1;                                  start = PathPoints[i]; //Move start point to curve end                              }                                continue;                          default:                              switch ((PathPointType) subpath.PathTypes[i])                              {                                  case PathPointType.DashMode:                                      pen.DashStyle = DashStyle.Dash;                                      continue;                                  default:                                      throw new SvgException("Unknown path type value: " + subpath.PathTypes[i]);                              }                      }
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawPath,The following statement contains a magic number: switch ((PathPointType) subpath.PathTypes[i] & PathPointType.PathTypeMask                      ) //Mask off non path-type types                      {                          case PathPointType.Start:                              start = PathPoints[i];                              bezierCurvePoints[0] = PathPoints[i];                              bezierCurvePointsIndex = 1;                              pen.DashStyle =                                  originalPenDashStyle; //Reset pen dash mode to original when starting subpath                              continue;                          case PathPointType.Line:                              DrawLine(pen' start' PathPoints[i]); //Draw a line segment ftom start point                              start = PathPoints[i]; //Move start point to line end                              bezierCurvePoints[0] =                                  PathPoints[i]; //A line point can also be the start of a Bezier curve                              bezierCurvePointsIndex = 1;                              continue;                          case PathPointType.Bezier3:                              bezierCurvePoints[bezierCurvePointsIndex++] = PathPoints[i];                              if (bezierCurvePointsIndex == 4                              ) //If 4 points including start have been found then draw the Bezier curve                              {                                  DrawBezier(pen' bezierCurvePoints[0]' bezierCurvePoints[1]' bezierCurvePoints[2]'                                      bezierCurvePoints[3]);                                  bezierCurvePoints = new PointF[4];                                  bezierCurvePoints[0] = PathPoints[i];                                  bezierCurvePointsIndex = 1;                                  start = PathPoints[i]; //Move start point to curve end                              }                                continue;                          default:                              switch ((PathPointType) subpath.PathTypes[i])                              {                                  case PathPointType.DashMode:                                      pen.DashStyle = DashStyle.Dash;                                      continue;                                  default:                                      throw new SvgException("Unknown path type value: " + subpath.PathTypes[i]);                              }                      }
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawPath,The following statement contains a magic number: switch ((PathPointType) subpath.PathTypes[i] & PathPointType.PathTypeMask                      ) //Mask off non path-type types                      {                          case PathPointType.Start:                              start = PathPoints[i];                              bezierCurvePoints[0] = PathPoints[i];                              bezierCurvePointsIndex = 1;                              pen.DashStyle =                                  originalPenDashStyle; //Reset pen dash mode to original when starting subpath                              continue;                          case PathPointType.Line:                              DrawLine(pen' start' PathPoints[i]); //Draw a line segment ftom start point                              start = PathPoints[i]; //Move start point to line end                              bezierCurvePoints[0] =                                  PathPoints[i]; //A line point can also be the start of a Bezier curve                              bezierCurvePointsIndex = 1;                              continue;                          case PathPointType.Bezier3:                              bezierCurvePoints[bezierCurvePointsIndex++] = PathPoints[i];                              if (bezierCurvePointsIndex == 4                              ) //If 4 points including start have been found then draw the Bezier curve                              {                                  DrawBezier(pen' bezierCurvePoints[0]' bezierCurvePoints[1]' bezierCurvePoints[2]'                                      bezierCurvePoints[3]);                                  bezierCurvePoints = new PointF[4];                                  bezierCurvePoints[0] = PathPoints[i];                                  bezierCurvePointsIndex = 1;                                  start = PathPoints[i]; //Move start point to curve end                              }                                continue;                          default:                              switch ((PathPointType) subpath.PathTypes[i])                              {                                  case PathPointType.DashMode:                                      pen.DashStyle = DashStyle.Dash;                                      continue;                                  default:                                      throw new SvgException("Unknown path type value: " + subpath.PathTypes[i]);                              }                      }
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawText,The following statement contains a magic number: textBounds.Width > layoutRectangle.Width-2 && layoutRectangle.Width != 0
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawText,The following statement contains a magic number: layoutRectangle.X += layoutRectangle.Width / 2 - textBounds.MidX;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawText,The following statement contains a magic number: layoutRectangle.Y += layoutRectangle.Height / 2 -  textBounds.Height/2;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawText,The following statement contains a magic number: layoutRectangle.Y += layoutRectangle.Height / 2 -  textBounds.Height/2;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawText,The following statement contains a magic number: float lineHeight = paint.TextSize * 1.1f;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawText,The following statement contains a magic number: var y = area.MidY-2 - height / 2;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawText,The following statement contains a magic number: var y = area.MidY-2 - height / 2;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,DrawText,The following statement contains a magic number: var x = area.MidX - line.Width / 2;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,FillClosedCurve,The following statement contains a magic number: var pts = Spline2Bez(points' 0' points.Length - 1' true' .5f);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,FillClosedCurve,The following statement contains a magic number: var pts = Spline2Bez(points' 0' points.Length - 1' true' .5f);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,FillClosedCurve,The following statement contains a magic number: var pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' true' .5f);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,FillClosedCurve,The following statement contains a magic number: var pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' true' .5f);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,FillPath,The following statement contains a magic number: subpaths.NextSubpath(subpath' out isClosed) < 2
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,MeasureString,The following statement contains a magic number: return new SizeF(bound.Width+5' bound.Height);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,ControlPoint,The following statement contains a magic number: v.X /= (float)Math.Sqrt(vlen / (10 * t * t));
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,ControlPoint,The following statement contains a magic number: v.Y /= (float)Math.Sqrt(vlen / (10 * t * t));
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,ControlPoints,The following statement contains a magic number: nlv.X /= (float)Math.Sqrt(nlvlen / (10 * t * t));
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,ControlPoints,The following statement contains a magic number: nlv.Y /= (float)Math.Sqrt(nlvlen / (10 * t * t));
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,ControlPoints,The following statement contains a magic number: nrv.X /= (float)Math.Sqrt(nrvlen / (10 * t * t));
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,ControlPoints,The following statement contains a magic number: nrv.Y /= (float)Math.Sqrt(nrvlen / (10 * t * t));
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,ControlPoints,The following statement contains a magic number: var ret = new PointF[2];
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: var center = new PointF(x + width / 2f' y + height / 2f);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: var center = new PointF(x + width / 2f' y + height / 2f);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: startAngle = startAngle / 360f * 2f * (float)Math.PI;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: startAngle = startAngle / 360f * 2f * (float)Math.PI;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: sweepAngle = sweepAngle / 360f * 2f * (float)Math.PI;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: sweepAngle = sweepAngle / 360f * 2f * (float)Math.PI;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: start.X = (float)Math.Cos(startAngle) * (width / 2f) + center.X;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: start.Y = (float)Math.Sin(startAngle) * (height / 2f) + center.Y;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: end.X = (float)Math.Cos(sweepAngle) * (width / 2f) + center.X;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: end.Y = (float)Math.Sin(sweepAngle) * (height / 2f) + center.Y;
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: var s = "M " + start.X.ToString("F"' CultureInfo.InvariantCulture) + "'" +                      start.Y.ToString("F"' CultureInfo.InvariantCulture) +                      " A " + (width / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " +                      (height / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " +                      "0 " + longArc + " 0 " + end.X.ToString("F"' CultureInfo.InvariantCulture) + " " +                      end.Y.ToString("F"' CultureInfo.InvariantCulture);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,GDIArc2SVGPath,The following statement contains a magic number: var s = "M " + start.X.ToString("F"' CultureInfo.InvariantCulture) + "'" +                      start.Y.ToString("F"' CultureInfo.InvariantCulture) +                      " A " + (width / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " +                      (height / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " +                      "0 " + longArc + " 0 " + end.X.ToString("F"' CultureInfo.InvariantCulture) + " " +                      end.Y.ToString("F"' CultureInfo.InvariantCulture);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,Spline2Bez,The following statement contains a magic number: res[res.Count - 2] = pts[0];
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,Spline2Bez,The following statement contains a magic number: i < (start + num) * 3
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,Spline2Bez,The following statement contains a magic number: subset.Add(res[(start + num) * 3]);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,pathtopintfarr,The following statement contains a magic number: ans.CubicTo(cubic[0].X' cubic[0].Y' cubic[1].X' cubic[1].Y' cubic[2].X' cubic[2].Y);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,pathtopintfarr,The following statement contains a magic number: ans.CubicTo(cubic[0].X' cubic[0].Y' cubic[1].X' cubic[1].Y' cubic[2].X' cubic[2].Y);
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,pathtopintfarr,The following statement contains a magic number: cubic.Count == 3
Magic Number,System,SkiaGraphics,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics.cs,pathtopintfarr,The following statement contains a magic number: (path.PathTypes[i] & 0x7) == 3
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawClosedCurve,The following statement contains a magic number: var pts = Spline2Bez(points' 0' points.Length - 1' true' .5f);
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawClosedCurve,The following statement contains a magic number: var pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' true' .5f);
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawCurve,The following statement contains a magic number: var pts = Spline2Bez(points' 0' points.Length - 1' false' .5f);
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawCurve,The following statement contains a magic number: var pts = Spline2Bez(points' offset' numberOfSegments' false' .5f);
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawCurve,The following statement contains a magic number: var pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' false' .5f);
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawEllipse,The following statement contains a magic number: DrawArc(pen' x' y' width' height' 0' 360);
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,DrawPath,The following statement contains a magic number: var bezierCurvePoints = new PointF[4];
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,FillClosedCurve,The following statement contains a magic number: var pts = Spline2Bez(points' 0' points.Length - 1' true' .5f);
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,FillClosedCurve,The following statement contains a magic number: var pts = Spline2Bez(points' 0' points.Length - 1' true' .5f);
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,FillClosedCurve,The following statement contains a magic number: var pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' true' .5f);
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,FillClosedCurve,The following statement contains a magic number: var pts = Spline2Bez(Point2PointF(points)' 0' points.Length - 1' true' .5f);
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,FillPath,The following statement contains a magic number: subpaths.NextSubpath(subpath' out isClosed) < 2
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,ControlPoint,The following statement contains a magic number: v.X /= (float)Math.Sqrt(vlen / (10 * t * t));
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,ControlPoint,The following statement contains a magic number: v.Y /= (float)Math.Sqrt(vlen / (10 * t * t));
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,ControlPoints,The following statement contains a magic number: nlv.X /= (float)Math.Sqrt(nlvlen / (10 * t * t));
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,ControlPoints,The following statement contains a magic number: nlv.Y /= (float)Math.Sqrt(nlvlen / (10 * t * t));
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,ControlPoints,The following statement contains a magic number: nrv.X /= (float)Math.Sqrt(nrvlen / (10 * t * t));
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,ControlPoints,The following statement contains a magic number: nrv.Y /= (float)Math.Sqrt(nrvlen / (10 * t * t));
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,ControlPoints,The following statement contains a magic number: var ret = new PointF[2];
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,GDIArc2SVGPath,The following statement contains a magic number: var center = new PointF(x + width / 2f' y + height / 2f);
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,GDIArc2SVGPath,The following statement contains a magic number: var center = new PointF(x + width / 2f' y + height / 2f);
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,GDIArc2SVGPath,The following statement contains a magic number: startAngle = startAngle / 360f * 2f * (float)Math.PI;
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,GDIArc2SVGPath,The following statement contains a magic number: startAngle = startAngle / 360f * 2f * (float)Math.PI;
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,GDIArc2SVGPath,The following statement contains a magic number: sweepAngle = sweepAngle / 360f * 2f * (float)Math.PI;
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,GDIArc2SVGPath,The following statement contains a magic number: sweepAngle = sweepAngle / 360f * 2f * (float)Math.PI;
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,GDIArc2SVGPath,The following statement contains a magic number: start.X = (float)Math.Cos(startAngle) * (width / 2f) + center.X;
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,GDIArc2SVGPath,The following statement contains a magic number: start.Y = (float)Math.Sin(startAngle) * (height / 2f) + center.Y;
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,GDIArc2SVGPath,The following statement contains a magic number: end.X = (float)Math.Cos(sweepAngle) * (width / 2f) + center.X;
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,GDIArc2SVGPath,The following statement contains a magic number: end.Y = (float)Math.Sin(sweepAngle) * (height / 2f) + center.Y;
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,GDIArc2SVGPath,The following statement contains a magic number: var s = "M " + start.X.ToString("F"' CultureInfo.InvariantCulture) + "'" +                      start.Y.ToString("F"' CultureInfo.InvariantCulture) +                      " A " + (width / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " +                      (height / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " +                      "0 " + longArc + " 0 " + end.X.ToString("F"' CultureInfo.InvariantCulture) + " " +                      end.Y.ToString("F"' CultureInfo.InvariantCulture);
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,GDIArc2SVGPath,The following statement contains a magic number: var s = "M " + start.X.ToString("F"' CultureInfo.InvariantCulture) + "'" +                      start.Y.ToString("F"' CultureInfo.InvariantCulture) +                      " A " + (width / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " +                      (height / 2f).ToString("F"' CultureInfo.InvariantCulture) + " " +                      "0 " + longArc + " 0 " + end.X.ToString("F"' CultureInfo.InvariantCulture) + " " +                      end.Y.ToString("F"' CultureInfo.InvariantCulture);
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,Spline2Bez,The following statement contains a magic number: res[res.Count - 2] = pts[0];
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,Spline2Bez,The following statement contains a magic number: i < (start + num) * 3
Magic Number,System,SkiaGraphics2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SkiaGraphics2.cs,Spline2Bez,The following statement contains a magic number: subset.Add(res[(start + num) * 3]);
Magic Number,MetafileTools,MetafileParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ProcessCloseFigure,The following statement contains a magic number: var points = new PointF[2];
Magic Number,MetafileTools,MetafileParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ProcessPolyBezierTo16,The following statement contains a magic number: _br.ReadBytes(16 /* Bounds */);
Magic Number,MetafileTools,MetafileParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ProcessPolyBezierTo16,The following statement contains a magic number: const int PointsPerCurve = 3;
Magic Number,MetafileTools,MetafileParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ProcessPolygon16,The following statement contains a magic number: _br.ReadBytes(16 /* Bounds */);
Magic Number,MetafileTools,MetafileParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ProcessPolyline16,The following statement contains a magic number: _br.ReadBytes(16 /* Bounds */);
Magic Number,MetafileTools,MetafileParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ProcessPolylineTo16,The following statement contains a magic number: _br.ReadBytes(16 /* Bounds */);
Magic Number,MetafileTools,MetafileParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ProcessPolyPolygon16,The following statement contains a magic number: _br.ReadBytes(16 /* Bounds */);
Magic Number,MetafileTools,MetafileParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,ProcessStrokeAndFillPath,The following statement contains a magic number: _br.ReadBytes(16 /* Bounds */);
Magic Number,SvgNet.SvgTypes,SvgStyle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgStyle.cs,SvgStyle,The following statement contains a magic number: Set("stroke-miterlimit"' pen.MiterLimit / 2 + 4f);
Magic Number,SvgNet.SvgTypes,SvgStyle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgStyle.cs,SvgStyle,The following statement contains a magic number: Set("stroke-miterlimit"' pen.MiterLimit / 2 + 4f);
Magic Number,SvgNet.SvgTypes,SvgStyle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgStyle.cs,SvgStyle,The following statement contains a magic number: switch (pen.DashStyle) {              case DashStyle.Dash:                  dashes = new float[] { 3' 1 };                  break;              case DashStyle.DashDot:                  dashes = new float[] { 3' 1' 1' 1 };                  break;              case DashStyle.DashDotDot:                  dashes = new float[] { 3' 1' 1' 1' 1 };                  break;              case DashStyle.Dot:                  dashes = new float[] { 1' 1 };                  break;              case DashStyle.Custom:                  dashes = pen.DashPattern;                  break;              }
Magic Number,SvgNet.SvgTypes,SvgStyle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgStyle.cs,SvgStyle,The following statement contains a magic number: switch (pen.DashStyle) {              case DashStyle.Dash:                  dashes = new float[] { 3' 1 };                  break;              case DashStyle.DashDot:                  dashes = new float[] { 3' 1' 1' 1 };                  break;              case DashStyle.DashDotDot:                  dashes = new float[] { 3' 1' 1' 1' 1 };                  break;              case DashStyle.Dot:                  dashes = new float[] { 1' 1 };                  break;              case DashStyle.Custom:                  dashes = pen.DashPattern;                  break;              }
Magic Number,SvgNet.SvgTypes,SvgStyle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgStyle.cs,SvgStyle,The following statement contains a magic number: switch (pen.DashStyle) {              case DashStyle.Dash:                  dashes = new float[] { 3' 1 };                  break;              case DashStyle.DashDot:                  dashes = new float[] { 3' 1' 1' 1 };                  break;              case DashStyle.DashDotDot:                  dashes = new float[] { 3' 1' 1' 1' 1 };                  break;              case DashStyle.Dot:                  dashes = new float[] { 1' 1 };                  break;              case DashStyle.Custom:                  dashes = pen.DashPattern;                  break;              }
Magic Number,SvgNet.SvgTypes,SvgStyle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgStyle.cs,SvgStyle,The following statement contains a magic number: Set("opacity"' pen.Color.A / 255f);
Magic Number,SvgNet.SvgTypes,SvgStyle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgStyle.cs,SvgStyle,The following statement contains a magic number: Set("opacity"' ((SolidBrush)brush).Color.A / 255f);
Magic Number,SvgNet.SvgTypes,SvgStyle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgStyle.cs,FromString,The following statement contains a magic number: kv.Length == 2
Magic Number,SvgNet.SvgTypes,SvgTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: _m = new Matrix(points[0]' points[1]' points[2]' points[3]' points[4]' points[5]);
Magic Number,SvgNet.SvgTypes,SvgTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: _m = new Matrix(points[0]' points[1]' points[2]' points[3]' points[4]' points[5]);
Magic Number,SvgNet.SvgTypes,SvgTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: _m = new Matrix(points[0]' points[1]' points[2]' points[3]' points[4]' points[5]);
Magic Number,SvgNet.SvgTypes,SvgTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: _m = new Matrix(points[0]' points[1]' points[2]' points[3]' points[4]' points[5]);
Magic Number,SvgNet.SvgTypes,SvgTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgTransformList.cs,FromString,The following statement contains a magic number: points.Length == 6
Magic Number,SvgNet.SvgTypes,SvgColor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: b = int.Parse(s.Substring(2' 1)' NumberStyles.HexNumber' CultureInfo.InvariantCulture);
Magic Number,SvgNet.SvgTypes,SvgColor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: r += r * 16;
Magic Number,SvgNet.SvgTypes,SvgColor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: g += g * 16;
Magic Number,SvgNet.SvgTypes,SvgColor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: b += b * 16;
Magic Number,SvgNet.SvgTypes,SvgColor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromHexString,The following statement contains a magic number: s.Length == 3
Magic Number,SvgNet.SvgTypes,SvgColor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: r = int.Parse(m.Groups["r"].Captures[0].Value' CultureInfo.InvariantCulture) * 255 / 100;
Magic Number,SvgNet.SvgTypes,SvgColor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: r = int.Parse(m.Groups["r"].Captures[0].Value' CultureInfo.InvariantCulture) * 255 / 100;
Magic Number,SvgNet.SvgTypes,SvgColor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: g = int.Parse(m.Groups["g"].Captures[0].Value' CultureInfo.InvariantCulture) * 255 / 100;
Magic Number,SvgNet.SvgTypes,SvgColor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: g = int.Parse(m.Groups["g"].Captures[0].Value' CultureInfo.InvariantCulture) * 255 / 100;
Magic Number,SvgNet.SvgTypes,SvgColor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: b = int.Parse(m.Groups["b"].Captures[0].Value' CultureInfo.InvariantCulture) * 255 / 100;
Magic Number,SvgNet.SvgTypes,SvgColor,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromRGBString,The following statement contains a magic number: b = int.Parse(m.Groups["b"].Captures[0].Value' CultureInfo.InvariantCulture) * 255 / 100;
Magic Number,SvgNet.SvgTypes,SvgPath,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromString,The following statement contains a magic number: datasize = 2;
Magic Number,SvgNet.SvgTypes,SvgPoints,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,SvgPoints,The following statement contains a magic number: pts.Length % 2 != 0
Magic Number,SvgNet.SvgTypes,SvgPoints,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,FromString,The following statement contains a magic number: _pts.Count % 2 != 0
Missing Default,MetafileTools,MetafileParser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SVGGraphics.cs,InternalSelectObject,The following switch statement is missing a default case: switch (stockObject)                 {                     case EmfStockObject.BLACK_BRUSH:                         _brush = new SolidBrush(Color.Black);                         break;                      case EmfStockObject.DC_BRUSH:                         throw new NotImplementedException();                      case EmfStockObject.DKGRAY_BRUSH:                         _brush = new SolidBrush(Color.DarkGray);                         break;                      case EmfStockObject.GRAY_BRUSH:                         _brush = new SolidBrush(Color.Gray);                         break;                      case EmfStockObject.LTGRAY_BRUSH:                         _brush = new SolidBrush(Color.LightGray);                         break;                      case EmfStockObject.NULL_BRUSH:                         _brush = null;                         break;                      case EmfStockObject.WHITE_BRUSH:                         _brush = new SolidBrush(Color.White);                         break;                 }
Missing Default,SvgNet.SvgTypes,SvgStyle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgStyle.cs,SvgStyle,The following switch statement is missing a default case: switch (pen.EndCap) {              case LineCap.Round:                  Set("stroke-linecap"' "round");                  break;              case LineCap.Square:                  Set("stroke-linecap"' "square");                  break;              case LineCap.Flat:                  Set("stroke-linecap"' "butt");                  break;              }
Missing Default,SvgNet.SvgTypes,SvgStyle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgStyle.cs,SvgStyle,The following switch statement is missing a default case: switch (pen.LineJoin) {              case LineJoin.Bevel:                  Set("stroke-linejoin"' "bevel");                  break;              case LineJoin.Miter:                  Set("stroke-linejoin"' "miter");                  break;              case LineJoin.Round:                  Set("stroke-linejoin"' "round");                  break;              }
Missing Default,SvgNet.SvgTypes,SvgStyle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\SvgStyle.cs,SvgStyle,The following switch statement is missing a default case: switch (pen.DashStyle) {              case DashStyle.Dash:                  dashes = new float[] { 3' 1 };                  break;              case DashStyle.DashDot:                  dashes = new float[] { 3' 1' 1' 1 };                  break;              case DashStyle.DashDotDot:                  dashes = new float[] { 3' 1' 1' 1' 1 };                  break;              case DashStyle.Dot:                  dashes = new float[] { 1' 1 };                  break;              case DashStyle.Custom:                  dashes = pen.DashPattern;                  break;              }
Missing Default,SvgNet.SvgTypes,SvgAngle,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,ToString,The following switch statement is missing a default case: switch (Type)              {                  case SvgAngleType.SVG_ANGLETYPE_DEG:                  case SvgAngleType.SVG_ANGLETYPE_UNSPECIFIED:                      s += "deg";                      break;                    case SvgAngleType.SVG_ANGLETYPE_GRAD:                      s += "grad";                      break;                    case SvgAngleType.SVG_ANGLETYPE_RAD:                      s += "rad";                      break;              }
Missing Default,SvgNet.SvgTypes,SvgLength,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\SvgNet\Types.cs,ToString,The following switch statement is missing a default case: switch (Type)              {                  case SvgLengthType.SVG_LENGTHTYPE_PERCENTAGE:                      s += "%";                      break;                    case SvgLengthType.SVG_LENGTHTYPE_EMS:                      s += "em";                      break;                    case SvgLengthType.SVG_LENGTHTYPE_EXS:                      s += "ex";                      break;                    case SvgLengthType.SVG_LENGTHTYPE_PX:                      s += "px";                      break;                    case SvgLengthType.SVG_LENGTHTYPE_CM:                      s += "cm";                      break;                    case SvgLengthType.SVG_LENGTHTYPE_MM:                      s += "mm";                      break;                    case SvgLengthType.SVG_LENGTHTYPE_IN:                      s += "in";                      break;                    case SvgLengthType.SVG_LENGTHTYPE_PT:                      s += "pt";                      break;                    case SvgLengthType.SVG_LENGTHTYPE_PC:                      s += "pc";                      break;              }
