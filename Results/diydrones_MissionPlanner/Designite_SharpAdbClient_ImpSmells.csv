Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SharpAdbClient,AdbClient,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\AdbClient.cs,ExecuteRemoteCommand,Cyclomatic complexity of the method is 9
Complex Method,SharpAdbClient,AdbClient,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\AdbClient.cs,RunLogService,Cyclomatic complexity of the method is 10
Complex Method,SharpAdbClient,AdbServer,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\AdbServer.cs,StartServer,Cyclomatic complexity of the method is 9
Complex Method,SharpAdbClient,ForwardSpec,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\ForwardSpec.cs,Parse,Cyclomatic complexity of the method is 19
Complex Method,SharpAdbClient,ForwardSpec,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\ForwardSpec.cs,Equals,Cyclomatic complexity of the method is 9
Complex Method,SharpAdbClient,ConsoleOutputReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\Receivers\ConsoleOutputReceiver.cs,ThrowOnError,Cyclomatic complexity of the method is 8
Complex Method,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,Push,Cyclomatic complexity of the method is 8
Complex Method,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,Pull,Cyclomatic complexity of the method is 8
Complex Method,SharpAdbClient.DeviceCommands,DeviceExtensions,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\DeviceExtensions.cs,ListProcesses,Cyclomatic complexity of the method is 8
Complex Method,SharpAdbClient.DeviceCommands,LinuxPath,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\LinuxPath.cs,Combine,Cyclomatic complexity of the method is 11
Complex Method,SharpAdbClient.Logs,LogReader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\Logs\LogReader.cs,ReadEntry,Cyclomatic complexity of the method is 16
Complex Method,SharpAdbClient.Logs,LogReader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\Logs\LogReader.cs,ReadLogEntry,Cyclomatic complexity of the method is 22
Complex Method,SharpAdbClient.Logs,ShellStream,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\Logs\ShellStream.cs,Read,Cyclomatic complexity of the method is 9
Long Parameter List,SharpAdbClient,AdbClient,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\AdbClient.cs,ExecuteRemoteCommand,The method has 5 parameters.
Long Parameter List,SharpAdbClient,IAdbClient,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\IAdbClient.cs,ExecuteRemoteCommand,The method has 5 parameters.
Long Parameter List,SharpAdbClient,ITcpSocket,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\ITcpSocket.cs,ReceiveAsync,The method has 5 parameters.
Long Parameter List,SharpAdbClient,ISyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\ISyncService.cs,Push,The method has 5 parameters.
Long Parameter List,SharpAdbClient,SocketExtensions,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SocketExtensions.cs,ReceiveAsync,The method has 6 parameters.
Long Parameter List,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,Push,The method has 5 parameters.
Long Parameter List,SharpAdbClient,TcpSocket,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\TcpSocket.cs,ReceiveAsync,The method has 5 parameters.
Long Statement,SharpAdbClient,AdbResponse,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\AdbResponse.cs,Equals,The length of the statement  "	return other.IOSuccess == this.IOSuccess && string.Equals (other.Message' this.Message' StringComparison.OrdinalIgnoreCase) && other.Okay == this.Okay && other.Timeout == this.Timeout; " is 184.
Long Statement,SharpAdbClient,AdbServer,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\AdbServer.cs,StartServer,The length of the statement  "			throw new AdbException ("The adb server is not running' but no valid path to the adb.exe executable was provided. The adb server cannot be started."); " is 150.
Long Statement,SharpAdbClient,AdbServer,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\AdbServer.cs,StartServer,The length of the statement  "	if (serverStatus.IsRunning && ((serverStatus.Version < RequiredAdbVersion) || ((serverStatus.Version < commandLineVersion) && restartServerIfNewer))) { " is 151.
Long Statement,SharpAdbClient,ForwardSpec,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\ForwardSpec.cs,GetHashCode,The length of the statement  "	return (int)this.Protocol ^ this.Port ^ this.ProcessId ^ (this.SocketName == null ? 1 : this.SocketName.GetHashCode ()); " is 120.
Long Statement,SharpAdbClient,SyncCommandConverter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncCommandConverter.cs,GetCommand,The length of the statement  "	var key = Values.Where (d => string.Equals (d.Value' commandText' StringComparison.OrdinalIgnoreCase)).Select (d => new SyncCommand? (d.Key)).SingleOrDefault (); " is 161.
Complex Conditional,SharpAdbClient,AdbServer,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\AdbServer.cs,StartServer,The conditional expression  "serverStatus.IsRunning && ((serverStatus.Version < RequiredAdbVersion) || ((serverStatus.Version < commandLineVersion) && restartServerIfNewer))"  is complex.
Empty Catch Block,SharpAdbClient,AdbClient,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\AdbClient.cs,RunLogService,The method has an empty catch block.
Empty Catch Block,SharpAdbClient.Receivers,ProcessOutputReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\Receivers\ProcessOutputReceiver.cs,ProcessNewLines,The method has an empty catch block.
Magic Number,SharpAdbClient,AdbResponse,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\AdbResponse.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.IOSuccess.GetHashCode ();  
Magic Number,SharpAdbClient,AdbResponse,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\AdbResponse.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.Message == null ? 0 : this.Message.GetHashCode ();  
Magic Number,SharpAdbClient,AdbResponse,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\AdbResponse.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.Okay.GetHashCode ();  
Magic Number,SharpAdbClient,AdbResponse,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\AdbResponse.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.Timeout.GetHashCode ();  
Magic Number,SharpAdbClient,EnvironmentVariablesReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\EnvironmentVariablesReceiver.cs,ProcessNewLines,The following statement contains a magic number: foreach (string line in lines) {  	if (string.IsNullOrEmpty (line) || line.StartsWith ("#")) {  		continue;  	}  	Match m = Regex.Match (line' EnvPattern);  	if (m.Success) {  		string label = m.Groups [1].Value.Trim ();  		string value = m.Groups [2].Value.Trim ();  		if (label.Length > 0) {  			if (this.EnvironmentVariables.ContainsKey (label)) {  				this.EnvironmentVariables [label] = value;  			} else {  				this.EnvironmentVariables.Add (label' value);  			}  		}  	}  }  
Magic Number,SharpAdbClient,EnvironmentVariablesReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\EnvironmentVariablesReceiver.cs,ProcessNewLines,The following statement contains a magic number: if (m.Success) {  	string label = m.Groups [1].Value.Trim ();  	string value = m.Groups [2].Value.Trim ();  	if (label.Length > 0) {  		if (this.EnvironmentVariables.ContainsKey (label)) {  			this.EnvironmentVariables [label] = value;  		} else {  			this.EnvironmentVariables.Add (label' value);  		}  	}  }  
Magic Number,SharpAdbClient,ForwardData,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\ForwardData.cs,FromString,The following statement contains a magic number: return new ForwardData () {  	SerialNumber = parts [0]'  	Local = parts [1]'  	Remote = parts [2]  };  
Magic Number,SharpAdbClient,ForwardSpec,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\ForwardSpec.cs,Parse,The following statement contains a magic number: if (parts.Length != 2) {  	throw new ArgumentOutOfRangeException (nameof (spec));  }  
Magic Number,SharpAdbClient,ManagedAdbExtenstions,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\Extensions\ArrayHelper.cs,Swap32bitFromArray,The following statement contains a magic number: v |= (((int)value [offset + 1]) & 0x000000FF) << 8;  
Magic Number,SharpAdbClient,ManagedAdbExtenstions,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\Extensions\ArrayHelper.cs,Swap32bitFromArray,The following statement contains a magic number: v |= (((int)value [offset + 2]) & 0x000000FF) << 16;  
Magic Number,SharpAdbClient,ManagedAdbExtenstions,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\Extensions\ArrayHelper.cs,Swap32bitFromArray,The following statement contains a magic number: v |= (((int)value [offset + 2]) & 0x000000FF) << 16;  
Magic Number,SharpAdbClient,ManagedAdbExtenstions,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\Extensions\ArrayHelper.cs,Swap32bitFromArray,The following statement contains a magic number: v |= (((int)value [offset + 3]) & 0x000000FF) << 24;  
Magic Number,SharpAdbClient,ManagedAdbExtenstions,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\Extensions\ArrayHelper.cs,Swap32bitFromArray,The following statement contains a magic number: v |= (((int)value [offset + 3]) & 0x000000FF) << 24;  
Magic Number,SharpAdbClient,ManagedAdbExtenstions,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\Extensions\ArrayHelper.cs,SwapU16bitFromArray,The following statement contains a magic number: v |= (((int)value [offset + 1]) & 0x000000FF) << 8;  
Magic Number,SharpAdbClient,LogLevel,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\LogLevel.cs,LogLevel,The following statement contains a magic number: Verbose = new LogLevelInfo {  	Priority = 2'  	Value = "verbose"'  	Letter = 'V'  };  
Magic Number,SharpAdbClient,LogLevel,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\LogLevel.cs,LogLevel,The following statement contains a magic number: Debug = new LogLevelInfo {  	Priority = 3'  	Value = "debug"'  	Letter = 'D'  };  
Magic Number,SharpAdbClient,LogLevel,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\LogLevel.cs,LogLevel,The following statement contains a magic number: Info = new LogLevelInfo {  	Priority = 4'  	Value = "info"'  	Letter = 'I'  };  
Magic Number,SharpAdbClient,LogLevel,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\LogLevel.cs,LogLevel,The following statement contains a magic number: Warn = new LogLevelInfo {  	Priority = 5'  	Value = "warn"'  	Letter = 'W'  };  
Magic Number,SharpAdbClient,LogLevel,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\LogLevel.cs,LogLevel,The following statement contains a magic number: Error = new LogLevelInfo {  	Priority = 6'  	Value = "error"'  	Letter = 'E'  };  
Magic Number,SharpAdbClient,LogLevel,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\LogLevel.cs,LogLevel,The following statement contains a magic number: Assert = new LogLevelInfo {  	Priority = 7'  	Value = "assert"'  	Letter = 'A'  };  
Magic Number,SharpAdbClient,SyncCommandConverter,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncCommandConverter.cs,GetCommand,The following statement contains a magic number: if (value.Length != 4) {  	throw new ArgumentOutOfRangeException (nameof (value));  }  
Magic Number,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,ReadStatistics,The following statement contains a magic number: if (!BitConverter.IsLittleEndian) {  	Array.Reverse (statResult' 0' 4);  	Array.Reverse (statResult' 4' 4);  	Array.Reverse (statResult' 8' 4);  }  
Magic Number,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,ReadStatistics,The following statement contains a magic number: if (!BitConverter.IsLittleEndian) {  	Array.Reverse (statResult' 0' 4);  	Array.Reverse (statResult' 4' 4);  	Array.Reverse (statResult' 8' 4);  }  
Magic Number,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,ReadStatistics,The following statement contains a magic number: if (!BitConverter.IsLittleEndian) {  	Array.Reverse (statResult' 0' 4);  	Array.Reverse (statResult' 4' 4);  	Array.Reverse (statResult' 8' 4);  }  
Magic Number,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,ReadStatistics,The following statement contains a magic number: if (!BitConverter.IsLittleEndian) {  	Array.Reverse (statResult' 0' 4);  	Array.Reverse (statResult' 4' 4);  	Array.Reverse (statResult' 8' 4);  }  
Magic Number,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,ReadStatistics,The following statement contains a magic number: if (!BitConverter.IsLittleEndian) {  	Array.Reverse (statResult' 0' 4);  	Array.Reverse (statResult' 4' 4);  	Array.Reverse (statResult' 8' 4);  }  
Magic Number,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,ReadStatistics,The following statement contains a magic number: Array.Reverse (statResult' 0' 4);  
Magic Number,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,ReadStatistics,The following statement contains a magic number: Array.Reverse (statResult' 4' 4);  
Magic Number,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,ReadStatistics,The following statement contains a magic number: Array.Reverse (statResult' 4' 4);  
Magic Number,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,ReadStatistics,The following statement contains a magic number: Array.Reverse (statResult' 8' 4);  
Magic Number,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,ReadStatistics,The following statement contains a magic number: Array.Reverse (statResult' 8' 4);  
Magic Number,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,ReadStatistics,The following statement contains a magic number: value.Size = BitConverter.ToInt32 (statResult' 4);  
Magic Number,SharpAdbClient,SyncService,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\SyncService.cs,ReadStatistics,The following statement contains a magic number: value.Time = DateTimeHelper.Epoch.AddSeconds (BitConverter.ToInt32 (statResult' 8)).ToLocalTime ();  
Magic Number,SharpAdbClient.DeviceCommands,AndroidProcess,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\AndroidProcess.cs,Parse,The following statement contains a magic number: if (parts.Length < 35) {  	throw new ArgumentOutOfRangeException (nameof (line));  }  
Magic Number,SharpAdbClient.DeviceCommands,VersionInfoReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\VersionInfoReceiver.cs,GetVersionName,The following statement contains a magic number: if (line != null && line.Trim ().StartsWith ("versionName=")) {  	return line.Trim ().Substring (12).Trim ();  } else {  	return null;  }  
Magic Number,SharpAdbClient.DeviceCommands,VersionInfoReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\VersionInfoReceiver.cs,GetVersionName,The following statement contains a magic number: return line.Trim ().Substring (12).Trim ();  
Magic Number,SharpAdbClient.DeviceCommands,DeviceExtensions,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\DeviceExtensions.cs,ListProcesses,The following statement contains a magic number: for (int i = 0; i < pids.Count; i++) {  	if (i % 50 == 0) {  		catBuilder.Clear ();  		catBuilder.Append ("cat ");  	}  	catBuilder.Append ();  	if (i > 0 && (i % 50 == 0 || i == pids.Count - 1)) {  		device.ExecuteShellCommand (catBuilder.ToString ()' processOutputReceiver);  	}  }  
Magic Number,SharpAdbClient.DeviceCommands,DeviceExtensions,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\DeviceExtensions.cs,ListProcesses,The following statement contains a magic number: for (int i = 0; i < pids.Count; i++) {  	if (i % 50 == 0) {  		catBuilder.Clear ();  		catBuilder.Append ("cat ");  	}  	catBuilder.Append ();  	if (i > 0 && (i % 50 == 0 || i == pids.Count - 1)) {  		device.ExecuteShellCommand (catBuilder.ToString ()' processOutputReceiver);  	}  }  
Magic Number,SharpAdbClient.DeviceCommands,DeviceExtensions,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\DeviceExtensions.cs,ListProcesses,The following statement contains a magic number: if (i % 50 == 0) {  	catBuilder.Clear ();  	catBuilder.Append ("cat ");  }  
Magic Number,SharpAdbClient.DeviceCommands,DeviceExtensions,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\DeviceExtensions.cs,ListProcesses,The following statement contains a magic number: if (i > 0 && (i % 50 == 0 || i == pids.Count - 1)) {  	device.ExecuteShellCommand (catBuilder.ToString ()' processOutputReceiver);  }  
Magic Number,SharpAdbClient.DeviceCommands,GetPropReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\GetPropReceiver.cs,ProcessNewLines,The following statement contains a magic number: foreach (string line in lines) {  	if (string.IsNullOrEmpty (line) || line.StartsWith ("#") || line.StartsWith ("$")) {  		continue;  	}  	var m = line.Match (GetpropRegex' RegexOptions.Compiled);  	if (m.Success) {  		string label = m.Groups [1].Value.Trim ();  		string value = m.Groups [2].Value.Trim ();  		if (label.Length > 0) {  			this.Properties.Add (label' value);  		}  	}  }  
Magic Number,SharpAdbClient.DeviceCommands,GetPropReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\GetPropReceiver.cs,ProcessNewLines,The following statement contains a magic number: if (m.Success) {  	string label = m.Groups [1].Value.Trim ();  	string value = m.Groups [2].Value.Trim ();  	if (label.Length > 0) {  		this.Properties.Add (label' value);  	}  }  
Magic Number,SharpAdbClient.DeviceCommands,PackageManager,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManager.cs,SyncPackageToDevice,The following statement contains a magic number: try {  	string packageFileName = Path.GetFileName (localFilePath);  	// only root has access to /data/local/tmp/... not sure how adb does it then...  	// workitem: 16823  	// workitem: 19711  	string remoteFilePath = LinuxPath.Combine (TempInstallationDirectory' packageFileName);  	Log.Debug (packageFileName);  	using (ISyncService sync = Factories.SyncServiceFactory (this.Device))  		using (Stream stream = File.OpenRead (localFilePath)) {  			string message;  			Log.Debug (Tag' message);  			sync.Push (stream' remoteFilePath' 644' File.GetLastWriteTime (localFilePath)' CancellationToken.None);  		}  	return remoteFilePath;  } catch (IOException e) {  	Log.Error (Tag);  	throw;  }  
Magic Number,SharpAdbClient.DeviceCommands,PackageManager,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManager.cs,SyncPackageToDevice,The following statement contains a magic number: using (ISyncService sync = Factories.SyncServiceFactory (this.Device))  	using (Stream stream = File.OpenRead (localFilePath)) {  		string message;  		Log.Debug (Tag' message);  		sync.Push (stream' remoteFilePath' 644' File.GetLastWriteTime (localFilePath)' CancellationToken.None);  	}  
Magic Number,SharpAdbClient.DeviceCommands,PackageManager,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManager.cs,SyncPackageToDevice,The following statement contains a magic number: using (Stream stream = File.OpenRead (localFilePath)) {  	string message;  	Log.Debug (Tag' message);  	sync.Push (stream' remoteFilePath' 644' File.GetLastWriteTime (localFilePath)' CancellationToken.None);  }  
Magic Number,SharpAdbClient.DeviceCommands,PackageManager,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManager.cs,SyncPackageToDevice,The following statement contains a magic number: sync.Push (stream' remoteFilePath' 644' File.GetLastWriteTime (localFilePath)' CancellationToken.None);  
Magic Number,SharpAdbClient.DeviceCommands,PackageManagerReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManagerReceiver.cs,ProcessNewLines,The following statement contains a magic number: foreach (var line in lines) {  	if (line != null && line.StartsWith ("package:")) {  		// Samples include:  		// package:/system/app/LegacyCamera.apk=com.android.camera  		// package:mwc2015.be  		string[] parts = line.Split (':'' '=');  		if (parts.Length == 3) {  			this.PackageManager.Packages.Add (parts [2]' parts [1]);  		} else if (parts.Length == 2) {  			this.PackageManager.Packages.Add (parts [1]' null);  		} else {  			Debug.WriteLine ();  		}  	}  }  
Magic Number,SharpAdbClient.DeviceCommands,PackageManagerReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManagerReceiver.cs,ProcessNewLines,The following statement contains a magic number: foreach (var line in lines) {  	if (line != null && line.StartsWith ("package:")) {  		// Samples include:  		// package:/system/app/LegacyCamera.apk=com.android.camera  		// package:mwc2015.be  		string[] parts = line.Split (':'' '=');  		if (parts.Length == 3) {  			this.PackageManager.Packages.Add (parts [2]' parts [1]);  		} else if (parts.Length == 2) {  			this.PackageManager.Packages.Add (parts [1]' null);  		} else {  			Debug.WriteLine ();  		}  	}  }  
Magic Number,SharpAdbClient.DeviceCommands,PackageManagerReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManagerReceiver.cs,ProcessNewLines,The following statement contains a magic number: foreach (var line in lines) {  	if (line != null && line.StartsWith ("package:")) {  		// Samples include:  		// package:/system/app/LegacyCamera.apk=com.android.camera  		// package:mwc2015.be  		string[] parts = line.Split (':'' '=');  		if (parts.Length == 3) {  			this.PackageManager.Packages.Add (parts [2]' parts [1]);  		} else if (parts.Length == 2) {  			this.PackageManager.Packages.Add (parts [1]' null);  		} else {  			Debug.WriteLine ();  		}  	}  }  
Magic Number,SharpAdbClient.DeviceCommands,PackageManagerReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManagerReceiver.cs,ProcessNewLines,The following statement contains a magic number: if (line != null && line.StartsWith ("package:")) {  	// Samples include:  	// package:/system/app/LegacyCamera.apk=com.android.camera  	// package:mwc2015.be  	string[] parts = line.Split (':'' '=');  	if (parts.Length == 3) {  		this.PackageManager.Packages.Add (parts [2]' parts [1]);  	} else if (parts.Length == 2) {  		this.PackageManager.Packages.Add (parts [1]' null);  	} else {  		Debug.WriteLine ();  	}  }  
Magic Number,SharpAdbClient.DeviceCommands,PackageManagerReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManagerReceiver.cs,ProcessNewLines,The following statement contains a magic number: if (line != null && line.StartsWith ("package:")) {  	// Samples include:  	// package:/system/app/LegacyCamera.apk=com.android.camera  	// package:mwc2015.be  	string[] parts = line.Split (':'' '=');  	if (parts.Length == 3) {  		this.PackageManager.Packages.Add (parts [2]' parts [1]);  	} else if (parts.Length == 2) {  		this.PackageManager.Packages.Add (parts [1]' null);  	} else {  		Debug.WriteLine ();  	}  }  
Magic Number,SharpAdbClient.DeviceCommands,PackageManagerReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManagerReceiver.cs,ProcessNewLines,The following statement contains a magic number: if (line != null && line.StartsWith ("package:")) {  	// Samples include:  	// package:/system/app/LegacyCamera.apk=com.android.camera  	// package:mwc2015.be  	string[] parts = line.Split (':'' '=');  	if (parts.Length == 3) {  		this.PackageManager.Packages.Add (parts [2]' parts [1]);  	} else if (parts.Length == 2) {  		this.PackageManager.Packages.Add (parts [1]' null);  	} else {  		Debug.WriteLine ();  	}  }  
Magic Number,SharpAdbClient.DeviceCommands,PackageManagerReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManagerReceiver.cs,ProcessNewLines,The following statement contains a magic number: if (parts.Length == 3) {  	this.PackageManager.Packages.Add (parts [2]' parts [1]);  } else if (parts.Length == 2) {  	this.PackageManager.Packages.Add (parts [1]' null);  } else {  	Debug.WriteLine ();  }  
Magic Number,SharpAdbClient.DeviceCommands,PackageManagerReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManagerReceiver.cs,ProcessNewLines,The following statement contains a magic number: if (parts.Length == 3) {  	this.PackageManager.Packages.Add (parts [2]' parts [1]);  } else if (parts.Length == 2) {  	this.PackageManager.Packages.Add (parts [1]' null);  } else {  	Debug.WriteLine ();  }  
Magic Number,SharpAdbClient.DeviceCommands,PackageManagerReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManagerReceiver.cs,ProcessNewLines,The following statement contains a magic number: if (parts.Length == 3) {  	this.PackageManager.Packages.Add (parts [2]' parts [1]);  } else if (parts.Length == 2) {  	this.PackageManager.Packages.Add (parts [1]' null);  } else {  	Debug.WriteLine ();  }  
Magic Number,SharpAdbClient.DeviceCommands,PackageManagerReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManagerReceiver.cs,ProcessNewLines,The following statement contains a magic number: this.PackageManager.Packages.Add (parts [2]' parts [1]);  
Magic Number,SharpAdbClient.DeviceCommands,PackageManagerReceiver,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\DeviceCommands\PackageManagerReceiver.cs,ProcessNewLines,The following statement contains a magic number: if (parts.Length == 2) {  	this.PackageManager.Packages.Add (parts [1]' null);  } else {  	Debug.WriteLine ();  }  
Magic Number,SharpAdbClient.Logs,LogReader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\Logs\LogReader.cs,ReadEntry,The following statement contains a magic number: switch ((LogId)id) {  case LogId.Crash:  case LogId.Kernel:  case LogId.Main:  case LogId.Radio:  case LogId.System: {  	// format: <priority:1><tag:N>\0<message:N>\0  	var priority = data [0];  	// Find the first \0 byte in the array. This is the seperator  	// between the tag and the actual message  	int tagEnd = 1;  	while (data [tagEnd] != '\0' && tagEnd < data.Length) {  		tagEnd++;  	}  	// Message should be null termintated' so remove the last entry' too (-2 instead of -1)  	string tag = Encoding.ASCII.GetString (data' 1' tagEnd - 1);  	string message = Encoding.ASCII.GetString (data' tagEnd + 1' data.Length - tagEnd - 2);  	return new AndroidLogEntry () {  		Data = data'  		ProcessId = pid'  		ThreadId = tid'  		TimeStamp = timestamp'  		Id = id'  		Priority = priority'  		Message = message'  		Tag = tag  	};  }  case LogId.Events: {  	// https://android.googlesource.com/platform/system/core.git/+/master/liblog/logprint.c#547  	var entry = new EventLogEntry () {  		Data = data'  		ProcessId = pid'  		ThreadId = tid'  		TimeStamp = timestamp'  		Id = id  	};  	// Use a stream on the data buffer. This will make sure that'  	// if anything goes wrong parsing the data' we never go past  	// the message boundary itself.  	using (MemoryStream stream = new MemoryStream (data))  		using (BinaryReader reader = new BinaryReader (stream)) {  			var priority = reader.ReadInt32 ();  			while (stream.Position < stream.Length) {  				this.ReadLogEntry (reader' entry.Values);  			}  		}  	return entry;  }  default:  	return new LogEntry () {  		Data = data'  		ProcessId = pid'  		ThreadId = tid'  		TimeStamp = timestamp'  		Id = id  	};  }  
Missing Default,SharpAdbClient,ForwardSpec,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\ForwardSpec.cs,Parse,The following switch statement is missing a default case: switch (protocol) {  case ForwardProtocol.JavaDebugWireProtocol:  	if (!isInt) {  		throw new ArgumentOutOfRangeException (nameof (spec));  	}  	value.ProcessId = intValue;  	break;  case ForwardProtocol.Tcp:  	if (!isInt) {  		throw new ArgumentOutOfRangeException (nameof (spec));  	}  	value.Port = intValue;  	break;  case ForwardProtocol.LocalAbstract:  case ForwardProtocol.LocalFilesystem:  case ForwardProtocol.LocalReserved:  case ForwardProtocol.Device:  	value.SocketName = parts [1];  	break;  }  
Missing Default,SharpAdbClient.Logs,LogReader,F:\newReposMay17\diydrones_MissionPlanner\ExtLibs\SharpAdbClient\Logs\LogReader.cs,ReadLogEntry,The following switch statement is missing a default case: switch (type) {  case EventLogType.Float:  	parent.Add (reader.ReadSingle ());  	break;  case EventLogType.Integer:  	parent.Add (reader.ReadInt32 ());  	break;  case EventLogType.Long:  	parent.Add (reader.ReadInt64 ());  	break;  case EventLogType.List:  	var listLength = reader.ReadByte ();  	Collection<object> list = new Collection<object> ();  	for (int i = 0; i < listLength; i++) {  		this.ReadLogEntry (reader' list);  	}  	parent.Add (list);  	break;  case EventLogType.String:  	int stringLength = reader.ReadInt32 ();  	byte[] messageData = reader.ReadBytes (stringLength);  	string message = Encoding.ASCII.GetString (messageData);  	parent.Add (message);  	break;  }  
