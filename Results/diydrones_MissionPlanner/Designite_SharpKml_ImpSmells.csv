Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SharpKml.Base,ElementWalker,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\ElementWalker.cs,WalkElement,Cyclomatic complexity of the method is 8
Complex Method,SharpKml.Base,Parser,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\Parser.cs,GetElement,Cyclomatic complexity of the method is 8
Long Parameter List,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,Distance,The method has 6 parameters. Parameters: latitude1' longitude1' altitude1' latitude2' longitude2' altitude2
Long Parameter List,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,Elevation,The method has 6 parameters. Parameters: latitude1' longitude1' altitude1' latitude2' longitude2' altitude2
Long Statement,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,Azimuth,The length of the statement  "            double x = (Math.Cos(latitude1) * Math.Sin(latitude2)) - (Math.Sin(latitude1) * Math.Cos(latitude2) * Math.Cos(longitude2 - longitude1)); " is 137.
Long Statement,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,Distance,The length of the statement  "            return Distance(point1.Latitude' point1.Longitude' point1.Altitude.Value' point2.Latitude' point2.Longitude' point2.Altitude.Value); " is 132.
Long Statement,SharpKml.Base,Parser,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\Parser.cs,ProcessAttributes,The length of the statement  "                    PropertyInfo property = browser.FindAttribute(new XmlComponent(null' _reader.LocalName' null)); // Attributes never have namespace info. " is 136.
Long Statement,SharpKml.Dom,Element,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Dom\Element.cs,AddChild,The length of the statement  "                throw new InvalidOperationException("Cannot add child element to this instance because it belongs to another instance."); " is 121.
Empty Catch Block,SharpKml.Engine,FileHandler,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Engine\FileHandler.cs,ReadFile,The method has an empty catch block.
Magic Number,SharpKml.Base,Angle,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\Angle.cs,GetHashCode,The following statement contains a magic number: return (this.Pitch.GetHashCode() * 17) +                     (this.Heading.GetHashCode() * 23) +                      (this.Roll.GetHashCode() * 23);
Magic Number,SharpKml.Base,Angle,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\Angle.cs,GetHashCode,The following statement contains a magic number: return (this.Pitch.GetHashCode() * 17) +                     (this.Heading.GetHashCode() * 23) +                      (this.Roll.GetHashCode() * 23);
Magic Number,SharpKml.Base,Angle,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\Angle.cs,GetHashCode,The following statement contains a magic number: return (this.Pitch.GetHashCode() * 17) +                     (this.Heading.GetHashCode() * 23) +                      (this.Roll.GetHashCode() * 23);
Magic Number,SharpKml.Base,Color32,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\Color32.cs,Color32,The following statement contains a magic number: _abgr = (uint)(alpha << 24) | (uint)(blue << 16) | (uint)(green << 8) | (uint)red;
Magic Number,SharpKml.Base,Color32,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\Color32.cs,Color32,The following statement contains a magic number: _abgr = (uint)(alpha << 24) | (uint)(blue << 16) | (uint)(green << 8) | (uint)red;
Magic Number,SharpKml.Base,Color32,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\Color32.cs,Color32,The following statement contains a magic number: _abgr = (uint)(alpha << 24) | (uint)(blue << 16) | (uint)(green << 8) | (uint)red;
Magic Number,SharpKml.Base,Color32,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\Color32.cs,Parse,The following statement contains a magic number: int max = Math.Min(value.Length' 8);
Magic Number,SharpKml.Base,Color32,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\Color32.cs,Parse,The following statement contains a magic number: for (int i = 0; i < max; ++i)              {                  // Always increase the color' even if the char isn't a valid number                  converted <<= 4; // Move along one hex - 2^4                  string letter = value[i].ToString();                  uint number;                  if (uint.TryParse(letter' NumberStyles.HexNumber' CultureInfo.InvariantCulture' out number))                  {                      converted += number;                  }              }
Magic Number,SharpKml.Base,KmlNamespaces,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\KmlNamespaces.cs,GenerateNamespaces,The following statement contains a magic number: foreach (var field in typeof(KmlNamespaces).GetFields(BindingFlags.Public | BindingFlags.Static))              {                  if (field.Name.EndsWith("Namespace"' StringComparison.Ordinal))                  {                      string name = field.Name.Substring(0' field.Name.Length - 9); // Remove the "Namespace" part                      var prefix = typeof(KmlNamespaces).GetField(name + "Prefix");                        output.Add((string)prefix.GetValue(null)' (string)field.GetValue(null));                  }              }
Magic Number,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,Azimuth,The following statement contains a magic number: return RadiansToDegrees(tan % (2 * Math.PI));
Magic Number,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,DegreesToRadians,The following statement contains a magic number: return degrees * Math.PI / 180.0;
Magic Number,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,Distance,The following statement contains a magic number: double latitudeSqrd = Math.Pow(Math.Sin((latitude1 - latitude2) / 2)' 2);
Magic Number,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,Distance,The following statement contains a magic number: double latitudeSqrd = Math.Pow(Math.Sin((latitude1 - latitude2) / 2)' 2);
Magic Number,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,Distance,The following statement contains a magic number: double longitudeSqrd = Math.Pow(Math.Sin((longitude1 - longitude2) / 2)' 2);
Magic Number,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,Distance,The following statement contains a magic number: double longitudeSqrd = Math.Pow(Math.Sin((longitude1 - longitude2) / 2)' 2);
Magic Number,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,Distance,The following statement contains a magic number: return RadiansToMeters(2 * Math.Asin(sqrt));
Magic Number,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,Distance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(surfaceDistance' 2) + Math.Pow(altitude2 - altitude1' 2));
Magic Number,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,Distance,The following statement contains a magic number: return Math.Sqrt(Math.Pow(surfaceDistance' 2) + Math.Pow(altitude2 - altitude1' 2));
Magic Number,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,RadialPoint,The following statement contains a magic number: double radialLon = ((longitude + deltaLon + Math.PI) % (2 * Math.PI)) - Math.PI;
Magic Number,SharpKml.Base,MathHelpers,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\MathHelpers.cs,RadiansToDegrees,The following statement contains a magic number: return radians * 180.0 / Math.PI;
Magic Number,SharpKml.Dom.GX,VectorElement,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Dom\GX\Track.cs,VectorElement,The following statement contains a magic number: string[] values = value.Split(new char[] { ' ' }' 3' StringSplitOptions.RemoveEmptyEntries);
Magic Number,SharpKml.Dom.GX,VectorElement,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Dom\GX\Track.cs,VectorElement,The following statement contains a magic number: _z = GetValue(values' 2);
Magic Number,SharpKml.Engine,BoundingBox,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Engine\BoundingBox.cs,BoundingBox,The following statement contains a magic number: this.East = -180;
Magic Number,SharpKml.Engine,BoundingBox,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Engine\BoundingBox.cs,BoundingBox,The following statement contains a magic number: this.North = -180;
Magic Number,SharpKml.Engine,BoundingBox,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Engine\BoundingBox.cs,BoundingBox,The following statement contains a magic number: this.South = 180;
Magic Number,SharpKml.Engine,BoundingBox,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Engine\BoundingBox.cs,BoundingBox,The following statement contains a magic number: this.West = 180;
Magic Number,SharpKml.Engine,FeatureExtensions,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Engine\FeatureExtensions.cs,ComputeLookAt,The following statement contains a magic number: double northWest = Math.Sqrt(Math.Pow(north' 2) + Math.Pow(west' 2));
Magic Number,SharpKml.Engine,FeatureExtensions,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Engine\FeatureExtensions.cs,ComputeLookAt,The following statement contains a magic number: double northWest = Math.Sqrt(Math.Pow(north' 2) + Math.Pow(west' 2));
Magic Number,SharpKml.Engine,UriExtensions,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Engine\UriExtensions.cs,SplitKmz,The following statement contains a magic number: if (index > 0)              {                  index += 4; // Add ".kmz"                  UriBuilder builder = new UriBuilder(uri);                  builder.Path = path.Substring(0' index);                    if (index < path.Length - 1) // Allow for '/'                  {                      Uri file = new Uri(path.Substring(index + 1)' UriKind.Relative); // Skip '/'                      return Tuple.Create(builder.Uri' file);                  }                  return new Tuple<Uri' Uri>(builder.Uri' null);              }
Magic Number,SharpKml.Engine,UriExtensions,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Engine\UriExtensions.cs,GetComponents,The following statement contains a magic number: if (absolute != null)              {                  string output = absolute.GetComponents(components' UriFormat.Unescaped);                  output = output.TrimStart('/');                    // We need to add any "../" at the start of the original string'                  // as they are lost by the conversion to an absolute.                  string original = relativeUri.OriginalString;                  while (original.StartsWith("../"' StringComparison.Ordinal))                  {                      output = "../" + output;                      original = original.Substring(3); // Remove the "../" and test again                  }                    return output;              }
Missing Default,SharpKml.Base,Parser,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\Parser.cs,GetElement,The following switch statement is missing a default case: switch (_reader.NodeType)                      {                          case XmlNodeType.Element:                              this.AddChild(parent);                              break;                          case XmlNodeType.CDATA: // Treat like normal text                          case XmlNodeType.Text:                              parent.AddInnerText(_reader.Value);                              break;                      }
Missing Default,SharpKml.Base,XmlExtractor,C:\repos\diydrones_MissionPlanner\ExtLibs\SharpKml\Base\XmlExtractor.cs,ProcessChild,The following switch statement is missing a default case: switch (_reader.NodeType)                  {                      case XmlNodeType.Element:                          if (_reader.IsEmptyElement) // Check here before we access attributes.                          {                              _xml.AppendFormat("<{0}{1} />"' _reader.Name' this.GetAttributes());                          }                          else                          {                              _xml.AppendFormat("<{0}{1}>"' _reader.Name' this.GetAttributes());                              this.ProcessChild();                              _xml.AppendFormat("</{0}>"' _reader.Name);                          }                          break;                      case XmlNodeType.EndElement:                          return;                      case XmlNodeType.CDATA: // Fall through                      case XmlNodeType.Text:                          _xml.Append(_reader.Value);                          break;                  }
