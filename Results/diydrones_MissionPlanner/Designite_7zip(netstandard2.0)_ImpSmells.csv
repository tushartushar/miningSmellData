Implementation smell,Namespace,Class,File,Method,Description
Long Method,SevenZip,LzmaAlone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaAlone.cs,Main2,The method has 207 lines of code.
Long Method,SevenZip.Compression.LZMA,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,Code,The method has 114 lines of code.
Long Method,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The method has 453 lines of code.
Long Method,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,CodeOneBlock,The method has 160 lines of code.
Long Method,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,SetCoderProperties,The method has 103 lines of code.
Long Method,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,GetMatches,The method has 125 lines of code.
Complex Method,SevenZip.CommandLineParser,Parser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Common\CommandLineParser.cs,ParseString,Cyclomatic complexity of the method is 21
Complex Method,SevenZip,LzmaAlone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaAlone.cs,Main2,Cyclomatic complexity of the method is 40
Complex Method,SevenZip.Compression.LZMA,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,Code,Cyclomatic complexity of the method is 15
Complex Method,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,Cyclomatic complexity of the method is 64
Complex Method,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,CodeOneBlock,Cyclomatic complexity of the method is 25
Complex Method,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,SetCoderProperties,Cyclomatic complexity of the method is 26
Complex Method,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,GetMatches,Cyclomatic complexity of the method is 22
Long Parameter List,SevenZip.CommandLineParser,SwitchForm,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Common\CommandLineParser.cs,SwitchForm,The method has 6 parameters. Parameters: idString' type' multi' minLen' maxLen' postCharSet
Long Parameter List,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetTotalRating,The method has 6 parameters. Parameters: dictionarySize' elapsedTimeEn' sizeEn' elapsedTimeDe' inSizeDe' outSizeDe
Long Parameter List,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,PrintResults,The method has 5 parameters. Parameters: dictionarySize' elapsedTime' size' decompressMode' secondSize
Long Parameter List,SevenZip,ICoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\ICoder.cs,Code,The method has 5 parameters. Parameters: inStream' outStream' inSize' outSize' progress
Long Parameter List,SevenZip.Compression.LZMA,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,Code,The method has 5 parameters. Parameters: inStream' outStream' inSize' outSize' progress
Long Parameter List,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,Code,The method has 5 parameters. Parameters: inStream' outStream' inSize' outSize' progress
Long Parameter List,SevenZip.Compression.RangeCoder,BitTreeEncoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoderBitTree.cs,ReverseEncode,The method has 5 parameters. Parameters: Models' startIndex' rangeEncoder' NumBitLevels' symbol
Long Identifier,SevenZip.Compression.LZMA,Base,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaBase.cs,,The length of the parameter kNumLitPosStatesBitsEncodingMax is 31.
Long Statement,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The length of the statement  "							UInt32 nextMatchPrice = curAndLenCharPrice + _isMatch[(state2.Index << Base.kNumPosStatesBitsMax) + posStateNext].GetPrice1(); " is 126.
Long Statement,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The length of the statement  "									UInt32 nextMatchPrice = curAndLenCharPrice + _isMatch[(state2.Index << Base.kNumPosStatesBitsMax) + posStateNext].GetPrice1(); " is 126.
Long Statement,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,FillDistancesPrices,The length of the statement  "					_posSlotPrices[st + posSlot] += ((((posSlot >> 1) - 1) - Base.kNumAlignBits) << RangeCoder.BitEncoder.kNumBitPriceShiftBits); " is 125.
Magic Number,SevenZip,CRC,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Common\CRC.cs,CRC,The following statement contains a magic number: Table = new uint[256];
Magic Number,SevenZip,CRC,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Common\CRC.cs,CRC,The following statement contains a magic number: j < 8
Magic Number,SevenZip,CRC,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Common\CRC.cs,CRC,The following statement contains a magic number: i < 256
Magic Number,SevenZip,CRC,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Common\CRC.cs,UpdateByte,The following statement contains a magic number: _value = Table[(((byte)(_value)) ^ b)] ^ (_value >> 8);
Magic Number,SevenZip,CRC,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Common\CRC.cs,Update,The following statement contains a magic number: _value = Table[(((byte)(_value)) ^ data[offset + i])] ^ (_value >> 8);
Magic Number,SevenZip,LzmaAlone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaAlone.cs,GetNumber,The following statement contains a magic number: v *= 10;
Magic Number,SevenZip,LzmaAlone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaAlone.cs,Main2,The following statement contains a magic number: SwitchForm[] kSwitchForms = new SwitchForm[13];
Magic Number,SevenZip,LzmaAlone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaAlone.cs,Main2,The following statement contains a magic number: Int32 dictionary = 1 << 21;
Magic Number,SevenZip,LzmaAlone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaAlone.cs,Main2,The following statement contains a magic number: const Int32 kNumDefaultItereations = 10;
Magic Number,SevenZip,LzmaAlone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaAlone.cs,Main2,The following statement contains a magic number: dictionary = 1 << 23;
Magic Number,SevenZip,LzmaAlone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaAlone.cs,Main2,The following statement contains a magic number: Int32 posStateBits = 2;
Magic Number,SevenZip,LzmaAlone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaAlone.cs,Main2,The following statement contains a magic number: Int32 litContextBits = 3;
Magic Number,SevenZip,LzmaAlone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaAlone.cs,Main2,The following statement contains a magic number: Int32 algorithm = 2;
Magic Number,SevenZip,LzmaAlone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaAlone.cs,Main2,The following statement contains a magic number: Int32 numFastBytes = 128;
Magic Number,SevenZip,LzmaAlone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaAlone.cs,Main2,The following statement contains a magic number: outStream.WriteByte((Byte)(fileSize >> (8 * i)));
Magic Number,SevenZip,LzmaAlone,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaAlone.cs,Main2,The following statement contains a magic number: i < 8
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetLogSize,The following statement contains a magic number: i < 32
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetLogSize,The following statement contains a magic number: return (32 << kSubBits);
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,MyMultDiv64,The following statement contains a magic number: freq > 1000000
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetCompressRating,The following statement contains a magic number: UInt64 t = GetLogSize(dictionarySize) - (18 << kSubBits);
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetCompressRating,The following statement contains a magic number: UInt64 numCommandsForOne = 1060 + ((t * t * 10) >> (2 * kSubBits));
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetCompressRating,The following statement contains a magic number: UInt64 numCommandsForOne = 1060 + ((t * t * 10) >> (2 * kSubBits));
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetCompressRating,The following statement contains a magic number: UInt64 numCommandsForOne = 1060 + ((t * t * 10) >> (2 * kSubBits));
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetDecompressRating,The following statement contains a magic number: UInt64 numCommands = inSize * 220 + outSize * 20;
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetDecompressRating,The following statement contains a magic number: UInt64 numCommands = inSize * 220 + outSize * 20;
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetTotalRating,The following statement contains a magic number: return (GetCompressRating(dictionarySize' elapsedTimeEn' sizeEn) +  				GetDecompressRating(elapsedTimeDe' inSizeDe' outSizeDe)) / 2;
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,PrintValue,The following statement contains a magic number: i + s.Length < 6
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,PrintRating,The following statement contains a magic number: PrintValue(rating / 1000000);
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,PrintResults,The following statement contains a magic number: PrintValue(speed / 1024);
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,LzmaBenchmark,The following statement contains a magic number: dictionarySize < (1 << 18)
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,LzmaBenchmark,The following statement contains a magic number: UInt32 kCompressedBufferSize = (kBufferSize / 2) + kCompressedAdditionalSize;
Magic Number,SevenZip,LzmaBench,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,LzmaBenchmark,The following statement contains a magic number: j < 2
Magic Number,SevenZip,CRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,Init,The following statement contains a magic number: A1 = 362436069;
Magic Number,SevenZip,CRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,Init,The following statement contains a magic number: A2 = 521288629;
Magic Number,SevenZip,CRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetRnd,The following statement contains a magic number: return  					((A1 = 36969 * (A1 & 0xffff) + (A1 >> 16)) << 16) ^  					((A2 = 18000 * (A2 & 0xffff) + (A2 >> 16)));
Magic Number,SevenZip,CRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetRnd,The following statement contains a magic number: return  					((A1 = 36969 * (A1 & 0xffff) + (A1 >> 16)) << 16) ^  					((A2 = 18000 * (A2 & 0xffff) + (A2 >> 16)));
Magic Number,SevenZip,CRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetRnd,The following statement contains a magic number: return  					((A1 = 36969 * (A1 & 0xffff) + (A1 >> 16)) << 16) ^  					((A2 = 18000 * (A2 & 0xffff) + (A2 >> 16)));
Magic Number,SevenZip,CRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetRnd,The following statement contains a magic number: return  					((A1 = 36969 * (A1 & 0xffff) + (A1 >> 16)) << 16) ^  					((A2 = 18000 * (A2 & 0xffff) + (A2 >> 16)));
Magic Number,SevenZip,CRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetRnd,The following statement contains a magic number: return  					((A1 = 36969 * (A1 & 0xffff) + (A1 >> 16)) << 16) ^  					((A2 = 18000 * (A2 & 0xffff) + (A2 >> 16)));
Magic Number,SevenZip,CBitRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetRnd,The following statement contains a magic number: NumBits = 32 - numBits;
Magic Number,SevenZip,CBenchRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetOffset,The following statement contains a magic number: return GetLogRandBits(4);
Magic Number,SevenZip,CBenchRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetOffset,The following statement contains a magic number: return (GetLogRandBits(4) << 10) | RG.GetRnd(10);
Magic Number,SevenZip,CBenchRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetOffset,The following statement contains a magic number: return (GetLogRandBits(4) << 10) | RG.GetRnd(10);
Magic Number,SevenZip,CBenchRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetOffset,The following statement contains a magic number: return (GetLogRandBits(4) << 10) | RG.GetRnd(10);
Magic Number,SevenZip,CBenchRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetLen1,The following statement contains a magic number: return RG.GetRnd(1 + (int)RG.GetRnd(2));
Magic Number,SevenZip,CBenchRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetLen2,The following statement contains a magic number: return RG.GetRnd(2 + (int)RG.GetRnd(2));
Magic Number,SevenZip,CBenchRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,GetLen2,The following statement contains a magic number: return RG.GetRnd(2 + (int)RG.GetRnd(2));
Magic Number,SevenZip,CBenchRandomGenerator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LzmaAlone\LzmaBench.cs,Generate,The following statement contains a magic number: Buffer[Pos++] = (Byte)RG.GetRnd(8);
Magic Number,SevenZip.Compression.LZMA,State,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaBase.cs,UpdateChar,The following statement contains a magic number: Index < 4
Magic Number,SevenZip.Compression.LZMA,State,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaBase.cs,UpdateMatch,The following statement contains a magic number: Index = (uint)(Index < 7 ? 7 : 10);
Magic Number,SevenZip.Compression.LZMA,State,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaBase.cs,UpdateMatch,The following statement contains a magic number: Index = (uint)(Index < 7 ? 7 : 10);
Magic Number,SevenZip.Compression.LZMA,State,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaBase.cs,UpdateMatch,The following statement contains a magic number: Index = (uint)(Index < 7 ? 7 : 10);
Magic Number,SevenZip.Compression.LZMA,State,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaBase.cs,UpdateRep,The following statement contains a magic number: Index = (uint)(Index < 7 ? 8 : 11);
Magic Number,SevenZip.Compression.LZMA,State,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaBase.cs,UpdateRep,The following statement contains a magic number: Index = (uint)(Index < 7 ? 8 : 11);
Magic Number,SevenZip.Compression.LZMA,State,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaBase.cs,UpdateRep,The following statement contains a magic number: Index = (uint)(Index < 7 ? 8 : 11);
Magic Number,SevenZip.Compression.LZMA,State,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaBase.cs,UpdateShortRep,The following statement contains a magic number: Index = (uint)(Index < 7 ? 9 : 11);
Magic Number,SevenZip.Compression.LZMA,State,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaBase.cs,UpdateShortRep,The following statement contains a magic number: Index = (uint)(Index < 7 ? 9 : 11);
Magic Number,SevenZip.Compression.LZMA,State,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaBase.cs,UpdateShortRep,The following statement contains a magic number: Index = (uint)(Index < 7 ? 9 : 11);
Magic Number,SevenZip.Compression.LZMA,State,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaBase.cs,IsCharState,The following statement contains a magic number: return Index < 7;
Magic Number,SevenZip.Compression.LZMA,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,SetDictionarySize,The following statement contains a magic number: uint blockSize = Math.Max(m_DictionarySizeCheck' (1 << 12));
Magic Number,SevenZip.Compression.LZMA,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,SetLiteralProperties,The following statement contains a magic number: lp > 8
Magic Number,SevenZip.Compression.LZMA,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,SetLiteralProperties,The following statement contains a magic number: lc > 8
Magic Number,SevenZip.Compression.LZMA,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,SetDecoderProperties,The following statement contains a magic number: properties.Length < 5
Magic Number,SevenZip.Compression.LZMA,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,SetDecoderProperties,The following statement contains a magic number: int lc = properties[0] % 9;
Magic Number,SevenZip.Compression.LZMA,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,SetDecoderProperties,The following statement contains a magic number: int remainder = properties[0] / 9;
Magic Number,SevenZip.Compression.LZMA,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,SetDecoderProperties,The following statement contains a magic number: int lp = remainder % 5;
Magic Number,SevenZip.Compression.LZMA,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,SetDecoderProperties,The following statement contains a magic number: int pb = remainder / 5;
Magic Number,SevenZip.Compression.LZMA,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,SetDecoderProperties,The following statement contains a magic number: dictionarySize += ((UInt32)(properties[1 + i])) << (i * 8);
Magic Number,SevenZip.Compression.LZMA,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,SetDecoderProperties,The following statement contains a magic number: i < 4
Magic Number,SevenZip.Compression.LZMA,LiteralDecoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,GetState,The following statement contains a magic number: return ((pos & m_PosMask) << m_NumPrevBits) + (uint)(prevByte >> (8 - m_NumPrevBits));
Magic Number,SevenZip.Compression.LZMA,Decoder2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,DecodeWithMatchByte,The following statement contains a magic number: uint matchBit = (uint)(matchByte >> 7) & 1;
Magic Number,SevenZip.Compression.LZMA,Decoder2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaDecoder.cs,DecodeWithMatchByte,The following statement contains a magic number: uint bit = m_Decoders[((1 + matchBit) << 8) + symbol].Decode(rangeDecoder);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,Encoder,The following statement contains a magic number: const Byte kFastSlots = 22;
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,Encoder,The following statement contains a magic number: int c = 2;
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPosSlot,The following statement contains a magic number: pos < (1 << 11)
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPosSlot,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 10] + 20);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPosSlot,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 10] + 20);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPosSlot,The following statement contains a magic number: pos < (1 << 21)
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPosSlot,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 20] + 40);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPosSlot,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 20] + 40);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPosSlot2,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 6] + 12);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPosSlot2,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 6] + 12);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPosSlot2,The following statement contains a magic number: pos < (1 << 17)
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPosSlot2,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 16] + 32);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPosSlot2,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 16] + 32);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPosSlot2,The following statement contains a magic number: pos < (1 << 27)
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPosSlot2,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 26] + 52);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPosSlot2,The following statement contains a magic number: return (UInt32)(g_FastPos[pos >> 26] + 52);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,Create,The following statement contains a magic number: int numHashBytes = 4;
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,Create,The following statement contains a magic number: numHashBytes = 2;
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,ReadMatchDistances,The following statement contains a magic number: lenRes = _matchDistances[numDistancePairs - 2];
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: numAvailableBytes < 2
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: lenMain < 2 && currentByte != matchByte && repLens[repMaxIndex] < 2
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: lenMain < 2 && currentByte != matchByte && repLens[repMaxIndex] < 2
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: lenEnd < 2
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: _optimum[0].Backs2 = reps[2];
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: _optimum[0].Backs3 = reps[3];
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: repLen < 2
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: UInt32 curAndLenPrice = price + _repMatchLenEncoder.GetPrice(repLen - 2' posState);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: len = ((repLens[0] >= 2) ? repLens[0] + 1 : 2);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: len = ((repLens[0] >= 2) ? repLens[0] + 1 : 2);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: offs += 2;
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: offs += 2;
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: _optimum[cur].Backs2 = reps[2];
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: _optimum[cur].Backs3 = reps[3];
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: UInt32 curAnd1Price = curPrice +  					_isMatch[(state.Index << Base.kNumPosStatesBitsMax) + posState].GetPrice0() +  					_literalEncoder.GetSubCoder(position' _matchFinder.GetIndexByte(0 - 2)).  					GetPrice(!state.IsCharState()' matchByte' currentByte);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: numAvailableBytes < 2
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: lenTest2 >= 2
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: UInt32 startLen = 2;
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: lenTest < 2
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: lenTest2 >= 2
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: numDistancePairs += 2;
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: offs += 2;
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: lenTest2 >= 2
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetOptimum,The following statement contains a magic number: offs += 2;
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,ChangePair,The following statement contains a magic number: const int kDif = 7;
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,ChangePair,The following statement contains a magic number: return (smallDist < ((UInt32)(1) << (32 - kDif)) && bigDist >= (smallDist << kDif));
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,WriteEndMarker,The following statement contains a magic number: int footerBits = 30;
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,CodeOneBlock,The following statement contains a magic number: _matchPriceCount >= (1 << 7)
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,CodeOneBlock,The following statement contains a magic number: nowPos64 - progressPosValuePrev >= (1 << 12)
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,WriteCoderProperties,The following statement contains a magic number: properties[0] = (Byte)((_posStateBits * 5 + _numLiteralPosStateBits) * 9 + _numLiteralContextBits);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,WriteCoderProperties,The following statement contains a magic number: properties[0] = (Byte)((_posStateBits * 5 + _numLiteralPosStateBits) * 9 + _numLiteralContextBits);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,WriteCoderProperties,The following statement contains a magic number: properties[1 + i] = (Byte)((_dictionarySize >> (8 * i)) & 0xFF);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,WriteCoderProperties,The following statement contains a magic number: i < 4
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,FillDistancesPrices,The following statement contains a magic number: UInt32 baseVal = ((2 | (posSlot & 1)) << footerBits);
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,SetCoderProperties,The following statement contains a magic number: switch (propIDs[i])  				{  					case CoderPropID.NumFastBytes:  					{  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 numFastBytes = (Int32)prop;  						if (numFastBytes < 5 || numFastBytes > Base.kMatchMaxLen)  							throw new InvalidParamException();  						_numFastBytes = (UInt32)numFastBytes;  						break;  					}  					case CoderPropID.Algorithm:  					{  						/*  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 maximize = (Int32)prop;  						_fastMode = (maximize == 0);  						_maxMode = (maximize >= 2);  						*/  						break;  					}  					case CoderPropID.MatchFinder:  					{  						if (!(prop is String))  							throw new InvalidParamException();  						EMatchFinderType matchFinderIndexPrev = _matchFinderType;  						int m = FindMatchFinder(((string)prop).ToUpper());  						if (m < 0)  							throw new InvalidParamException();  						_matchFinderType = (EMatchFinderType)m;  						if (_matchFinder != null && matchFinderIndexPrev != _matchFinderType)  							{  							_dictionarySizePrev = 0xFFFFFFFF;  							_matchFinder = null;  							}  						break;  					}  					case CoderPropID.DictionarySize:  					{  						const int kDicLogSizeMaxCompress = 30;  						if (!(prop is Int32))  							throw new InvalidParamException(); ;  						Int32 dictionarySize = (Int32)prop;  						if (dictionarySize < (UInt32)(1 << Base.kDicLogSizeMin) ||  							dictionarySize > (UInt32)(1 << kDicLogSizeMaxCompress))  							throw new InvalidParamException();  						_dictionarySize = (UInt32)dictionarySize;  						int dicLogSize;  						for (dicLogSize = 0; dicLogSize < (UInt32)kDicLogSizeMaxCompress; dicLogSize++)  							if (dictionarySize <= ((UInt32)(1) << dicLogSize))  								break;  						_distTableSize = (UInt32)dicLogSize * 2;  						break;  					}  					case CoderPropID.PosStateBits:  					{  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 v = (Int32)prop;  						if (v < 0 || v > (UInt32)Base.kNumPosStatesBitsEncodingMax)  							throw new InvalidParamException();  						_posStateBits = (int)v;  						_posStateMask = (((UInt32)1) << (int)_posStateBits) - 1;  						break;  					}  					case CoderPropID.LitPosBits:  					{  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 v = (Int32)prop;  						if (v < 0 || v > (UInt32)Base.kNumLitPosStatesBitsEncodingMax)  							throw new InvalidParamException();  						_numLiteralPosStateBits = (int)v;  						break;  					}  					case CoderPropID.LitContextBits:  					{  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 v = (Int32)prop;  						if (v < 0 || v > (UInt32)Base.kNumLitContextBitsMax)  							throw new InvalidParamException(); ;  						_numLiteralContextBits = (int)v;  						break;  					}  					case CoderPropID.EndMarker:  					{  						if (!(prop is Boolean))  							throw new InvalidParamException();  						SetWriteEndMarkerMode((Boolean)prop);  						break;  					}  					default:  						throw new InvalidParamException();  				}
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,SetCoderProperties,The following statement contains a magic number: switch (propIDs[i])  				{  					case CoderPropID.NumFastBytes:  					{  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 numFastBytes = (Int32)prop;  						if (numFastBytes < 5 || numFastBytes > Base.kMatchMaxLen)  							throw new InvalidParamException();  						_numFastBytes = (UInt32)numFastBytes;  						break;  					}  					case CoderPropID.Algorithm:  					{  						/*  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 maximize = (Int32)prop;  						_fastMode = (maximize == 0);  						_maxMode = (maximize >= 2);  						*/  						break;  					}  					case CoderPropID.MatchFinder:  					{  						if (!(prop is String))  							throw new InvalidParamException();  						EMatchFinderType matchFinderIndexPrev = _matchFinderType;  						int m = FindMatchFinder(((string)prop).ToUpper());  						if (m < 0)  							throw new InvalidParamException();  						_matchFinderType = (EMatchFinderType)m;  						if (_matchFinder != null && matchFinderIndexPrev != _matchFinderType)  							{  							_dictionarySizePrev = 0xFFFFFFFF;  							_matchFinder = null;  							}  						break;  					}  					case CoderPropID.DictionarySize:  					{  						const int kDicLogSizeMaxCompress = 30;  						if (!(prop is Int32))  							throw new InvalidParamException(); ;  						Int32 dictionarySize = (Int32)prop;  						if (dictionarySize < (UInt32)(1 << Base.kDicLogSizeMin) ||  							dictionarySize > (UInt32)(1 << kDicLogSizeMaxCompress))  							throw new InvalidParamException();  						_dictionarySize = (UInt32)dictionarySize;  						int dicLogSize;  						for (dicLogSize = 0; dicLogSize < (UInt32)kDicLogSizeMaxCompress; dicLogSize++)  							if (dictionarySize <= ((UInt32)(1) << dicLogSize))  								break;  						_distTableSize = (UInt32)dicLogSize * 2;  						break;  					}  					case CoderPropID.PosStateBits:  					{  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 v = (Int32)prop;  						if (v < 0 || v > (UInt32)Base.kNumPosStatesBitsEncodingMax)  							throw new InvalidParamException();  						_posStateBits = (int)v;  						_posStateMask = (((UInt32)1) << (int)_posStateBits) - 1;  						break;  					}  					case CoderPropID.LitPosBits:  					{  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 v = (Int32)prop;  						if (v < 0 || v > (UInt32)Base.kNumLitPosStatesBitsEncodingMax)  							throw new InvalidParamException();  						_numLiteralPosStateBits = (int)v;  						break;  					}  					case CoderPropID.LitContextBits:  					{  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 v = (Int32)prop;  						if (v < 0 || v > (UInt32)Base.kNumLitContextBitsMax)  							throw new InvalidParamException(); ;  						_numLiteralContextBits = (int)v;  						break;  					}  					case CoderPropID.EndMarker:  					{  						if (!(prop is Boolean))  							throw new InvalidParamException();  						SetWriteEndMarkerMode((Boolean)prop);  						break;  					}  					default:  						throw new InvalidParamException();  				}
Magic Number,SevenZip.Compression.LZMA,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,SetCoderProperties,The following statement contains a magic number: switch (propIDs[i])  				{  					case CoderPropID.NumFastBytes:  					{  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 numFastBytes = (Int32)prop;  						if (numFastBytes < 5 || numFastBytes > Base.kMatchMaxLen)  							throw new InvalidParamException();  						_numFastBytes = (UInt32)numFastBytes;  						break;  					}  					case CoderPropID.Algorithm:  					{  						/*  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 maximize = (Int32)prop;  						_fastMode = (maximize == 0);  						_maxMode = (maximize >= 2);  						*/  						break;  					}  					case CoderPropID.MatchFinder:  					{  						if (!(prop is String))  							throw new InvalidParamException();  						EMatchFinderType matchFinderIndexPrev = _matchFinderType;  						int m = FindMatchFinder(((string)prop).ToUpper());  						if (m < 0)  							throw new InvalidParamException();  						_matchFinderType = (EMatchFinderType)m;  						if (_matchFinder != null && matchFinderIndexPrev != _matchFinderType)  							{  							_dictionarySizePrev = 0xFFFFFFFF;  							_matchFinder = null;  							}  						break;  					}  					case CoderPropID.DictionarySize:  					{  						const int kDicLogSizeMaxCompress = 30;  						if (!(prop is Int32))  							throw new InvalidParamException(); ;  						Int32 dictionarySize = (Int32)prop;  						if (dictionarySize < (UInt32)(1 << Base.kDicLogSizeMin) ||  							dictionarySize > (UInt32)(1 << kDicLogSizeMaxCompress))  							throw new InvalidParamException();  						_dictionarySize = (UInt32)dictionarySize;  						int dicLogSize;  						for (dicLogSize = 0; dicLogSize < (UInt32)kDicLogSizeMaxCompress; dicLogSize++)  							if (dictionarySize <= ((UInt32)(1) << dicLogSize))  								break;  						_distTableSize = (UInt32)dicLogSize * 2;  						break;  					}  					case CoderPropID.PosStateBits:  					{  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 v = (Int32)prop;  						if (v < 0 || v > (UInt32)Base.kNumPosStatesBitsEncodingMax)  							throw new InvalidParamException();  						_posStateBits = (int)v;  						_posStateMask = (((UInt32)1) << (int)_posStateBits) - 1;  						break;  					}  					case CoderPropID.LitPosBits:  					{  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 v = (Int32)prop;  						if (v < 0 || v > (UInt32)Base.kNumLitPosStatesBitsEncodingMax)  							throw new InvalidParamException();  						_numLiteralPosStateBits = (int)v;  						break;  					}  					case CoderPropID.LitContextBits:  					{  						if (!(prop is Int32))  							throw new InvalidParamException();  						Int32 v = (Int32)prop;  						if (v < 0 || v > (UInt32)Base.kNumLitContextBitsMax)  							throw new InvalidParamException(); ;  						_numLiteralContextBits = (int)v;  						break;  					}  					case CoderPropID.EndMarker:  					{  						if (!(prop is Boolean))  							throw new InvalidParamException();  						SetWriteEndMarkerMode((Boolean)prop);  						break;  					}  					default:  						throw new InvalidParamException();  				}
Magic Number,SevenZip.Compression.LZMA,LiteralEncoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetSubCoder,The following statement contains a magic number: return m_Coders[((pos & m_PosMask) << m_NumPrevBits) + (uint)(prevByte >> (8 - m_NumPrevBits))];
Magic Number,SevenZip.Compression.LZMA,Encoder2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,EncodeMatched,The following statement contains a magic number: state += ((1 + matchBit) << 8);
Magic Number,SevenZip.Compression.LZMA,Encoder2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPrice,The following statement contains a magic number: int i = 7;
Magic Number,SevenZip.Compression.LZMA,Encoder2,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZMA\LzmaEncoder.cs,GetPrice,The following statement contains a magic number: price += m_Encoders[((1 + matchBit) << 8) + context].GetPrice(bit);
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,SetType,The following statement contains a magic number: HASH_ARRAY = (numHashBytes > 2);
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,SetType,The following statement contains a magic number: kMinMatchCheck = 4;
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,Create,The following statement contains a magic number: historySize > kMaxValForNormalize - 256
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,Create,The following statement contains a magic number: _cutValue = 16 + (matchMaxLen >> 1);
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,Create,The following statement contains a magic number: UInt32 windowReservSize = (historySize + keepAddBufferBefore +  					matchMaxLen + keepAddBufferAfter) / 2 + 256;
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,Create,The following statement contains a magic number: UInt32 windowReservSize = (historySize + keepAddBufferBefore +  					matchMaxLen + keepAddBufferAfter) / 2 + 256;
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,Create,The following statement contains a magic number: _son = new UInt32[(_cyclicBufferSize = cyclicBufferSize) * 2];
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,Create,The following statement contains a magic number: hs |= (hs >> 2);
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,Create,The following statement contains a magic number: hs |= (hs >> 4);
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,Create,The following statement contains a magic number: hs |= (hs >> 8);
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,Create,The following statement contains a magic number: hs > (1 << 24)
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,GetMatches,The following statement contains a magic number: temp ^= ((UInt32)(_bufferBase[cur + 2]) << 8);
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,GetMatches,The following statement contains a magic number: temp ^= ((UInt32)(_bufferBase[cur + 2]) << 8);
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,GetMatches,The following statement contains a magic number: hashValue = (temp ^ (CRC.Table[_bufferBase[cur + 3]] << 5)) & _hashMask;
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,GetMatches,The following statement contains a magic number: hashValue = (temp ^ (CRC.Table[_bufferBase[cur + 3]] << 5)) & _hashMask;
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,GetMatches,The following statement contains a magic number: distances[offset++] = maxLen = 2;
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,GetMatches,The following statement contains a magic number: offset -= 2;
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,GetMatches,The following statement contains a magic number: distances[offset++] = maxLen = 3;
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,GetMatches,The following statement contains a magic number: offset -= 2;
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,Skip,The following statement contains a magic number: temp ^= ((UInt32)(_bufferBase[cur + 2]) << 8);
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,Skip,The following statement contains a magic number: temp ^= ((UInt32)(_bufferBase[cur + 2]) << 8);
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,Skip,The following statement contains a magic number: hashValue = (temp ^ (CRC.Table[_bufferBase[cur + 3]] << 5)) & _hashMask;
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,Skip,The following statement contains a magic number: hashValue = (temp ^ (CRC.Table[_bufferBase[cur + 3]] << 5)) & _hashMask;
Magic Number,SevenZip.Compression.LZ,BinTree,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\LZ\LzBinTree.cs,Normalize,The following statement contains a magic number: NormalizeLinks(_son' _cyclicBufferSize * 2' subValue);
Magic Number,SevenZip.Compression.RangeCoder,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,FlushData,The following statement contains a magic number: i < 5
Magic Number,SevenZip.Compression.RangeCoder,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,Encode,The following statement contains a magic number: Range <<= 8;
Magic Number,SevenZip.Compression.RangeCoder,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,ShiftLow,The following statement contains a magic number: Stream.WriteByte((byte)(temp + (Low >> 32)));
Magic Number,SevenZip.Compression.RangeCoder,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,ShiftLow,The following statement contains a magic number: _cache = (byte)(((uint)Low) >> 24);
Magic Number,SevenZip.Compression.RangeCoder,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,ShiftLow,The following statement contains a magic number: (uint)Low < (uint)0xFF000000 || (uint)(Low >> 32) == 1
Magic Number,SevenZip.Compression.RangeCoder,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,ShiftLow,The following statement contains a magic number: Low = ((uint)Low) << 8;
Magic Number,SevenZip.Compression.RangeCoder,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,EncodeDirectBits,The following statement contains a magic number: Range <<= 8;
Magic Number,SevenZip.Compression.RangeCoder,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,EncodeBit,The following statement contains a magic number: Range <<= 8;
Magic Number,SevenZip.Compression.RangeCoder,Encoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,GetProcessedSizeAdd,The following statement contains a magic number: return _cacheSize +  				Stream.Position - StartPosition + 4;
Magic Number,SevenZip.Compression.RangeCoder,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,Init,The following statement contains a magic number: Code = (Code << 8) | (byte)Stream.ReadByte();
Magic Number,SevenZip.Compression.RangeCoder,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,Init,The following statement contains a magic number: i < 5
Magic Number,SevenZip.Compression.RangeCoder,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,Normalize,The following statement contains a magic number: Code = (Code << 8) | (byte)Stream.ReadByte();
Magic Number,SevenZip.Compression.RangeCoder,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,Normalize,The following statement contains a magic number: Range <<= 8;
Magic Number,SevenZip.Compression.RangeCoder,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,Normalize2,The following statement contains a magic number: Code = (Code << 8) | (byte)Stream.ReadByte();
Magic Number,SevenZip.Compression.RangeCoder,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,Normalize2,The following statement contains a magic number: Range <<= 8;
Magic Number,SevenZip.Compression.RangeCoder,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,DecodeDirectBits,The following statement contains a magic number: uint t = (code - range) >> 31;
Magic Number,SevenZip.Compression.RangeCoder,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,DecodeDirectBits,The following statement contains a magic number: code = (code << 8) | (byte)Stream.ReadByte();
Magic Number,SevenZip.Compression.RangeCoder,Decoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoder.cs,DecodeDirectBits,The following statement contains a magic number: range <<= 8;
Magic Number,SevenZip.Compression.RangeCoder,BitEncoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoderBit.cs,Encode,The following statement contains a magic number: encoder.Range <<= 8;
Magic Number,SevenZip.Compression.RangeCoder,BitDecoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoderBit.cs,Decode,The following statement contains a magic number: rangeDecoder.Code = (rangeDecoder.Code << 8) | (byte)rangeDecoder.Stream.ReadByte();
Magic Number,SevenZip.Compression.RangeCoder,BitDecoder,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Compress\RangeCoder\RangeCoderBit.cs,Decode,The following statement contains a magic number: rangeDecoder.Range <<= 8;
Missing Default,SevenZip.CommandLineParser,Parser,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\7zip\Common\CommandLineParser.cs,ParseString,The following switch statement is missing a default case: switch (type)  				{  					case SwitchType.PostMinus:  						{  							if (tailSize == 0)  								matchedSwitch.WithMinus = false;  							else  							{  								matchedSwitch.WithMinus = (srcString[pos] == kSwitchMinus);  								if (matchedSwitch.WithMinus)  									pos++;  							}  							break;  						}  					case SwitchType.PostChar:  						{  							if (tailSize < switchForm.MinLen)  								throw new Exception("switch is not full");  							string charSet = switchForm.PostCharSet;  							const int kEmptyCharValue = -1;  							if (tailSize == 0)  								matchedSwitch.PostCharIndex = kEmptyCharValue;  							else  							{  								int index = charSet.IndexOf(srcString[pos]);  								if (index < 0)  									matchedSwitch.PostCharIndex = kEmptyCharValue;  								else  								{  									matchedSwitch.PostCharIndex = index;  									pos++;  								}  							}  							break;  						}  					case SwitchType.LimitedPostString:  					case SwitchType.UnLimitedPostString:  						{  							int minLen = switchForm.MinLen;  							if (tailSize < minLen)  								throw new Exception("switch is not full");  							if (type == SwitchType.UnLimitedPostString)  							{  								matchedSwitch.PostStrings.Add(srcString.Substring(pos));  								return true;  							}  							String stringSwitch = srcString.Substring(pos' minLen);  							pos += minLen;  							for (int i = minLen; i < switchForm.MaxLen && pos < len; i++' pos++)  							{  								char c = srcString[pos];  								if (IsItSwitchChar(c))  									break;  								stringSwitch += c;  							}  							matchedSwitch.PostStrings.Add(stringSwitch);  							break;  						}  				}
