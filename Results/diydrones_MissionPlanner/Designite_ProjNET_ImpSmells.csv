Implementation smell,Namespace,Class,File,Method,Description
Long Method,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The method has 114 lines of code.
Complex Method,ProjNet.CoordinateSystems,GeographicCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\GeographicCoordinateSystem.cs,EqualParams,Cyclomatic complexity of the method is 12
Complex Method,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,adjust_lon,Cyclomatic complexity of the method is 8
Complex Method,ProjNet.CoordinateSystems.Transformations,AffineTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\AffineTransform.cs,LUPDecomposition,Cyclomatic complexity of the method is 9
Complex Method,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,CreateFromCoordinateSystems,Cyclomatic complexity of the method is 10
Complex Method,ProjNet.CoordinateSystems.Transformations,GeocentricTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\GeocentricTransform.cs,MetersToDegrees,Cyclomatic complexity of the method is 9
Complex Method,ProjNet.Converters.WellKnownText,CoordinateSystemWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\CoordinateSystemWktReader.cs,ReadAxis,Cyclomatic complexity of the method is 9
Complex Method,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,Cyclomatic complexity of the method is 26
Complex Method,ProjNet.Converters.WellKnownText.IO,StreamTokenizer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\StreamTokenizer.cs,NextTokenAny,Cyclomatic complexity of the method is 17
Long Parameter List,ProjNet.CoordinateSystems,AngularUnit,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\AngularUnit.cs,AngularUnit,The method has 7 parameters. Parameters: radiansPerUnit' name' authority' authorityCode' alias' abbreviation' remarks
Long Parameter List,ProjNet.CoordinateSystems,CoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\CoordinateSystem.cs,CoordinateSystem,The method has 6 parameters. Parameters: name' authority' authorityCode' alias' abbreviation' remarks
Long Parameter List,ProjNet.CoordinateSystems,CoordinateSystemFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\CoordinateSystemFactory.cs,CreateProjectedCoordinateSystem,The method has 6 parameters. Parameters: name' gcs' projection' linearUnit' axis0' axis1
Long Parameter List,ProjNet.CoordinateSystems,CoordinateSystemFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\CoordinateSystemFactory.cs,CreateGeographicCoordinateSystem,The method has 6 parameters. Parameters: name' angularUnit' datum' primeMeridian' axis0' axis1
Long Parameter List,ProjNet.CoordinateSystems,Datum,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Datum.cs,Datum,The method has 7 parameters. Parameters: type' name' authority' code' alias' remarks' abbreviation
Long Parameter List,ProjNet.CoordinateSystems,Ellipsoid,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Ellipsoid.cs,Ellipsoid,The method has 11 parameters. Parameters: semiMajorAxis' semiMinorAxis' inverseFlattening' isIvfDefinitive' axisUnit' name' authority' code' alias' abbreviation' remarks
Long Parameter List,ProjNet.CoordinateSystems,FittedCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\FittedCoordinateSystem.cs,FittedCoordinateSystem,The method has 8 parameters. Parameters: baseSystem' transform' name' authority' code' alias' remarks' abbreviation
Long Parameter List,ProjNet.CoordinateSystems,GeocentricCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\GeocentricCoordinateSystem.cs,GeocentricCoordinateSystem,The method has 10 parameters. Parameters: datum' linearUnit' primeMeridian' axisinfo' name' authority' code' alias' remarks' abbreviation
Long Parameter List,ProjNet.CoordinateSystems,GeographicCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\GeographicCoordinateSystem.cs,GeographicCoordinateSystem,The method has 10 parameters. Parameters: angularUnit' horizontalDatum' primeMeridian' axisInfo' name' authority' authorityCode' alias' abbreviation' remarks
Long Parameter List,ProjNet.CoordinateSystems,GeographicTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\GeographicTransform.cs,GeographicTransform,The method has 8 parameters. Parameters: name' authority' code' alias' remarks' abbreviation' sourceGCS' targetGCS
Long Parameter List,ProjNet.CoordinateSystems,HorizontalCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\HorizontalCoordinateSystem.cs,HorizontalCoordinateSystem,The method has 8 parameters. Parameters: datum' axisInfo' name' authority' code' alias' remarks' abbreviation
Long Parameter List,ProjNet.CoordinateSystems,HorizontalDatum,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\HorizontalDatum.cs,HorizontalDatum,The method has 9 parameters. Parameters: ellipsoid' toWgs84' type' name' authority' code' alias' remarks' abbreviation
Long Parameter List,ProjNet.CoordinateSystems,Info,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Info.cs,Info,The method has 6 parameters. Parameters: name' authority' code' alias' abbreviation' remarks
Long Parameter List,ProjNet.CoordinateSystems,LinearUnit,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\LinearUnit.cs,LinearUnit,The method has 7 parameters. Parameters: metersPerUnit' name' authority' authorityCode' alias' abbreviation' remarks
Long Parameter List,ProjNet.CoordinateSystems,PrimeMeridian,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\PrimeMeridian.cs,PrimeMeridian,The method has 8 parameters. Parameters: longitude' angularUnit' name' authority' authorityCode' alias' abbreviation' remarks
Long Parameter List,ProjNet.CoordinateSystems,ProjectedCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\ProjectedCoordinateSystem.cs,ProjectedCoordinateSystem,The method has 11 parameters. Parameters: datum' geographicCoordinateSystem' linearUnit' projection' axisInfo' name' authority' code' alias' remarks' abbreviation
Long Parameter List,ProjNet.CoordinateSystems,Projection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projection.cs,Projection,The method has 8 parameters. Parameters: className' parameters' name' authority' code' alias' remarks' abbreviation
Long Parameter List,ProjNet.CoordinateSystems,Unit,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Unit.cs,Unit,The method has 7 parameters. Parameters: conversionFactor' name' authority' authorityCode' alias' abbreviation' remarks
Long Parameter List,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,mlfn,The method has 5 parameters. Parameters: e0' e1' e2' e3' phi
Long Parameter List,ProjNet.CoordinateSystems.Transformations,AffineTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\AffineTransform.cs,AffineTransform,The method has 6 parameters. Parameters: m00' m01' m02' m10' m11' m12
Long Parameter List,ProjNet.CoordinateSystems.Transformations,CoordinateTransformation,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformation.cs,CoordinateTransformation,The method has 9 parameters. Parameters: sourceCS' targetCS' transformType' mathTransform' name' authority' authorityCode' areaOfUse' remarks
Long Identifier,ProjNet,CoordinateSystemServices,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\ProjNetCoordinateSystemServices.cs,CoordinateSystemServices,The length of the parameter coordinateTransformationFactory is 31.
Long Identifier,ProjNet,CoordinateSystemServices,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\ProjNetCoordinateSystemServices.cs,CoordinateSystemServices,The length of the parameter coordinateTransformationFactory is 31.
Long Statement,ProjNet.CoordinateSystems,CoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\CoordinateSystem.cs,GetAxis,The length of the statement  "				throw new ArgumentException("AxisInfo not available for dimension " + dimension.ToString(CultureInfo.InvariantCulture)); " is 120.
Long Statement,ProjNet.CoordinateSystems,CoordinateSystemFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\CoordinateSystemFactory.cs,CreateEllipsoid,The length of the statement  "            return new Ellipsoid(semiMajorAxis' semiMinorAxis' ivf' false' linearUnit' name' String.Empty' -1' String.Empty' string.Empty' string.Empty); " is 141.
Long Statement,ProjNet.CoordinateSystems,CoordinateSystemFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\CoordinateSystemFactory.cs,CreateFlattenedSphere,The length of the statement  "            return new Ellipsoid(semiMajorAxis' -1' inverseFlattening' true' linearUnit' name' String.Empty' -1' String.Empty' String.Empty' String.Empty); " is 143.
Long Statement,ProjNet.CoordinateSystems,CoordinateSystemFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\CoordinateSystemFactory.cs,CreateProjectedCoordinateSystem,The length of the statement  "            return new ProjectedCoordinateSystem(null' gcs' linearUnit' projection' info' name' String.Empty' -1' String.Empty' String.Empty' String.Empty); " is 144.
Long Statement,ProjNet.CoordinateSystems,CoordinateSystemFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\CoordinateSystemFactory.cs,CreateProjection,The length of the statement  "            return new Projection(wktProjectionClass' parameters' name' String.Empty' -1' String.Empty' String.Empty' String.Empty); " is 120.
Long Statement,ProjNet.CoordinateSystems,CoordinateSystemFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\CoordinateSystemFactory.cs,CreateHorizontalDatum,The length of the statement  "            return new HorizontalDatum(ellipsoid' toWgs84' datumType' name' String.Empty' -1' String.Empty' String.Empty' String.Empty); " is 124.
Long Statement,ProjNet.CoordinateSystems,CoordinateSystemFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\CoordinateSystemFactory.cs,CreateGeographicCoordinateSystem,The length of the statement  "            return new GeographicCoordinateSystem(angularUnit' datum' primeMeridian' info' name' String.Empty' -1' String.Empty' String.Empty' String.Empty); " is 145.
Long Statement,ProjNet.CoordinateSystems,CoordinateSystemFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\CoordinateSystemFactory.cs,CreateGeocentricCoordinateSystem,The length of the statement  "            return new GeocentricCoordinateSystem(datum' linearUnit' primeMeridian' info' name' String.Empty' -1' String.Empty' String.Empty' String.Empty); " is 144.
Long Statement,ProjNet.CoordinateSystems,HorizontalDatum,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\HorizontalDatum.cs,EqualParams,The length of the statement  "				datum.Ellipsoid.EqualParams(this.Ellipsoid) || datum == null && this.Ellipsoid == null) && this.DatumType == datum.DatumType; " is 125.
Long Statement,ProjNet.CoordinateSystems,ProjectedCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\ProjectedCoordinateSystem.cs,WGS84_UTM,The length of the statement  "			//IProjection projection = cFac.CreateProjection("UTM" + Zone.ToString() + (ZoneIsNorth ? "N" : "S")' "Transverse_Mercator"' parameters); " is 137.
Long Statement,ProjNet.CoordinateSystems,ProjectedCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\ProjectedCoordinateSystem.cs,WGS84_UTM,The length of the statement  "			var proj = new Projection("Transverse_Mercator"' pInfo' "UTM" + zone.ToString(CultureInfo.InvariantCulture) + (zoneIsNorth ? "N" : "S")' " is 136.
Long Statement,ProjNet.CoordinateSystems,ProjectedCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\ProjectedCoordinateSystem.cs,WGS84_UTM,The length of the statement  "				"WGS 84 / UTM zone " + zone.ToString(CultureInfo.InvariantCulture) + (zoneIsNorth ? "N" : "S")' "EPSG"' 32600 + zone + (zoneIsNorth ? 0 : 100)' " is 143.
Long Statement,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The length of the statement  "			var theta = Math.Atan((p[0] /** _metersPerUnit - _falseEasting*/) / (_ro0 - (p[1] /* * _metersPerUnit - _falseNorthing*/))); " is 124.
Long Statement,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The length of the statement  "            var ro = Math.Sqrt(Math.Pow(p[0] /** _metersPerUnit - _falseEasting*/' 2) + Math.Pow(_ro0 - (p[1] /* * _metersPerUnit - _falseNorthing*/)' 2)); " is 143.
Long Statement,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The length of the statement  "				lat += (Math.Pow(1 - e2sin2' 2) / (2 * Math.Cos(lat))) * ((q / (1 - _es)) - sin / (1 - e2sin2) + 1 / (2 * _e) * Math.Log((1 - _e * sin) / (1 + _e * sin))); " is 155.
Long Statement,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,RadiansToMeters,The length of the statement  "		    var y = _semiMajor * _k0 * Math.Log(Math.Tan(PI * 0.25 + dLatitude * 0.5) * Math.Pow((1 - esinphi) / (1 + esinphi)' _e * 0.5)); " is 127.
Long Statement,ProjNet.CoordinateSystems.Projections,ProjectionsRegistry,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ProjectionsRegistry.cs,Register,The length of the statement  "                throw new ArgumentException("The provided type does not implement 'GeoAPI.CoordinateSystems.Transformations.IMathTransform'!"' "type"); " is 135.
Long Statement,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,MetersToRadians,The length of the statement  "            //    delta_phi = ((con + en1 * Math.Sin(2.0*phi) - en2 * Math.Sin(4.0*phi) + en3 * Math.Sin(6.0*phi) /*+ en4 * Math.Sin(8.0*phi)*/) " is 132.
Long Statement,ProjNet.CoordinateSystems.Transformations,AffineTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\AffineTransform.cs,Inverse,The length of the statement  "                //remarks about dimensionality: if input dimension is M' and output dimension is N' then the matrix will have size [N+1][M+1]. " is 126.
Long Statement,ProjNet.CoordinateSystems.Transformations,AffineTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\AffineTransform.cs,Transform,The length of the statement  "            //check source dimensionality - alow coordinate clipping' if source dimensionality is greater then expected source dimensionality of affine transformation " is 154.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,Geog2Geoc,The length of the statement  "                return new CoordinateTransformation(source' target' TransformType.Conversion' geocMathTransform' String.Empty' String.Empty' -1' String.Empty' String.Empty); " is 157.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,Geog2Geoc,The length of the statement  "                ct.CoordinateTransformationList.Add(new CoordinateTransformation(source' target' TransformType.Transformation' new PrimeMeridianTransform(source.PrimeMeridian' target.PrimeMeridian)' String.Empty' String.Empty' -1' String.Empty' String.Empty)); " is 244.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,Geog2Geoc,The length of the statement  "                ct.CoordinateTransformationList.Add(new CoordinateTransformation(source' target' TransformType.Conversion' geocMathTransform' String.Empty' String.Empty' -1' String.Empty' String.Empty)); " is 187.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,Geog2Geoc,The length of the statement  "                return new CoordinateTransformation(source' target' TransformType.Conversion' ct' String.Empty' String.Empty' -1' String.Empty' String.Empty); " is 142.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,Geoc2Geog,The length of the statement  "                return new CoordinateTransformation(source' target' TransformType.Conversion' geocMathTransform' String.Empty' String.Empty' -1' String.Empty' String.Empty); " is 157.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,Geoc2Geog,The length of the statement  "                ct.CoordinateTransformationList.Add(new CoordinateTransformation(source' target' TransformType.Conversion' geocMathTransform' String.Empty' String.Empty' -1' String.Empty' String.Empty)); " is 187.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,Geoc2Geog,The length of the statement  "                ct.CoordinateTransformationList.Add(new CoordinateTransformation(source' target' TransformType.Transformation' new PrimeMeridianTransform(source.PrimeMeridian' target.PrimeMeridian)' String.Empty' String.Empty' -1' String.Empty' String.Empty)); " is 244.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,Geoc2Geog,The length of the statement  "                return new CoordinateTransformation(source' target' TransformType.Conversion' ct' String.Empty' String.Empty' -1' String.Empty' String.Empty); " is 142.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,Proj2Geog,The length of the statement  "                IMathTransform mathTransform = CreateCoordinateOperation(source.Projection' source.GeographicCoordinateSystem.HorizontalDatum.Ellipsoid' source.LinearUnit).Inverse(); " is 166.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,CreateGeog2Geog,The length of the statement  "				IGeocentricCoordinateSystem sourceCentric = cFac.CreateGeocentricCoordinateSystem(source.HorizontalDatum.Name + " Geocentric"' " is 126.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,CreateGeog2Geog,The length of the statement  "				IGeocentricCoordinateSystem targetCentric = cFac.CreateGeocentricCoordinateSystem(target.HorizontalDatum.Name + " Geocentric"'  " is 126.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,CreateGeoc2Geoc,The length of the statement  "					((target.HorizontalDatum.Wgs84Parameters == null || target.HorizontalDatum.Wgs84Parameters.HasZeroValuesOnly) ? target : GeocentricCoordinateSystem.WGS84)' " is 155.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,CreateGeoc2Geoc,The length of the statement  "					((source.HorizontalDatum.Wgs84Parameters == null || source.HorizontalDatum.Wgs84Parameters.HasZeroValuesOnly) ? source : GeocentricCoordinateSystem.WGS84)' " is 155.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,CreateGeoc2Geoc,The length of the statement  "				return new CoordinateTransformation(source' target' TransformType.ConversionAndTransformation' ct.CoordinateTransformationList[0].MathTransform' ""' ""' -1' ""' ""); " is 165.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,Fitt2Any,The length of the statement  "            ct.CoordinateTransformationList.Add (CreateTransform (source' source.BaseCoordinateSystem' TransformType.Transformation' mt)); " is 126.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,Any2Fitt,The length of the statement  "            ct.CoordinateTransformationList.Add (CreateTransform (target.BaseCoordinateSystem' target' TransformType.Transformation' invMt)); " is 129.
Long Statement,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,CreateTransform,The length of the statement  "            return new CoordinateTransformation (sourceCS' targetCS' transformType' mathTransform' string.Empty' string.Empty' -1' string.Empty' string.Empty); " is 147.
Long Statement,ProjNet.Converters.WellKnownText,CoordinateSystemWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\CoordinateSystemWktReader.cs,ReadEllipsoid,The length of the statement  "            IEllipsoid ellipsoid = new Ellipsoid(majorAxis' 0.0' e' true' LinearUnit.Metre' name' authority' authorityCode' String.Empty' string.Empty' string.Empty); " is 154.
Long Statement,ProjNet.Converters.WellKnownText,CoordinateSystemWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\CoordinateSystemWktReader.cs,ReadProjection,The length of the statement  "            IProjection projection = new Projection(projectionName' paramList' projectionName' authority' authorityCode' String.Empty' String.Empty' string.Empty); " is 151.
Long Statement,ProjNet.Converters.WellKnownText,CoordinateSystemWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\CoordinateSystemWktReader.cs,ReadProjectedCoordinateSystem,The length of the statement  "            IProjectedCoordinateSystem projectedCS = new ProjectedCoordinateSystem(geographicCS.HorizontalDatum' geographicCS' unit as LinearUnit' projection' axes' name' authority' authorityCode' String.Empty' String.Empty' String.Empty); " is 227.
Long Statement,ProjNet.Converters.WellKnownText,CoordinateSystemWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\CoordinateSystemWktReader.cs,ReadGeographicCoordinateSystem,The length of the statement  "            DATUM["OSGB 1936"'SPHEROID["Airy 1830"'6377563.396'299.3249646'AUTHORITY["EPSG"'"7001"]]'TOWGS84[0'0'0'0'0'0'0]'AUTHORITY["EPSG"'"6277"]] " is 137.
Long Statement,ProjNet.Converters.WellKnownText,CoordinateSystemWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\CoordinateSystemWktReader.cs,ReadHorizontalDatum,The length of the statement  "            //DATUM["OSGB 1936"'SPHEROID["Airy 1830"'6377563.396'299.3249646'AUTHORITY["EPSG"'"7001"]]'TOWGS84[0'0'0'0'0'0'0]'AUTHORITY["EPSG"'"6277"]] " is 139.
Long Statement,ProjNet.Converters.WellKnownText,CoordinateSystemWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\CoordinateSystemWktReader.cs,ReadHorizontalDatum,The length of the statement  "            IHorizontalDatum horizontalDatum = new HorizontalDatum(ellipsoid' wgsInfo' DatumType.HD_Geocentric' name' authority' authorityCode' String.Empty' String.Empty' String.Empty); " is 174.
Long Statement,ProjNet.Converters.WellKnownText,CoordinateSystemWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\CoordinateSystemWktReader.cs,ReadPrimeMeridian,The length of the statement  "            IPrimeMeridian primeMeridian = new PrimeMeridian(longitude' AngularUnit.Degrees' name' authority' authorityCode' String.Empty' String.Empty' String.Empty); " is 155.
Long Statement,ProjNet.Converters.WellKnownText,CoordinateSystemWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\CoordinateSystemWktReader.cs,ReadFittedCoordinateSystem,The length of the statement  "                 PROJCS["DHDN / Gauss-Kruger zone 3"' GEOGCS["DHDN"' DATUM["Deutsches_Hauptdreiecksnetz"' SPHEROID["Bessel 1841"' 6377397.155' 299.1528128' AUTHORITY["EPSG"' "7004"]]' TOWGS84[612.4' 77' 440.2' -0.054' 0.057' -2.797' 0.525975255930096]' AUTHORITY["EPSG"' "6314"]]' PRIMEM["Greenwich"' 0' AUTHORITY["EPSG"' "8901"]]' UNIT["degree"' 0.0174532925199433' AUTHORITY["EPSG"' "9122"]]' AUTHORITY["EPSG"' "4314"]]' UNIT["metre"' 1' AUTHORITY["EPSG"' "9001"]]' PROJECTION["Transverse_Mercator"]' PARAMETER["latitude_of_origin"' 0]' PARAMETER["central_meridian"' 9]' PARAMETER["scale_factor"' 1]' PARAMETER["false_easting"' 3500000]' PARAMETER["false_northing"' 0]' AUTHORITY["EPSG"' "31467"]] " is 682.
Long Statement,ProjNet.Converters.WellKnownText,CoordinateSystemWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\CoordinateSystemWktReader.cs,ReadFittedCoordinateSystem,The length of the statement  "            IFittedCoordinateSystem fittedCS = new FittedCoordinateSystem (baseCS' toBaseTransform' name' authority' authorityCode' string.Empty' string.Empty' string.Empty); " is 162.
Long Statement,ProjNet.Converters.WellKnownText,WktStreamTokenizer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\WKTStreamTokenizer.cs,ReadToken,The length of the statement  "                string s = String.Format(_nfi' "Expecting ('{3}') but got a '{0}' at line {1} column {2}."' GetStringValue()' LineNumber' Column' expectedToken); " is 145.
Long Statement,ProjNet.Converters.WellKnownText.IO,StreamTokenizer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\StreamTokenizer.cs,NextTokenAny,The length of the statement  "                    if ((currentCharacter == 'E' || currentCharacter == '-' || currentCharacter == '+') && nextTokenType == TokenType.Number) " is 121.
Complex Conditional,ProjNet.Converters.WellKnownText.IO,StreamTokenizer,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\StreamTokenizer.cs,NextTokenAny,The conditional expression  "(currentCharacter == 'E' || currentCharacter == '-' || currentCharacter == '+') && nextTokenType == TokenType.Number"  is complex.
Magic Number,ProjNet.CoordinateSystems,CoordinateSystemFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\CoordinateSystemFactory.cs,CreateProjectedCoordinateSystem,The following statement contains a magic number: List<AxisInfo> info = new List<AxisInfo>(2);
Magic Number,ProjNet.CoordinateSystems,CoordinateSystemFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\CoordinateSystemFactory.cs,CreateGeographicCoordinateSystem,The following statement contains a magic number: List<AxisInfo> info = new List<AxisInfo>(2);
Magic Number,ProjNet.CoordinateSystems,CoordinateSystemFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\CoordinateSystemFactory.cs,CreateGeocentricCoordinateSystem,The following statement contains a magic number: List<AxisInfo> info = new List<AxisInfo>(3);
Magic Number,ProjNet.CoordinateSystems,GeocentricCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\GeocentricCoordinateSystem.cs,GeocentricCoordinateSystem,The following statement contains a magic number: axisinfo.Count != 3
Magic Number,ProjNet.CoordinateSystems,HorizontalCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\HorizontalCoordinateSystem.cs,HorizontalCoordinateSystem,The following statement contains a magic number: axisInfo.Count != 2
Magic Number,ProjNet.CoordinateSystems,ProjectedCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\ProjectedCoordinateSystem.cs,WGS84_UTM,The following statement contains a magic number: pInfo.Add(new ProjectionParameter("central_meridian"' zone * 6 - 183));
Magic Number,ProjNet.CoordinateSystems,ProjectedCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\ProjectedCoordinateSystem.cs,WGS84_UTM,The following statement contains a magic number: pInfo.Add(new ProjectionParameter("central_meridian"' zone * 6 - 183));
Magic Number,ProjNet.CoordinateSystems,ProjectedCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\ProjectedCoordinateSystem.cs,WGS84_UTM,The following statement contains a magic number: pInfo.Add(new ProjectionParameter("scale_factor"' 0.9996));
Magic Number,ProjNet.CoordinateSystems,ProjectedCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\ProjectedCoordinateSystem.cs,WGS84_UTM,The following statement contains a magic number: pInfo.Add(new ProjectionParameter("false_easting"' 500000));
Magic Number,ProjNet.CoordinateSystems,ProjectedCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\ProjectedCoordinateSystem.cs,WGS84_UTM,The following statement contains a magic number: pInfo.Add(new ProjectionParameter("false_northing"' zoneIsNorth ? 0 : 10000000));
Magic Number,ProjNet.CoordinateSystems,ProjectedCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\ProjectedCoordinateSystem.cs,WGS84_UTM,The following statement contains a magic number: var proj = new Projection("Transverse_Mercator"' pInfo' "UTM" + zone.ToString(CultureInfo.InvariantCulture) + (zoneIsNorth ? "N" : "S")'  				"EPSG"' 32600 + zone + (zoneIsNorth ? 0 : 100)' String.Empty' String.Empty' String.Empty);
Magic Number,ProjNet.CoordinateSystems,ProjectedCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\ProjectedCoordinateSystem.cs,WGS84_UTM,The following statement contains a magic number: var proj = new Projection("Transverse_Mercator"' pInfo' "UTM" + zone.ToString(CultureInfo.InvariantCulture) + (zoneIsNorth ? "N" : "S")'  				"EPSG"' 32600 + zone + (zoneIsNorth ? 0 : 100)' String.Empty' String.Empty' String.Empty);
Magic Number,ProjNet.CoordinateSystems,ProjectedCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\ProjectedCoordinateSystem.cs,WGS84_UTM,The following statement contains a magic number: return new ProjectedCoordinateSystem(CoordinateSystems.HorizontalDatum.WGS84'  				CoordinateSystems.GeographicCoordinateSystem.WGS84' CoordinateSystems.LinearUnit.Metre' proj' axes'  				"WGS 84 / UTM zone " + zone.ToString(CultureInfo.InvariantCulture) + (zoneIsNorth ? "N" : "S")' "EPSG"' 32600 + zone + (zoneIsNorth ? 0 : 100)'  				String.Empty' "Large and medium scale topographic mapping and engineering survey."' string.Empty);
Magic Number,ProjNet.CoordinateSystems,ProjectedCoordinateSystem,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\ProjectedCoordinateSystem.cs,WGS84_UTM,The following statement contains a magic number: return new ProjectedCoordinateSystem(CoordinateSystems.HorizontalDatum.WGS84'  				CoordinateSystems.GeographicCoordinateSystem.WGS84' CoordinateSystems.LinearUnit.Metre' proj' axes'  				"WGS 84 / UTM zone " + zone.ToString(CultureInfo.InvariantCulture) + (zoneIsNorth ? "N" : "S")' "EPSG"' 32600 + zone + (zoneIsNorth ? 0 : 100)'  				String.Empty' "Large and medium scale topographic mapping and engineering survey."' string.Empty);
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,AlbersProjection,The following statement contains a magic number: var m1 = Math.Cos(lat1) / Math.Sqrt(1 - _es * Math.Pow(Math.Sin(lat1)' 2));
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,AlbersProjection,The following statement contains a magic number: var m2 = Math.Cos(lat2) / Math.Sqrt(1 - _es * Math.Pow(Math.Sin(lat2)' 2));
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,AlbersProjection,The following statement contains a magic number: _n = (Math.Pow(m1' 2) - Math.Pow(m2' 2)) / (alpha2 - alpha1);
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,AlbersProjection,The following statement contains a magic number: _n = (Math.Pow(m1' 2) - Math.Pow(m2' 2)) / (alpha2 - alpha1);
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,AlbersProjection,The following statement contains a magic number: _c = Math.Pow(m1' 2) + (_n * alpha1);
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,RadiansToMeters,The following statement contains a magic number: return lonlat.Length == 2                   ? new [] { dLongitude' dLatitude }                   : new [] { dLongitude ' dLatitude' lonlat[2] };
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,RadiansToMeters,The following statement contains a magic number: return lonlat.Length == 2                   ? new [] { dLongitude' dLatitude }                   : new [] { dLongitude ' dLatitude' lonlat[2] };
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: var ro = Math.Sqrt(Math.Pow(p[0] /** _metersPerUnit - _falseEasting*/' 2) + Math.Pow(_ro0 - (p[1] /* * _metersPerUnit - _falseNorthing*/)' 2));
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: var ro = Math.Sqrt(Math.Pow(p[0] /** _metersPerUnit - _falseEasting*/' 2) + Math.Pow(_ro0 - (p[1] /* * _metersPerUnit - _falseNorthing*/)' 2));
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: var q = (_c - Math.Pow(ro' 2) * Math.Pow(_n' 2) / Math.Pow(this._semiMajor' 2)) / _n;
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: var q = (_c - Math.Pow(ro' 2) * Math.Pow(_n' 2) / Math.Pow(this._semiMajor' 2)) / _n;
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: var q = (_c - Math.Pow(ro' 2) * Math.Pow(_n' 2) / Math.Pow(this._semiMajor' 2)) / _n;
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: var b = Math.Sin(q / (1 - ((1 - _es) / (2 * _e)) * Math.Log((1 - _e) / (1 + _e))));
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: double lat = Math.Asin(q * 0.5);
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: double e2sin2 = _es * Math.Pow(sin' 2);
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: lat += (Math.Pow(1 - e2sin2' 2) / (2 * Math.Cos(lat))) * ((q / (1 - _es)) - sin / (1 - e2sin2) + 1 / (2 * _e) * Math.Log((1 - _e * sin) / (1 + _e * sin)));
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: lat += (Math.Pow(1 - e2sin2' 2) / (2 * Math.Cos(lat))) * ((q / (1 - _es)) - sin / (1 - e2sin2) + 1 / (2 * _e) * Math.Log((1 - _e * sin) / (1 + _e * sin)));
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: lat += (Math.Pow(1 - e2sin2' 2) / (2 * Math.Cos(lat))) * ((q / (1 - _es)) - sin / (1 - e2sin2) + 1 / (2 * _e) * Math.Log((1 - _e * sin) / (1 + _e * sin)));
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: iterationCounter > 25
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: Math.Abs(lat - preLat) > 0.000001
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: p.Length == 2
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,MetersToRadians,The following statement contains a magic number: return new double[] { lon' lat /*Radians2Degrees(lon)' Radians2Degrees(lat)*/' p[2] };
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,alpha,The following statement contains a magic number: var sinsq = Math.Pow(sin'2);
Magic Number,ProjNet.CoordinateSystems.Projections,AlbersProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\AlbersProjection.cs,alpha,The following statement contains a magic number: return (1 - _es) * (((sin / (1 - _es * sinsq)) - 1/(2 * _e) * Math.Log((1 - _e * sin) / (1 + _e * sin))));
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,CassiniSoldnerProjection,The following statement contains a magic number: AuthorityCode = 9806;
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,RadiansToMeters,The following statement contains a magic number: var c = _cFactor * Math.Pow(cosPhi' 2.0d);
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,RadiansToMeters,The following statement contains a magic number: var x = n * a1 * (1.0d - a2 * t * (One6th - (8.0d - t + 8.0d * c) * a2 * One120th));
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,RadiansToMeters,The following statement contains a magic number: var x = n * a1 * (1.0d - a2 * t * (One6th - (8.0d - t + 8.0d * c) * a2 * One120th));
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,RadiansToMeters,The following statement contains a magic number: y -= _m0 - n * tn * a2 * (0.5d + (5.0d - t + 6.0d * c) * a2 * One24th);
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,RadiansToMeters,The following statement contains a magic number: y -= _m0 - n * tn * a2 * (0.5d + (5.0d - t + 6.0d * c) * a2 * One24th);
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,RadiansToMeters,The following statement contains a magic number: y -= _m0 - n * tn * a2 * (0.5d + (5.0d - t + 6.0d * c) * a2 * One24th);
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,RadiansToMeters,The following statement contains a magic number: return lonlat.Length == 2                         ? new[] {_semiMajor*x' _semiMajor*y}                         : new[] {_semiMajor*x' _semiMajor*y' lonlat[2]};
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,RadiansToMeters,The following statement contains a magic number: return lonlat.Length == 2                         ? new[] {_semiMajor*x' _semiMajor*y}                         : new[] {_semiMajor*x' _semiMajor*y' lonlat[2]};
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,MetersToRadians,The following statement contains a magic number: var phi = phi1 - (n * tn / r) * d2 * (.5 - (1.0 + 3.0 * t) * d2 * One24th);
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,MetersToRadians,The following statement contains a magic number: var phi = phi1 - (n * tn / r) * d2 * (.5 - (1.0 + 3.0 * t) * d2 * One24th);
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,MetersToRadians,The following statement contains a magic number: var lambda = dd * (1.0 + t * d2 * (-One3rd + (1.0 + 3.0 * t) * d2 * One15th)) / Math.Cos(phi1);
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,MetersToRadians,The following statement contains a magic number: return p.Length == 2                         ? new[] {lambda' phi}                         : new[] {lambda' phi' p[2]};
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,MetersToRadians,The following statement contains a magic number: return p.Length == 2                         ? new[] {lambda' phi}                         : new[] {lambda' phi' p[2]};
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,Phi1,The following statement contains a magic number: const int maxIter = 10;
Magic Number,ProjNet.CoordinateSystems.Projections,CassiniSoldnerProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\CassiniSoldnerProjection.cs,Phi1,The following statement contains a magic number: const double eps = 1e-11;
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,ObliqueMercatorProjection,The following statement contains a magic number: AuthorityCode = 9815;
Magic Number,ProjNet.CoordinateSystems.Projections,HotineObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,HotineObliqueMercatorProjection,The following statement contains a magic number: AuthorityCode = 9812;
Magic Number,ProjNet.CoordinateSystems.Projections,HotineObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,HotineObliqueMercatorProjection,The following statement contains a magic number: var con = 1.0 - _es * Math.Pow(_sinP20' 2);
Magic Number,ProjNet.CoordinateSystems.Projections,HotineObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,HotineObliqueMercatorProjection,The following statement contains a magic number: _bl = Math.Sqrt(1.0 + _es * Math.Pow(_cosP20' 4.0) / ( 1.0 - _es ));
Magic Number,ProjNet.CoordinateSystems.Projections,HotineObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,HotineObliqueMercatorProjection,The following statement contains a magic number: var g = .5 * ( f - 1.0 / f );
Magic Number,ProjNet.CoordinateSystems.Projections,HotineObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,RadiansToMeters,The following statement contains a magic number: var s = .5 * (q - 1.0 / q);
Magic Number,ProjNet.CoordinateSystems.Projections,HotineObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,RadiansToMeters,The following statement contains a magic number: var t = .5 * (q + 1.0 / q);
Magic Number,ProjNet.CoordinateSystems.Projections,HotineObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,RadiansToMeters,The following statement contains a magic number: Math.Abs(con) < .0000001
Magic Number,ProjNet.CoordinateSystems.Projections,HotineObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,RadiansToMeters,The following statement contains a magic number: var vs = .5 * _al * Math.Log((1.0 - ul) / (1.0 + ul)) / _bl;
Magic Number,ProjNet.CoordinateSystems.Projections,HotineObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,RadiansToMeters,The following statement contains a magic number: return lonlat.Length == 2                  ? new [] {x' y} :                    new [] {x' y' lonlat[2]};
Magic Number,ProjNet.CoordinateSystems.Projections,HotineObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,RadiansToMeters,The following statement contains a magic number: return lonlat.Length == 2                  ? new [] {x' y} :                    new [] {x' y' lonlat[2]};
Magic Number,ProjNet.CoordinateSystems.Projections,HotineObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,MetersToRadians,The following statement contains a magic number: var s = .5 * (q - 1.0 / q);
Magic Number,ProjNet.CoordinateSystems.Projections,HotineObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,MetersToRadians,The following statement contains a magic number: var t = .5 * (q + 1.0 / q);
Magic Number,ProjNet.CoordinateSystems.Projections,HotineObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,MetersToRadians,The following statement contains a magic number: return p.Length == 2                  ? new[] { lon' lat } : new[] { lon' lat' p[2] };
Magic Number,ProjNet.CoordinateSystems.Projections,HotineObliqueMercatorProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\HotineObliqueMercatorProjection.cs,MetersToRadians,The following statement contains a magic number: return p.Length == 2                  ? new[] { lon' lat } : new[] { lon' lat' p[2] };
Magic Number,ProjNet.CoordinateSystems.Projections,KrovakProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\KrovakProjection.cs,KrovakProjection,The following statement contains a magic number: AuthorityCode = 9819;
Magic Number,ProjNet.CoordinateSystems.Projections,KrovakProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\KrovakProjection.cs,KrovakProjection,The following statement contains a magic number: _tanS2   = Math.Tan(_pseudoStandardParallel / 2 + S45);
Magic Number,ProjNet.CoordinateSystems.Projections,KrovakProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\KrovakProjection.cs,KrovakProjection,The following statement contains a magic number: _hae    = _alfa * _e / 2;
Magic Number,ProjNet.CoordinateSystems.Projections,KrovakProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\KrovakProjection.cs,KrovakProjection,The following statement contains a magic number: var g = Math.Pow((1 - esl) / (1 + esl)' (_alfa * _e) / 2);
Magic Number,ProjNet.CoordinateSystems.Projections,KrovakProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\KrovakProjection.cs,KrovakProjection,The following statement contains a magic number: _k1 = Math.Pow(Math.Tan(lat_origin / 2 + S45)' _alfa) * g / Math.Tan(u0 / 2 + S45);
Magic Number,ProjNet.CoordinateSystems.Projections,KrovakProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\KrovakProjection.cs,KrovakProjection,The following statement contains a magic number: _k1 = Math.Pow(Math.Tan(lat_origin / 2 + S45)' _alfa) * g / Math.Tan(u0 / 2 + S45);
Magic Number,ProjNet.CoordinateSystems.Projections,KrovakProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\KrovakProjection.cs,RadiansToMeters,The following statement contains a magic number: var u   = 2 * (Math.Atan(Math.Pow(Math.Tan(phi/2 + S45)' _alfa) / _k1 * gfi) - S45);
Magic Number,ProjNet.CoordinateSystems.Projections,KrovakProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\KrovakProjection.cs,RadiansToMeters,The following statement contains a magic number: var u   = 2 * (Math.Atan(Math.Pow(Math.Tan(phi/2 + S45)' _alfa) / _k1 * gfi) - S45);
Magic Number,ProjNet.CoordinateSystems.Projections,KrovakProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\KrovakProjection.cs,RadiansToMeters,The following statement contains a magic number: var ro = _rop / Math.Pow(Math.Tan(s/2 + S45)' _n);
Magic Number,ProjNet.CoordinateSystems.Projections,KrovakProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\KrovakProjection.cs,MetersToRadians,The following statement contains a magic number: var s   = 2 * (Math.Atan(Math.Pow(_ro0/ro' 1/_n) * _tanS2) - S45);
Magic Number,ProjNet.CoordinateSystems.Projections,KrovakProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\KrovakProjection.cs,MetersToRadians,The following statement contains a magic number: var kau = _ka * Math.Pow(Math.Tan((u / 2.0) + S45)' 1 / _alfa);
Magic Number,ProjNet.CoordinateSystems.Projections,KrovakProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\KrovakProjection.cs,MetersToRadians,The following statement contains a magic number: phi = 2.0 * (Math.Atan(kau * Math.Pow((1.0 + esf) / (1.0 - esf)' _e /2.0)) - S45);
Magic Number,ProjNet.CoordinateSystems.Projections,KrovakProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\KrovakProjection.cs,MetersToRadians,The following statement contains a magic number: phi = 2.0 * (Math.Atan(kau * Math.Pow((1.0 + esf) / (1.0 - esf)' _e /2.0)) - S45);
Magic Number,ProjNet.CoordinateSystems.Projections,LambertConformalConic2SP,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\LambertConformalConic.cs,LambertConformalConic2SP,The following statement contains a magic number: AuthorityCode = 9802;
Magic Number,ProjNet.CoordinateSystems.Projections,LambertConformalConic2SP,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\LambertConformalConic.cs,RadiansToMeters,The following statement contains a magic number: return lonlat.Length == 2                   ? new [] { dLongitude' dLatitude }                   : new [] { dLongitude' dLatitude ' lonlat[2] };
Magic Number,ProjNet.CoordinateSystems.Projections,LambertConformalConic2SP,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\LambertConformalConic.cs,RadiansToMeters,The following statement contains a magic number: return lonlat.Length == 2                   ? new [] { dLongitude' dLatitude }                   : new [] { dLongitude' dLatitude ' lonlat[2] };
Magic Number,ProjNet.CoordinateSystems.Projections,LambertConformalConic2SP,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\LambertConformalConic.cs,MetersToRadians,The following statement contains a magic number: return p.Length==2                   ? new [] { dLongitude' dLatitude }                   : new [] { dLongitude' dLatitude' p[2]};
Magic Number,ProjNet.CoordinateSystems.Projections,LambertConformalConic2SP,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\LambertConformalConic.cs,MetersToRadians,The following statement contains a magic number: return p.Length==2                   ? new [] { dLongitude' dLatitude }                   : new [] { dLongitude' dLatitude' p[2]};
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,MetersToDegrees,The following statement contains a magic number: var tmp = p.Length == 2                            ? new[] {p[0]*_metersPerUnit - false_easting' p[1]*_metersPerUnit - false_northing}                            : new[]                                {                                    p[0]*_metersPerUnit - false_easting' p[1]*_metersPerUnit - false_northing'                                    p[2]*_metersPerUnit                                };
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,MetersToDegrees,The following statement contains a magic number: var tmp = p.Length == 2                            ? new[] {p[0]*_metersPerUnit - false_easting' p[1]*_metersPerUnit - false_northing}                            : new[]                                {                                    p[0]*_metersPerUnit - false_easting' p[1]*_metersPerUnit - false_northing'                                    p[2]*_metersPerUnit                                };
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,MetersToDegrees,The following statement contains a magic number: res[2] = Radians2Degrees(res[2]);
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,MetersToDegrees,The following statement contains a magic number: res[2] = Radians2Degrees(res[2]);
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,MetersToDegrees,The following statement contains a magic number: DimTarget == 3
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,DegreesToMeters,The following statement contains a magic number: var tmp = lonlat.Length == 2                            ? new[] {Degrees2Radians(lonlat[0])' Degrees2Radians(lonlat[1])}                            : new[] {Degrees2Radians(lonlat[0])' Degrees2Radians(lonlat[1])' Degrees2Radians(lonlat[2])};
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,DegreesToMeters,The following statement contains a magic number: var tmp = lonlat.Length == 2                            ? new[] {Degrees2Radians(lonlat[0])' Degrees2Radians(lonlat[1])}                            : new[] {Degrees2Radians(lonlat[0])' Degrees2Radians(lonlat[1])' Degrees2Radians(lonlat[2])};
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,DegreesToMeters,The following statement contains a magic number: res[2] = res[2]/_metersPerUnit;
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,DegreesToMeters,The following statement contains a magic number: res[2] = res[2]/_metersPerUnit;
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,DegreesToMeters,The following statement contains a magic number: res.Length == 3
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,CUBE,The following statement contains a magic number: return Math.Pow(x' 3);
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,QUAD,The following statement contains a magic number: return Math.Pow(x' 4);
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,qsfnz,The following statement contains a magic number: return ((1.0 - eccent*eccent)*(sinphi/(1.0 - con*con) - (.5/eccent)*                                                 Math.Log((1.0 - con)/(1.0 + con))));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,qsfnz,The following statement contains a magic number: eccent > 1.0e-7
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,tsfnz,The following statement contains a magic number: com = .5*eccent;
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,tsfnz,The following statement contains a magic number: return (Math.Tan(.5*(HALF_PI - phi))/con);
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,phi1z,The following statement contains a magic number: phi = asinz(.5*qs);
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,phi1z,The following statement contains a magic number: dphi = .5*com*com/cospi*(qs/(1.0 - eccnts) - sinpi/com +                                           .5/eccent*Math.Log((1.0 - con)/(1.0 + con)));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,phi1z,The following statement contains a magic number: dphi = .5*com*com/cospi*(qs/(1.0 - eccnts) - sinpi/com +                                           .5/eccent*Math.Log((1.0 - con)/(1.0 + con)));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,phi1z,The following statement contains a magic number: Math.Abs(dphi) <= 1e-7
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,phi1z,The following statement contains a magic number: i <= 25
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,phi2z,The following statement contains a magic number: double eccnth = .5*eccent;
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,phi2z,The following statement contains a magic number: double chi = HALF_PI - 2*Math.Atan(ts);
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,phi2z,The following statement contains a magic number: dphi = HALF_PI - 2*Math.Atan(ts*(Math.Pow(((1.0 - con)/(1.0 + con))' eccnth))) - chi;
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,phi2z,The following statement contains a magic number: Math.Abs(dphi) <= .0000000001
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,phi2z,The following statement contains a magic number: i <= 15
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,e0fn,The following statement contains a magic number: return (1.0 - 0.25*x*(1.0 + x/16.0*(3.0 + 1.25*x)));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,e0fn,The following statement contains a magic number: return (1.0 - 0.25*x*(1.0 + x/16.0*(3.0 + 1.25*x)));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,e0fn,The following statement contains a magic number: return (1.0 - 0.25*x*(1.0 + x/16.0*(3.0 + 1.25*x)));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,e0fn,The following statement contains a magic number: return (1.0 - 0.25*x*(1.0 + x/16.0*(3.0 + 1.25*x)));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,e1fn,The following statement contains a magic number: return (0.375*x*(1.0 + 0.25*x*(1.0 + 0.46875*x)));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,e1fn,The following statement contains a magic number: return (0.375*x*(1.0 + 0.25*x*(1.0 + 0.46875*x)));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,e1fn,The following statement contains a magic number: return (0.375*x*(1.0 + 0.25*x*(1.0 + 0.46875*x)));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,e2fn,The following statement contains a magic number: return (0.05859375*x*x*(1.0 + 0.75*x));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,e2fn,The following statement contains a magic number: return (0.05859375*x*x*(1.0 + 0.75*x));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,e3fn,The following statement contains a magic number: return (x*x*x*(35.0/3072.0));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,e3fn,The following statement contains a magic number: return (x*x*x*(35.0/3072.0));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,mlfn,The following statement contains a magic number: return (e0*phi - e1*Math.Sin(2.0*phi) + e2*Math.Sin(4.0*phi) - e3*Math.Sin(6.0*phi));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,mlfn,The following statement contains a magic number: return (e0*phi - e1*Math.Sin(2.0*phi) + e2*Math.Sin(4.0*phi) - e3*Math.Sin(6.0*phi));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,mlfn,The following statement contains a magic number: return (e0*phi - e1*Math.Sin(2.0*phi) + e2*Math.Sin(4.0*phi) - e3*Math.Sin(6.0*phi));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,inv_mlfn,The following statement contains a magic number: const double MLFN_TOL = 1E-11;
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,inv_mlfn,The following statement contains a magic number: const int MAXIMUM_ITERATIONS = 20;
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,EccentricySquared,The following statement contains a magic number: return 2*f - f*f;
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,CalcUtmZone,The following statement contains a magic number: return ((long) (((lon + 180.0)/6.0) + 1.0));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,CalcUtmZone,The following statement contains a magic number: return ((long) (((lon + 180.0)/6.0) + 1.0));
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,LongitudeToRadians,The following statement contains a magic number: edge ? (x >= -180 && x <= 180) : (x > -180 && x < 180)
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,LongitudeToRadians,The following statement contains a magic number: edge ? (x >= -180 && x <= 180) : (x > -180 && x < 180)
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,LongitudeToRadians,The following statement contains a magic number: edge ? (x >= -180 && x <= 180) : (x > -180 && x < 180)
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,LongitudeToRadians,The following statement contains a magic number: edge ? (x >= -180 && x <= 180) : (x > -180 && x < 180)
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,LatitudeToRadians,The following statement contains a magic number: edge ? (y >= -90 && y <= 90) : (y > -90 && y < 90)
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,LatitudeToRadians,The following statement contains a magic number: edge ? (y >= -90 && y <= 90) : (y > -90 && y < 90)
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,LatitudeToRadians,The following statement contains a magic number: edge ? (y >= -90 && y <= 90) : (y > -90 && y < 90)
Magic Number,ProjNet.CoordinateSystems.Projections,MapProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\MapProjection.cs,LatitudeToRadians,The following statement contains a magic number: edge ? (y >= -90 && y <= 90) : (y > -90 && y < 90)
Magic Number,ProjNet.CoordinateSystems.Projections,PseudoMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,PseudoMercator,The following statement contains a magic number: AuthorityCode = 3856;
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,Mercator,The following statement contains a magic number: AuthorityCode = 9805;
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,RadiansToMeters,The following statement contains a magic number: var y = _semiMajor * _k0 * Math.Log(Math.Tan(PI * 0.25 + dLatitude * 0.5) * Math.Pow((1 - esinphi) / (1 + esinphi)' _e * 0.5));
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,RadiansToMeters,The following statement contains a magic number: var y = _semiMajor * _k0 * Math.Log(Math.Tan(PI * 0.25 + dLatitude * 0.5) * Math.Pow((1 - esinphi) / (1 + esinphi)' _e * 0.5));
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,RadiansToMeters,The following statement contains a magic number: var y = _semiMajor * _k0 * Math.Log(Math.Tan(PI * 0.25 + dLatitude * 0.5) * Math.Pow((1 - esinphi) / (1 + esinphi)' _e * 0.5));
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,RadiansToMeters,The following statement contains a magic number: return lonlat.Length < 3   		               ? new [] { x' y }  		               : new [] { x' y' lonlat[2] };
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,RadiansToMeters,The following statement contains a magic number: return lonlat.Length < 3   		               ? new [] { x' y }  		               : new [] { x' y' lonlat[2] };
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: double chi = HALF_PI - 2 * Math.Atan(ts);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: double e4 = Math.Pow(_e' 4);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: double e6 = Math.Pow(_e' 6);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: double e8 = Math.Pow(_e' 8);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: dLatitude = chi + (_es * 0.5 + 5 * e4 / 24 + e6 / 12 + 13 * e8 / 360) * Math.Sin(2 * chi)  			    + (7 * e4 / 48 + 29 * e6 / 240 + 811 * e8 / 11520) * Math.Sin(4 * chi) +  			    + (7 * e6 / 120 + 81 * e8 / 1120) * Math.Sin(6 * chi) +  			    + (4279 * e8 / 161280) * Math.Sin(8 * chi);
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: return p.Length < 3                   ? new [] { dLongitude' dLatitude }                   : new [] { dLongitude' dLatitude' p[2] };
Magic Number,ProjNet.CoordinateSystems.Projections,Mercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\Mercator.cs,MetersToRadians,The following statement contains a magic number: return p.Length < 3                   ? new [] { dLongitude' dLatitude }                   : new [] { dLongitude' dLatitude' p[2] };
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,ObliqueStereographicProjection,The following statement contains a magic number: R2 = 2.0 * Math.Sqrt(1 - _es) / (1 - _es * sphi * sphi);
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,ObliqueStereographicProjection,The following statement contains a magic number: ratexp = 0.5 * C * _e;
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,ObliqueStereographicProjection,The following statement contains a magic number: K = Math.Tan(0.5 * phic0 + Math.PI / 4) / (Math.Pow(Math.Tan(0.5 * lat_origin + Math.PI / 4)' C) * srat(_e * sphi' ratexp));
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,ObliqueStereographicProjection,The following statement contains a magic number: K = Math.Tan(0.5 * phic0 + Math.PI / 4) / (Math.Pow(Math.Tan(0.5 * lat_origin + Math.PI / 4)' C) * srat(_e * sphi' ratexp));
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,ObliqueStereographicProjection,The following statement contains a magic number: K = Math.Tan(0.5 * phic0 + Math.PI / 4) / (Math.Pow(Math.Tan(0.5 * lat_origin + Math.PI / 4)' C) * srat(_e * sphi' ratexp));
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,ObliqueStereographicProjection,The following statement contains a magic number: K = Math.Tan(0.5 * phic0 + Math.PI / 4) / (Math.Pow(Math.Tan(0.5 * lat_origin + Math.PI / 4)' C) * srat(_e * sphi' ratexp));
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,MetersToRadians,The following statement contains a magic number: double num = Math.Pow(Math.Tan(0.5 * y + Math.PI / 4.0) / K' 1.0 / C);
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,MetersToRadians,The following statement contains a magic number: double num = Math.Pow(Math.Tan(0.5 * y + Math.PI / 4.0) / K' 1.0 / C);
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,MetersToRadians,The following statement contains a magic number: double phi = 2.0 * Math.Atan(num * srat(_e * Math.Sin(y)' -0.5 * _e)) - Math.PI / 2.0;
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,MetersToRadians,The following statement contains a magic number: double phi = 2.0 * Math.Atan(num * srat(_e * Math.Sin(y)' -0.5 * _e)) - Math.PI / 2.0;
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,MetersToRadians,The following statement contains a magic number: double phi = 2.0 * Math.Atan(num * srat(_e * Math.Sin(y)' -0.5 * _e)) - Math.PI / 2.0;
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,MetersToRadians,The following statement contains a magic number: p.Length == 2
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,RadiansToMeters,The following statement contains a magic number: y = 2.0 * Math.Atan(K * Math.Pow(Math.Tan(0.5 * y + Math.PI / 4)' C)                            * srat(_e * Math.Sin(y)' ratexp))                     - Math.PI / 2;
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,RadiansToMeters,The following statement contains a magic number: y = 2.0 * Math.Atan(K * Math.Pow(Math.Tan(0.5 * y + Math.PI / 4)' C)                            * srat(_e * Math.Sin(y)' ratexp))                     - Math.PI / 2;
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,RadiansToMeters,The following statement contains a magic number: y = 2.0 * Math.Atan(K * Math.Pow(Math.Tan(0.5 * y + Math.PI / 4)' C)                            * srat(_e * Math.Sin(y)' ratexp))                     - Math.PI / 2;
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,RadiansToMeters,The following statement contains a magic number: y = 2.0 * Math.Atan(K * Math.Pow(Math.Tan(0.5 * y + Math.PI / 4)' C)                            * srat(_e * Math.Sin(y)' ratexp))                     - Math.PI / 2;
Magic Number,ProjNet.CoordinateSystems.Projections,ObliqueStereographicProjection,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\ObliqueStereographicProjection.cs,RadiansToMeters,The following statement contains a magic number: lonlat.Length == 2
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,TransverseMercator,The following statement contains a magic number: AuthorityCode = 9807;
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: y = (mlfn(y' sinphi' cosphi) - _ml0 +                  sinphi * al * x *                  FC2 * (1.0 +                  FC4 * als * (5.0 - t + n * (9.0 + 4.0 * n) +                  FC6 * als * (61.0 + t * (t - 58.0) + n * (270.0 - 330.0 * t) +                  FC8 * als * (1385.0 + t * (t * (543.0 - t) - 3111.0))))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: y = (mlfn(y' sinphi' cosphi) - _ml0 +                  sinphi * al * x *                  FC2 * (1.0 +                  FC4 * als * (5.0 - t + n * (9.0 + 4.0 * n) +                  FC6 * als * (61.0 + t * (t - 58.0) + n * (270.0 - 330.0 * t) +                  FC8 * als * (1385.0 + t * (t * (543.0 - t) - 3111.0))))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: y = (mlfn(y' sinphi' cosphi) - _ml0 +                  sinphi * al * x *                  FC2 * (1.0 +                  FC4 * als * (5.0 - t + n * (9.0 + 4.0 * n) +                  FC6 * als * (61.0 + t * (t - 58.0) + n * (270.0 - 330.0 * t) +                  FC8 * als * (1385.0 + t * (t * (543.0 - t) - 3111.0))))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: y = (mlfn(y' sinphi' cosphi) - _ml0 +                  sinphi * al * x *                  FC2 * (1.0 +                  FC4 * als * (5.0 - t + n * (9.0 + 4.0 * n) +                  FC6 * als * (61.0 + t * (t - 58.0) + n * (270.0 - 330.0 * t) +                  FC8 * als * (1385.0 + t * (t * (543.0 - t) - 3111.0))))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: y = (mlfn(y' sinphi' cosphi) - _ml0 +                  sinphi * al * x *                  FC2 * (1.0 +                  FC4 * als * (5.0 - t + n * (9.0 + 4.0 * n) +                  FC6 * als * (61.0 + t * (t - 58.0) + n * (270.0 - 330.0 * t) +                  FC8 * als * (1385.0 + t * (t * (543.0 - t) - 3111.0))))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: y = (mlfn(y' sinphi' cosphi) - _ml0 +                  sinphi * al * x *                  FC2 * (1.0 +                  FC4 * als * (5.0 - t + n * (9.0 + 4.0 * n) +                  FC6 * als * (61.0 + t * (t - 58.0) + n * (270.0 - 330.0 * t) +                  FC8 * als * (1385.0 + t * (t * (543.0 - t) - 3111.0))))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: y = (mlfn(y' sinphi' cosphi) - _ml0 +                  sinphi * al * x *                  FC2 * (1.0 +                  FC4 * als * (5.0 - t + n * (9.0 + 4.0 * n) +                  FC6 * als * (61.0 + t * (t - 58.0) + n * (270.0 - 330.0 * t) +                  FC8 * als * (1385.0 + t * (t * (543.0 - t) - 3111.0))))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: y = (mlfn(y' sinphi' cosphi) - _ml0 +                  sinphi * al * x *                  FC2 * (1.0 +                  FC4 * als * (5.0 - t + n * (9.0 + 4.0 * n) +                  FC6 * als * (61.0 + t * (t - 58.0) + n * (270.0 - 330.0 * t) +                  FC8 * als * (1385.0 + t * (t * (543.0 - t) - 3111.0))))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: y = (mlfn(y' sinphi' cosphi) - _ml0 +                  sinphi * al * x *                  FC2 * (1.0 +                  FC4 * als * (5.0 - t + n * (9.0 + 4.0 * n) +                  FC6 * als * (61.0 + t * (t - 58.0) + n * (270.0 - 330.0 * t) +                  FC8 * als * (1385.0 + t * (t * (543.0 - t) - 3111.0))))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: y = (mlfn(y' sinphi' cosphi) - _ml0 +                  sinphi * al * x *                  FC2 * (1.0 +                  FC4 * als * (5.0 - t + n * (9.0 + 4.0 * n) +                  FC6 * als * (61.0 + t * (t - 58.0) + n * (270.0 - 330.0 * t) +                  FC8 * als * (1385.0 + t * (t * (543.0 - t) - 3111.0))))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: x = al * (FC1 + FC3 * als * (1.0 - t + n +                  FC5 * als * (5.0 + t * (t - 18.0) + n * (14.0 - 58.0 * t) +                  FC7 * als * (61.0 + t * (t * (179.0 - t) - 479.0)))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: x = al * (FC1 + FC3 * als * (1.0 - t + n +                  FC5 * als * (5.0 + t * (t - 18.0) + n * (14.0 - 58.0 * t) +                  FC7 * als * (61.0 + t * (t * (179.0 - t) - 479.0)))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: x = al * (FC1 + FC3 * als * (1.0 - t + n +                  FC5 * als * (5.0 + t * (t - 18.0) + n * (14.0 - 58.0 * t) +                  FC7 * als * (61.0 + t * (t * (179.0 - t) - 479.0)))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: x = al * (FC1 + FC3 * als * (1.0 - t + n +                  FC5 * als * (5.0 + t * (t - 18.0) + n * (14.0 - 58.0 * t) +                  FC7 * als * (61.0 + t * (t * (179.0 - t) - 479.0)))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: x = al * (FC1 + FC3 * als * (1.0 - t + n +                  FC5 * als * (5.0 + t * (t - 18.0) + n * (14.0 - 58.0 * t) +                  FC7 * als * (61.0 + t * (t * (179.0 - t) - 479.0)))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: x = al * (FC1 + FC3 * als * (1.0 - t + n +                  FC5 * als * (5.0 + t * (t - 18.0) + n * (14.0 - 58.0 * t) +                  FC7 * als * (61.0 + t * (t * (179.0 - t) - 479.0)))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: x = al * (FC1 + FC3 * als * (1.0 - t + n +                  FC5 * als * (5.0 + t * (t - 18.0) + n * (14.0 - 58.0 * t) +                  FC7 * als * (61.0 + t * (t * (179.0 - t) - 479.0)))));
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: return lonlat.Length == 2                   ? new [] { x' y }                  : new [] { x' y' lonlat[2] };
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,RadiansToMeters,The following statement contains a magic number: return lonlat.Length == 2                   ? new [] { x' y }                  : new [] { x' y' lonlat[2] };
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,MetersToRadians,The following statement contains a magic number: y = y < 0.0 ? -(PI / 2) : (PI / 2);
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,MetersToRadians,The following statement contains a magic number: y = y < 0.0 ? -(PI / 2) : (PI / 2);
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,MetersToRadians,The following statement contains a magic number: Math.Abs(phi) >= PI / 2
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,MetersToRadians,The following statement contains a magic number: return p.Length == 2                   ? new [] { x' y }                  : new [] { x' y' p[2] };
Magic Number,ProjNet.CoordinateSystems.Projections,TransverseMercator,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Projections\TransverseMercator.cs,MetersToRadians,The following statement contains a magic number: return p.Length == 2                   ? new [] { x' y }                  : new [] { x' y' p[2] };
Magic Number,ProjNet.CoordinateSystems.Transformations,AffineTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\AffineTransform.cs,AffineTransform,The following statement contains a magic number: dimSource = 2;
Magic Number,ProjNet.CoordinateSystems.Transformations,AffineTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\AffineTransform.cs,AffineTransform,The following statement contains a magic number: dimTarget = 2;
Magic Number,ProjNet.CoordinateSystems.Transformations,AffineTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\AffineTransform.cs,AffineTransform,The following statement contains a magic number: transformMatrix = new double[3' 3] {{m00' m01' m02}' {m10' m11' m12}' {0' 0' 1}};
Magic Number,ProjNet.CoordinateSystems.Transformations,AffineTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\AffineTransform.cs,AffineTransform,The following statement contains a magic number: transformMatrix = new double[3' 3] {{m00' m01' m02}' {m10' m11' m12}' {0' 0' 1}};
Magic Number,ProjNet.CoordinateSystems.Transformations,CoordinateTransformationFactory,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\CoordinateTransformationFactory.cs,CreateCoordinateOperation,The following statement contains a magic number: var parameterList = new List<ProjectionParameter>(2);
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,Apply,The following statement contains a magic number: return new double[] {  				v[0] * (p[0] - v[3] * p[1] + v[2] * p[2]) + v[4]'  				v[0] * (v[3] * p[0] + p[1] - v[1] * p[2]) + v[5]'  			    v[0] * (-v[2] * p[0] + v[1] * p[1] + p[2]) + v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,Apply,The following statement contains a magic number: return new double[] {  				v[0] * (p[0] - v[3] * p[1] + v[2] * p[2]) + v[4]'  				v[0] * (v[3] * p[0] + p[1] - v[1] * p[2]) + v[5]'  			    v[0] * (-v[2] * p[0] + v[1] * p[1] + p[2]) + v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,Apply,The following statement contains a magic number: return new double[] {  				v[0] * (p[0] - v[3] * p[1] + v[2] * p[2]) + v[4]'  				v[0] * (v[3] * p[0] + p[1] - v[1] * p[2]) + v[5]'  			    v[0] * (-v[2] * p[0] + v[1] * p[1] + p[2]) + v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,Apply,The following statement contains a magic number: return new double[] {  				v[0] * (p[0] - v[3] * p[1] + v[2] * p[2]) + v[4]'  				v[0] * (v[3] * p[0] + p[1] - v[1] * p[2]) + v[5]'  			    v[0] * (-v[2] * p[0] + v[1] * p[1] + p[2]) + v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,Apply,The following statement contains a magic number: return new double[] {  				v[0] * (p[0] - v[3] * p[1] + v[2] * p[2]) + v[4]'  				v[0] * (v[3] * p[0] + p[1] - v[1] * p[2]) + v[5]'  			    v[0] * (-v[2] * p[0] + v[1] * p[1] + p[2]) + v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,Apply,The following statement contains a magic number: return new double[] {  				v[0] * (p[0] - v[3] * p[1] + v[2] * p[2]) + v[4]'  				v[0] * (v[3] * p[0] + p[1] - v[1] * p[2]) + v[5]'  			    v[0] * (-v[2] * p[0] + v[1] * p[1] + p[2]) + v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,Apply,The following statement contains a magic number: return new double[] {  				v[0] * (p[0] - v[3] * p[1] + v[2] * p[2]) + v[4]'  				v[0] * (v[3] * p[0] + p[1] - v[1] * p[2]) + v[5]'  			    v[0] * (-v[2] * p[0] + v[1] * p[1] + p[2]) + v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,Apply,The following statement contains a magic number: return new double[] {  				v[0] * (p[0] - v[3] * p[1] + v[2] * p[2]) + v[4]'  				v[0] * (v[3] * p[0] + p[1] - v[1] * p[2]) + v[5]'  			    v[0] * (-v[2] * p[0] + v[1] * p[1] + p[2]) + v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,Apply,The following statement contains a magic number: return new double[] {  				v[0] * (p[0] - v[3] * p[1] + v[2] * p[2]) + v[4]'  				v[0] * (v[3] * p[0] + p[1] - v[1] * p[2]) + v[5]'  			    v[0] * (-v[2] * p[0] + v[1] * p[1] + p[2]) + v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,Apply,The following statement contains a magic number: return new double[] {  				v[0] * (p[0] - v[3] * p[1] + v[2] * p[2]) + v[4]'  				v[0] * (v[3] * p[0] + p[1] - v[1] * p[2]) + v[5]'  			    v[0] * (-v[2] * p[0] + v[1] * p[1] + p[2]) + v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,ApplyInverted,The following statement contains a magic number: return new double[] {  				(1-(v[0]-1)) * (p[0] + v[3] * p[1] - v[2] * p[2]) - v[4]'  			    (1-(v[0]-1)) * (-v[3] * p[0] + p[1] + v[1] * p[2]) - v[5]'  			    (1-(v[0]-1)) * ( v[2] * p[0] - v[1] * p[1] + p[2]) - v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,ApplyInverted,The following statement contains a magic number: return new double[] {  				(1-(v[0]-1)) * (p[0] + v[3] * p[1] - v[2] * p[2]) - v[4]'  			    (1-(v[0]-1)) * (-v[3] * p[0] + p[1] + v[1] * p[2]) - v[5]'  			    (1-(v[0]-1)) * ( v[2] * p[0] - v[1] * p[1] + p[2]) - v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,ApplyInverted,The following statement contains a magic number: return new double[] {  				(1-(v[0]-1)) * (p[0] + v[3] * p[1] - v[2] * p[2]) - v[4]'  			    (1-(v[0]-1)) * (-v[3] * p[0] + p[1] + v[1] * p[2]) - v[5]'  			    (1-(v[0]-1)) * ( v[2] * p[0] - v[1] * p[1] + p[2]) - v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,ApplyInverted,The following statement contains a magic number: return new double[] {  				(1-(v[0]-1)) * (p[0] + v[3] * p[1] - v[2] * p[2]) - v[4]'  			    (1-(v[0]-1)) * (-v[3] * p[0] + p[1] + v[1] * p[2]) - v[5]'  			    (1-(v[0]-1)) * ( v[2] * p[0] - v[1] * p[1] + p[2]) - v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,ApplyInverted,The following statement contains a magic number: return new double[] {  				(1-(v[0]-1)) * (p[0] + v[3] * p[1] - v[2] * p[2]) - v[4]'  			    (1-(v[0]-1)) * (-v[3] * p[0] + p[1] + v[1] * p[2]) - v[5]'  			    (1-(v[0]-1)) * ( v[2] * p[0] - v[1] * p[1] + p[2]) - v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,ApplyInverted,The following statement contains a magic number: return new double[] {  				(1-(v[0]-1)) * (p[0] + v[3] * p[1] - v[2] * p[2]) - v[4]'  			    (1-(v[0]-1)) * (-v[3] * p[0] + p[1] + v[1] * p[2]) - v[5]'  			    (1-(v[0]-1)) * ( v[2] * p[0] - v[1] * p[1] + p[2]) - v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,ApplyInverted,The following statement contains a magic number: return new double[] {  				(1-(v[0]-1)) * (p[0] + v[3] * p[1] - v[2] * p[2]) - v[4]'  			    (1-(v[0]-1)) * (-v[3] * p[0] + p[1] + v[1] * p[2]) - v[5]'  			    (1-(v[0]-1)) * ( v[2] * p[0] - v[1] * p[1] + p[2]) - v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,ApplyInverted,The following statement contains a magic number: return new double[] {  				(1-(v[0]-1)) * (p[0] + v[3] * p[1] - v[2] * p[2]) - v[4]'  			    (1-(v[0]-1)) * (-v[3] * p[0] + p[1] + v[1] * p[2]) - v[5]'  			    (1-(v[0]-1)) * ( v[2] * p[0] - v[1] * p[1] + p[2]) - v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,ApplyInverted,The following statement contains a magic number: return new double[] {  				(1-(v[0]-1)) * (p[0] + v[3] * p[1] - v[2] * p[2]) - v[4]'  			    (1-(v[0]-1)) * (-v[3] * p[0] + p[1] + v[1] * p[2]) - v[5]'  			    (1-(v[0]-1)) * ( v[2] * p[0] - v[1] * p[1] + p[2]) - v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,DatumTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\DatumTransform.cs,ApplyInverted,The following statement contains a magic number: return new double[] {  				(1-(v[0]-1)) * (p[0] + v[3] * p[1] - v[2] * p[2]) - v[4]'  			    (1-(v[0]-1)) * (-v[3] * p[0] + p[1] + v[1] * p[2]) - v[5]'  			    (1-(v[0]-1)) * ( v[2] * p[0] - v[1] * p[1] + p[2]) - v[6]' };
Magic Number,ProjNet.CoordinateSystems.Transformations,GeocentricTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\GeocentricTransform.cs,GeocentricTransform,The following statement contains a magic number: ses = (Math.Pow(semiMajor' 2) - Math.Pow(semiMinor' 2)) / Math.Pow(semiMinor' 2);
Magic Number,ProjNet.CoordinateSystems.Transformations,GeocentricTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\GeocentricTransform.cs,GeocentricTransform,The following statement contains a magic number: ses = (Math.Pow(semiMajor' 2) - Math.Pow(semiMinor' 2)) / Math.Pow(semiMinor' 2);
Magic Number,ProjNet.CoordinateSystems.Transformations,GeocentricTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\GeocentricTransform.cs,GeocentricTransform,The following statement contains a magic number: ses = (Math.Pow(semiMajor' 2) - Math.Pow(semiMinor' 2)) / Math.Pow(semiMinor' 2);
Magic Number,ProjNet.CoordinateSystems.Transformations,GeocentricTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\GeocentricTransform.cs,DegreesToMeters,The following statement contains a magic number: double h = lonlat.Length < 3 ? 0 : lonlat[2].Equals(Double.NaN) ? 0 : lonlat[2];
Magic Number,ProjNet.CoordinateSystems.Transformations,GeocentricTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\GeocentricTransform.cs,DegreesToMeters,The following statement contains a magic number: double h = lonlat.Length < 3 ? 0 : lonlat[2].Equals(Double.NaN) ? 0 : lonlat[2];
Magic Number,ProjNet.CoordinateSystems.Transformations,GeocentricTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\GeocentricTransform.cs,DegreesToMeters,The following statement contains a magic number: double h = lonlat.Length < 3 ? 0 : lonlat[2].Equals(Double.NaN) ? 0 : lonlat[2];
Magic Number,ProjNet.CoordinateSystems.Transformations,GeocentricTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\GeocentricTransform.cs,DegreesToMeters,The following statement contains a magic number: double v = semiMajor / Math.Sqrt(1 - es * Math.Pow(Math.Sin(lat)' 2));
Magic Number,ProjNet.CoordinateSystems.Transformations,GeocentricTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\GeocentricTransform.cs,MetersToDegrees,The following statement contains a magic number: double Z = pnt.Length < 3 ? 0 : pnt[2].Equals(Double.NaN) ? 0 : pnt[2];
Magic Number,ProjNet.CoordinateSystems.Transformations,GeocentricTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\GeocentricTransform.cs,MetersToDegrees,The following statement contains a magic number: double Z = pnt.Length < 3 ? 0 : pnt[2].Equals(Double.NaN) ? 0 : pnt[2];
Magic Number,ProjNet.CoordinateSystems.Transformations,GeocentricTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\GeocentricTransform.cs,MetersToDegrees,The following statement contains a magic number: double Z = pnt.Length < 3 ? 0 : pnt[2].Equals(Double.NaN) ? 0 : pnt[2];
Magic Number,ProjNet.CoordinateSystems.Transformations,GeocentricTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\GeocentricTransform.cs,MetersToDegrees,The following statement contains a magic number: double Sin3_B0 = Math.Pow(Sin_B0' 3);
Magic Number,ProjNet.CoordinateSystems.Transformations,MathTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\MathTransform.cs,Transform,The following statement contains a magic number: coordinate.Z = ret[2];
Magic Number,ProjNet.CoordinateSystems.Transformations,MathTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\MathTransform.cs,Transform,The following statement contains a magic number: DimTarget > 2
Magic Number,ProjNet.CoordinateSystems.Transformations,MathTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\MathTransform.cs,Transform,The following statement contains a magic number: var ordinates = DimSource == 2                                       ? new[] {coordinate.X' coordinate.Y}                                       : new[] {coordinate.X' coordinate.Y' coordinate.Z};
Magic Number,ProjNet.CoordinateSystems.Transformations,MathTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\MathTransform.cs,Transform,The following statement contains a magic number: return (DimTarget == 2)                  ? new Coordinate(ret[0]' ret[1])                  : new Coordinate(ret[0]' ret[1]' ret[2]);
Magic Number,ProjNet.CoordinateSystems.Transformations,MathTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\MathTransform.cs,Transform,The following statement contains a magic number: return (DimTarget == 2)                  ? new Coordinate(ret[0]' ret[1])                  : new Coordinate(ret[0]' ret[1]' ret[2]);
Magic Number,ProjNet.CoordinateSystems.Transformations,MathTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\MathTransform.cs,Transform,The following statement contains a magic number: DimTarget > 2
Magic Number,ProjNet.CoordinateSystems.Transformations,PrimeMeridianTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\PrimeMeridianTransform.cs,Transform,The following statement contains a magic number: transformed[2] = point[2];
Magic Number,ProjNet.CoordinateSystems.Transformations,PrimeMeridianTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\PrimeMeridianTransform.cs,Transform,The following statement contains a magic number: transformed[2] = point[2];
Magic Number,ProjNet.CoordinateSystems.Transformations,PrimeMeridianTransform,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\CoordinateSystems\Transformations\PrimeMeridianTransform.cs,Transform,The following statement contains a magic number: point.Length > 2
Magic Number,ProjNet.Converters.WellKnownText,CoordinateSystemWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\CoordinateSystemWktReader.cs,ReadProjectedCoordinateSystem,The following statement contains a magic number: List<AxisInfo> axes = new List<AxisInfo>(2);
Magic Number,ProjNet.Converters.WellKnownText,CoordinateSystemWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\CoordinateSystemWktReader.cs,ReadGeographicCoordinateSystem,The following statement contains a magic number: List<AxisInfo> info = new List<AxisInfo>(2);
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet.Converters.WellKnownText,MathTransformWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\MathTransformWktReader.cs,ReadAffineTransform,The following statement contains a magic number: switch (param.Name)                  {                      case "num_row":                      case "num_col":                          break;                      case "elt_0_0":                          matrix[0' 0] = param.Value;                          break;                      case "elt_0_1":                          matrix[0' 1] = param.Value;                          break;                      case "elt_0_2":                          matrix[0' 2] = param.Value;                          break;                      case "elt_0_3":                          matrix[0' 3] = param.Value;                          break;                      case "elt_1_0":                          matrix[1' 0] = param.Value;                          break;                      case "elt_1_1":                          matrix[1' 1] = param.Value;                          break;                      case "elt_1_2":                          matrix[1' 2] = param.Value;                          break;                      case "elt_1_3":                          matrix[1' 3] = param.Value;                          break;                      case "elt_2_0":                          matrix[2' 0] = param.Value;                          break;                      case "elt_2_1":                          matrix[2' 1] = param.Value;                          break;                      case "elt_2_2":                          matrix[2' 2] = param.Value;                          break;                      case "elt_2_3":                          matrix[2' 3] = param.Value;                          break;                      case "elt_3_0":                          matrix[3' 0] = param.Value;                          break;                      case "elt_3_1":                          matrix[3' 1] = param.Value;                          break;                      case "elt_3_2":                          matrix[3' 2] = param.Value;                          break;                      case "elt_3_3":                          matrix[3' 3] = param.Value;                          break;                      default:                          //unknown parameter                          break;                  }
Magic Number,ProjNet,CoordinateSystemServices,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\ProjNetCoordinateSystemServices.cs,DefaultInitialization,The following statement contains a magic number: yield return new KeyValuePair<int' ICoordinateSystem>(4326' GeographicCoordinateSystem.WGS84);
Magic Number,ProjNet,CoordinateSystemServices,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\ProjNetCoordinateSystemServices.cs,DefaultInitialization,The following statement contains a magic number: yield return new KeyValuePair<int' ICoordinateSystem>(3857' ProjectedCoordinateSystem.WebMercator);
Missing Default,ProjNet.Converters.WellKnownText,CoordinateSystemWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\CoordinateSystemWktReader.cs,ReadProjectedCoordinateSystem,The following switch statement is missing a default case: switch (tokenizer.GetStringValue())                  {                      case "'":                      case "]":                          break;                      case "PROJECTION":                          projection = ReadProjection(tokenizer);                          ct = tokenizer.GetTokenType();                          continue;                      //break;                      case "UNIT":                          unit = ReadLinearUnit(tokenizer);                          break;                      case "AXIS":                          axes.Add(ReadAxis(tokenizer));                          tokenizer.NextToken();                          break;                      case "AUTHORITY":                          tokenizer.ReadAuthority(ref authority' ref authorityCode);                          //tokenizer.ReadToken("]");                          break;                  }
Missing Default,ProjNet.Converters.WellKnownText,CoordinateSystemWktReader,D:\research\architectureSmells\repos\diydrones_MissionPlanner\ExtLibs\ProjNet\IO\CoordinateSystems\CoordinateSystemWktReader.cs,ReadFittedCoordinateSystem,The following switch statement is missing a default case: switch (tokenizer.GetStringValue ())                  {                      case "'":                      case "]":                          break;                      case "AUTHORITY":                          tokenizer.ReadAuthority (ref authority' ref authorityCode);                          //tokenizer.ReadToken("]");                          break;                  }
